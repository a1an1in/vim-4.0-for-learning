ABBREV	vim.h	207
ABBR_OFF	keymap.h	40
ACTION_EXPAND	vim.h	258
ACTION_GOTO	vim.h	254
ACTION_SHOW	vim.h	253
ACTION_SHOW_ALL	vim.h	256
ACTION_SPLIT	vim.h	255
ALIGN_LONG	structs.h	120
ALIGN_MASK	structs.h	126
ALIGN_SIZE	structs.h	121
ALIGN_SIZE	structs.h	123
ANY	regexp.c	102
ANYBUT	regexp.c	104
ANYOF	regexp.c	103
APPENDBIN	vim.h	424
APPENDBIN	vim.h	428
ASKMORE	vim.h	205
AppendCharToRedobuff	getchar.c	/^AppendCharToRedobuff(c)$/
AppendNumberToRedobuff	getchar.c	/^AppendNumberToRedobuff(n)$/
AppendToRedobuff	getchar.c	/^AppendToRedobuff(s)$/
Atom_WM_DELETE_WINDOW	gui_x11.c	/^static Atom   Atom_WM_DELETE_WINDOW;$/
AutoCmd	option.c	/^typedef struct AutoCmd$/
AutoCmd	option.c	/^} AutoCmd;$/
AutoPat	option.c	/^typedef struct AutoPat$/
AutoPat	option.c	/^} AutoPat;$/
B0_FNAME_SIZE	memline.c	152
B0_HNAME_SIZE	memline.c	154
B0_MAGIC_CHAR	memline.c	163
B0_MAGIC_INT	memline.c	161
B0_MAGIC_LONG	memline.c	160
B0_MAGIC_SHORT	memline.c	162
B0_UNAME_SIZE	memline.c	153
BACK	regexp.c	108
BACKREF	regexp.c	129
BACKSPACE_CHAR	edit.c	54
BACKSPACE_LINE	edit.c	57
BACKSPACE_WORD	edit.c	55
BACKSPACE_WORD_NOT_SPACE	edit.c	56
BACKWARD	vim.h	211
BASENAMELEN	unix.h	228
BC	term.c	/^char *UP, *BC, PC;$/
BHDR	structs.h	/^typedef struct block_hdr	BHDR;$/
BH_DIRTY	structs.h	185
BH_LOCKED	structs.h	186
BLOCK0_ID0	memline.c	92
BLOCK0_ID1	memline.c	93
BOL	regexp.c	100
BOTH_DIRECTIONS	vim.h	212
BOW	regexp.c	115
BRACE_AT_END	misccmds.c	2663
BRACE_AT_START	misccmds.c	2662
BRACE_IN_COL0	misccmds.c	2661
BRANCH	regexp.c	106
BREAKCHECK_SKIP	misccmds.c	3849
BSIZE	term.c	1539
BT_EXTRA_KEYS	term.c	73
BUF	structs.h	/^typedef struct buffer BUF;$/
BUFLEN	unix.c	1967
BUFSIZE	fileio.c	29
CHANGED	vim.h	441
CHAR_BOLD	vim.h	186
CHAR_ID	charset.c	25
CHAR_IF	charset.c	26
CHAR_INVERT	vim.h	184
CHAR_ITALIC	vim.h	188
CHAR_MASK	charset.c	24
CHAR_NORMAL	vim.h	183
CHAR_STDOUT	vim.h	187
CHAR_UNDERL	vim.h	185
CHECK	memfile.c	10
CHECK	memline.c	11
CHECK_INODE	unix.h	217
CHECK_PATH	vim.h	251
CLEAR	vim.h	178
CMDBUFFSIZE	unix.h	214
CMDBUFFSIZE	vim.h	399
CMDLINE	vim.h	200
COL_RULER	option.c	2460
COM_ALL	option.h	108
COM_BLANK	option.h	101
COM_END	option.h	104
COM_FIRST	option.h	105
COM_LEFT	option.h	106
COM_MAX_LEN	option.h	109
COM_MIDDLE	option.h	103
COM_NEST	option.h	100
COM_RIGHT	option.h	107
COM_START	option.h	102
CONTEXT_UNKNOWN	vim.h	221
CPO_ALL	option.h	58
CPO_BAR	option.h	40
CPO_BSLASH	option.h	41
CPO_BUFOPT	option.h	49
CPO_BUFOPTGLOB	option.h	50
CPO_DEFAULT	option.h	57
CPO_DOLLAR	option.h	53
CPO_ESC	option.h	52
CPO_EXECBUF	option.h	43
CPO_FILTER	option.h	54
CPO_FNAMER	option.h	44
CPO_FNAMEW	option.h	45
CPO_LINEOFF	option.h	47
CPO_MATCH	option.h	55
CPO_REDO	option.h	48
CPO_SEARCH	option.h	42
CPO_SHOWMATCH	option.h	46
CPO_SPECI	option.h	56
CPO_TAGPAT	option.h	51
CR	ascii.h	17
CSI	ascii.h	21
CTRL_X_DICTIONARY	edit.c	33
CTRL_X_FILES	edit.c	28
CTRL_X_FINISHED	edit.c	32
CTRL_X_NOT_DEFINED_YET	edit.c	25
CTRL_X_PATH_DEFINES	edit.c	31
CTRL_X_PATH_PATTERNS	edit.c	30
CTRL_X_SCROLL	edit.c	26
CTRL_X_TAGS	edit.c	29
CTRL_X_WANT_IDENT	edit.c	23
CTRL_X_WHOLE_LINE	edit.c	27
CURSOR_MOVED	vim.h	380
CURSUPD	vim.h	177
Columns	globals.h	/^EXTERN long		Columns;				\/* number of columns in the screen *\/$/
Completion	edit.c	/^struct Completion$/
Ctrl	ascii.h	23
D	gui.h	12
DATA_BL	memline.c	/^typedef struct data_block		DATA_BL;	\/* contents of a data block *\/$/
DATA_ID	memline.c	90
DB_INDEX_MASK	memline.c	147
DB_MARKED	memline.c	146
DEFAULT_TERM	term.c	819
DEFAULT_TERM	term.c	823
DEFAULT_TERM	term.c	827
DEFAULT_TERM	term.c	831
DEFAULT_TERM	term.c	835
DEFAULT_TERM	term.c	839
DEF_BDIR	unix.h	193
DEF_BDIR	unix.h	195
DEF_DIR	unix.h	201
DEF_DIR	unix.h	203
DEL	ascii.h	20
DELETION_REGISTER	ops.c	37
DFLT_FONT	gui_x11.c	26
DFLT_MENU_BG_COLOR	gui_x11.c	27
DFLT_MENU_FG_COLOR	gui_x11.c	28
DFLT_SCROLL_BG_COLOR	gui_x11.c	29
DFLT_SCROLL_FG_COLOR	gui_x11.c	30
DOBUF_CURRENT	vim.h	314
DOBUF_DEL	vim.h	311
DOBUF_FIRST	vim.h	315
DOBUF_GOTO	vim.h	308
DOBUF_LAST	vim.h	316
DOBUF_MOD	vim.h	317
DOBUF_SPLIT	vim.h	309
DOBUF_UNLOAD	vim.h	310
EMSG	vim.h	457
EMSG2	vim.h	458
EMSGN	vim.h	459
EMSG_RETURN	regexp.c	181
END	regexp.c	99
END_PAGE_DATA	gui_at_sb.h	144
EOL	regexp.c	101
EOW	regexp.c	116
ESC	ascii.h	18
ESC_STR	ascii.h	19
EVENT_BUFENTER	vim.h	/^	EVENT_BUFENTER = 0,		\/* after entering a buffer *\/$/
EVENT_BUFLEAVE	vim.h	/^	EVENT_BUFLEAVE,			\/* before leaving a buffer *\/$/
EVENT_BUFNEWFILE	vim.h	/^	EVENT_BUFNEWFILE,		\/* when creating a buffer for a new file *\/$/
EVENT_BUFREADPOST	vim.h	/^	EVENT_BUFREADPOST,		\/* after reading a buffer *\/$/
EVENT_BUFREADPRE	vim.h	/^	EVENT_BUFREADPRE,		\/* before reading a buffer *\/$/
EVENT_BUFWRITEPOST	vim.h	/^	EVENT_BUFWRITEPOST,		\/* after writing a buffer *\/$/
EVENT_BUFWRITEPRE	vim.h	/^	EVENT_BUFWRITEPRE,		\/* before writing a buffer *\/$/
EVENT_FILEAPPENDPOST	vim.h	/^	EVENT_FILEAPPENDPOST,	\/* after appending to a file *\/$/
EVENT_FILEAPPENDPRE	vim.h	/^	EVENT_FILEAPPENDPRE,	\/* before appending to a file *\/$/
EVENT_FILEREADPOST	vim.h	/^	EVENT_FILEREADPOST,		\/* after reading a file *\/$/
EVENT_FILEREADPRE	vim.h	/^	EVENT_FILEREADPRE,		\/* before reading a file *\/$/
EVENT_FILEWRITEPOST	vim.h	/^	EVENT_FILEWRITEPOST,	\/* after writing a file *\/$/
EVENT_FILEWRITEPRE	vim.h	/^	EVENT_FILEWRITEPRE,		\/* before writing a file *\/$/
EVENT_FILTERREADPOST	vim.h	/^	EVENT_FILTERREADPOST,	\/* after reading from a filter *\/$/
EVENT_FILTERREADPRE	vim.h	/^	EVENT_FILTERREADPRE,	\/* before reading from a filter *\/$/
EVENT_FILTERWRITEPOST	vim.h	/^	EVENT_FILTERWRITEPOST,	\/* after writing to a filter *\/$/
EVENT_FILTERWRITEPRE	vim.h	/^	EVENT_FILTERWRITEPRE,	\/* before writing to a filter *\/$/
EVENT_VIMLEAVE	vim.h	/^	EVENT_VIMLEAVE,			\/* before exiting Vim *\/$/
EVENT_WINENTER	vim.h	/^	EVENT_WINENTER,			\/* after entering a window *\/$/
EVENT_WINLEAVE	vim.h	/^	EVENT_WINLEAVE,			\/* before leaving a window *\/$/
EXACTLY	regexp.c	109
EXEC_FAILED	unix.c	1683
EXPAND_BOOL_SETTINGS	vim.h	228
EXPAND_BUFFERS	vim.h	232
EXPAND_COMMANDS	vim.h	224
EXPAND_DIRECTORIES	vim.h	226
EXPAND_EVENTS	vim.h	233
EXPAND_FILES	vim.h	225
EXPAND_HELP	vim.h	231
EXPAND_MENUS	vim.h	234
EXPAND_NOTHING	vim.h	223
EXPAND_OLD_SETTING	vim.h	230
EXPAND_SETTINGS	vim.h	227
EXPAND_TAGS	vim.h	229
EXPAND_UNSUCCESSFUL	vim.h	222
EXRC_FILE	unix.h	172
EXTERN	globals.h	16
EXTERN	main.c	9
EXTERN	normal.c	21
EXTERN	option.h	16
EXTRASIZE	pty.c	446
EXTRA_MARKS	mark.c	29
ExpandBufnames	buffer.c	/^ExpandBufnames(pat, num_file, file, options)$/
ExpandCommands	cmdline.c	/^ExpandCommands(prog, num_file, file)$/
ExpandEvents	option.c	/^ExpandEvents(prog, num_file, file)$/
ExpandFromContext	cmdline.c	/^ExpandFromContext(pat, num_file, file, files_only, options)$/
ExpandOldSetting	option.c	/^ExpandOldSetting(num_file, file)$/
ExpandOne	cmdline.c	/^ExpandOne(str, orig, options, mode)$/
ExpandSettings	option.c	/^ExpandSettings(prog, num_file, file)$/
ExpandWildCards	unix.c	/^ExpandWildCards(num_pat, pat, num_file, file, files_only, list_notfound)$/
FAIL	vim.h	216
FALSE	vim.h	364
FILL_X	gui.h	43
FILL_Y	gui.h	44
FIND_ANY	vim.h	249
FIND_DEFINE	vim.h	250
FIND_IDENT	vim.h	275
FIND_STRING	vim.h	276
FM_BACKWARD	vim.h	302
FM_BLOCKSTOP	vim.h	304
FM_FORWARD	vim.h	303
FM_SKIPCOMM	vim.h	305
FNAME	regexp.c	119
FNAME_EXP	vim.h	280
FNAME_HYP	vim.h	281
FNAME_MESS	vim.h	279
FONTLEN	gui.c	289
FORWARD	vim.h	210
FO_ALL	option.h	37
FO_DFLT	option.h	36
FO_DFLT_VI	option.h	35
FO_INS_BLANK	option.h	33
FO_INS_LONG	option.h	32
FO_INS_VI	option.h	31
FO_OPEN_COMS	option.h	28
FO_Q_COMS	option.h	29
FO_Q_SECOND	option.h	30
FO_RET_COMS	option.h	27
FO_WRAP	option.h	25
FO_WRAP_COMS	option.h	26
FPC_DIFF	vim.h	328
FPC_DIFFX	vim.h	330
FPC_NOTX	vim.h	329
FPC_SAME	vim.h	327
FPOS	structs.h	/^typedef struct fpos		FPOS;$/
F_BSIZE	memfile.c	55
F_BSIZE	memfile.c	58
FreeWild	misccmds.c	/^FreeWild(num, file)$/
FullName	unix.c	/^FullName(fname, buf, len, force)$/
FullName_save	misccmds.c	/^FullName_save(fname)$/
GAP	option.c	2200
GAP	term.c	2928
GETF_ALT	vim.h	285
GETF_SETMARK	vim.h	284
GO_ALL	option.h	97
GO_ASEL	option.h	90
GO_BOT	option.h	91
GO_FORG	option.h	92
GO_GREY	option.h	93
GO_LEFT	option.h	94
GO_MENUS	option.h	95
GO_RIGHT	option.h	96
GUI_SELECTION_REGISTER	ops.c	39
GVIMRC_FILE	unix.h	181
Gui	gui.h	/^typedef struct Gui$/
Gui	gui.h	/^} Gui;$/
GuiMenu	gui.h	/^typedef struct GuiMenu$/
GuiMenu	gui.h	/^} GuiMenu;$/
GuiScrollbar	gui.h	/^typedef struct GuiScrollbar$/
GuiScrollbar	gui.h	/^} GuiScrollbar;$/
GuiSelection	gui.h	/^typedef struct GuiSelection$/
GuiSelection	gui.h	/^} GuiSelection;$/
HASWIDTH	regexp.c	196
HAVE_DATE_TIME	config.h	38
HAVE_DIRENT_H	config.h	157
HAVE_ERRNO_H	config.h	213
HAVE_FCHDIR	config.h	136
HAVE_FCHOWN	config.h	127
HAVE_FCNTL_H	config.h	192
HAVE_FSYNC	config.h	133
HAVE_GETCWD	config.h	100
HAVE_GETPWNAM	config.h	151
HAVE_GETPWUID	config.h	148
HAVE_GETTIMEOFDAY	config.h	145
HAVE_GETWD	config.h	103
HAVE_KILLPG	config.h	115
HAVE_LIBTERMCAP	config.h	11
HAVE_LOCALE_H	config.h	222
HAVE_MEMSET	config.h	121
HAVE_OSPEED	config.h	23
HAVE_PUTENV	config.h	142
HAVE_PWD_H	config.h	243
HAVE_QSORT	config.h	154
HAVE_RENAME	config.h	130
HAVE_SELECT	config.h	106
HAVE_SETENV	config.h	139
HAVE_SGTTY_H	config.h	195
HAVE_STDLIB_H	config.h	179
HAVE_STRCSPN	config.h	109
HAVE_STRERROR	config.h	124
HAVE_STRINGS_H	config.h	216
HAVE_STRING_H	config.h	180
HAVE_STRTOL	config.h	112
HAVE_SYS_IOCTL_H	config.h	198
HAVE_SYS_SELECT_H	config.h	183
HAVE_SYS_TIME_H	config.h	201
HAVE_SYS_UTSNAME_H	config.h	186
HAVE_SYS_WAIT_H	config.h	169
HAVE_TERMCAP_H	config.h	189
HAVE_TERMIOS_H	config.h	231
HAVE_TGETENT	config.h	118
HAVE_UNISTD_H	config.h	207
HAVE_UP_BC_PC	config.h	29
HAVE_X11	config.h	5
HEADER_SIZE	memline.c	150
HITRETURN	vim.h	204
HL_ALL	gui.h	88
HL_BOLD	gui.h	83
HL_INVERSE	gui.h	82
HL_ITAL	gui.h	84
HL_NORMAL	gui.h	81
HL_SELECTED	gui.h	87
HL_STANDOUT	gui.h	86
HL_UNDERLINE	gui.h	85
IDENT	regexp.c	117
INBUFLEN	unix.c	2182
INC	option.c	2199
INC	term.c	2927
INCSTACK_SIZE	tag.c	275
INDENT_DEC	vim.h	299
INDENT_INC	vim.h	298
INDENT_SET	vim.h	297
INDEX_SIZE	memline.c	149
INIT	globals.h	17
INIT	globals.h	20
INIT	normal.c	22
INIT	option.h	17
INIT	option.h	20
INPUT_BUFLEN	edit.c	2734
INSERT	vim.h	201
INVALIDATE_CURSOR	gui.h	107
INVERTED	vim.h	174
IN_BUFFER	vim.h	378
IN_STATUS_LINE	vim.h	379
IN_UNKNOWN	vim.h	377
IOSIZE	vim.h	404
IObuff	globals.h	/^EXTERN char_u 	*IObuff;				\/* sprintf's are done in this buffer *\/$/
IPTR	structs.h	/^typedef struct info_pointer		IPTR;		\/* block\/index pair *\/$/
ISSPECIAL	edit.c	2528
IS_ABBR	keymap.h	39
IS_CURSOR_VALID	gui.h	115
IS_SPECIAL	keymap.h	38
Insstart	edit.c	/^static FPOS 	Insstart;		\/* This is where the latest insert\/append$/
Insstart_blank_vcol	edit.c	/^static colnr_t	Insstart_blank_vcol;	\/* vcol for first inserted blank *\/$/
Insstart_textlen	edit.c	/^static colnr_t	Insstart_textlen;	\/* length of line when insert started *\/$/
JUMPLISTSIZE	structs.h	48
KEEP_ROOM	alloc.c	24
KEY2TERMCAP0	keymap.h	84
KEY2TERMCAP1	keymap.h	85
KEY_NAMES_TABLE_LEN	tables.c	205
KEY_OPEN_BACK	vim.h	289
KEY_OPEN_FORW	vim.h	288
KE_IGNORE	keymap.h	164
KE_LEFTDRAG	keymap.h	155
KE_LEFTMOUSE	keymap.h	154
KE_LEFTRELEASE	keymap.h	156
KE_MIDDLEDRAG	keymap.h	158
KE_MIDDLEMOUSE	keymap.h	157
KE_MIDDLERELEASE	keymap.h	159
KE_MOUSE	keymap.h	148
KE_NAME	keymap.h	104
KE_RIGHTDRAG	keymap.h	161
KE_RIGHTMOUSE	keymap.h	160
KE_RIGHTRELEASE	keymap.h	162
KE_S_DOWN	keymap.h	107
KE_S_F1	keymap.h	109
KE_S_F10	keymap.h	118
KE_S_F11	keymap.h	120
KE_S_F12	keymap.h	121
KE_S_F13	keymap.h	122
KE_S_F14	keymap.h	123
KE_S_F15	keymap.h	124
KE_S_F16	keymap.h	125
KE_S_F17	keymap.h	126
KE_S_F18	keymap.h	127
KE_S_F19	keymap.h	128
KE_S_F2	keymap.h	110
KE_S_F20	keymap.h	129
KE_S_F21	keymap.h	131
KE_S_F22	keymap.h	132
KE_S_F23	keymap.h	133
KE_S_F24	keymap.h	134
KE_S_F25	keymap.h	135
KE_S_F26	keymap.h	136
KE_S_F27	keymap.h	137
KE_S_F28	keymap.h	138
KE_S_F29	keymap.h	139
KE_S_F3	keymap.h	111
KE_S_F30	keymap.h	140
KE_S_F31	keymap.h	142
KE_S_F32	keymap.h	143
KE_S_F33	keymap.h	144
KE_S_F34	keymap.h	145
KE_S_F35	keymap.h	146
KE_S_F4	keymap.h	112
KE_S_F5	keymap.h	113
KE_S_F6	keymap.h	114
KE_S_F7	keymap.h	115
KE_S_F8	keymap.h	116
KE_S_F9	keymap.h	117
KE_S_TAB	keymap.h	167
KE_S_UP	keymap.h	106
KE_TAB	keymap.h	166
KS_AL	term.h	/^	KS_AL,		\/* add new blank line *\/$/
KS_CAL	term.h	/^	KS_CAL,		\/* add number of blank lines *\/$/
KS_CD	term.h	/^	KS_CD,		\/* clear to end of display *\/$/
KS_CDL	term.h	/^	KS_CDL,		\/* delete number of lines *\/$/
KS_CE	term.h	/^	KS_CE,		\/* clear to end of line *\/$/
KS_CL	term.h	/^	KS_CL,		\/* clear screen *\/$/
KS_CM	term.h	/^	KS_CM,		\/* cursor motion *\/$/
KS_CRI	term.h	/^	KS_CRI,		\/* cursor number of chars right *\/$/
KS_CS	term.h	/^	KS_CS,		\/* scroll region *\/$/
KS_CSC	term.h	/^	KS_CSC		\/* cur is relative to scroll region *\/$/
KS_CZH	term.h	/^	KS_CZH,		\/* italic mode start *\/$/
KS_CZR	term.h	/^	KS_CZR,		\/* italic mode end *\/$/
KS_DA	term.h	/^	KS_DA,		\/* text may be scrolled down from up *\/$/
KS_DB	term.h	/^	KS_DB,		\/* text may be scrolled up from down *\/$/
KS_DL	term.h	/^	KS_DL,		\/* delete line *\/$/
KS_EXTRA	keymap.h	58
KS_HORIZ_SCROLLBAR	keymap.h	73
KS_KE	term.h	/^	KS_KE,		\/* out of "keypad transmit" mode *\/$/
KS_KS	term.h	/^	KS_KS,		\/* put term in "keypad transmit" mode *\/$/
KS_LAST	term.h	65
KS_MD	term.h	/^	KS_MD,		\/* bold mode *\/$/
KS_ME	term.h	/^	KS_ME,		\/* normal mode *\/$/
KS_MENU	keymap.h	71
KS_MODIFIER	keymap.h	64
KS_MOUSE	keymap.h	70
KS_MR	term.h	/^	KS_MR,		\/* reverse mode *\/$/
KS_MS	term.h	/^	KS_MS,		\/* save to move cur in reverse mode *\/$/
KS_NAME	term.h	/^	KS_NAME = 0,		\/* name of this terminal entry *\/$/
KS_SCROLLBAR	keymap.h	72
KS_SE	term.h	/^	KS_SE,		\/* normal mode *\/$/
KS_SO	term.h	/^	KS_SO,		\/* standout mode *\/$/
KS_SPECIAL	keymap.h	52
KS_SR	term.h	/^	KS_SR,		\/* scroll reverse (backward) *\/$/
KS_TE	term.h	/^	KS_TE,		\/* out of termcap mode *\/$/
KS_TI	term.h	/^	KS_TI,		\/* put terminal in termcap mode *\/$/
KS_UE	term.h	/^	KS_UE,		\/* exit underscore mode *\/$/
KS_US	term.h	/^	KS_US,		\/* underscore mode *\/$/
KS_VB	term.h	/^	KS_VB,		\/* visual bell *\/$/
KS_VE	term.h	/^	KS_VE,		\/* cursor visible *\/$/
KS_VI	term.h	/^	KS_VI,		\/* cursor invisible *\/$/
KS_VS	term.h	/^	KS_VS,		\/* cursor very visible *\/$/
KS_ZERO	keymap.h	46
K_BS	keymap.h	266
K_CCIRCM	keymap.h	9
K_DEL	keymap.h	269
K_DOWN	keymap.h	175
K_END	keymap.h	271
K_F1	keymap.h	185
K_F10	keymap.h	194
K_F11	keymap.h	196
K_F12	keymap.h	197
K_F13	keymap.h	198
K_F14	keymap.h	199
K_F15	keymap.h	200
K_F16	keymap.h	201
K_F17	keymap.h	202
K_F18	keymap.h	203
K_F19	keymap.h	204
K_F2	keymap.h	186
K_F20	keymap.h	205
K_F21	keymap.h	207
K_F22	keymap.h	208
K_F23	keymap.h	209
K_F24	keymap.h	210
K_F25	keymap.h	211
K_F26	keymap.h	212
K_F27	keymap.h	213
K_F28	keymap.h	214
K_F29	keymap.h	215
K_F3	keymap.h	187
K_F30	keymap.h	216
K_F31	keymap.h	218
K_F32	keymap.h	219
K_F33	keymap.h	220
K_F34	keymap.h	221
K_F35	keymap.h	222
K_F4	keymap.h	188
K_F5	keymap.h	189
K_F6	keymap.h	190
K_F7	keymap.h	191
K_F8	keymap.h	192
K_F9	keymap.h	193
K_FILLER	keymap.h	78
K_HELP	keymap.h	263
K_HOME	keymap.h	270
K_HORIZ_SCROLLBAR	keymap.h	278
K_IGNORE	keymap.h	294
K_INS	keymap.h	268
K_LEFT	keymap.h	176
K_LEFTDRAG	keymap.h	285
K_LEFTMOUSE	keymap.h	284
K_LEFTRELEASE	keymap.h	286
K_MENU	keymap.h	276
K_MIDDLEDRAG	keymap.h	288
K_MIDDLEMOUSE	keymap.h	287
K_MIDDLERELEASE	keymap.h	289
K_MOUSE	keymap.h	275
K_NEEDMORET	getchar.c	887
K_NUL	keymap.h	15
K_PAGEDOWN	keymap.h	273
K_PAGEUP	keymap.h	272
K_RIGHT	keymap.h	177
K_RIGHTDRAG	keymap.h	291
K_RIGHTMOUSE	keymap.h	290
K_RIGHTRELEASE	keymap.h	292
K_SCROLLBAR	keymap.h	277
K_SECOND	keymap.h	90
K_SPECIAL	keymap.h	31
K_S_DOWN	keymap.h	179
K_S_F1	keymap.h	224
K_S_F10	keymap.h	233
K_S_F11	keymap.h	235
K_S_F12	keymap.h	236
K_S_F13	keymap.h	237
K_S_F14	keymap.h	238
K_S_F15	keymap.h	239
K_S_F16	keymap.h	240
K_S_F17	keymap.h	241
K_S_F18	keymap.h	242
K_S_F19	keymap.h	243
K_S_F2	keymap.h	225
K_S_F20	keymap.h	244
K_S_F21	keymap.h	246
K_S_F22	keymap.h	247
K_S_F23	keymap.h	248
K_S_F24	keymap.h	249
K_S_F25	keymap.h	250
K_S_F26	keymap.h	251
K_S_F27	keymap.h	252
K_S_F28	keymap.h	253
K_S_F29	keymap.h	254
K_S_F3	keymap.h	226
K_S_F30	keymap.h	255
K_S_F31	keymap.h	257
K_S_F32	keymap.h	258
K_S_F33	keymap.h	259
K_S_F34	keymap.h	260
K_S_F35	keymap.h	261
K_S_F4	keymap.h	227
K_S_F5	keymap.h	228
K_S_F6	keymap.h	229
K_S_F7	keymap.h	230
K_S_F8	keymap.h	231
K_S_F9	keymap.h	232
K_S_LEFT	keymap.h	180
K_S_RIGHT	keymap.h	181
K_S_TAB	keymap.h	183
K_S_UP	keymap.h	178
K_TAB	keymap.h	182
K_THIRD	keymap.h	92
K_UNDO	keymap.h	264
K_UP	keymap.h	174
K_ZERO	keymap.h	172
KeyStuffed	globals.h	/^EXTERN int		KeyStuffed;				\/* TRUE if current char from stuffbuf *\/$/
KeyTyped	globals.h	/^EXTERN int		KeyTyped;				\/* TRUE if user typed current char *\/$/
LANGMAP_ADJUST	macros.h	58
LOOKFOR_ANY	misccmds.c	2671
LOOKFOR_CASE	misccmds.c	2670
LOOKFOR_DO	misccmds.c	2669
LOOKFOR_IF	misccmds.c	2668
LOOKFOR_TERM	misccmds.c	2672
LOOKFOR_UNTERM	misccmds.c	2673
LSIZE	vim.h	402
MAXCOL	vim.h	470
MAXCOL	vim.h	472
MAXLNUM	vim.h	467
MAXMAPLEN	vim.h	419
MAXMEM	unix.h	222
MAXMEMTOT	unix.h	225
MAXNAMLEN	unix.h	118
MAXNAMLEN	unix.h	122
MAXNAMLEN	unix.h	126
MAXNAMLEN	unix.h	134
MAXNAMLEN	vim.h	112
MAXPATHL	unix.h	215
MAXPATHL	vim.h	116
MAXSUFLEN	cmdline.c	3924
MAX_ADDR	quickfix.c	45
MAX_KEY_CODE_LEN	keymap.h	320
MAX_KEY_NAME_LEN	keymap.h	310
MAYBE	vim.h	368
MCLOSE	regexp.c	128
MEMBLOCKSIZE	undo.c	772
MEMFILE	structs.h	/^typedef struct memfile		MEMFILE;$/
MEMFILE_PAGE_SIZE	memfile.c	75
MEMHASH	structs.h	211
MEMHASHSIZE	structs.h	210
MEMLINE	structs.h	/^typedef struct memline MEMLINE;$/
MENU_ALL_MODES	gui.h	53
MENU_CMDLINE_MODE	gui.h	52
MENU_DEFAULT_HEIGHT	gui.h	78
MENU_INDEX_CMDLINE	gui.h	60
MENU_INDEX_INSERT	gui.h	59
MENU_INDEX_INVALID	gui.h	56
MENU_INDEX_NORMAL	gui.h	57
MENU_INDEX_VISUAL	gui.h	58
MENU_INSERT_MODE	gui.h	51
MENU_NORMAL_MODE	gui.h	49
MENU_VISUAL_MODE	gui.h	50
MESSAGE	message.c	15
META	regexp.c	/^       static char_u META[] = ".[()|=+*<>iIkKfFpP";$/
META	regexp.c	/^       static char_u META[] = ".[()|=+*<>iIkKfFpP123456789";$/
META	regexp.c	/^       static char_u META[] = ".[()|=+*<>iIkKfFpP~";$/
META	regexp.c	/^       static char_u META[] = ".[()|=+*<>iIkKfFpP~123456789";$/
MINIMAL_SIZE	getchar.c	32
MIN_COLUMNS	vim.h	391
MIN_ROWS	vim.h	392
ML_DELETE	memline.c	208
ML_EMPTY	structs.h	262
ML_FIND	memline.c	210
ML_FLUSH	memline.c	211
ML_INSERT	memline.c	209
ML_LINE_DIRTY	structs.h	263
ML_LOCKED_DIRTY	structs.h	264
ML_LOCKED_POS	structs.h	265
ML_SIMPLE	memline.c	212
MOD_MASK_2CLICK	keymap.h	300
MOD_MASK_3CLICK	keymap.h	301
MOD_MASK_4CLICK	keymap.h	302
MOD_MASK_ALT	keymap.h	299
MOD_MASK_CTRL	keymap.h	298
MOD_MASK_MULTI_CLICK	keymap.h	304
MOD_MASK_SHIFT	keymap.h	297
MOPEN	regexp.c	125
MOUSE_A	option.h	70
MOUSE_ALL	option.h	71
MOUSE_ALT	unix.h	254
MOUSE_CLICK_MASK	unix.h	258
MOUSE_COMMAND	option.h	67
MOUSE_CTRL	unix.h	255
MOUSE_DID_MOVE	vim.h	385
MOUSE_DRAG	unix.h	256
MOUSE_FOCUS	vim.h	383
MOUSE_HELP	option.h	68
MOUSE_INSERT	option.h	66
MOUSE_LEFT	unix.h	249
MOUSE_MAY_VIS	vim.h	384
MOUSE_MIDDLE	unix.h	250
MOUSE_NORMAL	option.h	64
MOUSE_RELEASE	unix.h	252
MOUSE_RETURN	option.h	69
MOUSE_RIGHT	unix.h	251
MOUSE_SETPOS	vim.h	386
MOUSE_SHIFT	unix.h	253
MOUSE_VISUAL	option.h	65
MSG	vim.h	456
MSG_BUF_LEN	vim.h	405
MSG_OUTSTR	vim.h	462
M_NEEDMORET	getchar.c	888
M_OFFSET	undo.c	788
M_OFFSET	undo.c	791
Magic	regexp.c	131
Meta	ascii.h	24
NAMLEN	unix.h	92
NAMLEN	unix.h	95
NEXT	regexp.c	169
NL	ascii.h	15
NL_STR	ascii.h	16
NMARKS	structs.h	47
NORMAL	vim.h	198
NORMAL_BUSY	vim.h	202
NOTHING	regexp.c	110
NOT_VALID	vim.h	176
NR_TRANS	structs.h	/^typedef struct nr_trans NR_TRANS;$/
NSCRIPT	globals.h	302
NUL	ascii.h	13
NUMBUFLEN	ops.c	2203
NUM_EVENTS	vim.h	/^	NUM_EVENTS				\/* MUST be the last one *\/$/
NUM_MOUSE_CLICKS	unix.h	260
NUM_REGISTERS	ops.c	29
NUM_REGISTERS	ops.c	31
NameBuff	globals.h	/^EXTERN char_u	*NameBuff;				\/* file names are expanded in this$/
OK	vim.h	215
ONE_LINE_DATA	gui_at_sb.h	142
ONE_PAGE_DATA	gui_at_sb.h	143
OP	regexp.c	168
OPERAND	regexp.c	170
OUTSTR	vim.h	460
OUTSTRN	vim.h	461
O_EXTRA	vim.h	436
O_EXTRA	vim.h	438
O_NOCTTY	pty.c	111
OpenPTY	pty.c	/^OpenPTY(ttyn)$/
Opencmd	misccmds.c	/^Opencmd(dir, redraw, del_spaces)$/
PARAM_COUNT	option.c	710
PATHSEP	ascii.h	31
PATHSEPSTR	ascii.h	32
PC	term.c	/^char *UP, *BC, PC;$/
PLUS	regexp.c	113
PRINT	regexp.c	120
PRI_CURRENT	tag.c	227
PRI_FULL_MATCH	tag.c	228
PRI_GLOBAL	tag.c	226
PTR_BL	memline.c	/^typedef struct pointer_block	PTR_BL;		\/* contents of a pointer block *\/$/
PTR_EN	memline.c	/^typedef struct pointer_entry	PTR_EN;		\/* block\/line-count pair *\/$/
PTR_ID	memline.c	91
PTYRANGE0	pty.c	86
PTYRANGE1	pty.c	89
PTY_DONE	pty.c	135
PTY_DONE	pty.c	154
PTY_DONE	pty.c	181
PTY_DONE	pty.c	209
PTY_DONE	pty.c	238
PTY_DONE	pty.c	277
PV_AI	option.c	61
PV_BIN	option.c	62
PV_CIN	option.c	63
PV_CINK	option.c	64
PV_CINO	option.c	65
PV_CINW	option.c	66
PV_COM	option.c	67
PV_EOL	option.c	68
PV_ET	option.c	69
PV_FO	option.c	70
PV_INF	option.c	83
PV_ISK	option.c	82
PV_LBR	option.c	59
PV_LISP	option.c	71
PV_LIST	option.c	55
PV_ML	option.c	72
PV_MOD	option.c	73
PV_NU	option.c	56
PV_RL	option.c	84
PV_RO	option.c	74
PV_SCROLL	option.c	57
PV_SI	option.c	75
PV_SN	option.c	76
PV_SW	option.c	77
PV_TS	option.c	78
PV_TW	option.c	79
PV_TX	option.c	80
PV_WM	option.c	81
PV_WRAP	option.c	58
P_ALLOCED	option.c	40
P_BOOL	option.c	37
P_DEF_ALLOCED	option.c	46
P_EXPAND	option.c	43
P_IND	option.c	44
P_NODEFAULT	option.c	45
P_NO_MKRC	option.c	49
P_NUM	option.c	38
P_STRING	option.c	39
P_WAS_SET	option.c	48
PeekChr	regexp.c	262
Prenum	normal.c	/^static linenr_t	Prenum; 		\/* The (optional) number before a command. *\/$/
PtyProto	pty.c	/^static char PtyProto[] = "\/dev\/ptyXY";$/
PtyProto	pty.c	/^static char PtyProto[] = "\/dev\/ptym\/ptyXY";$/
READBIN	vim.h	423
READBIN	vim.h	427
REGEXP_ABBR	regexp.c	/^static char_u REGEXP_ABBR[] = "rteb";$/
REPLACE	vim.h	203
RETSIGTYPE	config.h	82
RET_ERROR	vim.h	371
RET_WIN_BUF_CHARTABSIZE	charset.c	260
RE_BOTH	vim.h	323
RE_LAST	vim.h	324
RE_SEARCH	vim.h	321
RE_SUBST	vim.h	322
Read	unix.c	/^Read(buf, maxlen)$/
RealWaitForChar	unix.c	/^RealWaitForChar(fd, msec)$/
ResetRedobuff	getchar.c	/^ResetRedobuff()$/
Rows	globals.h	/^EXTERN long		Rows;					\/* number of rows in the screen *\/$/
SBUFSIZE	fileio.c	30
SB_BOTTOM	gui.h	72
SB_DEFAULT_WIDTH	gui.h	75
SB_LEFT	gui.h	70
SB_NONE	gui.h	69
SB_RIGHT	gui.h	71
SB_UPDATE_CREATE	gui.h	66
SB_UPDATE_HEIGHT	gui.h	65
SB_UPDATE_NOTHING	gui.h	63
SB_UPDATE_VALUE	gui.h	64
SCROLL_PAST_END	gui.c	43
SEARCH_ECHO	vim.h	263
SEARCH_END	vim.h	268
SEARCH_HIS	vim.h	267
SEARCH_KEEP	vim.h	272
SEARCH_MARK	vim.h	271
SEARCH_MSG	vim.h	264
SEARCH_NFMSG	vim.h	265
SEARCH_NOOF	vim.h	269
SEARCH_OPT	vim.h	266
SEARCH_REV	vim.h	262
SEARCH_START	vim.h	270
SEEK_END	unix.c	2395
SEEK_SET	unix.c	2392
SELECT_CLEARED	gui.h	93
SELECT_DONE	gui.h	95
SELECT_IN_PROGRESS	gui.h	94
SELECT_MODE_CHAR	gui.h	97
SELECT_MODE_LINE	gui.h	99
SELECT_MODE_WORD	gui.h	98
SETWSIZE	vim.h	206
SET_NUM_MOUSE_CLICKS	unix.h	263
SFNAME	regexp.c	123
SHELL_COOKED	vim.h	294
SHELL_EXPAND	vim.h	293
SHELL_FILTER	vim.h	292
SHM_A	option.h	82
SHM_ALL	option.h	87
SHM_FILE	option.h	76
SHM_LAST	option.h	77
SHM_LINES	option.h	79
SHM_MOD	option.h	75
SHM_NEW	option.h	80
SHM_OVER	option.h	85
SHM_RO	option.h	74
SHM_SEARCH	option.h	86
SHM_TEXT	option.h	78
SHM_TRUNC	option.h	84
SHM_WRI	option.h	81
SHM_WRITE	option.h	83
SHOWCMD_COLS	vim.h	475
SIDENT	regexp.c	121
SIGDEFARG	unix.c	/^deathtrap SIGDEFARG(sigarg)$/
SIGDEFARG	unix.c	/^sig_alarm SIGDEFARG(sigarg)$/
SIGDEFARG	unix.c	/^sig_winch SIGDEFARG(sigarg)$/
SIGDEFARG	unix.h	77
SIGDEFARG	unix.h	81
SIGDEFARG	unix.h	86
SIGDUMMYARG	unix.h	78
SIGDUMMYARG	unix.h	82
SIGDUMMYARG	unix.h	87
SIGHAS3ARGS	unix.h	71
SIGHASARG	unix.h	66
SIGPROTOARG	unix.h	76
SIGPROTOARG	unix.h	80
SIGPROTOARG	unix.h	85
SIGRETURN	config.h	85
SIGWINCH	unix.c	61
SIMPLE	regexp.c	197
SIZEOF_INT	config.h	44
SMODE_CONT	gui_at_sb.h	136
SMODE_LINE_DOWN	gui_at_sb.h	140
SMODE_LINE_UP	gui_at_sb.h	139
SMODE_NONE	gui_at_sb.h	135
SMODE_PAGE_DOWN	gui_at_sb.h	138
SMODE_PAGE_UP	gui_at_sb.h	137
SOLARIS	unix.h	37
SPEC_AFILE	cmdline.c	1649
SPEC_CCWORD	cmdline.c	1645
SPEC_CFILE	cmdline.c	1647
SPEC_COUNT	cmdline.c	1651
SPEC_CWORD	cmdline.c	1643
SPEC_HASH	cmdline.c	1641
SPEC_PERC	cmdline.c	1639
SPRINT	regexp.c	124
SPSTART	regexp.c	198
STACK_INCR	memline.c	195
STAR	regexp.c	111
STATFS	memfile.c	54
STATFS	memfile.c	57
STATUS_HEIGHT	vim.h	393
STRCAT	vim.h	453
STRCMP	vim.h	451
STRCPY	vim.h	449
STRLEN	vim.h	448
STRNCAT	vim.h	454
STRNCMP	vim.h	452
STRNCPY	vim.h	450
SWORD	regexp.c	122
SYS_SELECT_WITH_SYS_TIME	config.h	79
ScrollbarClassPart	gui_at_sb.h	/^typedef struct {int empty;} ScrollbarClassPart;$/
ScrollbarClassRec	gui_at_sb.h	/^} ScrollbarClassRec;$/
ScrollbarPart	gui_at_sb.h	/^} ScrollbarPart;$/
ScrollbarRec	gui_at_sb.h	/^} ScrollbarRec;$/
ScrollbarWidget	gui_at_sb.h	/^typedef struct _ScrollbarRec	  *ScrollbarWidget;$/
ScrollbarWidgetClass	gui_at_sb.h	/^typedef struct _ScrollbarClassRec *ScrollbarWidgetClass;$/
SearchedFile	search.c	/^typedef struct SearchedFile$/
SearchedFile	search.c	/^} SearchedFile;$/
SpecialKeys	term.h	/^enum SpecialKeys$/
TAB	ascii.h	14
TAGSTACKSIZE	structs.h	49
TBUFSZ	vim.h	410
TBUFSZ	vim.h	412
TERMBUFSIZE	vim.h	407
TERMCAP2KEY	keymap.h	83
TEXT_X	gui.h	40
TEXT_Y	gui.h	41
TGETENT	term.c	113
TGETSTR	term.c	112
TILDE	regexp.c	210
TIME_WITH_SYS_TIME	config.h	76
TIOCSETN	unix.c	1397
TMPNAME1	unix.h	207
TMPNAME2	unix.h	208
TMPNAMELEN	unix.h	209
TO_LOWER	macros.h	44
TO_LOWER	macros.h	47
TO_SPECIAL	keymap.h	97
TO_UPPER	macros.h	43
TO_UPPER	macros.h	46
TPUTSFUNCAST	term.c	41
TPUTSFUNCAST	term.c	44
TPUTSFUNCAST	term.c	46
TRUE	vim.h	365
TYPELEN_INIT	getchar.c	91
T_AL	term.h	81
T_CAL	term.h	82
T_CD	term.h	87
T_CDL	term.h	84
T_CE	term.h	80
T_CL	term.h	86
T_CM	term.h	103
T_CRI	term.h	105
T_CS	term.h	85
T_CSC	term.h	111
T_CZH	term.h	98
T_CZR	term.h	99
T_DA	term.h	88
T_DB	term.h	89
T_DL	term.h	83
T_KE	term.h	108
T_KS	term.h	107
T_MD	term.h	95
T_ME	term.h	93
T_MR	term.h	94
T_MS	term.h	102
T_SE	term.h	96
T_SO	term.h	97
T_SR	term.h	104
T_TE	term.h	110
T_TI	term.h	109
T_UE	term.h	100
T_US	term.h	101
T_VB	term.h	106
T_VE	term.h	91
T_VI	term.h	90
T_VS	term.h	92
TtyProto	pty.c	/^static char TtyProto[] = "\/dev\/pty\/ttyXY";$/
TtyProto	pty.c	/^static char TtyProto[] = "\/dev\/ttyXY";$/
UCHARAT	regexp.c	176
UCHARAT	regexp.c	178
UCHARAT	regsub.c	65
UCHARAT	regsub.c	67
UH_CHANGED	structs.h	113
UH_EMPTYBUF	structs.h	114
UNCHANGED	vim.h	442
UNIX	config.h	40
UNKNOWN	fileio.c	101
UP	term.c	/^char *UP, *BC, PC;$/
USAGE_ARG_MISSING	main.c	28
USAGE_GARBAGE	main.c	29
USAGE_TOO_MANY_ARGS	main.c	27
USAGE_UNKNOWN_OPTION	main.c	26
USEMEMMOVE	config.h	51
USE_GETCWD	unix.h	47
USE_GUI	vim.h	30
USE_GUI_X11	gui.h	15
USE_GUI_X11	gui.h	24
USE_MOUSE	unix.h	219
USE_NL	screen.c	2622
USE_T_AL	screen.c	2618
USE_T_CAL	screen.c	2616
USE_T_CD	screen.c	2623
USE_T_CDL	screen.c	2617
USE_T_CE	screen.c	2619
USE_T_DL	screen.c	2620
USE_T_SR	screen.c	2621
USR_EXRC_FILE	unix.h	158
USR_GVIMRC_FILE	unix.h	167
USR_VIMRC_FILE	unix.h	162
VALID	vim.h	173
VALID_TO_CURSCHAR	vim.h	175
VIMINFO_FILE	unix.h	187
VIMRC_FILE	unix.h	176
VIM_CLASS	gui_x11.c	23
VIM_MEMMOVE	unix.h	243
VIM_NAME	gui_x11.c	22
VISUAL	vim.h	199
VIsual	globals.h	/^EXTERN FPOS 	VIsual; 		\/* start position of Visual *\/$/
VIsual_end	globals.h	/^EXTERN FPOS 	VIsual_end;		\/* end position of Visual; set when$/
VIsual_mode_save	globals.h	/^EXTERN int		VIsual_mode_save;$/
VIsual_save	globals.h	/^EXTERN FPOS		VIsual_save;	\/* copy of VIsual before 'v' command *\/$/
Version	version.c	/^char		   *Version = "VIM 4.0";$/
WEXITSTATUS	unixunix.h	38
WEXITSTATUS	unixunix.h	40
WIFEXITED	unixunix.h	46
WIFEXITED	unixunix.h	48
WILD_ALL	vim.h	242
WILD_EXPAND_FREE	vim.h	238
WILD_EXPAND_KEEP	vim.h	239
WILD_FREE	vim.h	237
WILD_HOME_REPLACE	vim.h	246
WILD_LIST_NOTFOUND	vim.h	245
WILD_LONGEST	vim.h	243
WILD_NEXT	vim.h	240
WILD_PREV	vim.h	241
WIN	structs.h	/^typedef struct window		WIN;$/
WINLNUM	structs.h	/^typedef struct winlnum		WINLNUM;$/
WORD	regexp.c	118
WORST	regexp.c	199
WRITEBIN	vim.h	422
WRITEBIN	vim.h	426
WW_ALL	option.h	61
W_OK	unix.h	150
WaitForChar	unix.c	/^WaitForChar(msec)$/
X_2_COL	gui.h	45
XtCBoldColor	gui_x11.c	152
XtCBoldFont	gui_x11.c	160
XtCBoldItalicFont	gui_x11.c	164
XtCBottomShadowPixel	gui_at_sb.h	81
XtCCursorColor	gui_x11.c	158
XtCItalicColor	gui_x11.c	154
XtCItalicFont	gui_x11.c	162
XtCMaxOfThumb	gui_at_sb.h	78
XtCMenuBackground	gui_x11.c	172
XtCMenuForeground	gui_x11.c	174
XtCMenuHeight	gui_x11.c	168
XtCMinimumThumb	gui_at_sb.h	75
XtCScrollBackground	gui_x11.c	178
XtCScrollForeground	gui_x11.c	180
XtCScrollbarWidth	gui_x11.c	166
XtCShadowWidth	gui_at_sb.h	79
XtCShown	gui_at_sb.h	76
XtCTopOfThumb	gui_at_sb.h	77
XtCTopShadowPixel	gui_at_sb.h	80
XtCUnderlineColor	gui_x11.c	156
XtNboldColor	gui_x11.c	151
XtNboldFont	gui_x11.c	159
XtNboldItalicFont	gui_x11.c	163
XtNbottomShadowPixel	gui_at_sb.h	88
XtNcursorColor	gui_x11.c	157
XtNitalicColor	gui_x11.c	153
XtNitalicFont	gui_x11.c	161
XtNmaxOfThumb	gui_at_sb.h	85
XtNmenuBackground	gui_x11.c	171
XtNmenuForeground	gui_x11.c	173
XtNmenuHeight	gui_x11.c	167
XtNminimumThumb	gui_at_sb.h	83
XtNscrollBackground	gui_x11.c	177
XtNscrollForeground	gui_x11.c	179
XtNscrollbarWidth	gui_x11.c	165
XtNshadowWidth	gui_at_sb.h	86
XtNtopOfThumb	gui_at_sb.h	84
XtNtopShadowPixel	gui_at_sb.h	87
XtNunderlineColor	gui_x11.c	155
Y_2_ROW	gui.h	46
ZERO_BL	memline.c	/^typedef struct block0			ZERO_BL;	\/* contents of the first block *\/$/
_IO_PTEM_H	unixunix.h	77
_ScrollbarClassRec	gui_at_sb.h	/^typedef struct _ScrollbarClassRec {$/
_ScrollbarRec	gui_at_sb.h	/^typedef struct _ScrollbarRec {$/
_Scrollbar_h	gui_at_sb.h	60
__ARGS	regsub.c	54
__ARGS	regsub.c	75
__ARGS	unix.h	52
__ARGS	unix.h	54
__ARGS	vim.h	41
__ARGS	vim.h	47
__ARGS	vim.h	53
__ARGS	vim.h	58
__ARGS	vim.h	71
__ARGS	vim.h	73
__PARMS	vim.h	42
__PARMS	vim.h	48
__PARMS	vim.h	54
__PARMS	vim.h	79
add_buff	getchar.c	/^add_buff(buf, s)$/
add_char_buff	getchar.c	/^add_char_buff(buf, c)$/
add_completion	edit.c	/^add_completion(str, len, fname, dir)$/
add_completion_and_infercase	edit.c	/^add_completion_and_infercase(str, len, fname, dir)$/
add_long_to_buf	term.c	/^add_long_to_buf(val, dst)$/
add_num_buff	getchar.c	/^add_num_buff(buf, n)$/
add_termcap_entry	term.c	/^add_termcap_entry(name, force)$/
add_termcode	term.c	/^add_termcode(name, string)$/
add_to_history	cmdline.c	/^add_to_history(histype, new_entry)$/
add_to_input_buf	unix.c	/^add_to_input_buf(s, len)$/
add_to_showcmd	normal.c	/^add_to_showcmd(c, display_always)$/
addstar	cmdline.c	/^addstar(fname, len)$/
adjust_cursor	linefunc.c	/^adjust_cursor()$/
after_label	misccmds.c	/^after_label(l)$/
aixhack	pty.c	/^int aixhack = -1;$/
all_cflags	pathdef.c	/^char_u *all_cflags = (char_u *)"gcc -c -I. -DHAVE_CONFIG_H -DUSE_GUI_MOTIF -DFUNCPROTO=15 -DNARROWPROTO  -I\/usr\/local\/include -O2 -fno-strength-reduce -Wall -Wshadow -I\/usr\/X11R6\/include ";$/
alloc	alloc.c	/^alloc(size)$/
alloc_check	alloc.c	/^alloc_check(size)$/
alloc_cmdbuff	cmdline.c	/^alloc_cmdbuff(len)$/
app_context	gui_x11.c	/^static XtAppContext app_context;$/
append_arg_number	buffer.c	/^append_arg_number(buf, add_file)$/
apply_autocmds	option.c	/^apply_autocmds(event, fname, fname_io)$/
arg_count	globals.h	/^EXTERN int		arg_count;	 	\/* number of files *\/$/
arg_exp	globals.h	/^EXTERN int		arg_exp;		\/* when TRUE arg_files must be freed *\/$/
arg_files	globals.h	/^EXTERN char_u	**arg_files;	\/* list of files *\/$/
arrow_used	globals.h	/^EXTERN int		arrow_used;				\/* Normally FALSE, set to TRUE after$/
ask_yesno	misccmds.c	/^ask_yesno(str, direct)$/
at_start	regexp.c	/^static int		at_start;	\/* True when we are on the first character *\/$/
attributes	screen.c	/^static int		attributes = 0;	\/* current attributes for screen character*\/$/
auto_events	vim.h	/^enum auto_events$/
autowrite	cmdline.c	/^autowrite(buf)$/
autowrite_all	cmdline.c	/^autowrite_all()$/
b0_magic_wrong	memline.c	/^b0_magic_wrong(b0p)$/
back_in_line	search.c	/^back_in_line()$/
backslash_halve	cmdline.c	/^backslash_halve(p, expand_wildcards)$/
bck_word	search.c	/^bck_word(count, type, stop)$/
bckend_word	search.c	/^bckend_word(count, type, eol)$/
beep_flush	misccmds.c	/^beep_flush()$/
beginline	edit.c	/^beginline(flag)$/
block0	memline.c	/^struct block0$/
block_def	ops.c	/^struct block_def$/
block_hdr	structs.h	/^struct block_hdr$/
block_prep	ops.c	/^block_prep(bd, lnum, is_del)$/
block_redo	getchar.c	/^static int		block_redo = FALSE;$/
blocknr_t	structs.h	/^typedef long				blocknr_t;$/
bot_top_msg	search.c	/^static char_u *bot_top_msg = (char_u *)"search hit BOTTOM, continuing at TOP";$/
bottommsg	tag.c	/^static char_u *bottommsg = (char_u *)"at bottom of tag stack";$/
bpos	term.c	/^static int				bpos = 0;		\/* number of chars in outbuf *\/$/
breakat_flags	globals.h	/^EXTERN char		breakat_flags[256];		\/* which characters are in 'breakat' *\/$/
buf_check_timestamp	fileio.c	/^buf_check_timestamp(buf)$/
buf_clear	buffer.c	/^buf_clear(buf)$/
buf_copy_options	option.c	/^buf_copy_options(bp_from, bp_to, entering)$/
buf_freeall	buffer.c	/^buf_freeall(buf)$/
buf_modname	fileio.c	/^buf_modname(buf, fname, ext)$/
buf_write	fileio.c	/^buf_write(buf, fname, sfname, start, end, append, forceit,$/
buf_write_all	cmdline.c	/^buf_write_all(buf)$/
bufblock	getchar.c	/^struct bufblock$/
bufempty	macros.h	37
buffer	structs.h	/^struct buffer$/
buffheader	getchar.c	/^struct buffheader$/
buflist_add	buffer.c	/^buflist_add(fname)$/
buflist_altlnum	buffer.c	/^buflist_altlnum()$/
buflist_findlnum	buffer.c	/^buflist_findlnum(buf)$/
buflist_findname	buffer.c	/^buflist_findname(fname)$/
buflist_findnr	buffer.c	/^buflist_findnr(nr)$/
buflist_findpat	buffer.c	/^buflist_findpat(pattern, pattern_end)$/
buflist_getfile	buffer.c	/^buflist_getfile(n, lnum, options)$/
buflist_getlnum	buffer.c	/^buflist_getlnum()$/
buflist_list	buffer.c	/^buflist_list()$/
buflist_match	buffer.c	/^buflist_match(prog, buf)$/
buflist_name_nr	buffer.c	/^buflist_name_nr(fnum, fname, lnum)$/
buflist_new	buffer.c	/^buflist_new(fname, sfname, lnum, use_curbuf)$/
buflist_nr2name	buffer.c	/^buflist_nr2name(n, fullname, helptail)$/
buflist_setlnum	buffer.c	/^buflist_setlnum(buf, lnum)$/
builtin_term	term.c	/^struct builtin_term$/
builtin_termcaps	term.c	/^struct builtin_term builtin_termcaps[] =$/
call_shell	unix.c	/^call_shell(cmd, options)$/
can_cindent	edit.c	/^static int		can_cindent;	\/* may do cindenting on this line *\/$/
canopt	screen.c	/^static int		canopt;			\/* TRUE when cursor goto can be optimized *\/$/
catch_signals	unix.c	/^catch_signals(func)$/
ccheck_abbr	cmdline.c	/^ccheck_abbr(c)$/
change_indent	edit.c	/^change_indent(type, amount, round)$/
change_warning	misccmds.c	/^change_warning()$/
char_avail	getchar.c	/^char_avail()$/
char_class	gui_x11.c	63
char_to_long	memline.c	/^char_to_long(s)$/
char_u	term.h	/^typedef unsigned char char_u;$/
char_u	vim.h	/^typedef unsigned char	char_u;$/
charsize	charset.c	/^charsize(c)$/
chartab	charset.c	/^static char_u chartab[256];$/
chartab_initialized	charset.c	/^static int	  chartab_initialized = FALSE;$/
chartabsize	charset.c	/^chartabsize(c, col)$/
chdir	vim.h	88
check_abbr	getchar.c	/^check_abbr(c, ptr, col, mincol)$/
check_arg_idx	cmdline.c	/^check_arg_idx()$/
check_buf_options	option.c	/^check_buf_options(buf)$/
check_changed	cmdline.c	/^check_changed(buf, checkaw, mult_win)$/
check_changed_any	cmdline.c	/^check_changed_any()$/
check_col	gui.c	/^check_col(col)$/
check_cursor	screen.c	/^check_cursor()$/
check_fname	cmdline.c	/^check_fname()$/
check_map_keycodes	getchar.c	/^check_map_keycodes()$/
check_mark	mark.c	/^check_mark(pos)$/
check_marks_read	fileio.c	/^check_marks_read()$/
check_more	cmdline.c	/^check_more(message)$/
check_options	option.c	/^check_options()$/
check_readonly	cmdline.c	/^check_readonly()$/
check_row	gui.c	/^check_row(row)$/
check_shifted_spec_key	tables.c	/^check_shifted_spec_key(c)$/
check_status	misccmds.c	/^check_status(buf)$/
check_termcode	term.c	/^check_termcode(max_offset)$/
check_timestamps	fileio.c	/^check_timestamps()$/
check_winsize	term.c	/^check_winsize()$/
checkclearop	normal.c	/^checkclearop()$/
checkclearopq	normal.c	/^checkclearopq()$/
checkpcmark	mark.c	/^checkpcmark()$/
chk_modeline	buffer.c	/^chk_modeline(lnum)$/
cleanup_jumplist	mark.c	/^cleanup_jumplist()$/
clear_showcmd	normal.c	/^clear_showcmd()$/
clear_termcodes	term.c	/^clear_termcodes()$/
clear_termoptions	option.c	/^clear_termoptions()$/
clearop	normal.c	/^clearop()$/
clearopbeep	normal.c	/^clearopbeep()$/
close_buffer	buffer.c	/^close_buffer(win, buf, free_buf, del_buf)$/
close_others	window.c	/^close_others(message)$/
close_window	window.c	/^close_window(win, free_buf)$/
close_windows	window.c	/^close_windows(buf)$/
clrallmarks	mark.c	/^clrallmarks(buf)$/
cls	search.c	/^cls()$/
cmd_hkmap	cmdline.c	/^static int			cmd_hkmap = 0;		\/* Hebrew mapping during command line *\/$/
cmd_numfiles	cmdline.c	/^static int  		cmd_numfiles = -1;	  \/* number of files found by$/
cmdbuff	cmdline.c	/^static char_u	*cmdbuff;		\/* pointer to command line buffer *\/$/
cmdbufflen	cmdline.c	/^static int		 cmdbufflen;	\/* length of cmdbuff *\/$/
cmdfirstc	cmdline.c	/^static int		 cmdfirstc; 	\/* ':', '\/' or '?' *\/$/
cmdlen	cmdline.c	/^static int		 cmdlen;		\/* number of chars on command line *\/$/
cmdline_options	gui_x11.c	/^static XrmOptionDescRec cmdline_options[] =$/
cmdline_paste	ops.c	/^cmdline_paste(c)$/
cmdline_row	globals.h	/^EXTERN int		cmdline_row;$/
cmdpos	cmdline.c	/^static int		 cmdpos;		\/* current cursor position *\/$/
cmdspos	cmdline.c	/^static int		 cmdspos;		\/* cursor column on screen *\/$/
col_print	buffer.c	/^col_print(buf, col, vcol)$/
coladvance	linefunc.c	/^coladvance(wcol)$/
colnr_t	structs.h	/^typedef unsigned		colnr_t;$/
colnr_t	vim.h	/^typedef unsigned	colnr_t;		\/* column number type *\/$/
command_height	window.c	/^command_height()$/
commentorempty	misccmds.c	/^commentorempty(s)$/
comp_Botline	screen.c	/^comp_Botline(wp)$/
comp_Botline_all	screen.c	/^comp_Botline_all()$/
comp_Botline_sub	screen.c	/^comp_Botline_sub(wp, lnum, done)$/
comp_col	option.c	/^comp_col()$/
complete_dictionaries	edit.c	/^complete_dictionaries(pat, dir)$/
compute_cmdrow	cmdline.c	/^compute_cmdrow()$/
concat_fnames	misccmds.c	/^concat_fnames(fname1, fname2, sep)$/
copy_option_part	alloc.c	/^copy_option_part(option, buf, maxlen, sep_chars)$/
copy_redo	getchar.c	/^copy_redo(old_redo)$/
copy_spaces	alloc.c	/^copy_spaces(ptr, count)$/
copy_viminfo_marks	mark.c	/^copy_viminfo_marks(line, fp_in, fp_out, count, eof)$/
core_dump	unix.c	/^static int		core_dump = FALSE;			\/* core dump in mch_windexit() *\/$/
count_completions	edit.c	/^count_completions()$/
cstrchr	regexp.c	/^cstrchr(s, c)$/
cstrncmp	regexp.c	/^cstrncmp(s1, s2, n)$/
curchr	regexp.c	/^static int 		curchr;$/
curr_match	edit.c	/^struct Completion *curr_match = NULL;$/
curr_tmode	unix.c	/^static int curr_tmode = 0;	\/* contains current raw\/cooked mode (0 = cooked) *\/$/
current_block	search.c	/^current_block(what, count)$/
current_menu	globals.h	/^EXTERN GuiMenu	*current_menu;$/
current_par	search.c	/^current_par(type, count)$/
current_scrollbar	globals.h	/^EXTERN int		current_scrollbar;$/
current_sent	search.c	/^current_sent(count)$/
current_word	search.c	/^current_word(count, type)$/
curs_columns	screen.c	/^curs_columns(scroll)$/
curs_rows	screen.c	/^curs_rows()$/
cursor_correct	screen.c	/^cursor_correct()$/
cursor_down	edit.c	/^cursor_down(n)$/
cursor_is_off	term.c	/^static int cursor_is_off = FALSE;$/
cursor_off	term.c	/^cursor_off()$/
cursor_on	term.c	/^cursor_on()$/
cursor_pos_info	buffer.c	/^cursor_pos_info()$/
cursor_up	edit.c	/^cursor_up(n)$/
cursorcmd	cmdline.c	/^cursorcmd()$/
cursupdate	screen.c	/^cursupdate()$/
curwin	globals.h	/^EXTERN WIN		*curwin;		\/* currently active window *\/$/
data_block	memline.c	/^struct data_block$/
debug	pty.c	45
debug1	pty.c	46
dec	linefunc.c	/^dec(lp)$/
dec_cursor	linefunc.c	/^dec_cursor()$/
decl	linefunc.c	/^decl(lp)$/
default_menu	gui.c	/^static struct default_menu$/
default_menus	gui.c	/^} default_menus[] = $/
del_autocmd	option.c	/^del_autocmd(ap)$/
del_autocmd_cmds	option.c	/^del_autocmd_cmds(ap)$/
del_from_showcmd	normal.c	/^del_from_showcmd(len)$/
del_termcode	term.c	/^del_termcode(name)$/
del_trailing_spaces	alloc.c	/^del_trailing_spaces(ptr)$/
del_typebuf	getchar.c	/^del_typebuf(len, offset)$/
delchar	misccmds.c	/^delchar(fixpos)$/
dellines	misccmds.c	/^dellines(nlines, dowindow, undo)$/
delmode	screen.c	/^delmode()$/
did_emsg	globals.h	/^EXTERN int		did_emsg;					\/* set by emsg() for DoOneCmd() *\/$/
digraphcount	digraph.c	/^static int		digraphcount = 0;			\/* number of added digraphs *\/$/
digraphdefault	digraph.c	/^char_u	digraphdefault[][3] = 		\/* default HPUX digraphs *\/$/
digraphdefault	digraph.c	/^char_u	digraphdefault[][3] = 		\/* standard ISO digraphs *\/$/
digraphdefault	digraph.c	/^char_u	digraphdefault[][3] = 		\/* standard MSDOS digraphs *\/$/
digraphnew	digraph.c	/^static char_u	(*digraphnew)[3];			\/* pointer to added digraphs *\/$/
dirent	unix.h	94
dis_msg	ops.c	/^dis_msg(p, skip_esc)$/
display_dollar	screen.c	/^display_dollar(col)$/
display_showcmd	normal.c	/^display_showcmd()$/
do_Lower	regsub.c	/^do_Lower(d, c)$/
do_Upper	regsub.c	/^do_Upper(d, c)$/
do_addsub	ops.c	/^do_addsub(command, Prenum1)$/
do_align	cmdcmds.c	/^do_align(start, end, width, type)$/
do_arg_all	buffer.c	/^do_arg_all(count)$/
do_arglist	cmdline.c	/^do_arglist(str)$/
do_ascii	cmdcmds.c	/^do_ascii()$/
do_autocmd	option.c	/^do_autocmd(arg, force)$/
do_autocmd_event	option.c	/^do_autocmd_event(event, pat, cmd, force)$/
do_bang	cmdcmds.c	/^do_bang(addr_count, line1, line2, forceit, arg, do_in, do_out)$/
do_bufdel	buffer.c	/^do_bufdel(command, arg, addr_count, start_bnr, end_bnr, forceit)$/
do_buffer	buffer.c	/^do_buffer(action, start, dir, count, forceit)$/
do_buffer_all	buffer.c	/^do_buffer_all(count, all)$/
do_change	ops.c	/^do_change()$/
do_cmdline	cmdline.c	/^do_cmdline(cmdline, sourcing, repeating)$/
do_copy	cmdcmds.c	/^do_copy(line1, line2, n)$/
do_delete	ops.c	/^do_delete()$/
do_digraph	digraph.c	/^do_digraph(c)$/
do_dis	ops.c	/^do_dis(arg)$/
do_do_join	ops.c	/^do_do_join(count, insert_space, redraw)$/
do_doautocmd	option.c	/^do_doautocmd(arg)$/
do_ecmd	cmdline.c	/^do_ecmd(fnum, fname, sfname, command, hide, newlnum, set_help)$/
do_execbuf	ops.c	/^do_execbuf(c, colon, addcr)$/
do_file	cmdcmds.c	/^do_file(arg, forceit)$/
do_filter	cmdcmds.c	/^do_filter(line1, line2, buff, do_in, do_out)$/
do_fixdel	cmdcmds.c	/^do_fixdel()$/
do_format	ops.c	/^do_format()$/
do_gd	normal.c	/^do_gd(nchar)$/
do_glob	csearch.c	/^do_glob(type, lp, up, cmd)$/
do_help	help.c	/^do_help(arg)$/
do_join	ops.c	/^do_join(insert_space, redraw)$/
do_jumps	mark.c	/^do_jumps()$/
do_lower	regsub.c	/^do_lower(d, c)$/
do_make	cmdline.c	/^do_make(arg)$/
do_map	getchar.c	/^do_map(maptype, keys, mode)$/
do_marks	mark.c	/^do_marks(arg)$/
do_modelines	buffer.c	/^do_modelines()$/
do_mouse	normal.c	/^do_mouse(c, dir, count, fix_indent)$/
do_move	cmdcmds.c	/^do_move(line1, line2, n)$/
do_one_cmd	cmdline.c	/^do_one_cmd(cmdlinep, cmdlinelenp, sourcing)$/
do_outofmem_msg	alloc.c	/^do_outofmem_msg()$/
do_pending_operator	normal.c	/^do_pending_operator(c, nchar, finish_op, searchbuff, command_busy,$/
do_put	ops.c	/^do_put(dir, count, fix_indent)$/
do_record	ops.c	/^do_record(c)$/
do_reindent	ops.c	/^do_reindent(how)$/
do_resize	unix.c	/^static int		do_resize = FALSE;$/
do_retab	cmdcmds.c	/^do_retab(start, end, new_ts, force)$/
do_search	search.c	/^do_search(dirc, str, count, options)$/
do_set	option.c	/^do_set(arg)$/
do_shell	cmdcmds.c	/^do_shell(cmd)$/
do_shift	ops.c	/^do_shift(op, curs_top, amount)$/
do_source	cmdline.c	/^do_source(fname, check_other)$/
do_sub	csearch.c	/^do_sub(lp, up, cmd, nextcommand, use_old)$/
do_sub_msg	csearch.c	/^do_sub_msg()$/
do_tag	tag.c	/^do_tag(tag, type, count)$/
do_tags	tag.c	/^do_tags()$/
do_tilde	ops.c	/^do_tilde()$/
do_upper	regsub.c	/^do_upper(d, c)$/
do_version	version.c	/^do_version(arg)$/
do_viminfo	cmdcmds.c	/^do_viminfo(fp_in, fp_out, want_info, want_marks, force_read)$/
do_window	window.c	/^do_window(nchar, Prenum)$/
do_write	cmdline.c	/^do_write(fname, append)$/
do_yank	ops.c	/^do_yank(deleting, mess)$/
echeck_abbr	edit.c	/^echeck_abbr(c)$/
edit	edit.c	/^edit(initstr, startln, count)$/
edit_submode_highl	globals.h	/^EXTERN int		edit_submode_highl;			\/* extra info highlighted *\/$/
eformat	quickfix.c	/^struct eformat$/
emsg	message.c	/^emsg(s)$/
emsg2	message.c	/^emsg2(s, a1)$/
emsgn	message.c	/^emsgn(s, n)$/
end_visual_mode	normal.c	/^end_visual_mode()$/
end_word	search.c	/^end_word(count, type, stop, empty)$/
enter_buffer	buffer.c	/^enter_buffer(buf)$/
envsize	pty.c	/^static int	envsize = -1;	 \/* current size of environment *\/$/
equal	macros.h	27
event_name	option.c	/^static struct event_name$/
event_name2nr	option.c	/^event_name2nr(start, end)$/
event_names	option.c	/^} event_names[] =$/
event_nr2name	option.c	/^event_nr2name(event)$/
expand_env	misccmds.c	/^expand_env(src, dst, dstlen)$/
expand_menu	gui.c	/^static GuiMenu	*expand_menu = NULL;$/
expand_modes	gui.c	/^static int		expand_modes = 0x0;$/
expand_option_idx	option.c	/^static int expand_option_idx = -1;$/
expand_option_name	option.c	/^static char_u expand_option_name[5] = {'t', '_', NUL, NUL, NUL};$/
expand_rel_name	tag.c	/^expand_rel_name(fname, tag_fname)$/
extra_shell_arg	unix.c	/^static char_u	*extra_shell_arg = NULL;$/
file_name_at_cursor	window.c	/^file_name_at_cursor(options)$/
file_pat_to_reg_pat	option.c	/^file_pat_to_reg_pat(pat, pat_end, allow_directories)$/
fileinfo	buffer.c	/^fileinfo(fullname, shorthelp, dont_truncate)$/
filemark	structs.h	/^struct filemark$/
filemess	fileio.c	/^filemess(buf, name, s)$/
fill_breakat_flags	option.c	/^fill_breakat_flags()$/
fill_inbuf	unix.c	/^fill_inbuf(exit_on_error)$/
find_builtin_term	term.c	/^find_builtin_term(term)$/
find_end_event	option.c	/^find_end_event(arg)$/
find_end_of_word	normal.c	/^find_end_of_word(pos)$/
find_first_blank	search.c	/^find_first_blank(posp)$/
find_help_tags	help.c	/^find_help_tags(arg, num_matches, matches)$/
find_ident_under_cursor	normal.c	/^find_ident_under_cursor(string, find_type)$/
find_key_option	option.c	/^find_key_option(arg)$/
find_last_paren	misccmds.c	/^find_last_paren(l)$/
find_match	misccmds.c	/^find_match(lookfor, ourscope, ind_maxparen, ind_maxcomment)$/
find_match_paren	misccmds.c	/^find_match_paren(ind_maxparen, ind_maxcomment)		\/* XXX *\/$/
find_pattern_in_path	search.c	/^find_pattern_in_path(ptr, len, whole, skip_comments,$/
find_special_key_in_table	tables.c	/^find_special_key_in_table(c)$/
find_start_brace	misccmds.c	/^find_start_brace(ind_maxcomment)			\/* XXX *\/$/
find_start_comment	misccmds.c	/^find_start_comment(ind_maxcomment)			\/* XXX *\/$/
find_start_of_word	normal.c	/^find_start_of_word(pos)$/
find_tags	tag.c	/^find_tags(tag, prog, num_file, file, help_only)$/
find_termcode	term.c	/^find_termcode(name)$/
findenv	pty.c	/^findenv(name)$/
findmatch	search.c	/^findmatch(initc)$/
findmatchlimit	search.c	/^findmatchlimit(initc, flags, maxtravel)$/
findoption	option.c	/^findoption(arg)$/
findpar	search.c	/^findpar(dir, count, what, both)$/
findsent	search.c	/^findsent(dir, count)$/
findswapname	memline.c	/^findswapname(buf, dirp, old_fname)$/
finish_viminfo_history	cmdline.c	/^finish_viminfo_history()$/
first_autopat	option.c	/^static AutoPat *first_autopat[NUM_EVENTS] =$/
first_match	edit.c	/^struct Completion *first_match = NULL;$/
firstwin	globals.h	/^EXTERN WIN		*firstwin;		\/* first window *\/$/
fix_fname	buffer.c	/^fix_fname(fname)$/
fixedtitle	unix.c	/^static char_u	*fixedtitle = (char_u *)"Thanks for flying Vim";$/
fixthisline	edit.c	/^fixthisline(get_the_indent)$/
flush_buffers	getchar.c	/^flush_buffers(typeahead)$/
flushbuf	term.c	/^flushbuf()$/
fm_getname	mark.c	/^fm_getname(fmark)$/
fmarks_check_names	mark.c	/^fmarks_check_names(buf)$/
fmt_end_block	ops.c	/^fmt_end_block(lnum, leader_len, leader_flags)$/
fname_expand	buffer.c	/^fname_expand(fname, sfname)$/
fnamecmp	vim.h	503
fnamecmp	vim.h	506
fnamecmp_ino	memline.c	/^fnamecmp_ino(fname_c, fname_s, ino_block0)$/
fnamencmp	vim.h	504
fnamencmp	vim.h	507
force_menu_update	gui.c	/^int force_menu_update = FALSE;$/
forceit	cmdline.c	/^static int			forceit;$/
fpos	structs.h	/^struct fpos$/
fptr	regsub.c	/^typedef void (*(*fptr) __ARGS((char_u *, int)))();$/
free_buf_options	buffer.c	/^free_buf_options(buf)$/
free_buff	getchar.c	/^free_buff(buf)$/
free_completions	edit.c	/^free_completions()$/
free_string_option	option.c	/^free_string_option(p)$/
free_yank	ops.c	/^free_yank(n)$/
free_yank_all	ops.c	/^free_yank_all()$/
fstatfs	memfile.c	59
fullpathcmp	misccmds.c	/^fullpathcmp(s1, s2)$/
fwd_word	search.c	/^fwd_word(count, type, eol)$/
gather_termleader	term.c	/^gather_termleader()$/
gchar	misccmds.c	/^gchar(pos)$/
gchar_cursor	misccmds.c	/^gchar_cursor()$/
get_address	cmdline.c	/^get_address(ptr)$/
get_bufcont	getchar.c	/^get_bufcont(buffer, dozero)$/
get_bytes_from_buf	term.c	/^get_bytes_from_buf(buf, bytes, num_bytes)$/
get_c_indent	misccmds.c	/^get_c_indent()$/
get_file_name_in_path	window.c	/^get_file_name_in_path(ptr, col, options)$/
get_highlight_default	option.c	/^get_highlight_default()$/
get_indent	misccmds.c	/^get_indent()$/
get_indent_lnum	misccmds.c	/^get_indent_lnum(lnum)$/
get_indent_nolabel	misccmds.c	/^get_indent_nolabel(lnum)				\/* XXX *\/$/
get_indent_str	misccmds.c	/^get_indent_str(ptr)$/
get_inserted	getchar.c	/^get_inserted()$/
get_key_name	tables.c	/^get_key_name(i)$/
get_last_insert	edit.c	/^get_last_insert()$/
get_leader_len	misccmds.c	/^get_leader_len(line, flags)$/
get_lisp_indent	misccmds.c	/^get_lisp_indent()$/
get_literal	edit.c	/^get_literal()$/
get_long_from_buf	term.c	/^get_long_from_buf(buf, val)$/
get_mouse_button	tables.c	/^get_mouse_button(code, is_click, is_drag)$/
get_mouse_class	normal.c	/^get_mouse_class(c)$/
get_names	memline.c	/^get_names(names, fname)$/
get_number	misccmds.c	/^get_number()$/
get_pseudo_mouse_code	tables.c	/^get_pseudo_mouse_code(button, is_click, is_drag)$/
get_recorded	getchar.c	/^get_recorded()$/
get_register_name	ops.c	/^get_register_name(num)$/
get_special_key_code	tables.c	/^get_special_key_code(name)$/
get_special_key_name	tables.c	/^get_special_key_name(c, modifiers)$/
get_stty	unix.c	/^get_stty()$/
get_tagfname	tag.c	/^get_tagfname(first, buf)$/
get_termcode	term.c	/^get_termcode(i)$/
get_varp	option.c	/^get_varp(p)$/
get_viminfo_parameter	option.c	/^get_viminfo_parameter(type)$/
get_x11_icon	unix.c	/^get_x11_icon(test_only)$/
get_x11_title	unix.c	/^get_x11_title(test_only)$/
get_x11_windis	unix.c	/^get_x11_windis()$/
get_yank_buffer	ops.c	/^get_yank_buffer(writing)$/
getargcmd	cmdline.c	/^getargcmd(argp)$/
getchr	regexp.c	/^getchr()$/
getcmdline	cmdline.c	/^getcmdline(firstc, count)$/
getcwd	vim.h	87
getdigits	misccmds.c	/^getdigits(pp)$/
getdigraph	digraph.c	/^getdigraph(char1, char2, meta)$/
getexactdigraph	digraph.c	/^getexactdigraph(char1, char2, meta)$/
getfile	cmdline.c	/^getfile(fnum, fname, sfname, setpm, lnum)$/
gethostname	unix.c	1037
getlinecol	term.c	/^getlinecol()$/
getmark	mark.c	/^getmark(c, changefile)$/
getout	main.c	/^getout(r)$/
getperm	unix.c	/^getperm(name)$/
gettail	misccmds.c	/^gettail(fname)$/
getvcol	charset.c	/^getvcol(wp, pos, start, cursor, end)$/
give_warning	search.c	/^give_warning(message)$/
got_x_error	unix.c	/^int			got_x_error = FALSE;$/
gotchars	getchar.c	/^gotchars(s, len)$/
goto_endofbuf	misccmds.c	/^goto_endofbuf(pos)$/
gotocmdline	cmdline.c	/^gotocmdline(clr)$/
gui	gui.c	/^Gui gui;$/
gui_ExpandMenuNames	gui.c	/^gui_ExpandMenuNames(prog, num_file, file)$/
gui_add_menu_path	gui.c	/^gui_add_menu_path(path_name, modes, call_back, call_data, noremap)$/
gui_argc	gui_x11.c	/^static int gui_argc = 0;$/
gui_argv	gui_x11.c	/^static char **gui_argv = NULL;$/
gui_auto_select	gui.c	/^gui_auto_select()$/
gui_check_screen	gui.c	/^gui_check_screen()$/
gui_convert_selection	ops.c	/^gui_convert_selection(str, len)$/
gui_copy_selection	gui.c	/^gui_copy_selection()$/
gui_create_initial_menus	gui.c	/^gui_create_initial_menus(menu, parent)$/
gui_do_horiz_scroll	gui.c	/^gui_do_horiz_scroll()$/
gui_do_menu	gui.c	/^gui_do_menu(cmd, arg, force)$/
gui_do_scroll	gui.c	/^gui_do_scroll()$/
gui_exit	gui.c	/^gui_exit()$/
gui_free_menu	gui.c	/^gui_free_menu(menu)$/
gui_free_menu_string	gui.c	/^gui_free_menu_string(menu, idx)$/
gui_free_selection	ops.c	/^gui_free_selection()$/
gui_get_max_horiz_scroll	gui.c	/^gui_get_max_horiz_scroll()$/
gui_get_menu_cmd_modes	gui.c	/^gui_get_menu_cmd_modes(cmd, force, noremap, unmenu)$/
gui_get_menu_index	gui.c	/^gui_get_menu_index(menu, state)$/
gui_get_selection	ops.c	/^gui_get_selection()$/
gui_get_x11_windis	gui_x11.c	/^gui_get_x11_windis(win, dis)$/
gui_init	gui.c	/^gui_init()$/
gui_init_font	gui.c	/^gui_init_font()$/
gui_init_which_components	gui.c	/^gui_init_which_components(oldval)$/
gui_lose_selection	gui.c	/^gui_lose_selection()$/
gui_mch_add_menu	gui_motif.c	/^gui_mch_add_menu(menu, parent)$/
gui_mch_add_menu_item	gui_motif.c	/^gui_mch_add_menu_item(menu, parent)$/
gui_mch_beep	gui_x11.c	/^gui_mch_beep()$/
gui_mch_clear_block	gui_x11.c	/^gui_mch_clear_block(row1, col1, row2, col2)$/
gui_mch_clear_selection	gui_x11.c	/^gui_mch_clear_selection()$/
gui_mch_create_which_components	gui_motif.c	/^gui_mch_create_which_components()$/
gui_mch_create_widgets	gui_motif.c	/^gui_mch_create_widgets()$/
gui_mch_delete_lines	gui_x11.c	/^gui_mch_delete_lines(row, num_lines)$/
gui_mch_destroy_menu	gui_motif.c	/^gui_mch_destroy_menu(menu)$/
gui_mch_destroy_scrollbar	gui_motif.c	/^gui_mch_destroy_scrollbar(wp)$/
gui_mch_draw_cursor	gui_x11.c	/^gui_mch_draw_cursor()$/
gui_mch_exit	gui_x11.c	/^gui_mch_exit()$/
gui_mch_flash	gui_x11.c	/^gui_mch_flash()$/
gui_mch_flush	gui_x11.c	/^gui_mch_flush()$/
gui_mch_get_wid	gui_motif.c	/^gui_mch_get_wid()$/
gui_mch_get_winsize	gui_motif.c	/^gui_mch_get_winsize()$/
gui_mch_haskey	gui_x11.c	/^gui_mch_haskey(name)$/
gui_mch_iconify	gui_x11.c	/^gui_mch_iconify()$/
gui_mch_init	gui_x11.c	/^gui_mch_init()$/
gui_mch_init_font	gui_x11.c	/^gui_mch_init_font(font_name)$/
gui_mch_insert_lines	gui_x11.c	/^gui_mch_insert_lines(row, num_lines)$/
gui_mch_lose_selection	gui_x11.c	/^gui_mch_lose_selection()$/
gui_mch_outstr_nowrap	gui_x11.c	/^gui_mch_outstr_nowrap(s, len, wrap_cursor, is_cursor)$/
gui_mch_own_selection	gui_x11.c	/^gui_mch_own_selection()$/
gui_mch_prepare	gui_x11.c	/^gui_mch_prepare(argc, argv)$/
gui_mch_reorder_scrollbars	gui_motif.c	/^gui_mch_reorder_scrollbars(which_sb)$/
gui_mch_set_winsize	gui_motif.c	/^gui_mch_set_winsize()$/
gui_mch_update	gui_x11.c	/^gui_mch_update()$/
gui_mch_update_horiz_scrollbar	gui_motif.c	/^gui_mch_update_horiz_scrollbar(value, size, max)$/
gui_mch_update_scrollbars	gui_motif.c	/^gui_mch_update_scrollbars(worst_update, which_sb)$/
gui_mch_wait_for_chars	gui_x11.c	/^gui_mch_wait_for_chars(wtime)$/
gui_menu_cb	gui.c	/^gui_menu_cb(menu)$/
gui_menu_name_skip	gui.c	/^gui_menu_name_skip(name)$/
gui_outstr	gui.c	/^gui_outstr(s, len)$/
gui_own_selection	gui.c	/^gui_own_selection()$/
gui_prepare	gui.c	/^gui_prepare(argc, argv)$/
gui_redraw	gui.c	/^gui_redraw(x, y, w, h)$/
gui_redraw_block	gui.c	/^gui_redraw_block(row1, col1, row2, col2)$/
gui_remove_menu	gui.c	/^gui_remove_menu(menup, name, modes)$/
gui_request_selection	gui_x11.c	/^gui_request_selection()$/
gui_reset_scroll_region	gui.c	/^gui_reset_scroll_region()$/
gui_resize_window	gui.c	/^gui_resize_window(pixel_width, pixel_height)$/
gui_send_mouse_event	gui.c	/^gui_send_mouse_event(button, x, y, repeated_click, modifiers)$/
gui_set_context_in_menu_cmd	gui.c	/^gui_set_context_in_menu_cmd(cmd, arg, force)$/
gui_set_cursor	gui.c	/^gui_set_cursor(row, col)$/
gui_show_menus	gui.c	/^gui_show_menus(path_name, modes)$/
gui_show_menus_recursive	gui.c	/^gui_show_menus_recursive(menu, modes, depth)$/
gui_start	gui.c	/^gui_start()$/
gui_start_highlight	gui.c	/^gui_start_highlight(mask)$/
gui_stop_highlight	gui.c	/^gui_stop_highlight(mask)$/
gui_undraw_cursor	gui.c	/^gui_undraw_cursor()$/
gui_update_cursor	gui.c	/^gui_update_cursor()$/
gui_update_horiz_scrollbar	gui.c	/^gui_update_horiz_scrollbar()$/
gui_update_scrollbars	gui.c	/^gui_update_scrollbars()$/
gui_update_selection	gui.c	/^gui_update_selection()$/
gui_write	gui.c	/^gui_write(s, len)$/
gui_x11_check_copy_area	gui_x11.c	/^gui_x11_check_copy_area()$/
gui_x11_compare_pos	gui_x11.c	/^gui_x11_compare_pos(row1, col1, row2, col2)$/
gui_x11_convert_selection_cb	gui_x11.c	/^gui_x11_convert_selection_cb(w, selection, target, type, value, length, format)$/
gui_x11_expose_cb	gui_x11.c	/^gui_x11_expose_cb(w, dud, event, bool)$/
gui_x11_focus_change_cb	gui_x11.c	/^gui_x11_focus_change_cb(w, data, event, bool)$/
gui_x11_get_color	gui_x11.c	/^gui_x11_get_color(name)$/
gui_x11_get_line_end	gui_x11.c	/^gui_x11_get_line_end(row)$/
gui_x11_get_word_boundaries	gui_x11.c	/^gui_x11_get_word_boundaries(gs, row, col)$/
gui_x11_invert_area	gui_x11.c	/^gui_x11_invert_area(row1, col1, row2, col2)$/
gui_x11_key_hit_cb	gui_x11.c	/^gui_x11_key_hit_cb(w, dud, event, bool)$/
gui_x11_lose_ownership_cb	gui_x11.c	/^gui_x11_lose_ownership_cb(w, selection)$/
gui_x11_menu_cb	gui_x11.c	/^gui_x11_menu_cb(w, client_data, call_data)$/
gui_x11_mouse_cb	gui_x11.c	/^gui_x11_mouse_cb(w, dud, event, bool)$/
gui_x11_process_selection	gui_x11.c	/^gui_x11_process_selection(button, x, y, repeated_click, modifiers)$/
gui_x11_redraw_selection	gui_x11.c	/^gui_x11_redraw_selection(x, y, w, h)$/
gui_x11_request_selection_cb	gui_x11.c	/^gui_x11_request_selection_cb(w, success, selection, type, value, length, format)$/
gui_x11_resize_window_cb	gui_x11.c	/^gui_x11_resize_window_cb(w, dud, event, bool)$/
gui_x11_set_color	gui_x11.c	/^gui_x11_set_color(gc, pixel)$/
gui_x11_set_font	gui_x11.c	/^gui_x11_set_font(gc, fid)$/
gui_x11_start_selection	gui_x11.c	/^gui_x11_start_selection(button, x, y, repeated_click, modifiers)$/
gui_x11_timer_cb	gui_x11.c	/^gui_x11_timer_cb(timed_out, interval_id)$/
gui_x11_update_menus	gui_x11.c	/^gui_x11_update_menus(modes)$/
gui_x11_update_menus_recurse	gui_x11.c	/^gui_x11_update_menus_recurse(menu, mode)$/
gui_x11_update_selection	gui_x11.c	/^gui_x11_update_selection(gs, row1, col1, row2, col2)$/
gui_x11_use_resize_callback	gui_x11.c	/^gui_x11_use_resize_callback(widget, enabled)$/
gui_x11_visibility_cb	gui_x11.c	/^gui_x11_visibility_cb(w, dud, event, bool)$/
gui_x11_wm_protocol_handler	gui_x11.c	/^gui_x11_wm_protocol_handler(w, client_data, event, bool)$/
gui_x11_yank_selection	gui_x11.c	/^gui_x11_yank_selection(row1, col1, row2, col2)$/
gui_yank_selection	ops.c	/^gui_yank_selection(type, str, len)$/
halfpage	edit.c	/^halfpage(flag, Prenum)$/
has_format_option	option.c	/^has_format_option(x)$/
have_dollars	unix.c	/^have_dollars(num, file)$/
have_wildcard	unix.c	/^have_wildcard(num, file)$/
help_compare	help.c	/^help_compare(s1, s2)$/
help_fname	pathdef.c	/^char_u *help_fname = (char_u *)"\/usr\/local\/share\/vim\/vim_help.txt";$/
help_fname	pathdef.c	/^char_u *help_fname = (char_u *)VIM_HLP;$/
help_heuristic	help.c	/^help_heuristic(matched_string, offset)$/
highlight_attr	screen.c	/^static int 		highlight_attr = 0;	\/* attributes when highlighting on *\/$/
hisidx	cmdline.c	/^static int			hisidx[2] = {-1, -1};			\/* last entered entry *\/$/
hislen	cmdline.c	/^static int			hislen = 0; 		\/* actual lengt of history tables *\/$/
history	cmdline.c	/^static char_u		**(history[2]) = {NULL, NULL};	\/* history tables *\/$/
hkmap	edit.c	/^hkmap(c)$/
home_replace	misccmds.c	/^home_replace(buf, src, dst, dstlen)$/
home_replace_save	misccmds.c	/^home_replace_save(buf, src)$/
homedir	misccmds.c	/^static char_u	*homedir = NULL;$/
horiz_scroll_cb	gui_motif.c	/^horiz_scroll_cb(w, client_data, call_data)$/
hpux	pty.c	79
illegal_char	option.c	/^illegal_char(errbuf, c)$/
in_cinkeys	edit.c	/^in_cinkeys(keytyped, when, line_is_empty)$/
inbuf	unix.c	/^static char_u	inbuf[INBUFLEN + MAX_KEY_CODE_LEN];$/
inbufcount	unix.c	/^static int		inbufcount = 0;		\/* number of chars in inbuf[] *\/$/
inc	linefunc.c	/^inc(lp)$/
inc_cursor	linefunc.c	/^inc_cursor()$/
inchar	getchar.c	/^inchar(buf, maxlen, wait_time)$/
incl	linefunc.c	/^incl(lp)$/
info_pointer	structs.h	/^struct info_pointer$/
info_t	structs.h	/^typedef struct m_info info_t;$/
inindent	misccmds.c	/^inindent(extra)$/
init_chartab	charset.c	/^init_chartab()$/
init_history	cmdline.c	/^init_history()$/
init_homedir	misccmds.c	/^init_homedir()$/
init_typebuf	getchar.c	/^init_typebuf()$/
init_yank	ops.c	/^init_yank()$/
initchr	regexp.c	/^initchr(str)$/
initpty	pty.c	/^initpty(f)$/
inmacro	search.c	/^inmacro(opt, s)$/
ins_char	misccmds.c	/^ins_char(c)$/
ins_str	misccmds.c	/^ins_str(s)$/
ins_typebuf	getchar.c	/^ins_typebuf(str, noremap, offset, nottyped)$/
insert_special	edit.c	/^insert_special(c, allow_modmask)$/
insertbuf	ops.c	/^insertbuf(c)$/
insertchar	edit.c	/^insertchar(c, force_formatting, second_indent)$/
int_u	vim.h	/^typedef unsigned int	int_u;$/
invert_rectangle	gui_x11.c	65
isFullName	unix.c	/^isFullName(fname)$/
is_backslash	cmdline.c	/^is_backslash(str)$/
is_builtin_term	term.c	/^is_builtin_term(name)$/
is_cinword	misccmds.c	/^is_cinword(line)$/
is_ctrl_x_key	edit.c	/^is_ctrl_x_key(c)$/
is_fastterm	unix.c	/^is_fastterm(name)$/
is_in_history	cmdline.c	/^is_in_history(type, str, move_to_front)$/
is_input_buf_empty	unix.c	/^is_input_buf_empty()$/
is_input_buf_full	unix.c	/^is_input_buf_full()$/
is_iris_ansi	unix.c	/^is_iris_ansi(name)$/
is_showcmd_clear	normal.c	/^static int		is_showcmd_clear = TRUE;$/
is_xterm	unix.c	/^is_xterm(name)$/
is_yank_buffer	ops.c	/^is_yank_buffer(c, writing)$/
isbreak	macros.h	68
iscase	misccmds.c	/^iscase(s)$/
iscomment	misccmds.c	/^iscomment(p)$/
isdefault	misccmds.c	/^isdefault(s)$/
isdo	misccmds.c	/^isdo(p)$/
iselse	misccmds.c	/^iselse(p)$/
isfilechar	charset.c	/^isfilechar(c)$/
isfuncdecl	misccmds.c	/^isfuncdecl(s)$/
isidchar	charset.c	/^isidchar(c)$/
isif	misccmds.c	/^isif(p)$/
islabel	misccmds.c	/^islabel(ind_maxcomment)			\/* XXX *\/$/
ismult	regexp.c	/^ismult(c)$/
ispathsep	misccmds.c	/^ispathsep(c)$/
ispreproc	misccmds.c	/^ispreproc(s)$/
isprintchar	charset.c	/^isprintchar(c)$/
isterminated	misccmds.c	/^isterminated(s)$/
istermoption	option.c	/^istermoption(p)$/
iswhileofdo	misccmds.c	/^iswhileofdo(p, lnum, ind_maxparen)			\/* XXX *\/$/
iswordchar	charset.c	/^iswordchar(c)$/
jump_to_mouse	screen.c	/^jump_to_mouse(flags)$/
jumpto_tag	tag.c	/^jumpto_tag(lbuf,$/
key_name_entry	tables.c	/^static struct key_name_entry$/
key_names_table	tables.c	/^} key_names_table[] =$/
lalloc	alloc.c	/^lalloc(size, message)$/
langmap_init	option.c	/^langmap_init()$/
langmap_mapchar	globals.h	/^EXTERN char_u	langmap_mapchar[256];	\/* mapping for language keys *\/$/
langmap_set	option.c	/^langmap_set()$/
last_insert	edit.c	/^static char_u	*last_insert = NULL;$/
last_insert_skip	edit.c	/^static int		last_insert_skip;$/
last_magic	search.c	/^static int		last_magic = TRUE;$/
last_no_scs	search.c	/^static int		last_no_scs = FALSE;$/
last_pattern	search.c	/^static char_u	*last_pattern = NULL;$/
last_recorded_len	getchar.c	/^static int		last_recorded_len = 0;	\/* number of last recorded chars *\/$/
last_status	window.c	/^last_status()$/
lasticon	buffer.c	/^static char_u *lasticon = NULL;$/
lasttitle	buffer.c	/^static char_u *lasttitle = NULL;$/
lastwin	globals.h	/^EXTERN WIN		*lastwin;		\/* last window *\/$/
lbr_chartabsize	charset.c	/^lbr_chartabsize(s, col)$/
line1	cmdline.c	/^static linenr_t 	line1, line2;$/
line2	cmdline.c	/^static linenr_t 	line1, line2;$/
line_breakcheck	misccmds.c	/^line_breakcheck()$/
lineclear	screen.c	/^lineclear(p)$/
lineempty	macros.h	32
linenr_t	structs.h	/^typedef long			linenr_t;$/
linenr_t	vim.h	/^typedef long		linenr_t;		\/* line number type *\/$/
lines_left	message.c	/^static int	lines_left = -1;			\/* lines left for listing *\/$/
linetabsize	charset.c	/^linetabsize(s)$/
linewhite	search.c	/^linewhite(lnum)$/
listdigraphs	digraph.c	/^listdigraphs()$/
longVersion	version.c	/^char		   *longVersion = "VIM - Vi IMproved 4.0 (1996 May 29)";$/
longVersion	version.c	/^char		   *longVersion = "VIM - Vi IMproved 4.0 (1996 May 29, compiled " __DATE__ " " __TIME__ ")";$/
long_to_char	memline.c	/^long_to_char(n, s)$/
long_u	vim.h	/^typedef unsigned long	long_u;$/
lowest_marked	memline.c	/^static linenr_t	lowest_marked = 0;$/
lt	macros.h	21
ltoreq	macros.h	24
m_block	structs.h	/^struct m_block$/
m_info	structs.h	/^struct m_info$/
main	main.c	/^main(argc, argv)$/
make_cmd_chars	cmdline.c	/^static char *(make_cmd_chars[6]) =$/
make_cyclic	edit.c	/^make_cyclic()$/
make_windows	window.c	/^make_windows(count)$/
makemap	getchar.c	/^makemap(fd)$/
makeset	option.c	/^makeset(fd)$/
makeswapname	memline.c	/^makeswapname(buf, dir_name)$/
maketitle	buffer.c	/^maketitle()$/
map_clear	getchar.c	/^map_clear(modec, force, abbr)$/
map_free	getchar.c	/^map_free(mprev)$/
mapblock	getchar.c	/^struct mapblock$/
maplist	getchar.c	/^static struct mapblock maplist = {NULL, NULL, 0, NULL, 0, 0};$/
mark_adjust	mark.c	/^mark_adjust(line1, line2, amount, amount_after)$/
may_core_dump	unix.c	/^may_core_dump()$/
mch_avail_mem	unix.c	/^mch_avail_mem(special)$/
mch_breakcheck	unix.c	/^mch_breakcheck()$/
mch_can_restore_icon	unix.c	/^mch_can_restore_icon()$/
mch_can_restore_title	unix.c	/^mch_can_restore_title()$/
mch_char_avail	unix.c	/^mch_char_avail()$/
mch_check_input	unix.c	/^mch_check_input()$/
mch_check_win	unix.c	/^mch_check_win(argc, argv)$/
mch_delay	unix.c	/^mch_delay(msec, ignoreinput)$/
mch_dirname	unix.c	/^mch_dirname(buf, len)$/
mch_get_host_name	unix.c	/^mch_get_host_name(s, len)$/
mch_get_pid	unix.c	/^mch_get_pid()$/
mch_get_user_name	unix.c	/^mch_get_user_name(s, len)$/
mch_get_winsize	unix.c	/^mch_get_winsize()$/
mch_has_wildcard	unix.c	/^mch_has_wildcard(p)$/
mch_inchar	unix.c	/^mch_inchar(buf, maxlen, wtime)$/
mch_isdir	unix.c	/^mch_isdir(name)$/
mch_resize	unix.c	/^mch_resize()$/
mch_restore_title	unix.c	/^mch_restore_title(which)$/
mch_screenmode	unix.c	/^mch_screenmode(arg)$/
mch_set_winsize	unix.c	/^mch_set_winsize()$/
mch_setmouse	unix.c	/^mch_setmouse(on)$/
mch_settitle	unix.c	/^mch_settitle(title, icon)$/
mch_settmode	unix.c	/^mch_settmode(raw)$/
mch_suspend	unix.c	/^mch_suspend()$/
mch_windexit	unix.c	/^mch_windexit(r)$/
mch_windinit	unix.c	/^mch_windinit()$/
mch_write	unix.c	/^mch_write(s, len)$/
memfile	structs.h	/^struct memfile$/
memline	structs.h	/^struct memline$/
menuBar	gui_motif.c	/^static Widget menuBar;$/
mf_alloc_bhdr	memfile.c	/^mf_alloc_bhdr(mfp, page_count)$/
mf_close	memfile.c	/^mf_close(mfp, del_file)$/
mf_do_open	memfile.c	/^mf_do_open(mfp, fname, trunc_file)$/
mf_find_hash	memfile.c	/^mf_find_hash(mfp, nr)$/
mf_free	memfile.c	/^mf_free(mfp, hp)$/
mf_free_bhdr	memfile.c	/^mf_free_bhdr(hp)$/
mf_fullname	memfile.c	/^mf_fullname(mfp)$/
mf_get	memfile.c	/^mf_get(mfp, nr, page_count)$/
mf_ins_free	memfile.c	/^mf_ins_free(mfp, hp)$/
mf_ins_hash	memfile.c	/^mf_ins_hash(mfp, hp)$/
mf_ins_used	memfile.c	/^mf_ins_used(mfp, hp)$/
mf_need_trans	memfile.c	/^mf_need_trans(mfp)$/
mf_new	memfile.c	/^mf_new(mfp, negative, page_count)$/
mf_open	memfile.c	/^mf_open(fname, trunc_file)$/
mf_open_file	memfile.c	/^mf_open_file(mfp, fname)$/
mf_put	memfile.c	/^mf_put(mfp, hp, dirty, infile)$/
mf_read	memfile.c	/^mf_read(mfp, hp)$/
mf_release	memfile.c	/^mf_release(mfp, page_count)$/
mf_release_all	memfile.c	/^mf_release_all()$/
mf_rem_free	memfile.c	/^mf_rem_free(mfp)$/
mf_rem_hash	memfile.c	/^mf_rem_hash(mfp, hp)$/
mf_rem_used	memfile.c	/^mf_rem_used(mfp, hp)$/
mf_set_xfname	memfile.c	/^mf_set_xfname(mfp)$/
mf_statistics	memfile.c	/^mf_statistics()$/
mf_sync	memfile.c	/^mf_sync(mfp, all, check_char, do_fsync)$/
mf_trans_add	memfile.c	/^mf_trans_add(mfp, hp)$/
mf_trans_del	memfile.c	/^mf_trans_del(mfp, old_nr)$/
mf_write	memfile.c	/^mf_write(mfp, hp)$/
min_rows	window.c	/^min_rows()$/
mktemp	cmdcmds.c	19
ml_add_stack	memline.c	/^ml_add_stack(buf)$/
ml_append	memline.c	/^ml_append(lnum, line, len, newfile)$/
ml_append_int	memline.c	/^ml_append_int(buf, lnum, line, len, newfile)$/
ml_clearmarked	memline.c	/^ml_clearmarked()$/
ml_close	memline.c	/^ml_close(buf, del_file)$/
ml_close_all	memline.c	/^ml_close_all(del_file)$/
ml_close_notmod	memline.c	/^ml_close_notmod()$/
ml_delete	memline.c	/^ml_delete(lnum, message)$/
ml_delete_int	memline.c	/^ml_delete_int(buf, lnum, message)$/
ml_find_line	memline.c	/^ml_find_line(buf, lnum, action)$/
ml_firstmarked	memline.c	/^ml_firstmarked()$/
ml_flush_line	memline.c	/^ml_flush_line(buf)$/
ml_get	memline.c	/^ml_get(lnum)$/
ml_get_buf	memline.c	/^ml_get_buf(buf, lnum, will_change)$/
ml_get_curline	memline.c	/^ml_get_curline()$/
ml_get_cursor	memline.c	/^ml_get_cursor()$/
ml_get_pos	memline.c	/^ml_get_pos(pos)$/
ml_has_mark	memline.c	/^ml_has_mark(lnum)$/
ml_line_alloced	memline.c	/^ml_line_alloced()$/
ml_lineadd	memline.c	/^ml_lineadd(buf, count)$/
ml_new_data	memline.c	/^ml_new_data(mfp, negative, page_count)$/
ml_new_ptr	memline.c	/^ml_new_ptr(mfp)$/
ml_open	memline.c	/^ml_open()$/
ml_open_file	memline.c	/^ml_open_file(buf)$/
ml_open_files	memline.c	/^ml_open_files()$/
ml_preserve	memline.c	/^ml_preserve(buf, message)$/
ml_recover	memline.c	/^ml_recover()$/
ml_replace	memline.c	/^ml_replace(lnum, line, copy)$/
ml_setmarked	memline.c	/^ml_setmarked(lnum)$/
ml_setname	memline.c	/^ml_setname()$/
ml_sync_all	memline.c	/^ml_sync_all(check_file, check_char)$/
ml_timestamp	memline.c	/^ml_timestamp(buf)$/
mod_mask_table	tables.c	/^} mod_mask_table[] =$/
modname	fileio.c	/^modname(fname, ext)$/
moreenv	pty.c	/^moreenv()$/
mouse_col	globals.h	/^EXTERN int		mouse_col;$/
mouse_has	term.c	/^mouse_has(c)$/
mouse_row	globals.h	/^EXTERN int		mouse_row;$/
mouse_table	tables.c	/^} mouse_table[] =$/
movemark	mark.c	/^movemark(count)$/
mr_pattern	search.c	/^static char_u	*mr_pattern = NULL;		\/* pattern used by myregcomp() *\/$/
msg	message.c	/^msg(s)$/
msg_add_fname	fileio.c	/^msg_add_fname(buf, fname)$/
msg_add_lines	fileio.c	/^msg_add_lines(insert_space, lnum, nchars)$/
msg_add_textmode	fileio.c	/^msg_add_textmode(textmode)$/
msg_buf	globals.h	/^EXTERN char_u	msg_buf[MSG_BUF_LEN];	\/* small buffer for messages *\/$/
msg_check	message.c	/^msg_check()$/
msg_check_screen	message.c	/^msg_check_screen()$/
msg_clr_eos	message.c	/^msg_clr_eos()$/
msg_col	globals.h	/^EXTERN int		msg_col;$/
msg_end	message.c	/^msg_end()$/
msg_home_replace	message.c	/^msg_home_replace(fname)$/
msg_moremsg	message.c	/^msg_moremsg(full)$/
msg_outchar	message.c	/^msg_outchar(c)$/
msg_outnum	message.c	/^msg_outnum(n)$/
msg_outstr	message.c	/^msg_outstr(s)$/
msg_outtrans	message.c	/^msg_outtrans(str)$/
msg_outtrans_len	message.c	/^msg_outtrans_len(str, len)$/
msg_outtrans_special	message.c	/^msg_outtrans_special(str, all)$/
msg_pos	message.c	/^msg_pos(row, col)$/
msg_prt_line	message.c	/^msg_prt_line(s)$/
msg_row	globals.h	/^EXTERN int		msg_row;$/
msg_screen_outchar	message.c	/^msg_screen_outchar(c)$/
msg_scrolled	globals.h	/^EXTERN int		msg_scrolled; $/
msg_start	message.c	/^msg_start()$/
msg_trunc	message.c	/^msg_trunc(s)$/
msgmore	misccmds.c	/^msgmore(n)$/
myregcomp	search.c	/^myregcomp(pat, sub_cmd, which_pat, options)$/
name_to_mod_mask	tables.c	/^name_to_mod_mask(c)$/
namedfm	mark.c	/^static struct filemark namedfm[NMARKS + EXTRA_MARKS];	\/* marks with file nr *\/$/
namedfm_names	mark.c	/^static char_u *namedfm_names[NMARKS + EXTRA_MARKS];		\/* name for namedfm[] *\/$/
need_gather	term.c	/^static int		need_gather = FALSE;			\/* need to fill termleader[] *\/$/
new_insert_skip	edit.c	/^static int		new_insert_skip;$/
newenv	pty.c	/^newenv()$/
nextchr	regexp.c	/^static int		nextchr;	\/* used for ungetchr() *\/$/
nextwild	cmdline.c	/^nextwild(type)$/
no_abbr_cnt	getchar.c	/^static int		no_abbr_cnt = 0;	\/* nr of chars without abbrev. in typebuf *\/$/
no_viminfo	cmdcmds.c	/^no_viminfo()$/
noremapbuf	getchar.c	/^static char_u	*noremapbuf = NULL;       \/* flags for typeahead characters *\/$/
noremapbuf_init	getchar.c	/^static char_u	noremapbuf_init[TYPELEN_INIT];		\/* initial noremapbuf *\/$/
normal	normal.c	/^normal()$/
nr_trans	structs.h	/^struct nr_trans$/
old_char	getchar.c	/^static int old_char = -1;		\/* ungotten character *\/$/
old_highlight	screen.c	/^static char_u	*old_highlight = NULL;$/
old_highlight_attr	screen.c	/^static int		old_highlight_attr = 0;$/
old_redobuff	getchar.c	/^static struct buffheader old_redobuff = {{NULL, {NUL}}, NULL, 0, 0};$/
old_showcmd_buf	normal.c	/^static char_u	old_showcmd_buf[SHOWCMD_COLS + 1];	\/* For push_showcmd() *\/$/
old_sub	csearch.c	/^	static char_u   *old_sub = NULL;$/
old_unhighlight	screen.c	/^static char_u	*old_unhighlight = NULL;$/
oldicon	unix.c	/^static char_u	*oldicon = NULL;$/
oldtitle	unix.c	/^static char_u	*oldtitle = NULL;$/
one_adjust	mark.c	507
one_adjust_nodel	mark.c	522
oneleft	edit.c	/^oneleft()$/
onepage	edit.c	/^onepage(dir, count)$/
oneright	edit.c	/^oneright()$/
only_one_window	window.c	/^only_one_window()$/
open_buffer	buffer.c	/^open_buffer()$/
openscript	getchar.c	/^openscript(name)$/
opnum	normal.c	/^static linenr_t	opnum = 0;$/
option	option.c	/^struct option$/
option_changed	option.c	/^option_changed(p)$/
option_expand	option.c	/^option_expand(opt_idx)$/
option_value2string	option.c	/^option_value2string(op)$/
options	option.c	/^static struct option options[] =$/
original_text	edit.c	/^static char_u	*original_text = NULL;$/
ospeed	term.c	/^short ospeed;$/
otherfile	buffer.c	/^otherfile(fname)$/
outbuf	term.c	/^static char_u			outbuf[BSIZE];$/
outchar	term.c	/^outchar(c)$/
outchar_nf	term.c	/^outchar_nf(c)$/
outnum	term.c	/^outnum(n)$/
outstr	term.c	/^outstr(s)$/
outstrn	term.c	/^outstrn(s)$/
overstrike	cmdline.c	/^static int		overstrike = FALSE;	\/* typing mode *\/$/
p_aleph	option.h	/^EXTERN int		p_aleph;	\/* Hebrew 'Aleph' encoding *\/$/
p_aw	option.h	/^EXTERN int		p_aw;		\/* auto-write *\/$/
p_bdir	option.h	/^EXTERN char_u  *p_bdir;		\/* list of directory names for backup files *\/$/
p_bex	option.h	/^EXTERN char_u  *p_bex;		\/* extension for backup file *\/$/
p_biosk	option.h	/^EXTERN int		p_biosk;	\/* Use bioskey() instead of kbhit() *\/$/
p_bk	option.h	/^EXTERN int		p_bk;		\/* make backups when writing out files *\/$/
p_breakat	option.h	/^EXTERN char_u  *p_breakat;	\/* characters that can cause a line break *\/$/
p_bs	option.h	/^EXTERN long		p_bs;		\/* backspace over newlines in insert mode *\/$/
p_ch	option.h	/^EXTERN long		p_ch;		\/* command line height *\/$/
p_compatible_set	option.c	/^p_compatible_set()$/
p_cp	option.h	/^EXTERN int		p_cp;		\/* vi-compatible *\/$/
p_cpo	option.h	/^EXTERN char_u  *p_cpo;		\/* vi-compatible option flags *\/$/
p_def	option.h	/^EXTERN char_u  *p_def;		\/* Pattern for recognising definitions *\/$/
p_dg	option.h	/^EXTERN int		p_dg;		\/* enable digraphs *\/$/
p_dict	option.h	/^EXTERN char_u  *p_dict;		\/* Dictionaries for ^P\/^N *\/$/
p_dir	option.h	/^EXTERN char_u  	*p_dir;		\/* list of directories for swap file *\/$/
p_ea	option.h	/^EXTERN int		p_ea;		\/* make windows equal height *\/$/
p_eb	option.h	/^EXTERN int		p_eb;		\/* ring bell for errors *\/$/
p_ed	option.h	/^EXTERN int		p_ed;		\/* :s is ed compatible *\/$/
p_ef	option.h	/^EXTERN char_u  *p_ef;		\/* name of errorfile *\/$/
p_efm	option.h	/^EXTERN char_u  *p_efm;		\/* error format *\/$/
p_ek	option.h	/^EXTERN int		p_ek;		\/* function keys with ESC in insert mode *\/$/
p_ep	option.h	/^EXTERN char_u  	*p_ep;		\/* program name for '=' command *\/$/
p_exrc	option.h	/^EXTERN int		p_exrc;		\/* read .exrc in current dir *\/$/
p_fp	option.h	/^EXTERN char_u  *p_fp;		\/* name of format program *\/$/
p_gd	option.h	/^EXTERN int		p_gd;		\/* \/g is default for :s *\/$/
p_guifont	option.h	/^EXTERN char_u  *p_guifont;		\/* GUI font list *\/$/
p_guioptions	option.h	/^EXTERN char_u  *p_guioptions;	\/* Which GUI components? *\/$/
p_guipty	option.h	/^EXTERN int		p_guipty;		\/* use pseudo pty for external commands *\/$/
p_hf	option.h	/^EXTERN char_u  *p_hf;		\/* name of help file *\/$/
p_hh	option.h	/^EXTERN long 	p_hh;		\/* help window height *\/$/
p_hi	option.h	/^EXTERN long 	p_hi;		\/* command line history size *\/$/
p_hid	option.h	/^EXTERN int		p_hid;		\/* buffers can be hidden *\/$/
p_hkmap	option.h	/^EXTERN int		p_hkmap;	\/* Hebrew keyboard map *\/$/
p_hl	option.h	/^EXTERN char_u  *p_hl;		\/* which highlight mode to use *\/$/
p_ic	option.h	/^EXTERN int		p_ic;		\/* ignore case in searches *\/$/
p_icon	option.h	/^EXTERN int		p_icon;		\/* put file name in icon if possible *\/$/
p_im	option.h	/^EXTERN int		p_im;		\/* start editing in input mode *\/$/
p_inc	option.h	/^EXTERN char_u  *p_inc;		\/* Pattern for including other files *\/$/
p_is	option.h	/^EXTERN int		p_is;		\/* incremental search *\/$/
p_isf	option.h	/^EXTERN char_u  *p_isf;		\/* characters in a file name *\/$/
p_isi	option.h	/^EXTERN char_u  *p_isi;		\/* characters in an identifier *\/$/
p_isp	option.h	/^EXTERN char_u  *p_isp;		\/* characters that are printable *\/$/
p_js	option.h	/^EXTERN int		p_js;		\/* use two spaces after '.' with Join *\/$/
p_kp	option.h	/^EXTERN char_u  *p_kp;		\/* keyword program *\/$/
p_langmap	option.h	/^EXTERN char_u  *p_langmap;	\/* mapping for some language *\/$/
p_ls	option.h	/^EXTERN long		p_ls;		\/* last window has status line *\/$/
p_magic	option.h	/^EXTERN int		p_magic;	\/* use some characters for reg exp *\/$/
p_mls	option.h	/^EXTERN long 	p_mls;		\/* number of mode lines *\/$/
p_mm	option.h	/^EXTERN long 	p_mm;		\/* maximal amount of memory for buffer *\/$/
p_mmd	option.h	/^EXTERN long 	p_mmd;		\/* maximal map depth *\/$/
p_mmt	option.h	/^EXTERN long 	p_mmt;		\/* maximal amount of memory for Vim *\/$/
p_more	option.h	/^EXTERN int		p_more;		\/* wait when screen full when listing *\/$/
p_mouse	option.h	/^EXTERN char_u  *p_mouse;	\/* enable mouse clicks (for xterm) *\/$/
p_mouset	option.h	/^EXTERN long		p_mouset;  	\/* mouse double click time *\/$/
p_mp	option.h	/^EXTERN char_u  *p_mp;		\/* program for :make command *\/$/
p_para	option.h	/^EXTERN char_u  *p_para;		\/* paragraphs *\/$/
p_paste	option.h	/^EXTERN int		p_paste;	\/* paste mode *\/$/
p_path	option.h	/^EXTERN char_u  *p_path;		\/* path for "]f" and "^Wf" *\/$/
p_pm	option.h	/^EXTERN char_u  *p_pm;  		\/* patchmode file suffix *\/$/
p_remap	option.h	/^EXTERN int		p_remap;	\/* remap *\/$/
p_report	option.h	/^EXTERN long		p_report;	\/* minimum number of lines for report *\/$/
p_ri	option.h	/^EXTERN int		p_ri;		\/* reverse direction of insert *\/$/
p_rs	option.h	/^EXTERN int		p_rs;		\/* restore startup screen upon exit *\/$/
p_ru	option.h	/^EXTERN int		p_ru;		\/* show column\/line number *\/$/
p_sb	option.h	/^EXTERN int		p_sb;		\/* split window backwards *\/$/
p_sbr	option.h	/^EXTERN char_u  *p_sbr;		\/* string for break of line *\/$/
p_sc	option.h	/^EXTERN int		p_sc;		\/* show command in status line *\/$/
p_scs	option.h	/^EXTERN int		p_scs;		\/* 'smartcase' *\/$/
p_sections	option.h	/^EXTERN char_u  *p_sections;	\/* sections *\/$/
p_secure	option.h	/^EXTERN int		p_secure;	\/* do .exrc and .vimrc in secure mode *\/$/
p_sh	option.h	/^EXTERN char_u  *p_sh;		\/* name of shell to use *\/$/
p_shm	option.h	/^EXTERN char_u  *p_shm;		\/* When to use short message *\/$/
p_sj	option.h	/^EXTERN long		p_sj;		\/* scroll jump size *\/$/
p_sm	option.h	/^EXTERN int		p_sm;		\/* showmatch *\/$/
p_smd	option.h	/^EXTERN int		p_smd;		\/* show mode *\/$/
p_so	option.h	/^EXTERN long		p_so;		\/* scroll offset *\/$/
p_sol	option.h	/^EXTERN int		p_sol;		\/* Move cursor to start-of-line? *\/$/
p_sp	option.h	/^EXTERN char_u  *p_sp;		\/* string for output of make *\/$/
p_sr	option.h	/^EXTERN int		p_sr;		\/* shift round off (for < and >) *\/$/
p_srr	option.h	/^EXTERN char_u  *p_srr;		\/* string for output of filter *\/$/
p_ss	option.h	/^EXTERN long		p_ss;		\/* sideways scrolling offset *\/$/
p_st	option.h	/^EXTERN long		p_st;		\/* type of shell *\/$/
p_sta	option.h	/^EXTERN int		p_sta;		\/* smart-tab for expand-tab *\/$/
p_su	option.h	/^EXTERN char_u  *p_su;		\/* suffixes for wildcard expansion *\/$/
p_sws	option.h	/^EXTERN char_u  *p_sws;		\/* swap file syncing *\/$/
p_ta	option.h	/^EXTERN int		p_ta;		\/* auto textmode detection *\/$/
p_tags	option.h	/^EXTERN char_u  *p_tags;		\/* tags search path *\/$/
p_tbi	option.h	/^EXTERN int		p_tbi;		\/* 'ttybuiltin' use builtin termcap first *\/$/
p_terse	option.h	/^EXTERN int		p_terse;	\/* terse messages *\/$/
p_tf	option.h	/^EXTERN int		p_tf;		\/* terminal fast I\/O *\/$/
p_timeout	option.h	/^EXTERN int		p_timeout;	\/* mappings entered within one second *\/$/
p_title	option.h	/^EXTERN int		p_title;	\/* set window title if possible *\/$/
p_tl	option.h	/^EXTERN long 	p_tl;		\/* used tag length *\/$/
p_tm	option.h	/^EXTERN long 	p_tm;		\/* timeoutlen (msec) *\/$/
p_to	option.h	/^EXTERN int		p_to;		\/* tilde is an operator *\/$/
p_tr	option.h	/^EXTERN int		p_tr;		\/* tag file name is relative *\/$/
p_ttimeout	option.h	/^EXTERN int		p_ttimeout;	\/* key codes entered within one second *\/$/
p_ttm	option.h	/^EXTERN long 	p_ttm;		\/* key code timeoutlen (msec) *\/$/
p_ttyscroll	option.h	/^EXTERN long		p_ttyscroll; \/* maximum number of screen lines for a scroll *\/$/
p_uc	option.h	/^EXTERN long 	p_uc;		\/* update count for swap file *\/$/
p_ul	option.h	/^EXTERN long 	p_ul;		\/* number of Undo Levels *\/$/
p_ut	option.h	/^EXTERN long 	p_ut;		\/* update time for swap file *\/$/
p_vb	option.h	/^EXTERN int		p_vb;		\/* visual bell only (no beep) *\/$/
p_viminfo	option.h	/^EXTERN char_u  *p_viminfo;	\/* Parameters for using ~\/.viminfo file *\/$/
p_wa	option.h	/^EXTERN int		p_wa;		\/* write any *\/$/
p_warn	option.h	/^EXTERN int		p_warn;		\/* warn for changes at shell command *\/$/
p_wb	option.h	/^EXTERN int		p_wb;		\/* write backup files *\/$/
p_wc	option.h	/^EXTERN long		p_wc;		\/* character for wildcard exapansion *\/$/
p_wd	option.h	/^EXTERN long		p_wd;		\/* write delay for screen output (for testing) *\/$/
p_wh	option.h	/^EXTERN long		p_wh;		\/* desired window height *\/$/
p_wiv	option.h	/^EXTERN int		p_wiv;		\/* inversion of text is weird *\/$/
p_ws	option.h	/^EXTERN int		p_ws;		\/* wrap scan *\/$/
p_ww	option.h	/^EXTERN char_u  *p_ww;		\/* which keys wrap to next\/prev line *\/$/
parse_builtin_tcap	term.c	/^parse_builtin_tcap(term)$/
parse_tag_line	tag.c	/^parse_tag_line(lbuf,$/
paste_option_changed	option.c	/^paste_option_changed()$/
pchar	macros.h	16
pchar_cursor	misccmds.c	/^pchar_cursor(c)$/
peekchr	regexp.c	/^peekchr()$/
plines	misccmds.c	/^plines(p)$/
plines_m	misccmds.c	/^plines_m(first, last)$/
plines_m_win	misccmds.c	/^plines_m_win(wp, first, last)$/
plines_win	misccmds.c	/^plines_win(wp, p)$/
plural	misccmds.c	/^plural(n)$/
pointer_block	memline.c	/^struct pointer_block$/
pointer_entry	memline.c	/^struct pointer_entry$/
pollfd	osdef.h	/^struct pollfd;			\/* for poll __ARGS *\/$/
pop_showcmd	normal.c	/^pop_showcmd()$/
prechar	normal.c	/^static int		prechar = NUL;	\/* prepended command char *\/$/
prep_redo	normal.c	/^prep_redo(num, pre_char, cmd, c, nchar)$/
prepare_viminfo_history	cmdline.c	/^prepare_viminfo_history(len)$/
preserve_exit	misccmds.c	/^preserve_exit()$/
prevchr	regexp.c	/^static int		prevchr;$/
prevwin	window.c	/^static WIN		*prevwin = NULL;		\/* previous window *\/$/
print_line	cmdcmds.c	/^print_line(lnum, use_number)$/
printdigraph	digraph.c	/^printdigraph(p)$/
push_showcmd	normal.c	/^push_showcmd()$/
put_on_cmdline	cmdline.c	/^put_on_cmdline(str, len, redraw)$/
putcmdline	cmdline.c	/^putcmdline(c)$/
putdigraph	digraph.c	/^putdigraph(str)$/
putenv	pty.c	/^putenv(string)$/
putescstr	getchar.c	/^putescstr(fd, str, set)$/
qf_count	quickfix.c	/^static int	qf_count = 0;		\/* number of errors (0 means no error list) *\/$/
qf_free	quickfix.c	/^qf_free()$/
qf_index	quickfix.c	/^static int	qf_index;			\/* current index in the error list *\/$/
qf_init	quickfix.c	/^qf_init()$/
qf_jump	quickfix.c	/^qf_jump(dir, errornr)$/
qf_line	quickfix.c	/^struct qf_line$/
qf_list	quickfix.c	/^qf_list(all)$/
qf_mark_adjust	quickfix.c	/^qf_mark_adjust(line1, line2, amount, amount_after)$/
qf_nonevalid	quickfix.c	/^static int	qf_nonevalid;		\/* set to TRUE if not a single valid entry found *\/$/
qf_ptr	quickfix.c	/^static struct qf_line *qf_ptr;			\/* pointer to the current error *\/$/
qf_start	quickfix.c	/^static struct qf_line *qf_start;		\/* pointer to the first error *\/$/
qf_types	quickfix.c	/^qf_types(c, nr)$/
quitmore	cmdline.c	/^static int			quitmore = 0;$/
read_redo	getchar.c	/^read_redo(init, old_redo)$/
read_stuff	getchar.c	/^read_stuff(advance)$/
read_viminfo	cmdcmds.c	/^read_viminfo(file, want_info, want_marks, force)$/
read_viminfo_filemark	mark.c	/^read_viminfo_filemark(line, fp, force)$/
read_viminfo_history	cmdline.c	/^read_viminfo_history(line, fp)$/
read_viminfo_register	ops.c	/^read_viminfo_register(line, fp, force)$/
read_viminfo_search_pattern	search.c	/^read_viminfo_search_pattern(line, fp, force)$/
read_viminfo_sub_string	csearch.c	/^read_viminfo_sub_string(line, fp, force)$/
read_viminfo_up_to_marks	cmdcmds.c	/^read_viminfo_up_to_marks(line, fp, force)$/
readfile	fileio.c	/^readfile(fname, sfname, from, newfile, lines_to_skip, lines_to_read, filtering)$/
realloc_cmdbuff	cmdline.c	/^realloc_cmdbuff(len)$/
recordbuff	getchar.c	/^static struct buffheader recordbuff = {{NULL, {NUL}}, NULL, 0, 0};$/
recover_names	memline.c	/^recover_names(fname, list, nr)$/
recover_old_highlight	screen.c	/^recover_old_highlight()$/
redobuff	getchar.c	/^static struct buffheader redobuff = {{NULL, {NUL}}, NULL, 0, 0};$/
redraw_later	screen.c	/^redraw_later(type)$/
redrawcmd	cmdline.c	/^redrawcmd()$/
redrawcmdline	cmdline.c	/^redrawcmdline()$/
reg	regexp.c	/^reg(paren, flagp)$/
reg_magic	globals.h	/^EXTERN int		reg_magic;					\/* p_magic passed to ergexec() *\/$/
reg_prev_re	regexp.c	/^char_u		   *reg_prev_re;$/
reg_prev_sub	regexp.c	/^char_u		   *reg_prev_sub;$/
regatom	regexp.c	/^regatom(flagp)$/
regbol	regexp.c	/^static char_u    *regbol; 		\/* Beginning of input, for ^ check. *\/$/
regbranch	regexp.c	/^regbranch(flagp)$/
regc	regexp.c	/^regc(b)$/
regcode	regexp.c	/^static char_u   *regcode;		\/* Code-emit pointer; &regdummy = don't. *\/$/
regdummy	regexp.c	/^static char_u 	regdummy;$/
regdump	regexp.c	/^regdump(r)$/
regendp	regexp.c	/^static char_u   **regendp;		\/* Ditto for endp. *\/$/
reginput	regexp.c	/^static char_u    *reginput;		\/* String-input pointer. *\/$/
reginsert	regexp.c	/^reginsert(op, opnd)$/
regmatch	regexp.c	/^regmatch(prog)$/
regname	cmdline.c	/^static int			regname;$/
regnarrate	regexp.c	/^int 			regnarrate = 1;$/
regnext	regexp.c	/^regnext(p)$/
regnode	regexp.c	/^regnode(op)$/
regnpar	regexp.c	/^static int		regnpar;		\/* () count. *\/$/
regoptail	regexp.c	/^regoptail(p, val)$/
regparse	regexp.c	/^static char_u    *regparse;	\/* Input-scan pointer. *\/$/
regpiece	regexp.c	/^regpiece(flagp)$/
regprop	regexp.c	/^regprop(op)$/
regrepeat	regexp.c	/^regrepeat(p)$/
regsize	regexp.c	/^static long 	regsize;		\/* Code size. *\/$/
regstartp	regexp.c	/^static char_u   **regstartp;		\/* Pointer to startp array. *\/$/
regtail	regexp.c	/^regtail(p, val)$/
regtilde	regsub.c	/^regtilde(source, magic)$/
regtry	regexp.c	/^regtry(prog, string)$/
remember_highlight	screen.c	/^remember_highlight()$/
removable	mark.c	/^removable(name)$/
rename	unix.c	/^rename(src, dest)$/
replace_flush	edit.c	/^replace_flush()$/
replace_pop	edit.c	/^replace_pop()$/
replace_push	edit.c	/^replace_push(c)$/
replace_stack	edit.c	/^char_u	*replace_stack = NULL;$/
replace_stack_len	edit.c	/^long	replace_stack_len = 0;		\/* max. number of entries *\/$/
replace_stack_nr	edit.c	/^long	replace_stack_nr = 0;		\/* next entry in replace stack *\/$/
replace_termcodes	term.c	/^replace_termcodes(from, bufp, from_part)$/
resel_VIsual_col	normal.c	/^static colnr_t	resel_VIsual_col;			\/* number of cols or end column *\/$/
resel_VIsual_line_count	normal.c	/^static linenr_t	resel_VIsual_line_count;		\/* number of lines *\/$/
resel_VIsual_mode	normal.c	/^static int		resel_VIsual_mode = NUL;	\/* 'v', 'V', or Ctrl-V *\/$/
reset_VIsual	window.c	/^reset_VIsual()$/
reset_signals	unix.c	/^reset_signals()$/
resettitle	buffer.c	/^resettitle()$/
rightleft	screen.c	/^static int		rightleft = 0;	\/* set to 1 for right to left in screen_fill *\/$/
ru_col	globals.h	/^EXTERN int		ru_col;			\/* column for ruler *\/$/
same_leader	ops.c	/^same_leader(leader1_len, leader1_flags, leader2_len, leader2_flags)$/
sc_col	globals.h	/^EXTERN int		sc_col;			\/* column for shown command *\/$/
screen_char	screen.c	/^screen_char(p, row, col)$/
screen_cur_col	globals.h	/^EXTERN int	screen_cur_row, screen_cur_col;		\/* last known cursor position *\/$/
screen_cur_row	globals.h	/^EXTERN int	screen_cur_row, screen_cur_col;		\/* last known cursor position *\/$/
screen_del_lines	screen.c	/^screen_del_lines(off, row, line_count, end)$/
screen_fill	screen.c	/^screen_fill(start_row, end_row, start_col, end_col, c1, c2)$/
screen_ins_lines	screen.c	/^screen_ins_lines(off, row, line_count, end)$/
screen_msg	screen.c	/^screen_msg(text, row, col)$/
screen_new_rows	window.c	/^screen_new_rows()$/
screen_outchar	screen.c	/^screen_outchar(c, row, col)$/
screen_start	screen.c	/^screen_start()$/
screen_valid	screen.c	/^screen_valid(clear)$/
screenalloc	screen.c	/^screenalloc(clear)$/
screenclear	screen.c	/^screenclear()$/
screenclear2	screen.c	/^screenclear2()$/
screengo	edit.c	/^screengo(dir, dist)$/
scriptin	globals.h	/^EXTERN FILE 	*scriptin[NSCRIPT];			\/* streams to read script from *\/$/
scroll_cb	gui_motif.c	/^scroll_cb(w, client_data, call_data)$/
scroll_cursor_bot	screen.c	/^scroll_cursor_bot(min_scroll, set_topline)$/
scroll_cursor_halfway	screen.c	/^scroll_cursor_halfway(atend)$/
scroll_cursor_top	screen.c	/^scroll_cursor_top(min_scroll, always)$/
scroll_region_reset	term.c	/^scroll_region_reset()$/
scroll_region_set	term.c	/^scroll_region_set(wp, off)$/
scroll_start	term.c	/^scroll_start()$/
scrollbarBox	gui_motif.c	/^static Widget scrollbarBox[3];		\/* Left, right & bottom scrollbar boxes *\/$/
scrollbar_value	globals.h	/^EXTERN long_u	scrollbar_value;$/
scrolldown	screen.c	/^scrolldown(line_count)$/
scrolldown_clamp	screen.c	/^scrolldown_clamp()$/
scrollup	screen.c	/^scrollup(line_count)$/
scrollup_clamp	screen.c	/^scrollup_clamp()$/
search_for_exact_line	search.c	/^search_for_exact_line(pos, dir, pat)$/
search_magic	search.c	/^static int		search_magic = TRUE;$/
search_match_len	globals.h	/^EXTERN int		search_match_len;			\/* length of matched string *\/$/
search_no_scs	search.c	/^static int		search_no_scs = FALSE;$/
search_pattern	search.c	/^static char_u	*search_pattern = NULL;$/
searchc	search.c	/^searchc(c, dir, type, count)$/
searchcmdlen	globals.h	/^EXTERN int		searchcmdlen;				\/* length of previous search cmd *\/$/
searchit	search.c	/^searchit(pos, dir, str, count, options, which_pat)$/
select	unix.c	23
set_Changed	misccmds.c	/^set_Changed()$/
set_b0_fname	memline.c	/^set_b0_fname(b0p, buf)$/
set_context_in_autocmd	option.c	/^set_context_in_autocmd(arg, doautocmd)$/
set_context_in_set_cmd	option.c	/^set_context_in_set_cmd(arg)$/
set_expand_context	cmdline.c	/^set_expand_context(firstc, buff)$/
set_highlight	screen.c	/^set_highlight(context)$/
set_indent	misccmds.c	/^set_indent(size, del_first)$/
set_init_1	option.c	/^set_init_1()$/
set_init_2	option.c	/^set_init_2()$/
set_init_3	option.c	/^set_init_3()$/
set_last_cursor	mark.c	/^set_last_cursor(win)$/
set_last_insert	edit.c	/^set_last_insert(c)$/
set_one_cmd_context	cmdline.c	/^set_one_cmd_context(firstc, buff)$/
set_option_default	option.c	/^set_option_default(opt_idx, dofree)$/
set_options_bin	option.c	/^set_options_bin(oldval, newval)$/
set_redo_ins	getchar.c	/^set_redo_ins()$/
set_reg_ic	search.c	/^set_reg_ic(pat)$/
set_string_option	option.c	/^set_string_option(name, opt_idx, val, dofree)$/
set_term_defaults	option.c	/^set_term_defaults()$/
set_termname	term.c	/^set_termname(term)$/
set_winsize	term.c	/^set_winsize(width, height, mustset)$/
set_x11_icon	unix.c	/^set_x11_icon(icon)$/
set_x11_title	unix.c	/^set_x11_title(title)$/
setaltfname	buffer.c	/^setaltfname(fname, sfname, lnum)$/
setcursor	term.c	/^setcursor()$/
setfname	buffer.c	/^setfname(fname, sfname, message)$/
setmark	mark.c	/^setmark(c)$/
setmouse	term.c	/^setmouse()$/
setpcmark	mark.c	/^setpcmark()$/
setperm	unix.c	/^setperm(name, perm)$/
settmode	term.c	/^settmode(raw)$/
shift_line	ops.c	/^shift_line(left, round, amount)$/
shifted_keys_table	tables.c	/^static char_u shifted_keys_table[] =$/
short_u	structs.h	/^typedef unsigned short	short_u;$/
short_u	vim.h	/^typedef unsigned short	short_u;$/
shortmess	option.c	/^shortmess(x)$/
show_autocmd	option.c	/^show_autocmd(ap, event)$/
show_one_mark	mark.c	/^show_one_mark(c, arg, p, name)$/
show_one_termcode	term.c	/^show_one_termcode(name, code, printit)$/
show_pat_in_path	search.c	/^show_pat_in_path(line, type, did_show, action, fp, lnum, count)$/
show_shell_mess	unix.c	/^static int		show_shell_mess = TRUE;$/
show_termcodes	term.c	/^show_termcodes()$/
showcmd_buf	normal.c	/^static char_u	showcmd_buf[SHOWCMD_COLS + 1];$/
showmap	getchar.c	/^showmap(mp)$/
showmatch	search.c	/^showmatch()$/
showmatches	cmdline.c	/^showmatches(buff)$/
showmode	screen.c	/^showmode()$/
showoneopt	option.c	/^showoneopt(p)$/
showoptions	option.c	/^showoptions(all)$/
showruler	screen.c	/^showruler(always)$/
signal	unixunix.h	17
signal_info	unix.c	/^} signal_info[] =$/
skip_chars	search.c	/^skip_chars(cclass, dir)$/
skip_label	misccmds.c	/^skip_label(lnum, pp, ind_maxcomment)$/
skip_regexp	regexp.c	/^skip_regexp(p, dirc)$/
skip_string	misccmds.c	/^skip_string(p)$/
skip_to_option_part	misccmds.c	/^skip_to_option_part(p)$/
skipchr	regexp.c	/^skipchr()$/
skipdigits	misccmds.c	/^skipdigits(p)$/
skiptowhite	misccmds.c	/^skiptowhite(p)$/
skiptowhite_esc	misccmds.c	/^skiptowhite_esc(p)$/
skipwhite	misccmds.c	/^skipwhite(p)$/
slash_adjust	unix.c	/^slash_adjust(p)$/
smsg	message.c	/^smsg(s, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10)$/
special_keys	gui_x11.c	/^} special_keys[] =$/
startPS	search.c	/^startPS(lnum, para, both)$/
start_arrow	edit.c	/^start_arrow(end_insert_pos)$/
start_highlight	screen.c	/^start_highlight()$/
start_redo	getchar.c	/^start_redo(count, old_redo)$/
start_redo_ins	getchar.c	/^start_redo_ins()$/
start_stuff	getchar.c	/^start_stuff()$/
start_visual_highlight	normal.c	/^start_visual_highlight()$/
starttermcap	term.c	/^starttermcap()$/
statfs	osdef.h	/^struct statfs;			\/* for fstatfs __ARGS *\/$/
status_redraw_all	screen.c	/^status_redraw_all()$/
stdout_notty	main.c	/^static int stdout_notty = FALSE;			\/* is stdout not a terminal? *\/$/
stop_arrow	edit.c	/^stop_arrow()$/
stop_highlight	screen.c	/^stop_highlight()$/
stop_insert	edit.c	/^stop_insert(end_insert_pos)$/
stop_redo_ins	getchar.c	/^stop_redo_ins()$/
stoptermcap	term.c	/^stoptermcap()$/
strcspn	regexp.c	/^strcspn(s1, s2)$/
strerror	unix.c	/^strerror(err)$/
strnsave	alloc.c	/^strnsave(string, len)$/
strsave	alloc.c	/^strsave(string)$/
strsave_escaped	alloc.c	/^strsave_escaped(string, esc_chars)$/
strsize	charset.c	/^strsize(s)$/
stuffReadbuff	getchar.c	/^stuffReadbuff(s)$/
stuff_empty	getchar.c	/^stuff_empty()$/
stuff_inserted	edit.c	/^stuff_inserted(c, count, no_esc)$/
stuff_yank	ops.c	/^stuff_yank(bufname, p)$/
stuffbuff	getchar.c	/^static struct buffheader stuffbuff = {{NULL, {NUL}}, NULL, 0, 0};$/
stuffcharReadbuff	getchar.c	/^stuffcharReadbuff(c)$/
stuffnumReadbuff	getchar.c	/^stuffnumReadbuff(n)$/
stype	search.c	/^static int		stype;			\/* type of the word motion being performed *\/$/
sub_nlines	csearch.c	/^static linenr_t		sub_nlines;		\/* total number of lines changed *\/$/
sub_nsubs	csearch.c	/^static long			sub_nsubs;		\/* total number of substitutions *\/$/
subst_magic	search.c	/^static int		subst_magic = TRUE;$/
subst_no_scs	search.c	/^static int		subst_no_scs = FALSE;$/
subst_pattern	search.c	/^static char_u	*subst_pattern = NULL;$/
swapchar	ops.c	/^swapchar(pos)$/
swapfile_info	memline.c	/^swapfile_info(fname)$/
sys_gvimrc_fname	pathdef.c	/^char_u *sys_gvimrc_fname = (char_u *)"\/usr\/local\/share\/vim\/gvimrc";$/
sys_gvimrc_fname	pathdef.c	/^char_u *sys_gvimrc_fname = (char_u *)SYS_GVIMRC_FILE;$/
sys_vimrc_fname	pathdef.c	/^char_u *sys_vimrc_fname = (char_u *)"\/usr\/local\/share\/vim\/vimrc";$/
sys_vimrc_fname	pathdef.c	/^char_u *sys_vimrc_fname = (char_u *)SYS_VIMRC_FILE;$/
taggy	structs.h	/^struct taggy$/
tc_len	term.c	/^static int	tc_len = 0;		\/* current number of entries in termcodes[] *\/$/
tc_max_len	term.c	/^static int	tc_max_len = 0;	\/* number of entries that termcodes[] can hold *\/$/
term_strings	term.c	/^char_u *(term_strings[KS_LAST + 1]);$/
termcapinit	term.c	/^termcapinit(term)$/
termcode	term.c	/^struct termcode$/
termcodes	term.c	/^} *termcodes = NULL;$/
termleader	term.c	/^static char_u	termleader[256 + 1];			\/* for check_termcode() *\/$/
test_for_current	tag.c	/^test_for_current(is_etag, fname, fname_end, tag_fname)$/
test_for_static	tag.c	/^test_for_static(tagname, tagname_end, fname, fname_end)$/
textArea	gui_motif.c	/^static Widget textArea;$/
tgetent_error	term.c	/^tgetent_error(tbuf, term)$/
tgetstr	term.c	24
tgoto	term.c	/^tgoto(cm, x, y)$/
tltoa	term.c	/^tltoa(i)$/
top_bot_msg	search.c	/^static char_u *top_bot_msg = (char_u *)"search hit TOP, continuing at BOTTOM";$/
topmsg	tag.c	/^static char_u *topmsg = (char_u *)"at top of tag stack";$/
total_mem_used	memfile.c	/^static long total_mem_used = 0;			\/* total memory used for memfiles *\/$/
transchar	charset.c	/^transchar(c)$/
transchar_nonprint	charset.c	/^transchar_nonprint(buf, c)$/
trash_input_buf	unix.c	/^trash_input_buf()$/
trash_output_buf	term.c	/^trash_output_buf()$/
truncate_line	misccmds.c	/^truncate_line(fixpos)$/
ttest	term.c	/^ttest(pairs)$/
typebuf_init	getchar.c	/^static char_u	typebuf_init[TYPELEN_INIT];			\/* initial typebuf *\/$/
typebuf_typed	getchar.c	/^typebuf_typed()$/
typebuflen	globals.h	/^EXTERN int		typebuflen;				\/* size of typebuf *\/$/
typelen	globals.h	/^EXTERN int		typelen;				\/* number of valid chars in typebuf *\/$/
typemaplen	getchar.c	/^static int		typemaplen = 0;		\/* nr of mapped characters in typebuf *\/$/
typeoff	globals.h	/^EXTERN int		typeoff;				\/* current position in typebuf *\/$/
u_alloc_line	undo.c	/^u_alloc_line(size)$/
u_blockalloc	undo.c	/^u_blockalloc(size)$/
u_blockfree	undo.c	/^u_blockfree(buf)$/
u_clearall	undo.c	/^u_clearall(buf)$/
u_clearline	undo.c	/^u_clearline()$/
u_entry	structs.h	/^struct u_entry$/
u_free_line	undo.c	/^u_free_line(ptr)$/
u_freeentry	undo.c	/^u_freeentry(uep, n)$/
u_freelist	undo.c	/^u_freelist(uhp)$/
u_getbot	undo.c	/^u_getbot()$/
u_header	structs.h	/^struct u_header$/
u_inssub	undo.c	/^u_inssub(lnum)$/
u_newcount	undo.c	/^static long		u_newcount, u_oldcount;$/
u_oldcount	undo.c	/^static long		u_newcount, u_oldcount;$/
u_redo	undo.c	/^u_redo(count)$/
u_save	undo.c	/^u_save(top, bot)$/
u_save_cursor	undo.c	/^u_save_cursor()$/
u_save_line	undo.c	/^u_save_line(lnum)$/
u_savecommon	undo.c	/^u_savecommon(top, bot, newbot)$/
u_savedel	undo.c	/^u_savedel(lnum, nlines)$/
u_saveline	undo.c	/^u_saveline(lnum)$/
u_savesub	undo.c	/^u_savesub(lnum)$/
u_sync	undo.c	/^u_sync()$/
u_unchanged	undo.c	/^u_unchanged(buf)$/
u_undo	undo.c	/^u_undo(count)$/
u_undo_end	undo.c	/^u_undo_end()$/
u_undoline	undo.c	/^u_undoline()$/
u_undoredo	undo.c	/^u_undoredo()$/
undisplay_dollar	screen.c	/^undisplay_dollar()$/
ungetchr	regexp.c	/^ungetchr()$/
unregc	regexp.c	/^unregc()$/
unset_Changed	misccmds.c	/^unset_Changed(buf)$/
unshift_special_key	tables.c	/^unshift_special_key(p)$/
updateScreen	screen.c	/^updateScreen(type)$/
updateWindow	screen.c	/^updateWindow(wp)$/
update_curbuf	screen.c	/^update_curbuf(type)$/
updateline	screen.c	/^updateline()$/
updatescript	getchar.c	/^updatescript(c)$/
usage	main.c	/^usage(n, str)$/
version_msg	version.c	/^version_msg(s)$/
vgetc	getchar.c	/^vgetc()$/
vgetorpeek	getchar.c	/^vgetorpeek(advance)$/
vimForm	gui_motif.c	/^static Widget vimForm;$/
vimShell	gui_x11.c	/^Widget vimShell = (Widget)NULL;$/
vim_beep	misccmds.c	/^vim_beep()$/
vim_chdir	vim.h	520
vim_fexists	misccmds.c	/^vim_fexists(fname)$/
vim_fgets	fileio.c	/^vim_fgets(buf, size, fp)$/
vim_free	alloc.c	/^vim_free(x)$/
vim_getenv	vim.h	493
vim_isspace	alloc.c	/^vim_isspace(x)$/
vim_iswhite	vim.h	527
vim_memmove	alloc.c	/^vim_memmove(dst_arg, src_arg, len)$/
vim_memmove	unix.h	235
vim_memmove	unix.h	238
vim_memmove	unix.h	241
vim_memmove	vim.h	484
vim_memset	alloc.c	/^vim_memset(ptr, c, size)$/
vim_memset	vim.h	511
vim_regcomp	regexp.c	/^vim_regcomp(exp)$/
vim_regexec	regexp.c	/^vim_regexec(prog, string, at_bol)$/
vim_regsub	regsub.c	/^vim_regsub(prog, source, dest, copy, magic)$/
vim_remove	unix.h	59
vim_rename	fileio.c	/^vim_rename(from, to)$/
vim_resources	gui_x11.c	/^static XtResource vim_resources[] =$/
vim_strchr	alloc.c	/^vim_strchr(string, n)$/
vim_strncpy	cmdline.c	/^vim_strncpy(to, from, len)$/
vim_strnicmp	alloc.c	/^vim_strnicmp(s1, s2, len)$/
vim_strrchr	alloc.c	/^vim_strrchr(string, n)$/
viminfo_add_at_front	cmdline.c	/^static int		viminfo_add_at_front = FALSE;$/
viminfo_filename	cmdcmds.c	/^viminfo_filename(file)$/
viminfo_hisidx	cmdline.c	/^static int		viminfo_hisidx[2] = {0, 0};$/
viminfo_hislen	cmdline.c	/^static int		viminfo_hislen = 0;$/
viminfo_history	cmdline.c	/^static char_u **viminfo_history[2] = {NULL, NULL};$/
viminfo_readstring	cmdcmds.c	/^viminfo_readstring(p)$/
viminfo_writestring	cmdcmds.c	/^viminfo_writestring(fd, p)$/
vpeekc	getchar.c	/^vpeekc()$/
vungetc	getchar.c	/^vungetc(c)		\/* unget one character (can only be done once!) *\/$/
wait_return	message.c	/^wait_return(redraw)$/
want_start	search.c	/^static int		want_start;				\/* looking for start of line? *\/$/
where_paste_started	globals.h	/^EXTERN FPOS		where_paste_started;$/
win_alloc	window.c	/^win_alloc(after)$/
win_alloc_lsize	window.c	/^win_alloc_lsize(wp)$/
win_append	window.c	/^win_append(after, wp)$/
win_chartabsize	charset.c	/^win_chartabsize(wp, c, col)$/
win_comp_pos	window.c	/^win_comp_pos()$/
win_comp_scroll	window.c	/^win_comp_scroll(wp)$/
win_copy_options	option.c	/^win_copy_options(wp_from, wp_to)$/
win_count	window.c	/^win_count()$/
win_del_lines	screen.c	/^win_del_lines(wp, row, line_count, invalid, mayclear)$/
win_drag_status_line	window.c	/^win_drag_status_line(offset)$/
win_enter	window.c	/^win_enter(wp, undo_sync)$/
win_equal	window.c	/^win_equal(next_curwin, redraw)$/
win_exchange	window.c	/^win_exchange(Prenum)$/
win_free	window.c	/^win_free(wp)$/
win_free_lsize	window.c	/^win_free_lsize(wp)$/
win_init	window.c	/^win_init(wp)$/
win_ins_lines	screen.c	/^win_ins_lines(wp, row, line_count, invalid, mayclear)$/
win_lbr_chartabsize	charset.c	/^win_lbr_chartabsize(wp, s, col, head)$/
win_line	screen.c	/^win_line(wp, lnum, startrow, endrow)$/
win_new_height	window.c	/^win_new_height(wp, height)$/
win_redr_ruler	screen.c	/^win_redr_ruler(wp, always)$/
win_redr_status	screen.c	/^win_redr_status(wp)$/
win_remove	window.c	/^win_remove(wp)$/
win_rest_invalid	screen.c	/^win_rest_invalid(wp)$/
win_rotate	window.c	/^win_rotate(upwards, count)$/
win_setheight	window.c	/^win_setheight(height)$/
win_split	window.c	/^win_split(new_height, redraw)$/
win_update	screen.c	/^win_update(wp)$/
windgoto	term.c	/^windgoto(row, col)$/
window	structs.h	/^struct window$/
winlnum	structs.h	/^struct winlnum$/
write_buf	fileio.c	/^write_buf(fd, buf, len)$/
write_no_eol_lnum	fileio.c	/^static linenr_t	write_no_eol_lnum = 0; 	\/* non-zero lnum when last line of$/
write_viminfo	cmdcmds.c	/^write_viminfo(file, force)$/
write_viminfo_filemarks	mark.c	/^write_viminfo_filemarks(fp)$/
write_viminfo_history	cmdline.c	/^write_viminfo_history(fp)$/
write_viminfo_marks	mark.c	/^write_viminfo_marks(fp_out)$/
write_viminfo_registers	ops.c	/^write_viminfo_registers(fp)$/
write_viminfo_search_pattern	search.c	/^write_viminfo_search_pattern(fp)$/
write_viminfo_sub_string	csearch.c	/^write_viminfo_sub_string(fp)$/
x11_display	unix.c	/^Display		*x11_display = NULL;$/
x11_window	unix.c	/^Window		x11_window = 0;$/
x_error_check	unix.c	/^x_error_check(dpy, error_event)$/
x_error_handler	unix.c	/^x_error_handler(dpy, error_event)$/
y_buf	ops.c	/^} y_buf[NUM_REGISTERS];$/
y_current	ops.c	/^static struct	yankbuf *y_current;			\/* ptr to current yank buffer *\/$/
y_previous	ops.c	/^static struct	yankbuf *y_previous = NULL; \/* ptr to last written yank buffr *\/$/
yank_buffer_mline	ops.c	/^yank_buffer_mline()$/
yankappend	ops.c	/^static int		yankappend;					\/* TRUE when appending *\/$/
yankbuf	ops.c	/^static struct yankbuf$/
