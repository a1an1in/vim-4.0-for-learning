cscope 15 $HOME/workspace/VIM/vim-4.0 -q 0000005354 0001132286
	@atari/src/mint.h

13 
	#BINARY_FILE_IO


	)

	@doc/doctags.c

9 
	~<°dio.h
>

10 
	~<°rög.h
>

11 
	~<˘y≥.h
>

12 
	~<°dlib.h
>

14 
	#LINELEN
 200

	)

17 
	$maö
(
¨gc
, 
¨gv
)

18 
¨gc
;

19 **
¨gv
;

21 
löe
[
LINELEN
];

22 *
p1
, *
p2
;

23 *
p
;

24 
FILE
 *
fd
;

26 i‡(
¨gc
 <= 1)

28 
	`Ârötf
(
°dîr
, "Usage: doctags docfile ... >tags\n");

29 
	`exô
(1);

31 
	`¥ötf
("vim_tags\tvim_tags\t1\n");

32 --
¨gc
 > 0)

34 ++
¨gv
;

35 
fd
 = 
	`f›í
(
¨gv
[0], "r");

36 i‡(
fd
 =
NULL
)

38 
	`Ârötf
(
°dîr
, "U«bÀÅÿ›í %†f‹Ñódög\n", 
¨gv
[0]);

41 
	`fgës
(
löe
, 
LINELEN
, 
fd
Ë!
NULL
)

43 
p1
 = 
	`°rchr
(
löe
, '*');

44 
p1
 !
NULL
)

46 
p2
 = 
	`°rchr
(
p1
 + 1, '*');

47 i‡(
p2
 !
NULL
)

49 
p
 = 
p1
 + 1;Ö < 
p2
; ++p)

50 i‡(*
p
 == ' ' || *p == '\t' || *p == '|')

52 i‡(
p
 =
p2
)

55 *
p2
 = '\0';

56 
	`¥ötf
("%s\t%s\t/\\*%s\\*\n", 
p1
 + 1, 
¨gv
[0],Ö1 + 1);

57 
p2
 = 
	`°rchr
(p2 + 1, '*');

60 
p1
 = 
p2
;

63 
	`f˛o£
(
fd
);

66 
	}
}

	@macros/maze/maze.c

1 *
	gM
,
	gA
,
	gZ
,
	gE
=40,
	gJ
[40],
	gT
[40];
	$maö
(
C
){*
J
=
A
=
	`sˇnf
(
M
="%d",&C);

2 -- 
E
; 
J
[ E] =
T


3 [
E
 ]EË
	`¥ötf
("._"); ;(
A
-=
Z
=!Z) || (printf("\n|"

4 Ë, 
A
 = 39 ,
C
 --

5 Ë; 
Z
 || 
	`¥ötf
 (
M
 ))M[Z]=Z[
A
-(
E
 =A[
J
-Z])&&!
C


6 & 
A
 =
T
[ A]

7 |6<<27<
	`ønd
()||!
C
&!
Z
?
J
[
T
[
E
]=T[
A
]]=E,J[T[A]=A-Z]=A,"_.":" |"];
	}
}

	@macros/maze/mazeansi.c

1 *
	gM
,
	gA
,
	gZ
,
	gE
=40,
	gJ
[80],
	gT
[3];
	$maö
(
C
){
M
=
J
+
E
,*J=
A
=
	`sˇnf
("%d",&

2 
C
Ë;-- 
E
;
J
 [E ]=
M


3 [
E
 ]EË
	`¥ötf
("._"); ;(
A
-=
Z
=!Z) || (printf("\n|"

4 Ë, 
A
 = 39 ,
C
 --

5 Ë; 
Z
 || 
	`¥ötf
 (
T
 ))T[Z]=Z[
A
-(
E
 =A[
J
-Z])&&!
C


6 & 
A
 =
M
[ A]

7 |6<<11<
	`ønd
()||!
C
&!
Z
?
J
[
M
[
E
]=M[
A
]]=E,J[M[A]=A-Z]=A,"_.":" |"];
	}
}

	@src/addcr.c

5 
	~<°dio.h
>

7 
	gbuf„r
[1024];

9 
	$maö
(
¨gc
, 
¨gv
)

10 
¨gc
;

11 **
¨gv
;

13 
Àn
;

15 (
Àn
 = 
	`‰ód
(
buf„r
, 1, 1024, 
°dö
)) > 0)

16 
	`fwrôe
(
buf„r
, 1, 
Àn
, 
°dout
);

17 i‡(
	`„º‹
(
°dö
))

18 
	`Ârötf
(
°dîr
, "Error whileÑeading\n");

19 i‡(
	`„º‹
(
°dout
))

20 
	`Ârötf
(
°dîr
, "Error while writing\n");

21 
	}
}

	@src/alloc.c

16 
	~"vim.h
"

17 
	~"globÆs.h
"

18 
	~"¥Ÿo.h
"

24 
	#KEEP_ROOM
 8192L

	)

30 
ch¨_u
 *

31 
	$Æloc
(
size
)

32 
size
;

34  (
	`œŒoc
((
l⁄g_u
)
size
, 
TRUE
));

35 
	}
}

40 
ch¨_u
 *

41 
	$Æloc_check
(
size
)

42 
size
;

44 #i‡!
	`deföed
(
UNIX
Ë&& !deföed(
__EMX__
)

45 i‡((Ë=2 && 
size
 > 0x7fff)

47 
	`EMSG
("Line is becomingÅooÜong");

48  
NULL
;

51  (
	`œŒoc
((
l⁄g_u
)
size
, 
TRUE
));

52 
	}
}

54 
ch¨_u
 *

55 
	$œŒoc
(
size
, 
mesßge
)

56 
l⁄g_u
 
size
;

57 
mesßge
;

59 
ch¨_u
 *
p
;

60 
ªÀasög
 = 
FALSE
;

61 
åy_agaö
;

63 i‡(
size
 <= 0)

65 
	`EMSGN
("I¡î«»îr‹:ÜÆloc(%ld, )", 
size
);

66  
NULL
;

68 #i‡
	`deföed
(
MSDOS
Ë&& !deföed(
DJGPP
)

69 i‡(
size
 >= 0xfff0)

70 
p
 = 
NULL
;

80 i‡((
p
 = (
ch¨_u
 *)
	`mÆloc
(
size
)Ë!
NULL
)

82 i‡(
	`mch_avaû_mem
(
TRUE
Ë< 
KEEP_ROOM
 && !
ªÀasög
)

84 
	`vim_‰ì
((*)
p
);

85 
p
 = 
NULL
;

92 i‡(
p
 !
NULL
 || 
ªÀasög
)

94 
ªÀasög
 = 
TRUE
;

95 
åy_agaö
 = 
	`mf_ªÀa£_Æl
();

96 
ªÀasög
 = 
FALSE
;

97 i‡(!
åy_agaö
)

105 i‡(
mesßge
 && 
p
 =
NULL
)

106 
	`do_outofmem_msg
();

107  (
p
);

108 
	}
}

111 
	$do_outofmem_msg
()

113 i‡(!
did_outofmem_msg
)

115 
	`emsg
(
e_outofmem
);

116 
did_outofmem_msg
 = 
TRUE
;

118 
	}
}

123 
ch¨_u
 *

124 
	$°rßve
(
°rög
)

125 
ch¨_u
 *
°rög
;

127 
ch¨_u
 *
p
;

129 
p
 = 
	`Æloc
((Ë(
	`STRLEN
(
°rög
) + 1));

130 i‡(
p
 !
NULL
)

131 
	`STRCPY
(
p
, 
°rög
);

132  
p
;

133 
	}
}

135 
ch¨_u
 *

136 
	$°∫ßve
(
°rög
, 
Àn
)

137 
ch¨_u
 *
°rög
;

138 
Àn
;

140 
ch¨_u
 *
p
;

142 
p
 = 
	`Æloc
((Ë(
Àn
 + 1));

143 i‡(
p
 !
NULL
)

145 
	`STRNCPY
(
p
, 
°rög
, 
Àn
);

146 
p
[
Àn
] = 
NUL
;

148  
p
;

149 
	}
}

155 
ch¨_u
 *

156 
	$°rßve_esˇ≥d
(
°rög
, 
esc_ch¨s
)

157 
ch¨_u
 *
°rög
;

158 
ch¨_u
 *
esc_ch¨s
;

160 
ch¨_u
 *
p
;

161 
ch¨_u
 *
p2
;

162 
ch¨_u
 *
esˇ≥d_°rög
;

163 
Àngth
;

169 
Àngth
 = 1;

170 
p
 = 
°rög
; *p;Ö++)

172 i‡(
	`vim_°rchr
(
esc_ch¨s
, *
p
Ë!
NULL
)

173 ++
Àngth
;

174 ++
Àngth
;

176 
esˇ≥d_°rög
 = 
	`Æloc
(
Àngth
);

177 i‡(
esˇ≥d_°rög
 !
NULL
)

179 
p2
 = 
esˇ≥d_°rög
;

180 
p
 = 
°rög
; *p;Ö++)

182 i‡(
	`vim_°rchr
(
esc_ch¨s
, *
p
Ë!
NULL
)

183 *
p2
++ = '\\';

184 *
p2
++ = *
p
;

186 *
p2
 = 
NUL
;

188  
esˇ≥d_°rög
;

189 
	}
}

195 
	$c›y_•a˚s
(
±r
, 
cou¡
)

196 
ch¨_u
 *
±r
;

197 
size_t
 
cou¡
;

199 
size_t
 
i
 = 
cou¡
;

200 
ch¨_u
 *
p
 = 
±r
;

202 
i
--)

203 *
p
++ = ' ';

204 
	}
}

210 
	$dñ_åaûög_•a˚s
(
±r
)

211 
ch¨_u
 *
±r
;

213 
ch¨_u
 *
q
;

215 
q
 = 
±r
 + 
	`STRLEN
(ptr);

216 --
q
 > 
±r
 && 
	`vim_iswhôe
(q[0]) && q[-1] != '\\' &&

217 
q
[-1] !
	`Cål
('V'))

218 *
q
 = 
NUL
;

219 
	}
}

228 
	$c›y_›ti⁄_∑π
(
›ti⁄
, 
buf
, 
maxÀn
, 
£p_ch¨s
)

229 
ch¨_u
 **
›ti⁄
;

230 
ch¨_u
 *
buf
;

231 
maxÀn
;

232 *
£p_ch¨s
;

234 
Àn
 = 0;

235 
ch¨_u
 *
p
 = *
›ti⁄
;

238 i‡(*
p
 == '.')

239 
buf
[
Àn
++] = *
p
++;

240 *
p
 && 
	`vim_°rchr
((
ch¨_u
 *)
£p_ch¨s
, *pË=
NULL
)

245 i‡(
p
[0] ='\\' && 
	`vim_°rchr
((
ch¨_u
 *)
£p_ch¨s
,Ö[1]Ë!
NULL
)

246 ++
p
;

247 i‡(
Àn
 < 
maxÀn
 - 1)

248 
buf
[
Àn
++] = *
p
;

249 ++
p
;

251 
buf
[
Àn
] = 
NUL
;

253 
p
 = 
	`skù_to_›ti⁄_∑π
(p);

255 *
›ti⁄
 = 
p
;

256  
Àn
;

257 
	}
}

263 
	$vim_‰ì
(
x
)

264 *
x
;

266 i‡(
x
 !
NULL
)

267 
	`‰ì
(
x
);

268 
	}
}

270 #i‚de‡
HAVE_MEMSET


272 
	$vim_mem£t
(
±r
, 
c
, 
size
)

273 *
±r
;

274 
c
;

275 
size_t
 
size
;

277 *
p
 = 
±r
;

279 
size
-- > 0)

280 *
p
++ = 
c
;

281  
±r
;

282 
	}
}

285 #ifde‡
VIM_MEMMOVE


291 
	$vim_memmove
(
d°_¨g
, 
§c_¨g
, 
Àn
)

292 *
§c_¨g
, *
d°_¨g
;

293 
size_t
 
Àn
;

298 *
d°
 = 
d°_¨g
, *
§c
 = 
§c_¨g
;

301 i‡(
d°
 > 
§c
 && d° < sr¯+ 
Àn
)

303 
§c
 +=
Àn
;

304 
d°
 +=
Àn
;

305 
Àn
-- > 0)

306 *--
d°
 = *--
§c
;

309 
Àn
-- > 0)

310 *
d°
++ = *
§c
++;

311 
	}
}

319 
	$vim_°∫icmp
(
s1
, 
s2
, 
Àn
)

320 
ch¨_u
 *
s1
;

321 
ch¨_u
 *
s2
;

322 
size_t
 
Àn
;

324 
Àn
)

326 i‡(
	`TO_UPPER
(*
s1
Ë!TO_UPPER(*
s2
))

328 i‡(*
s1
 =
NUL
)

330 ++
s1
;

331 ++
s2
;

332 --
Àn
;

335 
	}
}

342 
ch¨_u
 *

343 
	$vim_°rchr
(
°rög
, 
n
)

344 
ch¨_u
 *
°rög
;

345 
n
;

347 *
°rög
)

349 i‡(*
°rög
 =
n
)

350  
°rög
;

351 ++
°rög
;

353  
NULL
;

354 
	}
}

356 
ch¨_u
 *

357 
	$vim_°ºchr
(
°rög
, 
n
)

358 
ch¨_u
 *
°rög
;

359 
n
;

361 
ch¨_u
 *
ªtvÆ
 = 
NULL
;

363 *
°rög
)

365 i‡(*
°rög
 =
n
)

366 
ªtvÆ
 = 
°rög
;

367 ++
°rög
;

369  
ªtvÆ
;

370 
	}
}

377 
	$vim_is•a˚
(
x
)

378 
x
;

380  ((
x
 >= 9 && x <= 13) || x == ' ');

381 
	}
}

	@src/archie.c

20 
	~"vim.h
"

21 
	~"globÆs.h
"

22 
	~"›ti⁄.h
"

23 
	~"¥Ÿo.h
"

25 #ifde‡
HAVE_FCNTL_H


26 
	~<f˙é.h
>

28 
	~<time.h
>

29 
	~<uni°d.h
>

30 
	~<sys/ty≥s.h
>

31 
	~<sys/os.h
>

32 
	~<sig«l.h
>

34 
	~<ãrmio.h
>

36 
Ród
 
__ARGS
((*, ));

37 
WaôF‹Ch¨
 
__ARGS
(());

38 
RólWaôF‹Ch¨
 
__ARGS
(());

39 
fûl_öbuf
 
__ARGS
(());

40 
have_wûdˇrd
 
__ARGS
((, **));

42 
	gdo_ªsize
 = 
FALSE
;

46 
	go•ìd
;

49 
	$mch_wrôe
(
s
, 
Àn
)

50 *
s
;

51 
Àn
;

53 
i
;

54 
i
=0; i<
Àn
; i++)

56 
	`os_vdu
(
s
[
i
]);

58 
	}
}

68 
	$mch_öch¨
(
buf
, 
maxÀn
, 
time
)

69 *
buf
;

70 
maxÀn
;

71 
time
;

73 i‡(
time
 >= 0)

75 i‡(
	`WaôF‹Ch¨
(
time
) == 0)

84 i‡(
	`WaôF‹Ch¨
(
p_ut
) == 0)

85 
	`upd©es¸ùt
(0);

88 
	`WaôF‹Ch¨
(-1L);

89  
	`Ród
(
buf
, ()
maxÀn
);

90 
	}
}

93 
	$mch_dñay
(
m£c
, 
ign‹eöput
)

94 
m£c
;

95 
ign‹eöput
;

97 
˛ock_t
 
now
;

99 i‡(
ign‹eöput
)

101 
now
 = 
	`˛ock
();

102 
	`˛ock
(Ë< 
now
 + (
m£c
 * 
CLOCKS_PER_SEC
) / 1000)

106 
	`WaôF‹Ch¨
(
m£c
);

107 
	}
}

113 
	$mch_su•íd
()

115 
	`MSG_OUTSTR
("new shell started\n");

116 
	`ˇŒ_shñl
(
NULL
, 
SHELL_COOKED
);

117 
√ed_check_time°amps
 = 
TRUE
;

118 
	}
}

121 
	$mch_wödöô
()

123 
Cﬁumns
 = 80;

124 
Rows
 = 24;

126 
	`Êushbuf
();

128 
	`mch_gë_wösize
();

129 
	}
}

135 
	$mch_check_wö
(
¨gc
, 
¨gv
)

136 
¨gc
;

137 **
¨gv
;

139 i‡(
	`ißây
(1))

140  
OK
;

141  
FAIL
;

142 
	}
}

148 
	$mch_check_öput
()

150 i‡(
	`ißây
(0))

151  
OK
;

152  
FAIL
;

153 
	}
}

160 
	$‚ame_ˇ£
(
«me
)

161 *
«me
;

163 
	}
}

166 
	$mch_£âôÀ
(
°r
)

167 *
°r
;

169 
	}
}

172 
	$mch_ª£âôÀ
()

174 
	}
}

177 
	$mch_ˇn_ª°‹e_tôÀ
()

179  
FALSE
;

180 
	}
}

183 
	$mch_ˇn_ª°‹e_ic⁄
()

185  
FALSE
;

186 
	}
}

192 
	$mch_gë_u£r_«me
(
s
, 
Àn
)

193 
ch¨_u
 *
s
;

194 
Àn
;

196 *
s
 = 
NUL
;

197  
FAIL
;

198 
	}
}

204 
	$mch_gë_ho°_«me
(
s
, 
Àn
)

205 
ch¨_u
 *
s
;

206 
Àn
;

208 
	`STRNCPY
(
s
, "Archimedes", 
Àn
);

209 
	}
}

215 
	$mch_gë_pid
()

218 
	}
}

225 
	$dú«me
(
buf
, 
Àn
)

226 *
buf
;

227 
Àn
;

229 
î∫o
;

230 *
sys_îæi°
[];

232 i‡(
	`gëcwd
(
buf
,
Àn
Ë=
NULL
)

234 
	`°r˝y
(
buf
, 
sys_îæi°
[
î∫o
]);

238 
	}
}

244 
	$FuŒName
(
‚ame
, 
buf
, 
Àn
, 
f‹˚
)

245 *
‚ame
, *
buf
;

246 
Àn
;

247 
f‹˚
;

249 
l
;

250 
ﬁddú
[
MAXPATHL
];

251 *
p
;

252 
c
;

253 
ªtvÆ
 = 1;

255 i‡(
‚ame
 =
NULL
)

258 *
buf
 = 0;

259 i‡(
f‹˚
 || *
‚ame
 != '/')

266 i‡((
p
 = 
	`vim_°ºchr
((
ch¨_u
 *)
‚ame
, '/')Ë!
NULL
)

268 i‡(
	`gëcwd
(
ﬁddú
, 
MAXPATHL
Ë=
NULL
)

270 
p
 = 
NULL
;

271 
ªtvÆ
 = 0;

275 
c
 = *
p
;

276 *
p
 = 
NUL
;

277 
	`vim_chdú
("\\");

278 i‡(
	`vim_chdú
(
‚ame
))

279 
ªtvÆ
 = 0;

281 
‚ame
 = 
p
 + 1;

282 *
p
 = 
c
;

285 i‡(
	`gëcwd
(
buf
, 
Àn
Ë=
NULL
)

287 
ªtvÆ
 = 0;

288 *
buf
 = 
NUL
;

290 
l
 = 
	`°æí
(
buf
);

291 i‡(
l
 && 
buf
[l - 1] != '/')

292 
	`°rˇt
(
buf
, "/");

293 i‡(
p
)

295 
	`vim_chdú
("\\");

296 
	`vim_chdú
(
ﬁddú
);

299 
	`°rˇt
(
buf
, 
‚ame
);

300  
ªtvÆ
;

301 
	}
}

307 
	$gë≥rm
(
«me
)

308 *
«me
;

310 
°©
 
°©b
;

312 i‡(
	`°©
(
«me
, &
°©b
))

314  
°©b
.
°_mode
;

315 
	}
}

321 
	$£çîm
(
«me
, 
≥rm
)

322 *
«me
;

323 
≥rm
;

325  
	`chmod
(
«me
, 
≥rm
);

326 
	}
}

334 
	$mch_isdú
(
«me
)

335 *
«me
;

337 
°©
 
°©b
;

339 i‡(
	`°©
(
«me
, &
°©b
))

340  
FALSE
;

341  ((
°©b
.
°_mode
 & 
S_IFMT
Ë=
S_IFDIR
Ë? 
TRUE
 : 
FALSE
;

342 
	}
}

345 
	$mch_wödexô
(
r
)

346 
r
;

348 
	`£âmode
(0);

349 
	`°›ãrmˇp
();

350 
	`Êushbuf
();

351 
	`°›s¸ùt
();

352 
	`exô
(
r
);

353 
	}
}

356 
	$mch_£âmode
(
øw
)

357 
øw
;

359 
ﬁd225
, 
ﬁd226
, 
ﬁd4
;

360 
ªtvÆs
[3];

361 
ãrmio
 
tﬁd
;

362 
ãrmio
 
äew
;

364 i‡(
øw
)

368 
	`os_byã
(4, 2, 0, 
ªtvÆs
);

369 
ﬁd4
 = 
ªtvÆs
[1];

373 
	`os_byã
(225, 0xC0, 0, 
ªtvÆs
);

374 
ﬁd225
 = 
ªtvÆs
[1];

375 
	`os_byã
(226, 0xD0, 0, 
ªtvÆs
);

376 
ﬁd226
 = 
ªtvÆs
[1];

378 
	`io˘l
(0, 
TCGETA
, &
tﬁd
);

379 
äew
 = 
tﬁd
;

380 
äew
.
c_iÊag
 &~(
ICRNL
 | 
IXON
);

382 
äew
.
c_lÊag
 &~(
ICANON
 | 
ECHO
 | 
ISIG
 | 
ECHOE
);

383 
äew
.
c_cc
[
VMIN
] = 1;

384 
äew
.
c_cc
[
VTIME
] = 0;

385 
	`io˘l
(0, 
TCSETA
, &
äew
);

389 
	`os_byã
(4, 
ﬁd4
, 0, 
ªtvÆs
);

390 
	`os_byã
(225, 
ﬁd225
, 0, 
ªtvÆs
);

391 
	`os_byã
(226, 
ﬁd226
, 0, 
ªtvÆs
);

392 
	`io˘l
(0, 
TCSETA
, &
tﬁd
);

394 
	}
}

404 
	$mch_gë_wösize
()

406 
ﬁd_Rows
 = 
Rows
;

407 
ﬁd_Cﬁumns
 = 
Cﬁumns
;

408 *
p
;

410 
Cﬁumns
 = 0;

411 
Rows
 = 0;

417 
wösize
 
ws
;

419 i‡(
	`io˘l
(0, 
TIOCGWINSZ
, &
ws
) == 0)

421 
Cﬁumns
 = 
ws
.
ws_cﬁ
;

422 
Rows
 = 
ws
.
ws_row
;

429 i‡(
Cﬁumns
 =0 || 
Rows
 == 0)

431 i‡((
p
 = (*)
	`gëív
("LINES")))

432 
Rows
 = 
	`©oi
(
p
);

433 i‡((
p
 = (*)
	`gëív
("COLUMNS")))

434 
Cﬁumns
 = 
	`©oi
(
p
);

440 i‡(
Cﬁumns
 =0 || 
Rows
 == 0)

442 
	`gëlöecﬁ
();

444 
	`gëlöecﬁ
();

450 i‡(
Cﬁumns
 <0 || 
Rows
 <= 0)

452 
Cﬁumns
 = 
ﬁd_Cﬁumns
;

453 
Rows
 = 
ﬁd_Rows
;

456 
	`debug2
("mch_gë_wösize: %dx%d\n", ()
Cﬁumns
, ()
Rows
);

458 
Rows_max
 = 
Rows
;

460 
	`check_wösize
();

461 
	`s¸ùt_wösize
();

465 
	}
}

468 
	$mch_£t_wösize
()

471 
	}
}

474 
	$ˇŒ_shñl
(
cmd
, 
›ti⁄s
)

475 *
cmd
;

476 
›ti⁄s
;

480 
x
;

481 
√wcmd
[1024];

483 
	`Êushbuf
();

485 i‡(
›ti⁄s
 & 
SHELL_COOKED
)

486 
	`£âmode
(0);

488 i‡(
cmd
 =
NULL
)

489 
x
 = 
	`sy°em
(
p_sh
);

492 
	`•rötf
(
√wcmd
, "*%s", 
cmd
);

493 
x
 = 
	`sy°em
(
√wcmd
);

495 i‡(
x
 == 127)

497 
	`emsg
("CannotÉxecute shell sh");

498 
	`msg_outch¨
('\n');

500 i‡(
x
)

502 
	`smsg
("%dÑëu∫ed", 
x
);

503 
	`msg_outch¨
('\n');

506 
	`£âmode
(1);

507  (
x
 ? 
FAIL
 : 
OK
);

508 
	}
}

516 
	#INBUFLEN
 50

	)

517 
	göbuf
[
INBUFLEN
];

518 
	göbufcou¡
 = 0;

521 
	$Ród
(
buf
, 
maxÀn
)

522 *
buf
;

523 
maxÀn
;

525 i‡(
öbufcou¡
 == 0)

526 
	`fûl_öbuf
();

527 i‡(
maxÀn
 > 
öbufcou¡
)

528 
maxÀn
 = 
öbufcou¡
;

529 
	`vim_memmove
(
buf
, 
öbuf
, (
size_t
)
maxÀn
);

530 
öbufcou¡
 -
maxÀn
;

531 i‡(
öbufcou¡
)

532 
	`vim_memmove
(
öbuf
, inbu‡+ 
maxÀn
, (
size_t
)
öbufcou¡
);

533  ()
maxÀn
;

534 
	}
}

540 
	$mch_bªakcheck
()

542 i‡(
	`RólWaôF‹Ch¨
(0L))

543 
	`fûl_öbuf
();

544 
	}
}

547 
	$fûl_öbuf
()

549 
Àn
;

551 i‡(
öbufcou¡
 >
INBUFLEN
)

554 
Àn
=0;Üí < 
INBUFLEN
-
öbufcou¡
;Üen++)

556 
key
;

558 
key
 = 
	`os_ökey
(0);

559 i‡(
key
==-1)

563 
öbuf
[
öbufcou¡
+
Àn
] = 
key
;

566 
Àn
-- > 0)

571 i‡(
öbuf
[
öbufcou¡
] == 3)

574 
	`vim_memmove
(
öbuf
, inbu‡+ 
öbufcou¡
, (
size_t
)(
Àn
 + 1));

575 
öbufcou¡
 = 0;

576 
gŸ_öt
 = 
TRUE
;

578 ++
öbufcou¡
;

580 
	}
}

588 
	$WaôF‹Ch¨
(
ticks
)

589 
ticks
;

591 i‡(
öbufcou¡
)

593  
	`RólWaôF‹Ch¨
(
ticks
);

594 
	}
}

601 
	$RólWaôF‹Ch¨
(
ticks
)

602 
ticks
;

604 
key
;

606 i‡(
ticks
 == -1)

608 
key
 = 
	`os_gë
();

612 
key
 = 
	`os_ökey
(()(
ticks
/10));

614 
	`debug3
("RWFC(%ldËgŸ %d (%c)\n", 
ticks
, 
key
, key);

616 i‡(
key
 != -1)

623 i‡(
öbufcou¡
 < 
INBUFLEN
)

625 
öbuf
[
öbufcou¡
++] = 
key
;

628  (
key
 != -1);

629 
	}
}

645 *
mkãmp
 
__ARGS
((*));

646 #i‚de‡
SEEK_SET


647 
	#SEEK_SET
 0

	)

649 #i‚de‡
SEEK_END


650 
	#SEEK_END
 2

	)

654 
	$Ex∑ndWûdC¨ds
(
num_∑t
, 
∑t
, 
num_fûe
, 
fûe
, 
fûes_⁄ly
, 
li°_nŸfound
)

655 
num_∑t
;

656 **
∑t
;

657 *
num_fûe
;

658 ***
fûe
;

659 
fûes_⁄ly
;

660 
li°_nŸfound
;

662 
tm≤ame
[
TMPNAMELEN
];

663 *
comm™d
;

664 
i
;

665 
dú
;

666 
size_t
 
Àn
;

667 
FILE
 *
fd
;

668 *
buf„r
;

669 *
p
;

671 *
num_fûe
 = 0;

672 *
fûe
 = (**)"";

678 i‡(!
	`have_wûdˇrd
(
num_∑t
, 
∑t
))

680 *
fûe
 = (**)
	`Æloc
(
num_∑t
 * (*));

681 i‡(*
fûe
 =
NULL
)

683 *
fûe
 = (**)"";

686 
i
 = 0; i < 
num_∑t
; i++)

687 (*
fûe
)[
i
] = 
	`°rßve
(
∑t
[i]);

688 *
num_fûe
 = 
num_∑t
;

695 
	`°r˝y
(
tm≤ame
, 
TMPNAME2
);

696 i‡(*
	`mkãmp
(
tm≤ame
Ë=
NUL
)

698 
	`emsg
(
e_nŸmp
);

702 
Àn
 = 
TMPNAMELEN
 + 10;

703 
i
 = 0; i < 
num_∑t
; ++i)

704 
Àn
 +
	`°æí
(
∑t
[
i
]) + 1;

705 
comm™d
 = (*)
	`Æloc
(
Àn
);

706 i‡(
comm™d
 =
NULL
)

708 
	`°r˝y
(
comm™d
, "glob >");

709 
	`°rˇt
(
comm™d
, 
tm≤ame
);

710 
i
 = 0; i < 
num_∑t
; ++i)

712 
	`°rˇt
(
comm™d
, " ");

713 
	`°rˇt
(
comm™d
, 
∑t
[
i
]);

715 
i
 = 
	`ˇŒ_shñl
(
comm™d
, 
SHELL_EXPAND
);

716 
	`vim_‰ì
(
comm™d
);

717 i‡(
i
)

719 
	`vim_ªmove
((
ch¨_u
 *)
tm≤ame
);

720 
	`mch_dñay
(1000L, 
TRUE
);

722 
mu°_ªdøw
 = 
CLEAR
;

729 
fd
 = 
	`f›í
(
tm≤ame
, "r");

730 i‡(
fd
 =
NULL
)

732 
	`emsg
(
e_nŸ›í
);

736 
	`f£ek
(
fd
, 0L, 
SEEK_END
);

737 
Àn
 = 
	`·ñl
(
fd
);

738 
	`f£ek
(
fd
, 0L, 
SEEK_SET
);

739 
buf„r
 = (*)
	`Æloc
(
Àn
 + 1);

740 i‡(
buf„r
 =
NULL
)

742 
	`vim_ªmove
((
ch¨_u
 *)
tm≤ame
);

743 
	`f˛o£
(
fd
);

746 
i
 = 
	`‰ód
(
buf„r
, 1, 
Àn
, 
fd
);

747 
	`f˛o£
(
fd
);

748 
	`vim_ªmove
((
ch¨_u
 *)
tm≤ame
);

749 i‡(
i
 !
Àn
)

751 
	`emsg
(
e_nŸªad
);

752 
	`vim_‰ì
(
buf„r
);

756 
buf„r
[
Àn
] = 
NUL
;

757 
i
 = 0;

758 
p
 = 
buf„r
;Ö < buf„∏+ 
Àn
; ++p)

759 i‡(*
p
 =
NUL
)

760 ++
i
;

761 i‡(
Àn
)

762 ++
i
;

764 *
num_fûe
 = 
i
;

765 *
fûe
 = (**)
	`Æloc
((*Ë* 
i
);

766 i‡(*
fûe
 =
NULL
)

768 
	`vim_‰ì
(
buf„r
);

769 *
fûe
 = (**)"";

772 
p
 = 
buf„r
;

774 
i
 = 0; i < *
num_fûe
; ++i)

776 (*
fûe
)[
i
] = 
p
;

777 *
p
 &&Ö < 
buf„r
 + 
Àn
)

778 ++
p
;

779 ++
p
;

781 
i
 = 0; i < *
num_fûe
; ++i)

783 
dú
 = (
	`mch_isdú
((*
fûe
)[
i
]));

784 i‡(
dú
 < 0)

785 
dú
 = 0;

786 
p
 = 
	`Æloc
(()(
	`°æí
((*
fûe
)[
i
]Ë+ 1 + 
dú
));

787 i‡(
p
)

789 
	`°r˝y
(
p
, (*
fûe
)[
i
]);

790 i‡(
dú
)

791 
	`°rˇt
(
p
, ".");

793 (*
fûe
)[
i
] = 
p
;

795 
	`vim_‰ì
(
buf„r
);

797 
	}
}

800 
	$mch_has_wûdˇrd
(
p
)

801 *
p
;

803  
	`°Ωbrk
(
p
, "*#"Ë!
NULL
;

804 
	}
}

807 
	$have_wûdˇrd
(
num
, 
fûe
)

808 
num
;

809 **
fûe
;

811 
i
;

813 
i
 = 0; i < 
num
; i++)

814 i‡(
	`mch_has_wûdˇrd
(
fûe
[
i
]))

817 
	}
}

	@src/archie.h

13 #i‡
deföed
(
__DATE__
Ë&& deföed(
__TIME__
)

14 
	#HAVE_DATE_TIME


	)

16 
	#HAVE_QSORT


	)

17 
	#HAVE_FCNTL_H


	)

19 
	#vim_ªmove
(
x
Ë
	`ªmove
((*)(x))

	)

	@src/ascii.h

13 
	#NUL
 '\000'

	)

14 
	#TAB
 '\011'

	)

15 
	#NL
 '\012'

	)

16 
	#NL_STR
 (
ch¨_u
 *)"\012"

	)

17 
	#CR
 '\015'

	)

18 
	#ESC
 '\033'

	)

19 
	#ESC_STR
 (
ch¨_u
 *)"\033"

	)

20 
	#DEL
 0x7f

	)

21 
	#CSI
 0x9b

	)

23 
	#Cål
(
x
Ë((xË& 0x1f)

	)

24 
	#Mëa
(
x
Ë((xË| 0x80)

	)

31 
	#PATHSEP
 '/'

	)

32 
	#PATHSEPSTR
 "/"

	)

	@src/buffer.c

27 
	~"vim.h
"

28 
	~"globÆs.h
"

29 
	~"¥Ÿo.h
"

30 
	~"›ti⁄.h
"

32 
íãr_buf„r
 
__ARGS
((
BUF
 *));

33 
‰ì_buf_›ti⁄s
 
__ARGS
((
BUF
 *));

34 
ch¨_u
 *
buÊi°_m©ch
 
__ARGS
((
ªgexp
 *
¥og
, 
BUF
 *
buf
));

35 
buÊi°_£énum
 
__ARGS
((
BUF
 *, 
löír_t
));

36 
löír_t
 
buÊi°_föd um
 
__ARGS
((
BUF
 *));

37 
≠≥nd_¨g_numbî
 
__ARGS
((
ch¨_u
 *, ));

44 
	$›í_buf„r
()

46 
ªtvÆ
 = 
OK
;

53 i‡(
ªad⁄lymode
 && 
curbuf
->
b_fûíame
 !
NULL
 && curbuf->
b_√vîlﬂded
)

54 
curbuf
->
b_p_ro
 = 
TRUE
;

56 i‡(
	`ml_›í
(Ë=
FAIL
)

62 
	`˛o£_buf„r
(
NULL
, 
curbuf
, 
FALSE
, FALSE);

63 
curbuf
 = 
fú°buf
; curbu‡!
NULL
; curbu‡curbuf->
b_√xt
)

64 i‡(
curbuf
->
b_ml
.
ml_mÂ
 !
NULL
)

70 i‡(
curbuf
 =
NULL
)

72 
	`EMSG
("Cannotállocate buffer,Éxiting...");

73 
	`gëout
(2);

75 
	`EMSG
("Cannotállocate buffer, using other one...");

76 
	`íãr_buf„r
(
curbuf
);

77  
FAIL
;

79 i‡(
curbuf
->
b_fûíame
 !
NULL
)

80 
ªtvÆ
 = 
	`ªadfûe
(
curbuf
->
b_fûíame
, curbuf->
b_sfûíame
,

81 (
löír_t
)0, 
TRUE
, (löír_t)0, 
MAXLNUM
, 
FALSE
);

84 
	`MSG
("Empty Buffer");

85 
msg_cﬁ
 = 0;

86 
msg_didout
 = 
FALSE
;

90 i‡(
curbuf
->
b_√vîlﬂded
)

91 
	`öô_ch¨èb
();

98 i‡(
ªtvÆ
 !
FAIL
)

99 
	`UNCHANGED
(
curbuf
);

101 #ifde‡
AUTOCMD


102 
	`≠∂y_autocmds
(
EVENT_BUFENTER
, 
NULL
, NULL);

105 i‡(
ªtvÆ
 !
FAIL
)

107 
	`do_modñöes
();

108 
curbuf
->
b_√vîlﬂded
 = 
FALSE
;

111  
ªtvÆ
;

112 
	}
}

120 
	$˛o£_buf„r
(
wö
, 
buf
, 
‰ì_buf
, 
dñ_buf
)

121 
WIN
 *
wö
;

122 
BUF
 *
buf
;

123 
‰ì_buf
;

124 
dñ_buf
;

126 i‡(
buf
->
b_nwödows
 > 0)

127 --
buf
->
b_nwödows
;

128 i‡(
buf
->
b_nwödows
 =0 && 
wö
 !
NULL
)

129 
	`£t_œ°_curs‹
(
wö
);

130 i‡(
buf
->
b_nwödows
 > 0 || !
‰ì_buf
)

132 i‡(
buf
 =
curbuf
)

133 
	`u_sync
();

137 
	`buf_‰ìÆl
(
buf
);

141 i‡(
buf
->
b_fûíame
 =
NULL
 || 
dñ_buf
)

143 
	`vim_‰ì
(
buf
->
b_fûíame
);

144 
	`vim_‰ì
(
buf
->
b_sfûíame
);

145 i‡(
buf
->
b_¥ev
 =
NULL
)

146 
fú°buf
 = 
buf
->
b_√xt
;

148 
buf
->
b_¥ev
->
b_√xt
 = buf->b_next;

149 i‡(
buf
->
b_√xt
 =
NULL
)

150 
œ°buf
 = 
buf
->
b_¥ev
;

152 
buf
->
b_√xt
->
b_¥ev
 = buf->b_prev;

153 
	`‰ì_buf_›ti⁄s
(
buf
);

156 
	`buf_˛ór
(
buf
);

157 
	}
}

163 
	$buf_˛ór
(
buf
)

164 
BUF
 *
buf
;

166 
buf
->
b_ml
.
ml_löe_cou¡
 = 1;

167 
buf
->
b_ch™ged
 = 
FALSE
;

168 #i‚de‡
SHORT_FNAME


169 
buf
->
b_sh‹äame
 = 
FALSE
;

171 
buf
->
b_p_eﬁ
 = 
TRUE
;

172 
buf
->
b_ml
.
ml_mÂ
 = 
NULL
;

173 
buf
->
b_ml
.
ml_Êags
 = 
ML_EMPTY
;

174 
	}
}

180 
	$buf_‰ìÆl
(
buf
)

181 
BUF
 *
buf
;

183 
	`u_block‰ì
(
buf
);

184 
	`ml_˛o£
(
buf
, 
TRUE
);

185 
buf
->
b_ml
.
ml_löe_cou¡
 = 0;

186 
	`u_˛óøŒ
(
buf
);

187 
	}
}

201 
ch¨_u
 *

202 
	$do_bufdñ
(
comm™d
, 
¨g
, 
addr_cou¡
, 
°¨t_bƒ
, 
íd_bƒ
, 
f‹˚ô
)

203 
comm™d
;

204 
ch¨_u
 *
¨g
;

205 
addr_cou¡
;

206 
°¨t_bƒ
;

207 
íd_bƒ
;

208 
f‹˚ô
;

210 
do_cuºít
 = 0;

211 
dñëed
 = 0;

212 
ch¨_u
 *
îr‹msg
 = 
NULL
;

213 
bƒ
;

214 
ch¨_u
 *
p
;

216 i‡(
addr_cou¡
 == 0)

217 ()
	`do_buf„r
(
comm™d
, 
DOBUF_CURRENT
, 
FORWARD
, 0, 
f‹˚ô
);

220 i‡(
addr_cou¡
 == 2)

222 i‡(*
¨g
)

223  
e_åaûög
;

224 
bƒ
 = 
°¨t_bƒ
;

227 
bƒ
 = 
íd_bƒ
;

229  ;!
gŸ_öt
; 
	`mch_bªakcheck
())

237 i‡(
bƒ
 =
curbuf
->
b_‚um
)

238 
do_cuºít
 = 
bƒ
;

239 i‡(
	`do_buf„r
(
comm™d
, 
DOBUF_FIRST
, 
FORWARD
, ()
bƒ
,

240 
f‹˚ô
Ë=
OK
)

241 ++
dñëed
;

246 i‡(
addr_cou¡
 == 2)

248 i‡(++
bƒ
 > 
íd_bƒ
)

253 
¨g
 = 
	`skùwhôe
(arg);

254 i‡(*
¨g
 =
NUL
)

256 i‡(!
	`isdigô
(*
¨g
))

258 
p
 = 
	`skùtowhôe_esc
(
¨g
);

259 
bƒ
 = 
	`buÊi°_föd∑t
(
¨g
, 
p
);

260 i‡(
bƒ
 < 0)

262 
¨g
 = 
p
;

265 
bƒ
 = 
	`gëdigôs
(&
¨g
);

268 i‡(!
gŸ_öt
 && 
do_cuºít
 && 
	`do_buf„r
(
comm™d
, 
DOBUF_FIRST
,

269 
FORWARD
, 
do_cuºít
, 
f‹˚ô
Ë=
OK
)

270 ++
dñëed
;

272 i‡(
dñëed
 == 0)

274 
	`•rötf
((*)
IObuff
, "No buffers were %s",

275 
comm™d
 =
DOBUF_UNLOAD
 ? "unloaded" : "deleted");

276 
îr‹msg
 = 
IObuff
;

279 
	`smsg
((
ch¨_u
 *)"%d buf„r%†%s", 
dñëed
,

280 
	`∂uøl
(()
dñëed
),

281 
comm™d
 =
DOBUF_UNLOAD
 ? "unloaded" : "deleted");

284  
îr‹msg
;

285 
	}
}

303 
	$do_buf„r
(
a˘i⁄
, 
°¨t
, 
dú
, 
cou¡
, 
f‹˚ô
)

304 
a˘i⁄
;

305 
°¨t
;

306 
dú
;

307 
cou¡
;

308 
f‹˚ô
;

310 
BUF
 *
buf
;

311 
BUF
 *
dñbuf
;

312 
ªtvÆ
;

314 
°¨t
)

316 
DOBUF_FIRST
: 
buf
 = 
fú°buf
; ;

317 
DOBUF_LAST
: 
buf
 = 
œ°buf
; ;

318 : 
buf
 = 
curbuf
; ;

320 i‡(
°¨t
 =
DOBUF_MOD
)

322 
cou¡
-- > 0)

326 
buf
 = buf->
b_√xt
;

327 i‡(
buf
 =
NULL
)

328 
buf
 = 
fú°buf
;

330 
buf
 !
curbuf
 && !buf->
b_ch™ged
);

332 i‡(!
buf
->
b_ch™ged
)

334 
	`EMSG
("No modified buffer found");

335  
FAIL
;

338 i‡(
°¨t
 =
DOBUF_FIRST
 && 
cou¡
)

340 
buf
 !
NULL
 && buf->
b_‚um
 !
cou¡
)

341 
buf
 = buf->
b_√xt
;

345 
cou¡
-- > 0)

347 i‡(
dú
 =
FORWARD
)

349 
buf
 = buf->
b_√xt
;

350 i‡(
buf
 =
NULL
)

351 
buf
 = 
fú°buf
;

355 
buf
 = buf->
b_¥ev
;

356 i‡(
buf
 =
NULL
)

357 
buf
 = 
œ°buf
;

362 i‡(
buf
 =
NULL
)

364 i‡(
°¨t
 =
DOBUF_FIRST
)

367 i‡(
a˘i⁄
 !
DOBUF_UNLOAD
 &&á˘i⁄ !
DOBUF_DEL
)

368 
	`EMSGN
("C™nŸ gÿtÿbuf„∏%ld", 
cou¡
);

370 i‡(
dú
 =
FORWARD
)

371 
	`EMSG
("Cannot go beyondÜast buffer");

373 
	`EMSG
("Cannot go before first buffer");

374  
FAIL
;

380 i‡(
a˘i⁄
 =
DOBUF_UNLOAD
 ||á˘i⁄ =
DOBUF_DEL
)

382 i‡(!
f‹˚ô
 && 
buf
->
b_ch™ged
)

384 
	`EMSGN
("No write sinceÜast change for buffer %ld (use !Åo override)",

385 
buf
->
b_‚um
);

386  
FAIL
;

393 i‡(
fú°buf
->
b_√xt
 =
NULL
)

395 i‡(
a˘i⁄
 =
DOBUF_UNLOAD
)

397 
	`EMSG
("Cannot unloadÜast buffer");

398  
FAIL
;

400 
buf
 = 
curbuf
;

401 
	`£çcm¨k
();

402 
ªtvÆ
 = 
	`do_ecmd
(0, 
NULL
, NULL, NULL, 
FALSE
, (
löír_t
)1, FALSE);

409 i‡(
buf
 !
curbuf
 && (bu‡=
fú°buf
 || bu‡=fú°buf->
b_√xt
))

410 
	`˛o£_buf„r
(
NULL
, 
buf
, 
TRUE
, TRUE);

411  
ªtvÆ
;

418 
buf
 =
curbuf
 && 
fú°wö
 !
œ°wö
)

419 
	`˛o£_wödow
(
curwö
, 
FALSE
);

424 i‡(
buf
 !
curbuf
)

426 
	`˛o£_wödows
(
buf
);

427 
	`˛o£_buf„r
(
NULL
, 
buf
, 
TRUE
, 
a˘i⁄
 =
DOBUF_DEL
);

428  
OK
;

435 i‡(
curbuf
->
b_√xt
 !
NULL
)

436 
buf
 = 
curbuf
->
b_√xt
;

438 
buf
 = 
curbuf
->
b_¥ev
;

444 
	`£çcm¨k
();

445 i‡(
a˘i⁄
 =
DOBUF_SPLIT
)

447 i‡(
	`wö_•lô
(0, 
FALSE
Ë=
FAIL
)

448  
FAIL
;

450 
curwö
->
w_Æt_‚um
 = 
curbuf
->
b_‚um
;

451 
	`buÊi°_Æénum
();

453 #ifde‡
AUTOCMD


454 
	`≠∂y_autocmds
(
EVENT_BUFLEAVE
, 
NULL
, NULL);

456 
dñbuf
 = 
curbuf
;

457 i‡(
a˘i⁄
 =
DOBUF_UNLOAD
 ||á˘i⁄ =
DOBUF_DEL
)

458 
	`˛o£_wödows
(
curbuf
);

459 
	`˛o£_buf„r
(
NULL
, 
dñbuf
, 
a˘i⁄
 =
DOBUF_UNLOAD
 ||á˘i⁄ =
DOBUF_DEL
,

460 
a˘i⁄
 =
DOBUF_DEL
);

461 
	`íãr_buf„r
(
buf
);

462  
OK
;

463 
	}
}

470 
	$íãr_buf„r
(
buf
)

471 
BUF
 *
buf
;

473 
	`buf_c›y_›ti⁄s
(
curbuf
, 
buf
, 
TRUE
);

474 
curwö
->
w_buf„r
 = 
buf
;

475 
curbuf
 = 
buf
;

476 ++
curbuf
->
b_nwödows
;

477 i‡(
curbuf
->
b_ml
.
ml_mÂ
 =
NULL
)

478 
	`›í_buf„r
();

481 
√ed_fûeöfo
 = 
TRUE
;

482 
	`buf_check_time°amp
(
curbuf
);

483 #ifde‡
AUTOCMD


484 
	`≠∂y_autocmds
(
EVENT_BUFENTER
, 
NULL
, NULL);

487 
	`buÊi°_gë um
();

488 
	`check_¨g_idx
();

489 
	`makëôÀ
();

490 
	`s¸ﬁl_curs‹_hÆfway
(
FALSE
);

491 
	`upd©eS¸ìn
(
NOT_VALID
);

492 
	}
}

505 
BUF
 *

506 
	$buÊi°_√w
(
‚ame
, 
s‚ame
, 
 um
, 
u£_curbuf
)

507 
ch¨_u
 *
‚ame
;

508 
ch¨_u
 *
s‚ame
;

509 
löír_t
 
 um
;

510 
u£_curbuf
;

512 
t›_fûe_num
 = 1;

513 
BUF
 *
buf
;

515 
	`‚ame_ex∑nd
(&
‚ame
, &
s‚ame
);

520 i‡(
‚ame
 !
NULL
 && (
buf
 = 
	`buÊi°_föd«me
(fname)) != NULL)

522 i‡(
 um
 != 0)

523 
	`buÊi°_£énum
(
buf
, 
 um
);

526 
	`buf_c›y_›ti⁄s
(
curbuf
, 
buf
, 
FALSE
);

527  
buf
;

536 i‡(
u£_curbuf
 && 
curbuf
 !
NULL
 && curbuf->
b_fûíame
 == NULL &&

537 
curbuf
->
b_nwödows
 <= 1 &&

538 (
curbuf
->
b_ml
.
ml_mÂ
 =
NULL
 || 
	`bu„m±y
()))

539 
buf
 = 
curbuf
;

542 
buf
 = (
BUF
 *)
	`Æloc
(()(BUF));

543 i‡(
buf
 =
NULL
)

544  
NULL
;

545 ()
	`vim_mem£t
(
buf
, 0, (
BUF
));

548 i‡(
‚ame
 !
NULL
)

550 
buf
->
b_fûíame
 = 
	`°rßve
(
‚ame
);

551 
buf
->
b_sfûíame
 = 
	`°rßve
(
s‚ame
);

553 i‡(
buf
->
b_wö um
 =
NULL
)

554 
buf
->
b_wö um
 = (
WINLNUM
 *)
	`Æloc
(()(WINLNUM));

555 i‡((
‚ame
 !
NULL
 && (
buf
->
b_fûíame
 == NULL ||

556 
buf
->
b_sfûíame
 =
NULL
)Ë|| buf->
b_wö um
 == NULL)

558 
	`vim_‰ì
(
buf
->
b_fûíame
);

559 
buf
->
b_fûíame
 = 
NULL
;

560 
	`vim_‰ì
(
buf
->
b_sfûíame
);

561 
buf
->
b_sfûíame
 = 
NULL
;

562 i‡(
buf
 !
curbuf
)

564 
	`vim_‰ì
(
buf
->
b_wö um
);

565 
	`‰ì_buf_›ti⁄s
(
buf
);

567  
NULL
;

570 i‡(
buf
 =
curbuf
)

572 
	`buf_‰ìÆl
(
buf
);

573 
buf
->
b_nwödows
 = 0;

580 
	`buf_c›y_›ti⁄s
(
curbuf
, 
buf
, 
FALSE
);

585 
buf
->
b_√xt
 = 
NULL
;

586 i‡(
fú°buf
 =
NULL
)

588 
buf
->
b_¥ev
 = 
NULL
;

589 
fú°buf
 = 
buf
;

593 
œ°buf
->
b_√xt
 = 
buf
;

594 
buf
->
b_¥ev
 = 
œ°buf
;

596 
œ°buf
 = 
buf
;

598 
buf
->
b_‚um
 = 
t›_fûe_num
++;

599 i‡(
t›_fûe_num
 < 0)

601 
	`EMSG
("Warning: List of fileÇames overflow");

602 
	`mch_dñay
(3000L, 
TRUE
);

603 
t›_fûe_num
 = 1;

606 
buf
->
b_wö um
->
wl_ um
 = 
 um
;

607 
buf
->
b_wö um
->
wl_√xt
 = 
NULL
;

608 
buf
->
b_wö um
->
wl_¥ev
 = 
NULL
;

609 
buf
->
b_wö um
->
wl_wö
 = 
curwö
;

612 i‡(
did_cd
)

613 
buf
->
b_xfûíame
 = buf->
b_fûíame
;

615 
buf
->
b_xfûíame
 = buf->
b_sfûíame
;

616 
buf
->
b_u_syn˚d
 = 
TRUE
;

617 
buf
->
b_√vîlﬂded
 = 
TRUE
;

618 
	`buf_˛ór
(
buf
);

619 
	`˛øŒm¨ks
(
buf
);

620 
	`fm¨ks_check_«mes
(
buf
);

622  
buf
;

623 
	}
}

629 
	$‰ì_buf_›ti⁄s
(
buf
)

630 
BUF
 *
buf
;

632 
	`‰ì_°rög_›ti⁄
(
buf
->
b_p_fo
);

633 
	`‰ì_°rög_›ti⁄
(
buf
->
b_p_isk
);

634 
	`‰ì_°rög_›ti⁄
(
buf
->
b_p_com
);

635 #ifde‡
CINDENT


636 
	`‰ì_°rög_›ti⁄
(
buf
->
b_p_cök
);

637 
	`‰ì_°rög_›ti⁄
(
buf
->
b_p_cöo
);

639 #i‡
	`deföed
(
CINDENT
Ë|| deföed(
SMARTINDENT
)

640 
	`‰ì_°rög_›ti⁄
(
buf
->
b_p_cöw
);

642 
	`vim_‰ì
(
buf
);

643 
	}
}

654 
	$buÊi°_gëfûe
(
n
, 
 um
, 
›ti⁄s
)

655 
n
;

656 
löír_t
 
 um
;

657 
›ti⁄s
;

659 
BUF
 *
buf
;

661 
buf
 = 
	`buÊi°_födƒ
(
n
);

662 i‡(
buf
 =
NULL
)

664 i‡((
›ti⁄s
 & 
GETF_ALT
Ë&& 
n
 == 0)

665 
	`emsg
(
e_nﬂ…
);

667 
	`EMSGN
("buf„∏%ldÇŸ found", 
n
);

668  
FAIL
;

672 i‡(
buf
 =
curbuf
)

673  
OK
;

676 i‡(
 um
 == 0)

677 
 um
 = 
	`buÊi°_föd um
(
buf
);

678 ++
RedøwögDißbÀd
;

679 i‡(
	`gëfûe
(
buf
->
b_‚um
, 
NULL
, NULL, (
›ti⁄s
 & 
GETF_SETMARK
), 
 um
) <= 0)

681 --
RedøwögDißbÀd
;

682  
OK
;

684 --
RedøwögDißbÀd
;

685  
FAIL
;

686 
	}
}

692 
	$buÊi°_gë um
()

694 
löír_t
 
 um
;

696 
curwö
->
w_curs‹
.
 um
 = 1;

697 
curwö
->
w_curs‹
.
cﬁ
 = 0;

698 
 um
 = 
	`buÊi°_föd um
(
curbuf
);

699 i‡(
 um
 !0 &&Ünum <
curbuf
->
b_ml
.
ml_löe_cou¡
)

700 
curwö
->
w_curs‹
.
 um
 =Ünum;

701 
	}
}

707 
BUF
 *

708 
	$buÊi°_föd«me
(
‚ame
)

709 
ch¨_u
 *
‚ame
;

711 
BUF
 *
buf
;

713 
buf
 = 
fú°buf
; bu‡!
NULL
; bu‡buf->
b_√xt
)

714 i‡(
buf
->
b_fûíame
 !
NULL
 && 
	`‚amecmp
(
‚ame
, buf->b_filename) == 0)

715  (
buf
);

716  
NULL
;

717 
	}
}

724 
	$buÊi°_föd∑t
(
∑âîn
, 
∑âîn_íd
)

725 
ch¨_u
 *
∑âîn
;

726 
ch¨_u
 *
∑âîn_íd
;

728 
BUF
 *
buf
;

729 
ªgexp
 *
¥og
;

730 
‚um
 = -1;

731 
ch¨_u
 *
∑t
;

732 
ch¨_u
 *
m©ch
;

733 
©ãm±
;

734 
ch¨_u
 *
p
;

736 i‡(
∑âîn_íd
 =
∑âîn
 + 1 && (*pattern == '%' || *pattern == '#'))

738 i‡(*
∑âîn
 == '%')

739 
‚um
 = 
curbuf
->
b_‚um
;

741 
‚um
 = 
curwö
->
w_Æt_‚um
;

751 
©ãm±
 = 0;áttempt <= 3; ++attempt)

754 
∑t
 = 
	`fûe_∑t_to_ªg_∑t
(
∑âîn
, 
∑âîn_íd
, 
NULL
);

755 i‡(
∑t
 =
NULL
)

757 i‡(
©ãm±
 < 2)

759 
p
 = 
∑t
 + 
	`STRLEN
(pat) - 1;

760 i‡(
p
 > 
∑t
 && *p == '$')

761 *
p
 = 
NUL
;

763 
p
 = 
∑t
;

764 i‡(*
p
 ='^' && !(
©ãm±
 & 1))

765 ++
p
;

766 
¥og
 = 
	`vim_ªgcomp
(
p
);

767 
	`vim_‰ì
(
∑t
);

768 i‡(
¥og
 =
NULL
)

771 
buf
 = 
fú°buf
; bu‡!
NULL
; bu‡buf->
b_√xt
)

773 
m©ch
 = 
	`buÊi°_m©ch
(
¥og
, 
buf
);

774 i‡(
m©ch
 !
NULL
)

776 i‡(
‚um
 >= 0)

778 
‚um
 = -2;

781 
‚um
 = 
buf
->
b_‚um
;

784 
	`vim_‰ì
(
¥og
);

785 i‡(
‚um
 >= 0)

789 i‡(
‚um
 == -2)

790 
	`EMSG2
("M‹êth™ o√ m©ch f‹ %s", 
∑âîn
);

791 i‡(
‚um
 < 1)

792 
	`EMSG2
("Nÿm©chög buf„∏f‹ %s", 
∑âîn
);

793  
‚um
;

794 
	}
}

802 
	$Ex∑ndBu‚ames
(
∑t
, 
num_fûe
, 
fûe
, 
›ti⁄s
)

803 
ch¨_u
 *
∑t
;

804 *
num_fûe
;

805 
ch¨_u
 ***
fûe
;

806 
›ti⁄s
;

808 
cou¡
 = 0;

809 
BUF
 *
buf
;

810 
round
;

811 
ch¨_u
 *
p
;

812 
©ãm±
;

813 
ªgexp
 *
¥og
;

815 *
num_fûe
 = 0;

816 *
fûe
 = 
NULL
;

822 
©ãm±
 = 1;áttempt <= 2; ++attempt)

824 i‡(
©ãm±
 == 2)

826 i‡(*
∑t
 != '^')

828 ++
∑t
;

830 
¥og
 = 
	`vim_ªgcomp
(
∑t
);

831 i‡(
¥og
 =
NULL
)

832  
FAIL
;

838 
round
 = 1;Ñound <= 2; ++round)

840 
cou¡
 = 0;

841 
buf
 = 
fú°buf
; bu‡!
NULL
; bu‡buf->
b_√xt
)

843 
p
 = 
	`buÊi°_m©ch
(
¥og
, 
buf
);

844 i‡(
p
 !
NULL
)

846 i‡(
round
 == 1)

847 ++
cou¡
;

850 i‡(
›ti⁄s
 & 
WILD_HOME_REPLACE
)

851 
p
 = 
	`home_ª∂a˚_ßve
(
buf
,Ö);

853 
p
 = 
	`°rßve
(p);

854 (*
fûe
)[
cou¡
++] = 
p
;

858 i‡(
cou¡
 == 0)

860 i‡(
round
 == 1)

862 *
fûe
 = (
ch¨_u
 **)
	`Æloc
(()(
cou¡
 * (char_u *)));

863 i‡(*
fûe
 =
NULL
)

865 
	`vim_‰ì
(
¥og
);

866  
FAIL
;

870 
	`vim_‰ì
(
¥og
);

871 i‡(
cou¡
)

875 *
num_fûe
 = 
cou¡
;

876  (
cou¡
 =0 ? 
FAIL
 : 
OK
);

877 
	}
}

882 
ch¨_u
 *

883 
	$buÊi°_m©ch
(
¥og
, 
buf
)

884 
ªgexp
 *
¥og
;

885 
BUF
 *
buf
;

887 
ch¨_u
 *
m©ch
 = 
NULL
;

889 i‡(
buf
->
b_sfûíame
 !
NULL
 &&

890 
	`vim_ªgexec
(
¥og
, 
buf
->
b_sfûíame
, 
TRUE
) != 0)

891 
m©ch
 = 
buf
->
b_sfûíame
;

892 i‡(
buf
->
b_fûíame
 !
NULL
)

894 i‡(
	`vim_ªgexec
(
¥og
, 
buf
->
b_fûíame
, 
TRUE
) != 0)

895 
m©ch
 = 
buf
->
b_fûíame
;

898 
	`home_ª∂a˚
(
NULL
, 
buf
->
b_fûíame
, 
NameBuff
, 
MAXPATHL
);

899 i‡(
	`vim_ªgexec
(
¥og
, 
NameBuff
, 
TRUE
) != 0)

900 
m©ch
 = 
buf
->
b_fûíame
;

903  
m©ch
;

904 
	}
}

909 
BUF
 *

910 
	$buÊi°_födƒ
(
ƒ
)

911 
ƒ
;

913 
BUF
 *
buf
;

915 i‡(
ƒ
 == 0)

916 
ƒ
 = 
curwö
->
w_Æt_‚um
;

917 
buf
 = 
fú°buf
; bu‡!
NULL
; bu‡buf->
b_√xt
)

918 i‡(
buf
->
b_‚um
 =
ƒ
)

919  (
buf
);

920  
NULL
;

921 
	}
}

926 
ch¨_u
 *

927 
	$buÊi°_ƒ2«me
(
n
, 
fuŒ«me
, 
hñ±aû
)

928 
n
;

929 
fuŒ«me
;

930 
hñ±aû
;

932 
BUF
 *
buf
;

933 
ch¨_u
 *
‚ame
;

935 
buf
 = 
	`buÊi°_födƒ
(
n
);

936 i‡(
buf
 =
NULL
)

937  
NULL
;

938 i‡(
fuŒ«me
)

939 
‚ame
 = 
buf
->
b_fûíame
;

941 
‚ame
 = 
buf
->
b_xfûíame
;

942 
	`home_ª∂a˚
(
hñ±aû
 ? 
buf
 : 
NULL
, 
‚ame
, 
NameBuff
, 
MAXPATHL
);

943  
NameBuff
;

944 
	}
}

950 
	$buÊi°_£énum
(
buf
, 
 um
)

951 
BUF
 *
buf
;

952 
löír_t
 
 um
;

954 
WINLNUM
 *
wÕ
;

956 
wÕ
 = 
buf
->
b_wö um
; wÕ !
NULL
; wÕ = wÕ->
wl_√xt
)

957 i‡(
wÕ
->
wl_wö
 =
curwö
)

959 i‡(
wÕ
 =
NULL
)

961 
wÕ
 = (
WINLNUM
 *)
	`Æloc
(()(WINLNUM));

962 i‡(
wÕ
 =
NULL
)

964 
wÕ
->
wl_wö
 = 
curwö
;

968 i‡(
wÕ
->
wl_¥ev
)

969 
wÕ
->
wl_¥ev
->
wl_√xt
 = wlp->wl_next;

971 
buf
->
b_wö um
 = 
wÕ
->
wl_√xt
;

972 i‡(
wÕ
->
wl_√xt
)

973 
wÕ
->
wl_√xt
->
wl_¥ev
 = wlp->wl_prev;

975 
wÕ
->
wl_ um
 = 
 um
;

979 
wÕ
->
wl_√xt
 = 
buf
->
b_wö um
;

980 
buf
->
b_wö um
 = 
wÕ
;

981 
wÕ
->
wl_¥ev
 = 
NULL
;

982 i‡(
wÕ
->
wl_√xt
)

983 
wÕ
->
wl_√xt
->
wl_¥ev
 = wlp;

986 
	}
}

991 
löír_t


992 
	$buÊi°_föd um
(
buf
)

993 
BUF
 *
buf
;

995 
WINLNUM
 *
wÕ
;

997 
wÕ
 = 
buf
->
b_wö um
; wÕ !
NULL
; wÕ = wÕ->
wl_√xt
)

998 i‡(
wÕ
->
wl_wö
 =
curwö
)

1001 i‡(
wÕ
 =
NULL
)

1002 
wÕ
 = 
buf
->
b_wö um
;

1004 i‡(
wÕ
)

1005  
wÕ
->
wl_ um
;

1007  (
löír_t
)1;

1008 
	}
}

1014 
	$buÊi°_li°
()

1016 
BUF
 *
buf
;

1017 
Àn
;

1019 
buf
 = 
fú°buf
; bu‡!
NULL
 && !
gŸ_öt
; bu‡buf->
b_√xt
)

1021 
	`msg_outch¨
('\n');

1022 i‡(
buf
->
b_xfûíame
 =
NULL
)

1023 
	`STRCPY
(
NameBuff
, "No File");

1026 
	`home_ª∂a˚
(
buf
, buf->
b_xfûíame
, 
NameBuff
, 
MAXPATHL
);

1028 
	`•rötf
((*)
IObuff
, "%3d %c%c%c \"",

1029 
buf
->
b_‚um
,

1030 
buf
 =
curbuf
 ? '%' :

1031 (
curwö
->
w_Æt_‚um
 =
buf
->
b_‚um
 ? '#' : ' '),

1032 
buf
->
b_ml
.
ml_mÂ
 =
NULL
 ? '-' :

1033 (
buf
->
b_nwödows
 == 0 ? 'h' : ' '),

1034 
buf
->
b_ch™ged
 ? '+' : ' ');

1036 
Àn
 = 
	`STRLEN
(
IObuff
);

1037 
	`STRNCPY
(
IObuff
 + 
Àn
, 
NameBuff
, 
IOSIZE
 - 20 -Üen);

1039 
Àn
 = 
	`STRLEN
(
IObuff
);

1040 
IObuff
[
Àn
++] = '"';

1046 
IObuff
[
Àn
++] = ' ';

1047 } 
Àn
 < 40 &&Üí < 
IOSIZE
 - 18);

1048 
	`•rötf
((*)
IObuff
 + 
Àn
, "line %ld",

1049 
buf
 =
curbuf
 ? 
curwö
->
w_curs‹
.
 um
 :

1050 ()
	`buÊi°_föd um
(
buf
));

1051 
	`msg_ouâøns
(
IObuff
);

1052 
	`Êushbuf
();

1053 
	`mch_bªakcheck
();

1055 
	}
}

1063 
	$buÊi°_«me_ƒ
(
‚um
, 
‚ame
, 
 um
)

1064 
‚um
;

1065 
ch¨_u
 **
‚ame
;

1066 
löír_t
 *
 um
;

1068 
BUF
 *
buf
;

1070 
buf
 = 
	`buÊi°_födƒ
(
‚um
);

1071 i‡(
buf
 =
NULL
 || buf->
b_fûíame
 == NULL)

1072  
FAIL
;

1074 i‡(
did_cd
)

1075 *
‚ame
 = 
buf
->
b_fûíame
;

1077 *
‚ame
 = 
buf
->
b_sfûíame
;

1078 *
 um
 = 
	`buÊi°_föd um
(
buf
);

1080  
OK
;

1081 
	}
}

1090 
	$£t‚ame
(
‚ame
, 
s‚ame
, 
mesßge
)

1091 
ch¨_u
 *
‚ame
, *
s‚ame
;

1092 
mesßge
;

1094 
BUF
 *
buf
;

1096 i‡(
‚ame
 =
NULL
 || *‚amê=
NUL
)

1098 
	`vim_‰ì
(
curbuf
->
b_fûíame
);

1099 
	`vim_‰ì
(
curbuf
->
b_sfûíame
);

1100 
curbuf
->
b_fûíame
 = 
NULL
;

1101 
curbuf
->
b_sfûíame
 = 
NULL
;

1105 
	`‚ame_ex∑nd
(&
‚ame
, &
s‚ame
);

1106 #ifde‡
USE_FNAME_CASE


1107 #ifde‡
USE_LONG_FNAME


1108 i‡(
USE_LONG_FNAME
)

1110 
	`‚ame_ˇ£
(
s‚ame
);

1117 
buf
 = 
	`buÊi°_föd«me
(
‚ame
);

1118 i‡(
buf
 !
NULL
 && bu‡!
curbuf
)

1120 i‡(
buf
->
b_ml
.
ml_mÂ
 !
NULL
)

1122 i‡(
mesßge
)

1123 
	`EMSG
("Buffer withÅhisÇameálreadyÉxists");

1124  
FAIL
;

1126 
	`˛o£_buf„r
(
NULL
, 
buf
, 
TRUE
, TRUE);

1128 
‚ame
 = 
	`°rßve
(fname);

1129 
s‚ame
 = 
	`°rßve
(sfname);

1130 i‡(
‚ame
 =
NULL
 || 
s‚ame
 == NULL)

1132 
	`vim_‰ì
(
s‚ame
);

1133 
	`vim_‰ì
(
‚ame
);

1134  
FAIL
;

1136 
	`vim_‰ì
(
curbuf
->
b_fûíame
);

1137 
	`vim_‰ì
(
curbuf
->
b_sfûíame
);

1138 
curbuf
->
b_fûíame
 = 
‚ame
;

1139 
curbuf
->
b_sfûíame
 = 
s‚ame
;

1141 i‡(
did_cd
)

1142 
curbuf
->
b_xfûíame
 = curbuf->
b_fûíame
;

1144 
curbuf
->
b_xfûíame
 = curbuf->
b_sfûíame
;

1146 #i‚de‡
SHORT_FNAME


1147 
curbuf
->
b_sh‹äame
 = 
FALSE
;

1152 i‡(
curbuf
->
b_ml
.
ml_mÂ
 !
NULL
)

1153 
	`ml_£äame
();

1155 
	`check_¨g_idx
();

1156 
	`makëôÀ
();

1157 
	`°©us_ªdøw_Æl
();

1158 
	`fm¨ks_check_«mes
(
curbuf
);

1159 
	`ml_time°amp
(
curbuf
);

1160  
OK
;

1161 
	}
}

1169 
	$£è…‚ame
(
‚ame
, 
s‚ame
, 
 um
)

1170 
ch¨_u
 *
‚ame
;

1171 
ch¨_u
 *
s‚ame
;

1172 
löír_t
 
 um
;

1174 
BUF
 *
buf
;

1176 
buf
 = 
	`buÊi°_√w
(
‚ame
, 
s‚ame
, 
 um
, 
FALSE
);

1177 i‡(
buf
 !
NULL
)

1178 
curwö
->
w_Æt_‚um
 = 
buf
->
b_‚um
;

1179 
	}
}

1187 
	$buÊi°_add
(
‚ame
)

1188 
ch¨_u
 *
‚ame
;

1190 
BUF
 *
buf
;

1192 
buf
 = 
	`buÊi°_√w
(
‚ame
, 
NULL
, (
löír_t
)0, 
FALSE
);

1193 i‡(
buf
 !
NULL
)

1194  
buf
->
b_‚um
;

1196 
	}
}

1202 
	$buÊi°_Æénum
()

1204 
	`buÊi°_£énum
(
curbuf
, 
curwö
->
w_curs‹
.
 um
);

1205 
	}
}

1212 
	$Ÿhîfûe
(
‚ame
)

1213 
ch¨_u
 *
‚ame
;

1215 i‡(
‚ame
 =
NULL
 || *‚amê=
NUL
 || 
curbuf
->
b_fûíame
 == NULL)

1216  
TRUE
;

1217  
	`‚amecmp
(
‚ame
, 
curbuf
->
b_fûíame
);

1218 
	}
}

1221 
	$fûeöfo
(
fuŒ«me
, 
sh‹thñp
, 
d⁄t_åunˇã
)

1222 
fuŒ«me
;

1223 
sh‹thñp
;

1224 
d⁄t_åunˇã
;

1226 
ch¨_u
 *
«me
;

1227 
n
;

1228 
ch¨_u
 *
p
;

1229 
ch¨_u
 *
buf„r
;

1231 
buf„r
 = 
	`Æloc
(
IOSIZE
);

1232 i‡(
buf„r
 =
NULL
)

1235 i‡(
fuŒ«me
 > 1)

1237 
	`•rötf
((*)
buf„r
, "bu‡%d: ", 
curbuf
->
b_‚um
);

1238 
p
 = 
buf„r
 + 
	`STRLEN
(buffer);

1241 
p
 = 
buf„r
;

1243 *
p
++ = '"';

1244 i‡(
curbuf
->
b_fûíame
 =
NULL
)

1245 
	`STRCPY
(
p
, "No File");

1248 i‡(!
fuŒ«me
 && 
curbuf
->
b_sfûíame
 !
NULL
)

1249 
«me
 = 
curbuf
->
b_sfûíame
;

1251 
«me
 = 
curbuf
->
b_fûíame
;

1252 
	`home_ª∂a˚
(
sh‹thñp
 ? 
curbuf
 : 
NULL
, 
«me
, 
p
,

1253 ()(
IOSIZE
 - (
p
 - 
buf„r
)));

1256 
	`•rötf
((*)
buf„r
 + 
	`STRLEN
(buffer),

1258 
curbuf
->
b_ch™ged
 ? (
	`sh‹tmess
(
SHM_MOD
) ?

1260 
curbuf
->
b_nŸedôed
 ? "[NotÉdited]" : "",

1261 
curbuf
->
b_p_ro
 ? (
	`sh‹tmess
(
SHM_RO
) ? "[RO]" : "[readonly]") : "",

1262 (
curbuf
->
b_ch™ged
 || curbuf->
b_nŸedôed
 || curbuf->
b_p_ro
) ?

1264 
n
 = ()((()
curwö
->
w_curs‹
.
 um
 * 100L) /

1265 ()
curbuf
->
b_ml
.
ml_löe_cou¡
);

1266 i‡(
curbuf
->
b_ml
.
ml_Êags
 & 
ML_EMPTY
)

1268 
	`STRCPY
(
buf„r
 + 
	`STRLEN
(buf„r), 
no_löes_msg
);

1270 i‡(
p_ru
)

1273 
	`•rötf
((*)
buf„r
 + 
	`STRLEN
(buffer),

1275 ()
curbuf
->
b_ml
.
ml_löe_cou¡
,

1276 
	`∂uøl
(()
curbuf
->
b_ml
.
ml_löe_cou¡
),

1277 
n
);

1281 
	`•rötf
((*)
buf„r
 + 
	`STRLEN
(buffer),

1283 ()
curwö
->
w_curs‹
.
 um
,

1284 ()
curbuf
->
b_ml
.
ml_löe_cou¡
,

1285 
n
);

1286 
	`cﬁ_¥öt
(
buf„r
 + 
	`STRLEN
(buffer),

1287 ()
curwö
->
w_curs‹
.
cﬁ
 + 1, ()curwö->
w_vútcﬁ
 + 1);

1290 
	`≠≥nd_¨g_numbî
(
buf„r
, !
	`sh‹tmess
(
SHM_FILE
));

1292 i‡(
d⁄t_åunˇã
)

1293 
	`msg
(
buf„r
);

1295 
	`msg_åunc
(
buf„r
);

1297 
	`vim_‰ì
(
buf„r
);

1303 i‡(
VIsuÆ_a˘ive
 && 
KeyTy≥d
)

1305 
	`£tcurs‹
();

1306 
	`Êushbuf
();

1307 
	`mch_dñay
(10000L, 
FALSE
);

1309 
	}
}

1315 
	$curs‹_pos_öfo
()

1317 
ch¨_u
 *
p
;

1318 
ch¨_u
 
buf1
[20];

1319 
ch¨_u
 
buf2
[20];

1320 
löír_t
 
 um
;

1321 
ch¨_cou¡
 = 0;

1322 
ch¨_cou¡_curs‹
 = 0;

1323 
eﬁ_size
;

1328 i‡(
curbuf
->
b_ml
.
ml_Êags
 & 
ML_EMPTY
)

1330 
	`MSG
(
no_löes_msg
);

1334 i‡(
curbuf
->
b_p_tx
)

1335 
eﬁ_size
 = 2;

1337 
eﬁ_size
 = 1;

1338 
 um
 = 1;Ünum <
curbuf
->
b_ml
.
ml_löe_cou¡
; ++lnum)

1340 i‡(
 um
 =
curwö
->
w_curs‹
.lnum)

1341 
ch¨_cou¡_curs‹
 = 
ch¨_cou¡
 + 
curwö
->
w_curs‹
.
cﬁ
 + 1;

1342 
ch¨_cou¡
 +
	`STRLEN
(
	`ml_gë
(
 um
)Ë+ 
eﬁ_size
;

1344 i‡(!
curbuf
->
b_p_eﬁ
 && curbuf->
b_p_bö
)

1345 
ch¨_cou¡
 -
eﬁ_size
;

1347 
p
 = 
	`ml_gë_cuæöe
();

1348 
	`cﬁ_¥öt
(
buf1
, ()
curwö
->
w_curs‹
.
cﬁ
 + 1, ()curwö->
w_vútcﬁ
 + 1);

1349 
	`cﬁ_¥öt
(
buf2
, ()
	`STRLEN
(
p
), 
	`löëabsize
(p));

1351 
	`•rötf
((*)
IObuff
, "Col %s of %s; Line %ld of %ld; Char %ld of %ld",

1352 (*)
buf1
, (*)
buf2
,

1353 ()
curwö
->
w_curs‹
.
 um
, ()
curbuf
->
b_ml
.
ml_löe_cou¡
,

1354 
ch¨_cou¡_curs‹
, 
ch¨_cou¡
);

1355 
	`msg
(
IObuff
);

1357 
	}
}

1360 
	$cﬁ_¥öt
(
buf
, 
cﬁ
, 
vcﬁ
)

1361 
ch¨_u
 *
buf
;

1362 
cﬁ
;

1363 
vcﬁ
;

1365 i‡(
cﬁ
 =
vcﬁ
)

1366 
	`•rötf
((*)
buf
, "%d", 
cﬁ
);

1368 
	`•rötf
((*)
buf
, "%d-%d", 
cﬁ
, 
vcﬁ
);

1369 
	}
}

1375 
ch¨_u
 *
	gœ°tôÀ
 = 
NULL
;

1376 
ch¨_u
 *
	gœ°ic⁄
 = 
NULL
;

1379 
	$makëôÀ
()

1381 
ch¨_u
 *
t_«me
;

1382 
ch¨_u
 *
i_«me
;

1384 i‡(
curbuf
->
b_fûíame
 =
NULL
)

1386 
t_«me
 = (
ch¨_u
 *)"";

1387 
i_«me
 = (
ch¨_u
 *)"No File";

1391 
	`home_ª∂a˚
(
curbuf
, curbuf->
b_fûíame
, 
IObuff
, 
IOSIZE
);

1392 
	`≠≥nd_¨g_numbî
(
IObuff
, 
FALSE
);

1393 
t_«me
 = 
IObuff
;

1394 
i_«me
 = 
	`gëèû
(
curbuf
->
b_fûíame
);

1397 
	`vim_‰ì
(
œ°tôÀ
);

1398 i‡(
p_tôÀ
 && (
œ°tôÀ
 = 
	`Æloc
(()(
	`°rsize
(
t_«me
Ë+ 7))Ë!
NULL
)

1400 
	`STRCPY
(
œ°tôÀ
, "VIM - ");

1401 *
t_«me
)

1402 
	`STRCAT
(
œ°tôÀ
, 
	`å™sch¨
(*
t_«me
++));

1405 
œ°tôÀ
 = 
NULL
;

1407 
	`vim_‰ì
(
œ°ic⁄
);

1408 i‡(
p_ic⁄
 && (
œ°ic⁄
 = 
	`Æloc
(()(
	`°rsize
(
i_«me
Ë+ 1))Ë!
NULL
)

1410 *
œ°ic⁄
 = 
NUL
;

1411 *
i_«me
)

1412 
	`STRCAT
(
œ°ic⁄
, 
	`å™sch¨
(*
i_«me
++));

1415 
œ°ic⁄
 = 
NULL
;

1417 
	`ª£âôÀ
();

1418 
	}
}

1424 
	$≠≥nd_¨g_numbî
(
buf
, 
add_fûe
)

1425 
ch¨_u
 *
buf
;

1426 
add_fûe
;

1428 i‡(
¨g_cou¡
 <= 1)

1431 
buf
 +
	`STRLEN
(buf);

1432 *
buf
++ = ' ';

1433 *
buf
++ = '(';

1434 i‡(
add_fûe
)

1436 
	`STRCPY
(
buf
, "file ");

1437 
buf
 += 5;

1439 
	`•rötf
((*)
buf
, 
curwö
->
w_¨g_idx_övÆid
 ? "(%d) of %d)" :

1440 "%d o‡%d)", 
curwö
->
w_¨g_idx
 + 1, 
¨g_cou¡
);

1441 
	}
}

1447 
	$ª£âôÀ
()

1449 
	`mch_£âôÀ
(
œ°tôÀ
, 
œ°ic⁄
);

1450 
	}
}

1455 
ch¨_u
 *

1456 
	$fix_‚ame
(
‚ame
)

1457 
ch¨_u
 *
‚ame
;

1459 i‡(
‚ame
 !
NameBuff
)

1461 i‡(!
	`isFuŒName
(
‚ame
))

1463 ()
	`FuŒName
(
‚ame
, 
NameBuff
, 
MAXPATHL
, 
FALSE
);

1464 
‚ame
 = 
NameBuff
;

1466 #ifde‡
USE_FNAME_CASE


1468 #ifde‡
USE_LONG_FNAME


1469 i‡(
USE_LONG_FNAME
)

1472 
	`STRNCPY
(
NameBuff
, 
‚ame
, 
MAXPATHL
);

1473 
‚ame
 = 
NameBuff
;

1474 
	`‚ame_ˇ£
(
‚ame
);

1478  
‚ame
;

1479 
	}
}

1485 
	$‚ame_ex∑nd
(
‚ame
, 
s‚ame
)

1486 
ch¨_u
 **
‚ame
;

1487 
ch¨_u
 **
s‚ame
;

1489 i‡(*
‚ame
 =
NULL
)

1491 i‡(*
s‚ame
 =
NULL
)

1492 *
s‚ame
 = *
‚ame
;

1493 *
‚ame
 = 
	`fix_‚ame
(*fname);

1494 
	}
}

1500 
	$do_¨g_Æl
(
cou¡
)

1501 
cou¡
;

1503 
i
;

1505 i‡(
¨g_cou¡
 <= 1)

1517 
	`£çcm¨k
();

1518 
	`˛o£_Ÿhîs
(
FALSE
);

1519 
curwö
->
w_¨g_idx
 = 0;

1520 i‡(
cou¡
 > 
¨g_cou¡
 || count <= 0)

1521 
cou¡
 = 
¨g_cou¡
;

1522 
cou¡
 = 
	`make_wödows
(count);

1523 
i
 = 0; i < 
cou¡
; ++i)

1526 ()
	`do_ecmd
(0, 
¨g_fûes
[
i
], 
NULL
, NULL, 
TRUE
, (
löír_t
)1, 
FALSE
);

1527 
curwö
->
w_¨g_idx
 = 
i
;

1528 i‡(
i
 =
¨g_cou¡
 - 1)

1529 
¨g_had_œ°
 = 
TRUE
;

1530 i‡(
curwö
->
w_√xt
 =
NULL
)

1532 
	`wö_íãr
(
curwö
->
w_√xt
, 
FALSE
);

1534 
	`wö_íãr
(
fú°wö
, 
FALSE
);

1535 
	}
}

1544 
	$do_buf„r_Æl
(
cou¡
, 
Æl
)

1545 
cou¡
;

1546 
Æl
;

1548 
buf_cou¡
;

1549 
BUF
 *
buf
;

1550 
i
;

1555 
buf_cou¡
 = 0;

1556 
buf
 = 
fú°buf
; bu‡!
NULL
; bu‡buf->
b_√xt
)

1557 i‡(
Æl
 || 
buf
->
b_ml
.
ml_mÂ
 !
NULL
)

1558 ++
buf_cou¡
;

1560 i‡(
buf_cou¡
 == 0)

1562 
	`EMSG
("NoÑelevantÉntries in bufferÜist");

1571 
	`˛o£_Ÿhîs
(
FALSE
);

1572 
curwö
->
w_¨g_idx
 = 0;

1573 i‡(
buf_cou¡
 > 
cou¡
)

1574 
buf_cou¡
 = 
cou¡
;

1575 
buf_cou¡
 = 
	`make_wödows
(buf_count);

1576 
buf
 = 
fú°buf
;

1577 
i
 = 0; i < 
buf_cou¡
; ++i)

1579  ; 
buf
 !
NULL
; bu‡buf->
b_√xt
)

1580 i‡(
Æl
 || 
buf
->
b_ml
.
ml_mÂ
 !
NULL
)

1582 i‡(
buf
 =
NULL
)

1584 i‡(
i
 != 0)

1585 
	`°uffRódbuff
((
ch¨_u
 *)"\n\027\027:");

1586 
	`°uffRódbuff
((
ch¨_u
 *)":buf ");

1587 
	`°uf‚umRódbuff
(()
buf
->
b_‚um
);

1588 
buf
 = buf->
b_√xt
;

1590 
	`°uffRódbuff
((
ch¨_u
 *)"\n100\027k");

1591 
	}
}

1598 
chk_modñöe
 
__ARGS
((
löír_t
));

1601 
	$do_modñöes
()

1603 
löír_t
 
 um
;

1604 
nmlöes
;

1606 i‡(!
curbuf
->
b_p_ml
 || (
nmlöes
 = ()
p_mls
) == 0)

1609 
 um
 = 1;Ünum <
curbuf
->
b_ml
.
ml_löe_cou¡
 &&Ünum <
nmlöes
;

1610 ++
 um
)

1611 i‡(
	`chk_modñöe
(
 um
Ë=
FAIL
)

1612 
nmlöes
 = 0;

1614 
 um
 = 
curbuf
->
b_ml
.
ml_löe_cou¡
;Ünum > 0 &&Ünum > 
nmlöes
 &&

1615 
 um
 > 
curbuf
->
b_ml
.
ml_löe_cou¡
 - 
nmlöes
; --lnum)

1616 i‡(
	`chk_modñöe
(
 um
Ë=
FAIL
)

1617 
nmlöes
 = 0;

1618 
	}
}

1625 
	$chk_modñöe
(
 um
)

1626 
löír_t
 
 um
;

1628 
ch¨_u
 *
s
;

1629 
ch¨_u
 *
e
;

1630 
ch¨_u
 *
löec›y
;

1631 
¥ev
;

1632 
íd
;

1633 
ªtvÆ
 = 
OK
;

1634 
ch¨_u
 *
ßve_sourcög_«me
;

1636 
¥ev
 = -1;

1637 
s
 = 
	`ml_gë
(
 um
); *†!
NUL
; ++s)

1639 i‡(
¥ev
 =-1 || 
	`vim_is•a˚
(prev))

1641 i‡((
¥ev
 !-1 && 
	`STRNCMP
(
s
, "ex:", (
size_t
)3) == 0) ||

1642 
	`STRNCMP
(
s
, "vi:", (
size_t
)3) == 0 ||

1643 
	`STRNCMP
(
s
, "vim:", (
size_t
)4) == 0)

1646 
¥ev
 = *
s
;

1649 i‡(*
s
)

1652 ++
s
;

1653 
s
[-1] != ':');

1655 
s
 = 
löec›y
 = 
	`°rßve
(s);

1656 i‡(
löec›y
 =
NULL
)

1657  
FAIL
;

1659 
sourcög_ um
 = 
 um
;

1660 
ßve_sourcög_«me
 = 
sourcög_«me
;

1661 
sourcög_«me
 = (
ch¨_u
 *)"modelines";

1663 
íd
 = 
FALSE
;

1664 
íd
 =
FALSE
)

1666 
s
 = 
	`skùwhôe
(s);

1667 i‡(*
s
 =
NUL
)

1673 
e
 = 
s
; (*ê!':' || *” - 1Ë='\\'Ë&& *ê!
NUL
; ++e)

1675 i‡(*
e
 =
NUL
)

1676 
íd
 = 
TRUE
;

1684 i‡(
	`STRNCMP
(
s
, "£à", (
size_t
)4) == 0)

1686 i‡(*
e
 != ':')

1688 
íd
 = 
TRUE
;

1689 
s
 += 4;

1692 *
e
 = 
NUL
;

1693 i‡(
	`do_£t
(
s
Ë=
FAIL
)

1695 
ªtvÆ
 = 
FAIL
;

1698 
s
 = 
e
 + 1;

1701 
sourcög_ um
 = 0;

1702 
sourcög_«me
 = 
ßve_sourcög_«me
;

1704 
	`vim_‰ì
(
löec›y
);

1706  
ªtvÆ
;

1707 
	}
}

	@src/charset.c

9 
	~"vim.h
"

10 
	~"globÆs.h
"

11 
	~"¥Ÿo.h
"

12 
	~"›ti⁄.h
"

21 
ch¨_u
 
	gch¨èb
[256];

22 
	gch¨èb_öôülized
 = 
FALSE
;

24 
	#CHAR_MASK
 0x3

	)

25 
	#CHAR_ID
 0x4

	)

26 
	#CHAR_IF
 0x8

	)

38 
	$öô_ch¨èb
()

40 
c
;

41 
c2
;

42 
ch¨_u
 *
p
;

43 
i
;

44 
tûde
;

45 
do_ißÕha
;

52 
c
 = 0;

53 
c
 < ' ')

54 
ch¨èb
[
c
++] = 2;

55 
c
 <= '~')

56 
ch¨èb
[
c
++] = 1;

57 
c
 < 256)

58 
ch¨èb
[
c
++] = 2;

63 i‡(
curbuf
 !
NULL
)

64 
c
 = 0; c < 256; ++c)

65 
curbuf
->
b_ch¨èb
[
c
] = 
FALSE
;

70 i‡(
curbuf
->
b_p_li•
)

71 
curbuf
->
b_ch¨èb
['-'] = 
TRUE
;

77 
i
 = 0; i < 4; ++i)

79 i‡(
i
 == 0)

80 
p
 = 
p_isi
;

81 i‡(
i
 == 1)

82 
p
 = 
p_i•
;

83 i‡(
i
 == 2)

84 
p
 = 
p_isf
;

86 
p
 = 
curbuf
->
b_p_isk
;

88 *
p
)

90 
tûde
 = 
FALSE
;

91 
do_ißÕha
 = 
FALSE
;

92 i‡(*
p
 ='^' &&Ö[1] !
NUL
)

94 
tûde
 = 
TRUE
;

95 ++
p
;

97 i‡(
	`isdigô
(*
p
))

98 
c
 = 
	`gëdigôs
(&
p
);

100 
c
 = *
p
++;

101 
c2
 = -1;

102 i‡(*
p
 ='-' &&Ö[1] !
NUL
)

104 ++
p
;

105 i‡(
	`isdigô
(*
p
))

106 
c2
 = 
	`gëdigôs
(&
p
);

108 
c2
 = *
p
++;

110 i‡(
c
 < 0 || (
c2
 < c && c2 != -1) || c2 >= 256 ||

111 !(*
p
 =
NUL
 || *p == ','))

112  
FAIL
;

114 i‡(
c2
 == -1)

121 i‡(
c
 == '@')

123 
do_ißÕha
 = 
TRUE
;

124 
c
 = 1;

125 
c2
 = 255;

128 
c2
 = 
c
;

130 
c
 <
c2
)

132 i‡(!
do_ißÕha
 || 
	`ißÕha
(
c
))

134 i‡(
i
 == 0)

136 i‡(
tûde
)

137 
ch¨èb
[
c
] &~
CHAR_ID
;

139 
ch¨èb
[
c
] |
CHAR_ID
;

141 i‡(
i
 == 1)

143 i‡(
c
 < ' ' || c > '~')

144 
ch¨èb
[
c
] = (ch¨èb[c] & ~
CHAR_MASK
) +

145 (
tûde
 ? 2 : 1);

147 i‡(
i
 == 2)

149 i‡(
tûde
)

150 
ch¨èb
[
c
] &~
CHAR_IF
;

152 
ch¨èb
[
c
] |
CHAR_IF
;

155 
curbuf
->
b_ch¨èb
[
c
] = !
tûde
;

157 ++
c
;

159 
p
 = 
	`skù_to_›ti⁄_∑π
(p);

162 
ch¨èb_öôülized
 = 
TRUE
;

163  
OK
;

164 
	}
}

172 
ch¨_u
 *

173 
	$å™sch¨
(
c
)

174 
c
;

176 
ch¨_u
 
buf
[5];

177 
i
;

179 
i
 = 0;

180 i‡(
	`IS_SPECIAL
(
c
))

182 
buf
[0] = '~';

183 
buf
[1] = '@';

184 
i
 = 2;

185 
c
 = 
	`K_SECOND
(c);

187 i‡((!
ch¨èb_öôülized
 && 
c
 >= ' ' && c <= '~') ||

188 (
ch¨èb
[
c
] & 
CHAR_MASK
) == 1)

190 
buf
[
i
] = 
c
;

191 
buf
[
i
 + 1] = 
NUL
;

194 
	`å™sch¨_n⁄¥öt
(
buf
 + 
i
, 
c
);

195  
buf
;

196 
	}
}

199 
	$å™sch¨_n⁄¥öt
(
buf
, 
c
)

200 
ch¨_u
 *
buf
;

201 
c
;

203 i‡(
c
 <= 0x7f)

205 i‡(
c
 =
NL
)

206 
c
 = 
NUL
;

207 
buf
[0] = '^';

208 
buf
[1] = 
c
 ^ 0x40;

209 
buf
[2] = 
NUL
;

211 i‡(
c
 >= ' ' + 0x80 && c <= '~' + 0x80)

213 
buf
[0] = '|';

214 
buf
[1] = 
c
 - 0x80;

215 
buf
[2] = 
NUL
;

219 
buf
[0] = '~';

220 
buf
[1] = (
c
 - 0x80) ^ 0x40;

221 
buf
[2] = 
NUL
;

223 
	}
}

230 
	$ch¨size
(
c
)

231 
c
;

233 i‡(
	`IS_SPECIAL
(
c
))

234  (
ch¨èb
[
	`K_SECOND
(
c
)] & 
CHAR_MASK
) + 2;

235  (
ch¨èb
[
c
] & 
CHAR_MASK
);

236 
	}
}

243 
	$°rsize
(
s
)

244 
ch¨_u
 *
s
;

246 
Àn
 = 0;

248 *
s
)

249 
Àn
 +
	`ch¨size
(*
s
++);

250  
Àn
;

251 
	}
}

260 
	#RET_WIN_BUF_CHARTABSIZE
(
wp
, 
buf
, 
c
, 
cﬁ
) \

261 i‡((
c
Ë=
TAB
 && !(
wp
)->
w_p_li°
) \

263 
ts
; \

264 
ts
 = (
buf
)->
b_p_ts
; \

265  ()(
ts
 - (
cﬁ
 %Ås)); \

268  
	`ch¨size
(
c
);

	)

271 
	$ch¨èbsize
(
c
, 
cﬁ
)

272 
c
;

273 
cﬁƒ_t
 
cﬁ
;

275 
	`RET_WIN_BUF_CHARTABSIZE
(
curwö
, 
curbuf
, 
c
, 
cﬁ
)

276 
	}
}

279 
	$wö_ch¨èbsize
(
wp
, 
c
, 
cﬁ
)

280 
WIN
 *
wp
;

281 
c
;

282 
cﬁƒ_t
 
cﬁ
;

284 
	`RET_WIN_BUF_CHARTABSIZE
(
wp
, wp->
w_buf„r
, 
c
, 
cﬁ
)

285 
	}
}

292 
	$löëabsize
(
s
)

293 
ch¨_u
 *
s
;

295 
cﬁƒ_t
 
cﬁ
 = 0;

297 *
s
 !
NUL
)

298 
cﬁ
 +
	`lbr_ch¨èbsize
(
s
++, col);

299  ()
cﬁ
;

300 
	}
}

307 
	$isidch¨
(
c
)

308 
c
;

310  (
c
 < 0x100 && (
ch¨èb
[c] & 
CHAR_ID
));

311 
	}
}

318 
	$isw‹dch¨
(
c
)

319 
c
;

321  (
c
 < 0x100 && 
curbuf
->
b_ch¨èb
[c]);

322 
	}
}

328 
	$isfûech¨
(
c
)

329 
c
;

331  (
c
 < 0x100 && (
ch¨èb
[c] & 
CHAR_IF
));

332 
	}
}

338 
	$i•rötch¨
(
c
)

339 
c
;

341  (
c
 < 0x100 && (
ch¨èb
[c] & 
CHAR_MASK
) == 1);

342 
	}
}

348 
	$lbr_ch¨èbsize
(
s
, 
cﬁ
)

349 *
s
;

350 
cﬁƒ_t
 
cﬁ
;

352 i‡(!
curwö
->
w_p_lbr
 && *
p_sbr
 =
NUL
)

353 
	`RET_WIN_BUF_CHARTABSIZE
(
curwö
, 
curbuf
, *
s
, 
cﬁ
)

355  
	`wö_lbr_ch¨èbsize
(
curwö
, 
s
, 
cﬁ
, 
NULL
);

356 
	}
}

364 
	$wö_lbr_ch¨èbsize
(
wp
, 
s
, 
cﬁ
, 
hód
)

365 
WIN
 *
wp
;

366 *
s
;

367 
cﬁƒ_t
 
cﬁ
;

368 *
hód
;

370 
c
 = *
s
;

371 
size
;

372 
cﬁƒ_t
 
cﬁ2
;

373 
cﬁƒ_t
 
cﬁmax
;

374 
added
;

375 
numbîexåa
;

380 i‡(!
wp
->
w_p_lbr
 && *
p_sbr
 =
NUL
)

381 
	`RET_WIN_BUF_CHARTABSIZE
(
wp
, wp->
w_buf„r
, 
c
, 
cﬁ
)

386 
size
 = 
	`wö_ch¨èbsize
(
wp
, 
c
, 
cﬁ
);

391 i‡(
wp
->
w_p_lbr
 && 
	`isbªak
(
c
Ë&& !isbªak(
s
[1]) &&

392 !
wp
->
w_p_li°
 && wp->
w_p_wøp
)

394 
numbîexåa
 = 
curwö
->
w_p_nu
? 8: 0;

397 
cﬁ2
 = 
cﬁ
;

398 
cﬁmax
 = (((
cﬁ
 + 
numbîexåa
Ë/ 
Cﬁumns
) + 1) * Columns;

399 (
c
 = *++
s
Ë!
NUL
 && (
	`isbªak
(c) ||

400 (!
	`isbªak
(
c
Ë&& (
cﬁ2
 =
cﬁ
 || !isbªak(
s
[-1])))))

402 
cﬁ2
 +
	`wö_ch¨èbsize
(
wp
, 
c
, col2);

403 i‡(
cﬁ2
 + 
numbîexåa
 >
cﬁmax
)

405 
size
 = 
Cﬁumns
 - ((
cﬁ
 + 
numbîexåa
) % Columns);

415 
added
 = 0;

416 i‡(*
p_sbr
 !
NUL
 && 
wp
->
w_p_wøp
 && 
cﬁ
)

418 
numbîexåa
 = 
curwö
->
w_p_nu
? 8: 0;

419 
cﬁ
 = (cﬁ + 
numbîexåa
Ë% 
Cﬁumns
;

420 i‡(
cﬁ
 =0 || cﬁ + 
size
 > (
cﬁƒ_t
)
Cﬁumns
)

422 
added
 = 
	`STRLEN
(
p_sbr
);

423 
size
 +
added
;

424 i‡(
cﬁ
 != 0)

425 
added
 = 0;

428 i‡(
hód
 !
NULL
)

429 *
hód
 = 
added
;

430  
size
;

431 
	}
}

440 
	$gëvcﬁ
(
wp
, 
pos
, 
°¨t
, 
curs‹
, 
íd
)

441 
WIN
 *
wp
;

442 
FPOS
 *
pos
;

443 
cﬁƒ_t
 *
°¨t
;

444 
cﬁƒ_t
 *
curs‹
;

445 
cﬁƒ_t
 *
íd
;

447 
cﬁ
;

448 
cﬁƒ_t
 
vcﬁ
;

449 
ch¨_u
 *
±r
;

450 
ö¸
;

451 
hód
;

452 
ts
 = 
wp
->
w_buf„r
->
b_p_ts
;

453 
c
;

455 
vcﬁ
 = 0;

456 
±r
 = 
	`ml_gë_buf
(
wp
->
w_buf„r
, 
pos
->
 um
, 
FALSE
);

462 i‡(!
wp
->
w_p_li°
 && !wp->
w_p_lbr
 && *
p_sbr
 =
NUL
)

464 
hód
 = 0;

465 
cﬁ
 = 
pos
->cﬁ; ; --cﬁ, ++
±r
)

467 
c
 = *
±r
;

469 i‡(
c
 =
NUL
)

471 
ö¸
 = 1;

475 i‡(
c
 =
TAB
)

476 
ö¸
 = 
ts
 - (
vcﬁ
 %Ås);

478 
ö¸
 = 
	`ch¨size
(
c
);

480 i‡(
cﬁ
 == 0)

483 
vcﬁ
 +
ö¸
;

488 
cﬁ
 = 
pos
->cﬁ; ; --cﬁ, ++
±r
)

491 
hód
 = 0;

492 
ö¸
 = 
	`wö_lbr_ch¨èbsize
(
wp
, 
±r
, 
vcﬁ
, &
hód
);

494 i‡(*
±r
 =
NUL
)

496 
ö¸
 = 1;

500 i‡(
cﬁ
 == 0)

503 
vcﬁ
 +
ö¸
;

506 i‡(
°¨t
 !
NULL
)

507 *
°¨t
 = 
vcﬁ
 + 
hód
;

508 i‡(
íd
 !
NULL
)

509 *
íd
 = 
vcﬁ
 + 
ö¸
 - 1;

510 i‡(
curs‹
 !
NULL
)

512 i‡(*
±r
 =
TAB
 && (
Sèã
 & 
NORMAL
Ë&& !
wp
->
w_p_li°
)

513 *
curs‹
 = 
vcﬁ
 + 
ö¸
 - 1;

515 *
curs‹
 = 
vcﬁ
 + 
hód
;

517 
	}
}

	@src/cmdcmds.c

13 
	~"vim.h
"

14 
	~"globÆs.h
"

15 
	~"¥Ÿo.h
"

16 
	~"›ti⁄.h
"

18 #ifde‡
USE_TMPNAM


19 
	#mkãmp
(
a
Ë
	`tm≤am
◊)

	)

22 *
mkãmp
 
__ARGS
((*));

24 #ifde‡
VIMINFO


25 
ch¨_u
 *
vimöfo_fûíame
 
__ARGS
((char_u *));

26 
do_vimöfo
 
__ARGS
((
FILE
 *
Â_ö
, FILE *
Â_out
, 
w™t_öfo
, 
w™t_m¨ks
, 
f‹˚_ªad
));

27 
ªad_vimöfo_up_to_m¨ks
 
__ARGS
((
ch¨_u
 *
löe
, 
FILE
 *
Â
, 
f‹˚
));

31 
	$do_ascii
()

33 
c
;

34 
buf1
[20];

35 
buf2
[20];

36 
ch¨_u
 
buf3
[3];

38 
c
 = 
	`gch¨_curs‹
();

39 i‡(
c
 =
NL
)

40 
c
 = 
NUL
;

41 i‡(
	`i•rötch¨
(
c
) && (c < ' ' || c > '~'))

43 
	`å™sch¨_n⁄¥öt
(
buf3
, 
c
);

44 
	`•rötf
(
buf1
, " <%s>", (*)
buf3
);

47 
buf1
[0] = 
NUL
;

48 i‡(
c
 >= 0x80)

49 
	`•rötf
(
buf2
, " <M-%s>", 
	`å™sch¨
(
c
 & 0x7f));

51 
buf2
[0] = 
NUL
;

52 
	`•rötf
((*)
IObuff
, "<%s>%s%s %d, Hex %02x, Octal %03o",

53 
	`å™sch¨
(
c
), 
buf1
, 
buf2
, c, c, c);

54 
	`msg
(
IObuff
);

55 
	}
}

64 
	$do_Æign
(
°¨t
, 
íd
, 
width
, 
ty≥
)

65 
löír_t
 
°¨t
;

66 
löír_t
 
íd
;

67 
width
;

68 
ty≥
;

70 
FPOS
 
pos
;

71 
Àn
;

72 
ödít
 = 0;

73 
√w_ödít
 = 0;

74 
ch¨_u
 *
fú°
;

75 
ch¨_u
 *
œ°
;

76 
ßve
;

78 #ifde‡
RIGHTLEFT


79 i‡(
curwö
->
w_p_æ
)

80 
ty≥
 = -type;

83 
pos
 = 
curwö
->
w_curs‹
;

84 i‡(
ty≥
 == -1)

86 i‡(
width
 >= 0)

87 
ödít
 = 
width
;

96 i‡(
width
 <= 0)

97 
width
 = 
curbuf
->
b_p_tw
;

98 i‡(
width
 =0 && 
curbuf
->
b_p_wm
 > 0)

99 
width
 = 
Cﬁumns
 - 
curbuf
->
b_p_wm
;

100 i‡(
width
 <= 0)

101 
width
 = 80;

104 i‡(
	`u_ßve
((
löír_t
)(
°¨t
 - 1), (löír_t)(
íd
 + 1)Ë=
FAIL
)

106 
curwö
->
w_curs‹
.
 um
 = 
°¨t
;

107 
curwö
->
w_curs‹
.
 um
 <
íd
; ++curwin->w_cursor.lnum)

110 
fú°
 = 
	`skùwhôe
(
	`ml_gë_cuæöe
());

112 
œ°
 = 
fú°
 + 
	`STRLEN
(first);

113 
œ°
 > 
fú°
 && 
	`vim_iswhôe
(last[-1]); --last)

115 
ßve
 = *
œ°
;

116 *
œ°
 = 
NUL
;

117 
Àn
 = 
	`löëabsize
(
fú°
);

118 *
œ°
 = 
ßve
;

119 i‡(
Àn
 == 0)

121 
ty≥
)

123 -1: 
√w_ödít
 = 
ödít
;

125 0: 
√w_ödít
 = (
width
 - 
Àn
) / 2;

127 1: 
√w_ödít
 = 
width
 - 
Àn
;

130 i‡(
√w_ödít
 < 0)

131 
√w_ödít
 = 0;

132 
	`£t_ödít
(
√w_ödít
, 
TRUE
);

134 
curwö
->
w_curs‹
 = 
pos
;

135 
	`begölöe
(
TRUE
);

136 
	`upd©eS¸ìn
(
NOT_VALID
);

137 
	}
}

140 
	$do_ªèb
(
°¨t
, 
íd
, 
√w_ts
, 
f‹˚
)

141 
löír_t
 
°¨t
;

142 
löír_t
 
íd
;

143 
√w_ts
;

144 
f‹˚
;

146 
löír_t
 
 um
;

147 
gŸ_èb
 = 
FALSE
;

148 
num_•a˚s
 = 0;

149 
num_èbs
;

150 
Àn
;

151 
cﬁ
;

152 
vcﬁ
;

153 
°¨t_cﬁ
 = 0;

154 
°¨t_vcﬁ
 = 0;

155 
ãmp
;

156 
ﬁd_Àn
;

157 
ch¨_u
 *
±r
;

158 
ch¨_u
 *
√w_löe
 = (char_u *)1;

159 
did_somëhög
 = 
FALSE
;

160 
did_undo
;

162 i‡(
√w_ts
 == 0)

163 
√w_ts
 = 
curbuf
->
b_p_ts
;

164 
 um
 = 
°¨t
; !
gŸ_öt
 &&Ünum <
íd
; ++lnum)

166 
±r
 = 
	`ml_gë
(
 um
);

167 
cﬁ
 = 0;

168 
vcﬁ
 = 0;

169 
did_undo
 = 
FALSE
;

172 i‡(
	`vim_iswhôe
(
±r
[
cﬁ
]))

174 i‡(!
gŸ_èb
 && 
num_•a˚s
 == 0)

177 
°¨t_vcﬁ
 = 
vcﬁ
;

178 
°¨t_cﬁ
 = 
cﬁ
;

180 i‡(
±r
[
cﬁ
] == ' ')

181 
num_•a˚s
++;

183 
gŸ_èb
 = 
TRUE
;

187 i‡(
gŸ_èb
 || (
f‹˚
 && 
num_•a˚s
 > 1))

192 
Àn
 = 
num_•a˚s
 = 
vcﬁ
 - 
°¨t_vcﬁ
;

193 
num_èbs
 = 0;

194 i‡(!
curbuf
->
b_p_ë
)

196 
ãmp
 = 
√w_ts
 - (
°¨t_vcﬁ
 %Çew_ts);

197 i‡(
num_•a˚s
 >
ãmp
)

199 
num_•a˚s
 -
ãmp
;

200 
num_èbs
++;

202 
num_èbs
 +
num_•a˚s
 / 
√w_ts
;

203 
num_•a˚s
 -“um_•a˚†/ 
√w_ts
) *Çew_ts;

205 i‡(
curbuf
->
b_p_ë
 || 
gŸ_èb
 ||

206 (
num_•a˚s
 + 
num_èbs
 < 
Àn
))

208 i‡(
did_undo
 =
FALSE
)

210 
did_undo
 = 
TRUE
;

211 i‡(
	`u_ßve
((
löír_t
)(
 um
 - 1),

212 (
löír_t
)(
 um
 + 1)Ë=
FAIL
)

214 
√w_löe
 = 
NULL
;

220 
Àn
 = 
num_•a˚s
 + 
num_èbs
;

221 
ﬁd_Àn
 = 
	`STRLEN
(
±r
);

222 
√w_löe
 = 
	`œŒoc
(
ﬁd_Àn
 - 
cﬁ
 + 
°¨t_cﬁ
 + 
Àn
 + 1,

223 
TRUE
);

224 i‡(
√w_löe
 =
NULL
)

226 i‡(
°¨t_cﬁ
 > 0)

227 
	`vim_memmove
(
√w_löe
, 
±r
, (
size_t
)
°¨t_cﬁ
);

228 
	`vim_memmove
(
√w_löe
 + 
°¨t_cﬁ
 + 
Àn
,

229 
±r
 + 
cﬁ
, (
size_t
)(
ﬁd_Àn
 - col + 1));

230 
±r
 = 
√w_löe
 + 
°¨t_cﬁ
;

231 
cﬁ
 = 0; cﬁ < 
Àn
; col++)

232 
±r
[
cﬁ
] = (cﬁ < 
num_èbs
) ? '\t' : ' ';

233 
	`ml_ª∂a˚
(
 um
, 
√w_löe
, 
FALSE
);

234 
did_somëhög
 = 
TRUE
;

235 
±r
 = 
√w_löe
;

236 
cﬁ
 = 
°¨t_cﬁ
 + 
Àn
;

239 
gŸ_èb
 = 
FALSE
;

240 
num_•a˚s
 = 0;

242 i‡(
±r
[
cﬁ
] =
NUL
)

244 
vcﬁ
 +
	`ch¨èbsize
(
±r
[
cﬁ
++], (
cﬁƒ_t
)vcol);

246 i‡(
√w_löe
 =
NULL
)

248 
	`löe_bªakcheck
();

250 i‡(
gŸ_öt
)

251 
	`emsg
(
e_öãº
);

252 i‡(
did_somëhög
)

253 
CHANGED
;

254 
curbuf
->
b_p_ts
 = 
√w_ts
;

255 
	`cﬁadv™˚
(
curwö
->
w_cursw™t
);

256 
	}
}

264 
	$do_move
(
löe1
, 
löe2
, 
n
)

265 
löír_t
 
löe1
;

266 
löír_t
 
löe2
;

267 
löír_t
 
n
;

269 
ch¨_u
 *
°r
;

270 
löír_t
 
l
;

271 
löír_t
 
exåa
;

272 
löír_t
 
num_löes
;

273 
löír_t
 
œ°_löe
;

274 
has_m¨k
;

276 i‡(
n
 >
löe1
 &&Ç < 
löe2
)

278 
	`EMSG
("MoveÜines intoÅhemselves");

279  
FAIL
;

282 
num_löes
 = 
löe2
 - 
löe1
 + 1;

287 i‡(
	`u_ßve
(
n
,Ç + 1Ë=
FAIL
)

288  
FAIL
;

289 
exåa
 = 0, 
l
 = 
löe1
;Ü <
löe2
;Ü++)

291 
°r
 = 
	`°rßve
(
	`ml_gë
(
l
 + 
exåa
));

292 i‡(
°r
 !
NULL
)

294 
has_m¨k
 = 
	`ml_has_m¨k
(
l
 + 
exåa
);

295 
	`ml_≠≥nd
(
n
 + 
l
 - 
löe1
, 
°r
, (
cﬁƒ_t
)0, 
FALSE
);

296 
	`vim_‰ì
(
°r
);

297 i‡(
has_m¨k
)

298 
	`ml_£tm¨ked
(
n
 + 
l
 - 
löe1
 + 1);

299 i‡(
n
 < 
löe1
)

300 
exåa
++;

319 
œ°_löe
 = 
curbuf
->
b_ml
.
ml_löe_cou¡
;

320 
	`m¨k_adju°
(
löe1
, 
löe2
, 
œ°_löe
 -Üine2, 0L);

321 i‡(
n
 >
löe2
)

322 
	`m¨k_adju°
(
löe2
 + 1, 
n
, -
num_löes
, 0L);

324 
	`m¨k_adju°
(
n
 + 1, 
löe1
 - 1, 
num_löes
, 0L);

325 
	`m¨k_adju°
(
œ°_löe
 - 
num_löes
 + 1,Üast_line,

326 -(
œ°_löe
 - 
n
 - 
exåa
), 0L);

331 i‡(
	`u_ßve
(
löe1
 + 
exåa
 - 1, 
löe2
 +Éxå®+ 1Ë=
FAIL
)

332  
FAIL
;

334 
l
 = 
löe1
;Ü <
löe2
;Ü++)

335 
	`ml_dñëe
(
löe1
 + 
exåa
, 
TRUE
);

337 
CHANGED
;

338 i‡(!
globÆ_busy
 && 
num_löes
 > 
p_ªp‹t
)

339 
	`smsg
((
ch¨_u
 *)"%ldÜöe%†moved", 
num_löes
, 
	`∂uøl
(num_lines));

340  
OK
;

341 
	}
}

347 
	$do_c›y
(
löe1
, 
löe2
, 
n
)

348 
löír_t
 
löe1
;

349 
löír_t
 
löe2
;

350 
löír_t
 
n
;

352 
löír_t
 
 um
;

353 
ch¨_u
 *
p
;

355 
	`m¨k_adju°
(
n
 + 1, 
MAXLNUM
, 
löe2
 - 
löe1
 + 1, 0L);

368 i‡(
	`u_ßve
(
n
,Ç + 1Ë=
FAIL
)

370 
curwö
->
w_curs‹
.
 um
 = 
n
;

371 
 um
 = 
löe2
 - 
löe1
 + 1;

372 
löe1
 <
löe2
)

376 
p
 = 
	`°rßve
(
	`ml_gë
(
löe1
));

377 i‡(
p
 !
NULL
)

379 
	`ml_≠≥nd
(
curwö
->
w_curs‹
.
 um
, 
p
, (
cﬁƒ_t
)0, 
FALSE
);

380 
	`vim_‰ì
(
p
);

383 i‡(
löe1
 =
n
)

384 
löe1
 = 
curwö
->
w_curs‹
.
 um
;

385 ++
löe1
;

386 i‡(
curwö
->
w_curs‹
.
 um
 < 
löe1
)

387 ++
löe1
;

388 i‡(
curwö
->
w_curs‹
.
 um
 < 
löe2
)

389 ++
löe2
;

390 ++
curwö
->
w_curs‹
.
 um
;

392 
CHANGED
;

393 
	`msgm‹e
(()
 um
);

394 
	}
}

402 
	$do_b™g
(
addr_cou¡
, 
löe1
, 
löe2
, 
f‹˚ô
, 
¨g
, 
do_ö
, 
do_out
)

403 
addr_cou¡
;

404 
löír_t
 
löe1
, 
löe2
;

405 
f‹˚ô
;

406 
ch¨_u
 *
¨g
;

407 
do_ö
, 
do_out
;

409 
ch¨_u
 *
¥evcmd
 = 
NULL
;

410 
ch¨_u
 *
√wcmd
 = 
NULL
;

411 
ös_¥evcmd
;

412 
ch¨_u
 *
t
;

413 
ch¨_u
 *
p
;

414 
ch¨_u
 *
åaû¨g
;

415 
Àn
;

416 
s¸ﬁl_ßve
 = 
msg_s¸ﬁl
;

422 i‡(
£cuª
)

424 
£cuª
 = 2;

425 
	`emsg
(
e_curdú
);

429 i‡(
addr_cou¡
 == 0)

431 
msg_s¸ﬁl
 = 
FALSE
;

432 
	`autowrôe_Æl
();

433 
msg_s¸ﬁl
 = 
s¸ﬁl_ßve
;

440 
ös_¥evcmd
 = 
f‹˚ô
;

441 
åaû¨g
 = 
¨g
;

444 
Àn
 = 
	`STRLEN
(
åaû¨g
) + 1;

445 i‡(
√wcmd
 !
NULL
)

446 
Àn
 +
	`STRLEN
(
√wcmd
);

447 i‡(
ös_¥evcmd
)

449 i‡(
¥evcmd
 =
NULL
)

451 
	`emsg
(
e_n›ªv
);

452 
	`vim_‰ì
(
√wcmd
);

455 
Àn
 +
	`STRLEN
(
¥evcmd
);

457 i‡((
t
 = 
	`Æloc
(
Àn
)Ë=
NULL
)

459 
	`vim_‰ì
(
√wcmd
);

462 *
t
 = 
NUL
;

463 i‡(
√wcmd
 !
NULL
)

464 
	`STRCAT
(
t
, 
√wcmd
);

465 i‡(
ös_¥evcmd
)

466 
	`STRCAT
(
t
, 
¥evcmd
);

467 
p
 = 
t
 + 
	`STRLEN
(t);

468 
	`STRCAT
(
t
, 
åaû¨g
);

469 
	`vim_‰ì
(
√wcmd
);

470 
√wcmd
 = 
t
;

476 
åaû¨g
 = 
NULL
;

477 *
p
)

479 i‡(*
p
 == '!')

481 i‡(
p
 > 
√wcmd
 &&Ö[-1] == '\\')

482 
	`vim_memmove
(
p
 - 1,Ö, (
size_t
)(
	`STRLEN
(p) + 1));

485 
åaû¨g
 = 
p
;

486 *
åaû¨g
++ = 
NUL
;

487 
ös_¥evcmd
 = 
TRUE
;

491 ++
p
;

493 } 
åaû¨g
 !
NULL
);

495 
	`vim_‰ì
(
¥evcmd
);

496 
¥evcmd
 = 
√wcmd
;

498 i‡(
b™gªdo
)

500 
	`AµídToRedobuff
(
¥evcmd
);

501 
	`AµídToRedobuff
((
ch¨_u
 *)"\n");

502 
b™gªdo
 = 
FALSE
;

504 i‡(
addr_cou¡
 == 0)

507 
	`msg_°¨t
();

508 
	`msg_outch¨
(':');

509 
	`msg_outch¨
('!');

510 
	`msg_ouâøns
(
¥evcmd
);

511 
	`msg_˛r_eos
();

512 
	`wödgŸo
(
msg_row
, 
msg_cﬁ
);

514 
	`do_shñl
(
¥evcmd
);

517 
	`do_fûãr
(
löe1
, 
löe2
, 
¥evcmd
, 
do_ö
, 
do_out
);

518 
	}
}

524 
	$do_shñl
(
cmd
)

525 
ch¨_u
 *
cmd
;

527 
BUF
 *
buf
;

528 
ßve_nwr
;

534 i‡(
£cuª
)

536 
£cuª
 = 2;

537 
	`emsg
(
e_curdú
);

538 
	`msg_íd
();

542 #ifde‡
WIN32


546 i‡(
	`ˇn_íd_ãrmˇp_mode
(
TRUE
Ë=
FALSE
)

554 
	`msg_outch¨
('\r');

555 #ifde‡
AUTOCMD


556 i‡(!
autocmd_busy
)

558 
	`°›ãrmˇp
();

559 
	`msg_outch¨
('\n');

562 i‡(
p_w¨n


563 #ifde‡
AUTOCMD


564 && !
autocmd_busy


567 
buf
 = 
fú°buf
; buf; bu‡buf->
b_√xt
)

568 i‡(
buf
->
b_ch™ged
)

570 
	`MSG_OUTSTR
("[No write sinceÜast change]\n");

577 
	`wödgŸo
(
msg_row
, 
msg_cﬁ
);

578 
	`curs‹_⁄
();

579 ()
	`ˇŒ_shñl
(
cmd
, 
SHELL_COOKED
);

580 
√ed_check_time°amps
 = 
TRUE
;

586 
	`msg_pos
(()
Rows
 - 1, 0);

588 #ifde‡
AUTOCMD


589 i‡(!
autocmd_busy
)

597 
ßve_nwr
 = 
no_waô_ªtu∫
;

598 i‡(*
T_TI
 !
NUL
)

599 
no_waô_ªtu∫
 = 
FALSE
;

600 #ifde‡
AMIGA


601 
	`waô_ªtu∫
(
ãrm_c⁄sﬁe
 ? -1 : 
TRUE
);

603 
	`waô_ªtu∫
(
TRUE
);

605 
no_waô_ªtu∫
 = 
ßve_nwr
;

606 
	`°¨âîmˇp
();

615 #ifde‡
AMIGA


616 i‡(
skù_ªdøw
)

617 
mu°_ªdøw
 = 
CLEAR
;

618 i‡(
ãrm_c⁄sﬁe
)

620 
	`OUTSTR
("\033[0 q");

621 i‡(
gŸ_öt
)

622 
mu°_ªdøw
 = 
CLEAR
;

624 
mu°_ªdøw
 = 0;

628 #ifde‡
AUTOCMD


630 
mu°_ªdøw
 = 
CLEAR
;

632 
	}
}

648 
	$do_fûãr
(
löe1
, 
löe2
, 
buff
, 
do_ö
, 
do_out
)

649 
löír_t
 
löe1
, 
löe2
;

650 
ch¨_u
 *
buff
;

651 
do_ö
, 
do_out
;

653 #ifde‡
USE_TMPNAM


654 
ch¨_u
 
ômp
[
L_tm≤am
];

655 
ch¨_u
 
Ÿmp
[
L_tm≤am
];

657 
ch¨_u
 
ômp
[
TMPNAMELEN
];

658 
ch¨_u
 
Ÿmp
[
TMPNAMELEN
];

660 
löír_t
 
löecou¡
;

661 
FPOS
 
curs‹_ßve
;

667 i‡(
£cuª
)

669 
£cuª
 = 2;

670 
	`emsg
(
e_curdú
);

673 i‡(*
buff
 =
NUL
)

676 #ifde‡
WIN32


680 i‡(
	`ˇn_íd_ãrmˇp_mode
(
TRUE
Ë=
FALSE
)

684 
curs‹_ßve
 = 
curwö
->
w_curs‹
;

685 
löecou¡
 = 
löe2
 - 
löe1
 + 1;

686 
curwö
->
w_curs‹
.
 um
 = 
löe1
;

687 
curwö
->
w_curs‹
.
cﬁ
 = 0;

698 #i‚de‡
USE_TMPNAM


699 
	`STRCPY
(
ômp
, 
TMPNAME1
);

700 
	`STRCPY
(
Ÿmp
, 
TMPNAME2
);

703 i‡((
do_ö
 && *
	`mkãmp
((*)
ômp
Ë=
NUL
) ||

704 (
do_out
 && *
	`mkãmp
((*)
Ÿmp
Ë=
NUL
))

706 
	`emsg
(
e_nŸmp
);

714 ++
no_waô_ªtu∫
;

715 i‡(
do_ö
 && 
	`buf_wrôe
(
curbuf
, 
ômp
, 
NULL
, 
löe1
, 
löe2
,

716 
FALSE
, 0, FALSE, 
TRUE
Ë=
FAIL
)

718 
	`msg_outch¨
('\n');

719 --
no_waô_ªtu∫
;

720 ()
	`emsg2
(
e_nŸ¸óã
, 
ômp
);

721 
fûãªnd
;

723 i‡(!
do_out
)

724 
	`msg_outch¨
('\n');

726 #i‡(
	`deföed
(
UNIX
Ë&& !deföed(
ARCHIE
)Ë|| deföed(
OS2
)

730 
	`•rötf
((*)
IObuff
, "(%s)", (*)
buff
);

731 i‡(
do_ö
)

733 
	`STRCAT
(
IObuff
, " < ");

734 
	`STRCAT
(
IObuff
, 
ômp
);

741 
	`STRCPY
(
IObuff
, 
buff
);

742 i‡(
do_ö
)

744 
ch¨_u
 *
p
;

748 
p
 = 
	`vim_°rchr
(
IObuff
, '|');

749 i‡(
p
)

750 *
p
 = 
NUL
;

751 
	`STRCAT
(
IObuff
, " < ");

752 
	`STRCAT
(
IObuff
, 
ômp
);

753 
p
 = 
	`vim_°rchr
(
buff
, '|');

754 i‡(
p
)

755 
	`STRCAT
(
IObuff
, 
p
);

758 i‡(
do_out
)

760 
ch¨_u
 *
p
;

762 i‡((
p
 = 
	`vim_°rchr
(
p_§r
, '%')Ë!
NULL
 &&Ö[1] == 's')

764 
p
 = 
IObuff
 + 
	`STRLEN
(IObuff);

765 *
p
++ = ' ';

766 
	`•rötf
((*)
p
, (*)
p_§r
, (*)
Ÿmp
);

769 
	`•rötf
((*)
IObuff
 + 
	`STRLEN
(IObuff), " %s %s",

770 (*)
p_§r
, (*)
Ÿmp
);

773 
	`wödgŸo
(()
Rows
 - 1, 0);

774 
	`curs‹_⁄
();

783 i‡(!
do_out
 || 
	`STRCMP
(
p_§r
, ">"Ë=0 || !
do_ö
)

784 
mu°_ªdøw
 = 
CLEAR
;

786 
	`ªdøw_œãr
(
NOT_VALID
);

796 i‡(
	`ˇŒ_shñl
(
IObuff
, 
SHELL_FILTER
 | 
SHELL_COOKED
Ë=
FAIL
)

798 
mu°_ªdøw
 = 
CLEAR
;

799 
	`waô_ªtu∫
(
FALSE
);

801 
√ed_check_time°amps
 = 
TRUE
;

803 i‡(
do_out
)

805 i‡(
	`u_ßve
((
löír_t
)(
löe2
), (löír_t)÷öe2 + 1)Ë=
FAIL
)

807 
îr‹
;

809 i‡(
	`ªadfûe
(
Ÿmp
, 
NULL
, 
löe2
, 
FALSE
, (
löír_t
)0, 
MAXLNUM
, 
TRUE
)

810 =
FAIL
)

812 
	`msg_outch¨
('\n');

813 
	`emsg2
(
e_nŸªad
, 
Ÿmp
);

814 
îr‹
;

817 i‡(
do_ö
)

820 
curwö
->
w_curs‹
.
 um
 = 
löe1
;

821 
	`dñlöes
(
löecou¡
, 
TRUE
, TRUE);

822 
curbuf
->
b_›_°¨t
.
 um
 -
löecou¡
;

823 
curbuf
->
b_›_íd
.
 um
 -
löecou¡
;

828 
curwö
->
w_curs‹
.
 um
 = 
curbuf
->
b_›_íd
.lnum;

829 
löecou¡
 = 
curbuf
->
b_›_íd
.
 um
 - curbuf->
b_›_°¨t
.lnum + 1;

831 
	`begölöe
(
TRUE
);

832 --
no_waô_ªtu∫
;

834 i‡(
löecou¡
 > 
p_ªp‹t
)

836 i‡(
do_ö
)

838 
	`•rötf
((*)
msg_buf
, "%ldÜöe†fûãªd", ()
löecou¡
);

839 i‡(
	`msg
(
msg_buf
Ë&& !
msg_s¸ﬁl
)

840 
kìp_msg
 = 
msg_buf
;

843 
	`msgm‹e
(()
löecou¡
);

848 
îr‹
:

850 
curwö
->
w_curs‹
 = 
curs‹_ßve
;

851 --
no_waô_ªtu∫
;

852 
	`waô_ªtu∫
(
FALSE
);

855 
fûãªnd
:

856 
	`vim_ªmove
(
ômp
);

857 
	`vim_ªmove
(
Ÿmp
);

858 
	}
}

860 #ifde‡
VIMINFO


862 
no_vimöfo
 
__ARGS
(());

865 
	$no_vimöfo
()

868  (
u£_vimöfo
 !
NULL
 && 
	`STRCMP
(use_viminfo, "NONE") == 0);

869 
	}
}

876 
	$ªad_vimöfo
(
fûe
, 
w™t_öfo
, 
w™t_m¨ks
, 
f‹˚
)

877 
ch¨_u
 *
fûe
;

878 
w™t_öfo
;

879 
w™t_m¨ks
;

880 
f‹˚
;

882 
FILE
 *
Â
;

884 i‡(
	`no_vimöfo
())

885  
FAIL
;

887 
fûe
 = 
	`vimöfo_fûíame
(file);

888 i‡((
Â
 = 
	`f›í
((*)
fûe
, 
READBIN
)Ë=
NULL
)

889  
FAIL
;

891 
	`do_vimöfo
(
Â
, 
NULL
, 
w™t_öfo
, 
w™t_m¨ks
, 
f‹˚
);

893 
	`f˛o£
(
Â
);

895  
OK
;

896 
	}
}

906 
	$wrôe_vimöfo
(
fûe
, 
f‹˚
)

907 
ch¨_u
 *
fûe
;

908 
f‹˚
;

910 
FILE
 *
Â_ö
 = 
NULL
;

911 
FILE
 *
Â_out
 = 
NULL
;

912 
ch¨_u
 
tm≤ame
[
TMPNAMELEN
];

914 i‡(
	`no_vimöfo
())

917 
	`STRCPY
(
tm≤ame
, 
TMPNAME2
);

918 
fûe
 = 
	`vimöfo_fûíame
(file);

919 
fûe
 = 
	`°rßve
(file);

920 i‡(
fûe
 !
NULL
)

922 
Â_ö
 = 
	`f›í
((*)
fûe
, 
READBIN
);

923 i‡(
Â_ö
 =
NULL
)

924 
Â_out
 = 
	`f›í
((*)
fûe
, 
WRITEBIN
);

925 i‡(*
	`mkãmp
((*)
tm≤ame
Ë!
NUL
)

926 
Â_out
 = 
	`f›í
((*)
tm≤ame
, 
WRITEBIN
);

928 i‡(
fûe
 =
NULL
 || 
Â_out
 == NULL)

930 
	`EMSG2
("C™'àwrôêvimöfÿfûê%s!", 
tm≤ame
);

931 i‡(
Â_ö
 !
NULL
)

932 
	`f˛o£
(
Â_ö
);

933 
	`vim_‰ì
(
fûe
);

937 
	`do_vimöfo
(
Â_ö
, 
Â_out
, !
f‹˚
, !f‹˚, 
FALSE
);

939 
	`f˛o£
(
Â_out
);

940 i‡(
Â_ö
 !
NULL
)

942 
	`f˛o£
(
Â_ö
);

943 i‡(
	`vim_ª«me
(
tm≤ame
, 
fûe
) == -1)

944 
	`vim_ªmove
(
tm≤ame
);

946 
	`vim_‰ì
(
fûe
);

947 
	}
}

949 
ch¨_u
 *

950 
	$vimöfo_fûíame
(
fûe
)

951 
ch¨_u
 *
fûe
;

953 i‡(
fûe
 =
NULL
 || *fûê=
NUL
)

955 
	`ex∑nd_ív
(
u£_vimöfo
 =
NULL
 ? (
ch¨_u
 *)
VIMINFO_FILE
 : use_viminfo,

956 
NameBuff
, 
MAXPATHL
);

957  
NameBuff
;

959  
fûe
;

960 
	}
}

966 
	$do_vimöfo
(
Â_ö
, 
Â_out
, 
w™t_öfo
, 
w™t_m¨ks
, 
f‹˚_ªad
)

967 
FILE
 *
Â_ö
;

968 
FILE
 *
Â_out
;

969 
w™t_öfo
;

970 
w™t_m¨ks
;

971 
f‹˚_ªad
;

973 
cou¡
 = 0;

974 
eof
 = 
FALSE
;

975 
ch¨_u
 *
löe
;

977 i‡((
löe
 = 
	`Æloc
(
LSIZE
)Ë=
NULL
)

980 i‡(
Â_ö
 !
NULL
)

982 i‡(
w™t_öfo
)

983 
eof
 = 
	`ªad_vimöfo_up_to_m¨ks
(
löe
, 
Â_ö
, 
f‹˚_ªad
);

986 !(
eof
 = 
	`vim_fgës
(
löe
, 
LSIZE
, 
Â_ö
)) &&Üine[0] != '>')

989 i‡(
Â_out
 !
NULL
)

992 
	`Ârötf
(
Â_out
, "# This viminfo file was generated by vim\n");

993 
	`Ârötf
(
Â_out
, "# You mayÉdit it if you're careful!\n\n");

994 
	`wrôe_vimöfo_£¨ch_∑âîn
(
Â_out
);

995 
	`wrôe_vimöfo_sub_°rög
(
Â_out
);

996 
	`wrôe_vimöfo_hi°‹y
(
Â_out
);

997 
	`wrôe_vimöfo_ªgi°îs
(
Â_out
);

998 
	`wrôe_vimöfo_fûem¨ks
(
Â_out
);

999 
cou¡
 = 
	`wrôe_vimöfo_m¨ks
(
Â_out
);

1001 i‡(
Â_ö
 !
NULL
 && 
w™t_m¨ks
)

1002 
	`c›y_vimöfo_m¨ks
(
löe
, 
Â_ö
, 
Â_out
, 
cou¡
, 
eof
);

1003 
	`vim_‰ì
(
löe
);

1004 
	}
}

1012 
	$ªad_vimöfo_up_to_m¨ks
(
löe
, 
Â
, 
f‹˚
)

1013 
ch¨_u
 *
löe
;

1014 
FILE
 *
Â
;

1015 
f‹˚
;

1017 
eof
;

1019 
	`¥ï¨e_vimöfo_hi°‹y
(
f‹˚
 ? 9999 : 0);

1020 
eof
 = 
	`vim_fgës
(
löe
, 
LSIZE
, 
Â
);

1021 !
eof
 && 
löe
[0] != '>')

1023 
löe
[0])

1025 
NUL
:

1029 
eof
 = 
	`vim_fgës
(
löe
, 
LSIZE
, 
Â
);

1032 
eof
 = 
	`ªad_vimöfo_ªgi°î
(
löe
, 
Â
, 
f‹˚
);

1037 
eof
 = 
	`ªad_vimöfo_£¨ch_∑âîn
(
löe
, 
Â
, 
f‹˚
);

1040 
eof
 = 
	`ªad_vimöfo_sub_°rög
(
löe
, 
Â
, 
f‹˚
);

1044 
eof
 = 
	`ªad_vimöfo_hi°‹y
(
löe
, 
Â
);

1050 
eof
 = 
	`ªad_vimöfo_fûem¨k
(
löe
, 
Â
, 
f‹˚
);

1055 
eof
 = 
	`vim_fgës
(
löe
, 
LSIZE
, 
Â
);

1059 
	`EMSG2
("vimöfo: IŒegÆ sèπög ch¨ i¿löê%s", 
löe
);

1060 
eof
 = 
	`vim_fgës
(
löe
, 
LSIZE
, 
Â
);

1064 
	`föish_vimöfo_hi°‹y
();

1065  
eof
;

1066 
	}
}

1075 
	$vimöfo_ªad°rög
(
p
)

1076 
ch¨_u
 *
p
;

1078 *
p
 !
NUL
 && *p != '\n')

1080 i‡(*
p
 =
	`Cål
('V'))

1082 i‡(
p
[1] == 'n')

1083 
p
[0] = '\n';

1084 
	`vim_memmove
(
p
 + 1,Ö + 2, 
	`STRLEN
(p));

1086 ++
p
;

1088 *
p
 = 
NUL
;

1089 
	}
}

1098 
	$vimöfo_wrôe°rög
(
fd
, 
p
)

1099 
FILE
 *
fd
;

1100 
ch¨_u
 *
p
;

1102 
c
;

1104 (
c
 = *
p
++Ë!
NUL
)

1106 i‡(
c
 =
	`Cål
('V') || c == '\n')

1108 
	`putc
(
	`Cål
('V'), 
fd
);

1109 i‡(
c
 == '\n')

1110 
c
 = 'n';

1112 
	`putc
(
c
, 
fd
);

1114 
	`putc
('\n', 
fd
);

1115 
	}
}

1125 
	$do_fixdñ
()

1127 
ch¨_u
 *
p
;

1129 
p
 = 
	`föd_ãrmcode
((
ch¨_u
 *)"kb");

1130 
	`add_ãrmcode
((
ch¨_u
 *)"kD", 
p
 !
NULL
 && *p == 0x7f ?

1131 (
ch¨_u
 *)"\010" : (char_u *)"\177");

1132 
	}
}

1135 
	$¥öt_löe
(
 um
, 
u£_numbî
)

1136 
löír_t
 
 um
;

1137 
u£_numbî
;

1139 
ch¨_u
 
numbuf
[20];

1141 
	`msg_outch¨
('\n');

1142 i‡(
curwö
->
w_p_nu
 || 
u£_numbî
)

1144 
	`•rötf
((*)
numbuf
, "%7ld ", ()
 um
);

1145 
	`£t_highlight
('n');

1146 
	`°¨t_highlight
();

1147 
	`msg_out°r
(
numbuf
);

1148 
	`°›_highlight
();

1150 
	`msg_¥t_löe
(
	`ml_gë
(
 um
));

1151 
	}
}

1157 
	$do_fûe
(
¨g
, 
f‹˚ô
)

1158 
ch¨_u
 *
¨g
;

1159 
f‹˚ô
;

1161 
ch¨_u
 *
‚ame
, *
s‚ame
;

1162 
BUF
 *
buf
;

1164 i‡(*
¨g
 !
NUL
)

1171 
‚ame
 = 
curbuf
->
b_fûíame
;

1172 
s‚ame
 = 
curbuf
->
b_sfûíame
;

1173 
curbuf
->
b_fûíame
 = 
NULL
;

1174 
curbuf
->
b_sfûíame
 = 
NULL
;

1175 i‡(
	`£t‚ame
(
¨g
, 
NULL
, 
TRUE
Ë=
FAIL
)

1177 
curbuf
->
b_fûíame
 = 
‚ame
;

1178 
curbuf
->
b_sfûíame
 = 
s‚ame
;

1181 
curbuf
->
b_nŸedôed
 = 
TRUE
;

1182 
buf
 = 
	`buÊi°_√w
(
‚ame
, 
s‚ame
, 
curwö
->
w_curs‹
.
 um
, 
FALSE
);

1183 i‡(
buf
 !
NULL
)

1184 
curwö
->
w_Æt_‚um
 = 
buf
->
b_‚um
;

1185 
	`vim_‰ì
(
‚ame
);

1186 
	`vim_‰ì
(
s‚ame
);

1189 
	`fûeöfo
(
did_cd
, 
FALSE
, 
f‹˚ô
);

1190 
	}
}

	@src/cmdline.c

13 
	~"vim.h
"

14 
	~"globÆs.h
"

15 
	~"¥Ÿo.h
"

16 
	~"›ti⁄.h
"

17 
	~"cmdèb.h
"

18 
	~"›s.h
"

19 #ifde‡
HAVE_FCNTL_H


20 
	~<f˙é.h
>

26 
ch¨_u
 *
	gcmdbuff
;

27 
	gcmdbufÊí
;

28 
	gcmdÀn
;

29 
	gcmdpos
;

30 
	gcmd•os
;

31 
	gcmdfú°c
;

37 
	govî°rike
 = 
FALSE
;

43 
löír_t
 
	glöe1
, 
	glöe2
;

45 
	gf‹˚ô
;

46 
	gªg«me
;

47 
	gquôm‹e
 = 0;

48 
	gcmd_numfûes
 = -1;

55 
	gch¨_u
 **(
	ghi°‹y
[2]Ë{
NULL
, NULL};

56 
	ghisidx
[2] = {-1, -1};

57 
	ghi¶í
 = 0;

59 #ifde‡
RIGHTLEFT


60 
	gcmd_hkm≠
 = 0;

63 
öô_hi°‹y
 
__ARGS
(());

65 
is_ö_hi°‹y
 
__ARGS
((, 
ch¨_u
 *, ));

66 
putcmdlöe
 
__ARGS
(());

67 
ªdøwcmd
 
__ARGS
(());

68 
curs‹cmd
 
__ARGS
(());

69 
ccheck_abbr
 
__ARGS
(());

70 
ch¨_u
 *
do_⁄e_cmd
 
__ARGS
((char_u **, *, ));

71 
buf_wrôe_Æl
 
__ARGS
((
BUF
 *));

72 
do_wrôe
 
__ARGS
((
ch¨_u
 *, ));

73 
ch¨_u
 *
gë¨gcmd
 
__ARGS
((char_u **));

74 
back¶ash_hÆve
 
__ARGS
((
ch¨_u
 *
p
, 
ex∑nd_wûdˇrds
));

75 
do_make
 
__ARGS
((
ch¨_u
 *));

76 
do_¨gli°
 
__ARGS
((
ch¨_u
 *));

77 
is_back¶ash
 
__ARGS
((
ch¨_u
 *
°r
));

78 
check_ªad⁄ly
 
__ARGS
(());

79 
check_ch™ged
 
__ARGS
((
BUF
 *, , ));

80 
check_ch™ged_™y
 
__ARGS
(());

81 
check_m‹e
 
__ARGS
(());

82 
vim_°∫˝y
 
__ARGS
((
ch¨_u
 *, char_u *, ));

83 
√xtwûd
 
__ARGS
(());

84 
showm©ches
 
__ARGS
((
ch¨_u
 *));

85 
löír_t
 
gë_addªss
 
__ARGS
((
ch¨_u
 **));

86 
£t_ex∑nd_c⁄ãxt
 
__ARGS
((, 
ch¨_u
 *));

87 
ch¨_u
 *
£t_⁄e_cmd_c⁄ãxt
 
__ARGS
((, char_u *));

88 
Ex∑ndFromC⁄ãxt
 
__ARGS
((
ch¨_u
 *, *, char_u ***, , ));

89 
Ex∑ndComm™ds
 
__ARGS
((
ªgexp
 *, *, 
ch¨_u
 ***));

95 
	$öô_hi°‹y
()

97 
√wÀn
;

98 
ch¨_u
 **
ãmp
;

99 
i
;

100 
j
;

101 
ty≥
;

106 
√wÀn
 = ()
p_hi
;

107 i‡(
√wÀn
 !
hi¶í
)

109 
ty≥
 = 0;Åype <= 1; ++type)

111 i‡(
√wÀn
)

112 
ãmp
 = (
ch¨_u
 **)
	`œŒoc
((
l⁄g_u
)(
√wÀn
 * (char_u *)),

113 
TRUE
);

115 
ãmp
 = 
NULL
;

116 i‡(
√wÀn
 =0 || 
ãmp
 !
NULL
)

118 i‡(
hisidx
[
ty≥
] < 0)

120 
i
 = 0; i < 
√wÀn
; ++i)

121 
ãmp
[
i
] = 
NULL
;

123 i‡(
√wÀn
 > 
hi¶í
)

125 
i
 = 0; i <
hisidx
[
ty≥
]; ++i)

126 
ãmp
[
i
] = 
hi°‹y
[
ty≥
][i];

127 
j
 = 
i
;

128  ; 
i
 <
√wÀn
 - (
hi¶í
 - 
hisidx
[
ty≥
]); ++i)

129 
ãmp
[
i
] = 
NULL
;

130  ; 
j
 < 
hi¶í
; ++
i
, ++j)

131 
ãmp
[
i
] = 
hi°‹y
[
ty≥
][
j
];

135 
j
 = 
hisidx
[
ty≥
];

136 
i
 = 
√wÀn
 - 1; ; --i)

138 i‡(
i
 >= 0)

139 
ãmp
[
i
] = 
hi°‹y
[
ty≥
][
j
];

141 
	`vim_‰ì
(
hi°‹y
[
ty≥
][
j
]);

142 i‡(--
j
 < 0)

143 
j
 = 
hi¶í
 - 1;

144 i‡(
j
 =
hisidx
[
ty≥
])

147 
hisidx
[
ty≥
] = 
√wÀn
 - 1;

149 
	`vim_‰ì
(
hi°‹y
[
ty≥
]);

150 
hi°‹y
[
ty≥
] = 
ãmp
;

153 
hi¶í
 = 
√wÀn
;

155 
	}
}

163 
	$is_ö_hi°‹y
(
ty≥
, 
°r
, 
move_to_‰⁄t
)

164 
ty≥
;

165 
ch¨_u
 *
°r
;

166 
move_to_‰⁄t
;

168 
i
;

169 
œ°_i
 = -1;

171 i‡(
hisidx
[
ty≥
] < 0)

172  
FALSE
;

173 
i
 = 
hisidx
[
ty≥
];

176 i‡(
hi°‹y
[
ty≥
][
i
] =
NULL
)

177  
FALSE
;

178 i‡(
	`STRCMP
(
°r
, 
hi°‹y
[
ty≥
][
i
]) == 0)

180 i‡(!
move_to_‰⁄t
)

181  
TRUE
;

182 
œ°_i
 = 
i
;

185 i‡(--
i
 < 0)

186 
i
 = 
hi¶í
 - 1;

187 } 
i
 !
hisidx
[
ty≥
]);

189 i‡(
œ°_i
 >= 0)

191 
°r
 = 
hi°‹y
[
ty≥
][
i
];

192 
i
 !
hisidx
[
ty≥
])

194 i‡(++
i
 >
hi¶í
)

195 
i
 = 0;

196 
hi°‹y
[
ty≥
][
œ°_i
] = hi°‹y[ty≥][
i
];

197 
œ°_i
 = 
i
;

199 
hi°‹y
[
ty≥
][
i
] = 
°r
;

200  
TRUE
;

202  
FALSE
;

203 
	}
}

211 
	$add_to_hi°‹y
(
hi°y≥
, 
√w_íåy
)

212 
hi°y≥
;

213 
ch¨_u
 *
√w_íåy
;

215 i‡(
hi¶í
 !0 && !
	`is_ö_hi°‹y
(
hi°y≥
, 
√w_íåy
, 
TRUE
))

217 i‡(++
hisidx
[
hi°y≥
] =
hi¶í
)

218 
hisidx
[
hi°y≥
] = 0;

219 
	`vim_‰ì
(
hi°‹y
[
hi°y≥
][
hisidx
[histype]]);

220 
hi°‹y
[
hi°y≥
][
hisidx
[hi°y≥]] = 
	`°rßve
(
√w_íåy
);

222 
	}
}

235 
ch¨_u
 *

236 
	$gëcmdlöe
(
fú°c
, 
cou¡
)

237 
fú°c
;

238 
cou¡
;

240 
c
;

241 #ifde‡
DIGRAPHS


242 
cc
;

244 
i
;

245 
j
;

246 
ch¨_u
 *
p
;

247 
his˙t
;

248 
ch¨_u
 *
lookf‹
 = 
NULL
;

249 
gŸesc
 = 
FALSE
;

250 
do_abbr
;

251 
hi°y≥
;

252 
FPOS
 
ﬁd_curs‹
;

253 
cﬁƒ_t
 
ﬁd_cursw™t
;

254 
did_öc£¨ch
 = 
FALSE
;

255 
öc£¨ch_po°p⁄ed
 = 
FALSE
;

256 
ßve_msg_s¸ﬁl
 = 
msg_s¸ﬁl
;

257 
some_key_ty≥d
 = 
FALSE
;

258 #ifde‡
USE_MOUSE


261 
ign‹e_døg_ªÀa£
 = 
TRUE
;

264 
ovî°rike
 = 
FALSE
;

265 
ﬁd_curs‹
 = 
curwö
->
w_curs‹
;

266 
ﬁd_cursw™t
 = 
curwö
->
w_cursw™t
;

270 
cmdfú°c
 = 
fú°c
;

271 
	`Æloc_cmdbuff
(0);

272 i‡(
cmdbuff
 =
NULL
)

273  
NULL
;

274 
cmdÀn
 = 
cmdpos
 = 0;

275 
cmd•os
 = 1;

276 
Sèã
 = 
CMDLINE
;

277 #ifde‡
USE_MOUSE


278 
	`£tmou£
();

280 
	`gŸocmdlöe
(
TRUE
);

281 
	`msg_outch¨
(
fú°c
);

286 
msg_s¸ﬁl
 = 
FALSE
;

288 
	`öô_hi°‹y
();

289 
his˙t
 = 
hi¶í
;

290 
hi°y≥
 = (
fú°c
 == ':' ? 0 : 1);

292 #ifde‡
DIGRAPHS


293 
	`do_digøph
(-1);

299 
	`curs‹cmd
();

300 
c
 = 
	`vgëc
();

301 i‡(
KeyTy≥d
)

303 
some_key_ty≥d
 = 
TRUE
;

304 #ifde‡
RIGHTLEFT


305 i‡(
cmd_hkm≠
)

306 
c
 = 
	`hkm≠
(c);

309 i‡(
c
 =
	`Cål
('C'))

310 
gŸ_öt
 = 
FALSE
;

314 i‡(
lookf‹
 && 
c
 !
K_S_DOWN
 && c !
K_S_UP
 &&

315 
c
 !
K_DOWN
 && c !
K_UP
 &&

316 
c
 !
K_PAGEDOWN
 && c !
K_PAGEUP
 &&

317 (
cmd_numfûes
 > 0 || (
c
 !
	`Cål
('P') && c != Ctrl('N'))))

319 
	`vim_‰ì
(
lookf‹
);

320 
lookf‹
 = 
NULL
;

326 i‡(
c
 !
p_wc
 && c =
K_S_TAB
)

327 
c
 = 
	`Cål
('P');

330 i‡(
cmd_numfûes
 !-1 && !(
c
 =
p_wc
 && 
KeyTy≥d
Ë&& c !
	`Cål
('N') &&

331 
c
 !
	`Cål
('P') && c != Ctrl('A') && c != Ctrl('L'))

332 ()
	`Ex∑ndO√
(
NULL
, NULL, 0, 
WILD_FREE
);

334 #ifde‡
DIGRAPHS


335 
c
 = 
	`do_digøph
(c);

338 i‡(
c
 ='\n' || c ='\r' || (¯=
ESC
 && (!
KeyTy≥d
 ||

339 
	`vim_°rchr
(
p_˝o
, 
CPO_ESC
Ë!
NULL
)))

341 i‡(
	`ccheck_abbr
(
c
 + 
ABBR_OFF
))

342 
cmdlöe_ch™ged
;

343 
	`outch¨
('\r');

344 
s¸ìn_cur_cﬁ
 = 0;

345 
	`Êushbuf
();

352 i‡(
c
 =
p_wc
 && !
gŸesc
 && 
KeyTy≥d
)

354 i‡(
cmd_numfûes
 > 0)

355 
i
 = 
	`√xtwûd
(
WILD_NEXT
);

357 
i
 = 
	`√xtwûd
(
WILD_EXPAND_KEEP
);

358 i‡(
c
 =
ESC
)

359 
gŸesc
 = 
TRUE
;

360 i‡(
i
)

361 
cmdlöe_ch™ged
;

363 
gŸesc
 = 
FALSE
;

365 i‡(
c
 =
NUL
 || c =
K_ZERO
)

366 
c
 = 
NL
;

368 
do_abbr
 = 
TRUE
;

369 
c
)

371 
K_BS
:

372 
	`Cål
('H'):

373 
K_DEL
:

374 
	`Cål
('W'):

379 i‡(
c
 =
K_DEL
 && 
cmdpos
 !
cmdÀn
)

380 ++
cmdpos
;

381 i‡(
cmdpos
 > 0)

383 
j
 = 
cmdpos
;

384 i‡(
c
 =
	`Cål
('W'))

386 
cmdpos
 && 
	`vim_is•a˚
(
cmdbuff
[cmdpos - 1]))

387 --
cmdpos
;

388 
i
 = 
	`isw‹dch¨
(
cmdbuff
[
cmdpos
 - 1]);

389 
cmdpos
 && !
	`vim_is•a˚
(
cmdbuff
[cmdpos - 1]) &&

390 
	`isw‹dch¨
(
cmdbuff
[
cmdpos
 - 1]Ë=
i
)

391 --
cmdpos
;

394 --
cmdpos
;

395 
cmdÀn
 -
j
 - 
cmdpos
;

396 
i
 = 
cmdpos
;

397 
i
 < 
cmdÀn
)

398 
cmdbuff
[
i
++] = cmdbuff[
j
++];

399 
	`ªdøwcmd
();

401 i‡(
cmdÀn
 =0 && 
c
 !
	`Cål
('W'))

403 
	`vim_‰ì
(
cmdbuff
);

404 
cmdbuff
 = 
NULL
;

405 
	`msg_pos
(-1, 0);

406 
	`msg_outch¨
(' ');

407 
ªdøw_cmdlöe
 = 
TRUE
;

408 
ªtu∫cmd
;

410 
cmdlöe_ch™ged
;

412 
K_INS
:

413 
ovî°rike
 = !overstrike;

415 
cmdlöe_nŸ_ch™ged
;

418 
	`Cål
('U'):

419 
cmdpos
 = 0;

420 
cmdÀn
 = 0;

421 
cmd•os
 = 1;

422 
	`ªdøwcmd
();

423 
cmdlöe_ch™ged
;

425 
ESC
:

426 
	`Cål
('C'):

427 
gŸesc
 = 
TRUE
;

429 
ªtu∫cmd
;

431 
	`Cål
('R'):

432 
	`putcmdlöe
('"');

433 ++
no_m≠pög
;

434 
c
 = 
	`vgëc
();

435 --
no_m≠pög
;

436 i‡(
c
 !
ESC
)

437 
	`cmdlöe_∑°e
(
c
);

438 
	`ªdøwcmd
();

439 
cmdlöe_ch™ged
;

441 
	`Cål
('D'):

443 i‡(
	`showm©ches
(
cmdbuff
Ë=
FAIL
)

446 
	`ªdøwcmd
();

450 
K_RIGHT
:

451 
K_S_RIGHT
:

454 i‡(
cmdpos
 >
cmdÀn
)

456 
cmd•os
 +
	`ch¨size
(
cmdbuff
[
cmdpos
]);

457 ++
cmdpos
;

459 
c
 =
K_S_RIGHT
 && 
cmdbuff
[
cmdpos
] != ' ');

460 
cmdlöe_nŸ_ch™ged
;

462 
K_LEFT
:

463 
K_S_LEFT
:

466 i‡(
cmdpos
 <= 0)

468 --
cmdpos
;

469 
cmd•os
 -
	`ch¨size
(
cmdbuff
[
cmdpos
]);

471 
c
 =
K_S_LEFT
 && 
cmdbuff
[
cmdpos
 - 1] != ' ');

472 
cmdlöe_nŸ_ch™ged
;

474 #ifde‡
USE_MOUSE


475 
K_MIDDLEDRAG
:

476 
K_MIDDLERELEASE
:

477 
K_IGNORE
:

478 
cmdlöe_nŸ_ch™ged
;

480 
K_MIDDLEMOUSE
:

481 #ifde‡
USE_GUI


483 i‡(!
gui
.
ö_u£
)

485 i‡(!
	`mou£_has
(
MOUSE_COMMAND
))

486 
cmdlöe_nŸ_ch™ged
;

487 #ifde‡
USE_GUI


488 i‡(
gui
.
ö_u£
 && 
y™kbuf„r
 == 0)

489 
	`cmdlöe_∑°e
('*');

492 
	`cmdlöe_∑°e
(
y™kbuf„r
);

493 
	`ªdøwcmd
();

494 
cmdlöe_ch™ged
;

496 
K_LEFTDRAG
:

497 
K_LEFTRELEASE
:

498 
K_RIGHTDRAG
:

499 
K_RIGHTRELEASE
:

500 i‡(
ign‹e_døg_ªÀa£
)

501 
cmdlöe_nŸ_ch™ged
;

503 
K_LEFTMOUSE
:

504 
K_RIGHTMOUSE
:

505 i‡(
c
 =
K_LEFTRELEASE
 || c =
K_RIGHTRELEASE
)

506 
ign‹e_døg_ªÀa£
 = 
TRUE
;

508 
ign‹e_døg_ªÀa£
 = 
FALSE
;

509 #ifde‡
USE_GUI


511 i‡(!
gui
.
ö_u£
)

513 i‡(!
	`mou£_has
(
MOUSE_COMMAND
))

514 
cmdlöe_nŸ_ch™ged
;

515 
cmd•os
 = 1;

516 
cmdpos
 = 0; cmdpo†< 
cmdÀn
; ++cmdpos)

518 
i
 = 
	`ch¨size
(
cmdbuff
[
cmdpos
]);

519 i‡(
mou£_row
 <
cmdlöe_row
 + 
cmd•os
 / 
Cﬁumns
 &&

520 
mou£_cﬁ
 < 
cmd•os
 % 
Cﬁumns
 + 
i
)

522 
cmd•os
 +
i
;

524 
cmdlöe_nŸ_ch™ged
;

527 #ifde‡
USE_GUI


528 
K_SCROLLBAR
:

529 i‡(!
msg_s¸ﬁÀd
)

531 
	`gui_do_s¸ﬁl
();

532 
	`ªdøwcmd
();

534 
cmdlöe_nŸ_ch™ged
;

536 
K_HORIZ_SCROLLBAR
:

537 i‡(!
msg_s¸ﬁÀd
)

539 
	`gui_do_h‹iz_s¸ﬁl
();

540 
	`ªdøwcmd
();

542 
cmdlöe_nŸ_ch™ged
;

545 
	`Cål
('B'):

546 
K_HOME
:

547 
cmdpos
 = 0;

548 
cmd•os
 = 1;

549 
cmdlöe_nŸ_ch™ged
;

551 
	`Cål
('E'):

552 
K_END
:

553 
cmdpos
 = 
cmdÀn
;

554 
cmdbuff
[
cmdÀn
] = 
NUL
;

555 
cmd•os
 = 
	`°rsize
(
cmdbuff
) + 1;

556 
cmdlöe_nŸ_ch™ged
;

558 
	`Cål
('A'):

559 i‡(!
	`√xtwûd
(
WILD_ALL
))

561 
cmdlöe_ch™ged
;

563 
	`Cål
('L'):

564 i‡(!
	`√xtwûd
(
WILD_LONGEST
))

566 
cmdlöe_ch™ged
;

568 
	`Cål
('N'):

569 
	`Cål
('P'):

570 i‡(
cmd_numfûes
 > 0)

572 i‡(!
	`√xtwûd
((
c
 =
	`Cål
('P')Ë? 
WILD_PREV
 : 
WILD_NEXT
))

574 
cmdlöe_ch™ged
;

577 
K_UP
:

578 
K_DOWN
:

579 
K_S_UP
:

580 
K_S_DOWN
:

581 
K_PAGEUP
:

582 
K_PAGEDOWN
:

583 i‡(
hi¶í
 == 0)

584 
cmdlöe_nŸ_ch™ged
;

586 
i
 = 
his˙t
;

589 
cmdbuff
[
cmdpos
] = 
NUL
;

590 i‡(
lookf‹
 =
NULL
 && (lookf‹ = 
	`°rßve
(
cmdbuff
)) == NULL)

591 
cmdlöe_nŸ_ch™ged
;

593 
j
 = 
	`STRLEN
(
lookf‹
);

597 i‡(
c
 =
K_UP
 || c =
K_S_UP
 || c =
	`Cål
('P') ||

598 
c
 =
K_PAGEUP
)

600 i‡(
his˙t
 =
hi¶í
)

601 
his˙t
 = 
hisidx
[
hi°y≥
];

602 i‡(
his˙t
 =0 && 
hisidx
[
hi°y≥
] !
hi¶í
 - 1)

603 
his˙t
 = 
hi¶í
 - 1;

604 i‡(
his˙t
 !
hisidx
[
hi°y≥
] + 1)

605 --
his˙t
;

608 
his˙t
 = 
i
;

615 i‡(
his˙t
 =
hisidx
[
hi°y≥
])

617 
his˙t
 = 
hi¶í
;

621 i‡(
his˙t
 =
hi¶í
)

623 i‡(
his˙t
 =
hi¶í
 - 1)

624 
his˙t
 = 0;

626 ++
his˙t
;

628 i‡(
his˙t
 < 0 || 
hi°‹y
[
hi°y≥
][his˙t] =
NULL
)

630 
his˙t
 = 
i
;

633 i‡((
c
 !
K_UP
 && c !
K_DOWN
Ë|| 
his˙t
 =
i
 ||

634 
	`STRNCMP
(
hi°‹y
[
hi°y≥
][
his˙t
],

635 
lookf‹
, (
size_t
)
j
) == 0)

639 i‡(
his˙t
 !
i
)

641 
	`vim_‰ì
(
cmdbuff
);

642 i‡(
his˙t
 =
hi¶í
)

643 
p
 = 
lookf‹
;

645 
p
 = 
hi°‹y
[
hi°y≥
][
his˙t
];

647 
	`Æloc_cmdbuff
(()
	`STRLEN
(
p
));

648 i‡(
cmdbuff
 =
NULL
)

649 
ªtu∫cmd
;

650 
	`STRCPY
(
cmdbuff
, 
p
);

652 
cmdpos
 = 
cmdÀn
 = 
	`STRLEN
(
cmdbuff
);

653 
	`ªdøwcmd
();

654 
cmdlöe_ch™ged
;

656 
	`bìp_Êush
();

657 
cmdlöe_nŸ_ch™ged
;

659 
	`Cål
('V'):

660 
	`Cål
('Q'):

661 #ifde‡
USE_MOUSE


662 
ign‹e_døg_ªÀa£
 = 
TRUE
;

664 
	`putcmdlöe
('^');

665 
c
 = 
	`gë_lôîÆ
();

666 
do_abbr
 = 
FALSE
;

669 #ifde‡
DIGRAPHS


670 
	`Cål
('K'):

671 #ifde‡
USE_MOUSE


672 
ign‹e_døg_ªÀa£
 = 
TRUE
;

674 
	`putcmdlöe
('?');

675 ++
no_m≠pög
;

676 ++
Ælow_keys
;

677 
c
 = 
	`vgëc
();

678 --
no_m≠pög
;

679 --
Ælow_keys
;

680 i‡(
c
 !
ESC
)

682 i‡(
	`IS_SPECIAL
(
c
))

684 i‡(
	`ch¨size
(
c
) == 1)

685 
	`putcmdlöe
(
c
);

686 ++
no_m≠pög
;

687 ++
Ælow_keys
;

688 
cc
 = 
	`vgëc
();

689 --
no_m≠pög
;

690 --
Ælow_keys
;

691 i‡(
cc
 !
ESC
)

693 
c
 = 
	`gëdigøph
(c, 
cc
, 
TRUE
);

697 
	`ªdøwcmd
();

698 
cmdlöe_nŸ_ch™ged
;

701 #ifde‡
RIGHTLEFT


702 
	`Cål
('_'):

703 
cmd_hkm≠
 = !cmd_hkmap;

704 
cmdlöe_nŸ_ch™ged
;

713 i‡(!
	`IS_SPECIAL
(
c
))

714 
mod_mask
 = 0x0;

720 i‡(
do_abbr
 && (
	`IS_SPECIAL
(
c
Ë|| !
	`isw‹dch¨
(c)Ë&& 
	`ccheck_abbr
(c))

721 
cmdlöe_ch™ged
;

726 i‡(
	`IS_SPECIAL
(
c
Ë|| 
mod_mask
 != 0x0)

727 
	`put_⁄_cmdlöe
(
	`gë_•ecül_key_«me
(
c
, 
mod_mask
), -1, 
TRUE
);

730 
IObuff
[0] = 
c
;

731 
	`put_⁄_cmdlöe
(
IObuff
, 1, 
TRUE
);

733 
cmdlöe_ch™ged
;

743 
cmdlöe_nŸ_ch™ged
:

744 i‡(!
öc£¨ch_po°p⁄ed
)

747 
cmdlöe_ch™ged
:

748 i‡(
p_is
 && (
fú°c
 == '/' || firstc == '?'))

751 i‡(
	`ch¨_avaû
())

753 
öc£¨ch_po°p⁄ed
 = 
TRUE
;

756 
öc£¨ch_po°p⁄ed
 = 
FALSE
;

757 
curwö
->
w_curs‹
 = 
ﬁd_curs‹
;

760 i‡(
cmdÀn
 == 0)

761 
i
 = 0;

764 
cmdbuff
[
cmdÀn
] = 
NUL
;

765 
emsg_off
 = 
TRUE
;

766 
i
 = 
	`do_£¨ch
(
fú°c
, 
cmdbuff
, 
cou¡
,

767 
SEARCH_KEEP
 + 
SEARCH_OPT
 + 
SEARCH_NOOF
);

768 
emsg_off
 = 
FALSE
;

770 i‡(
i
)

772 
highlight_m©ch
 = 
TRUE
;

773 
	`cursupd©e
();

777 
highlight_m©ch
 = 
FALSE
;

780 
	`upd©eS¸ìn
(
NOT_VALID
);

781 
	`ªdøwcmdlöe
();

782 
did_öc£¨ch
 = 
TRUE
;

786 
ªtu∫cmd
:

787 i‡(
did_öc£¨ch
)

789 
curwö
->
w_curs‹
 = 
ﬁd_curs‹
;

790 
curwö
->
w_cursw™t
 = 
ﬁd_cursw™t
;

791 
highlight_m©ch
 = 
FALSE
;

792 
	`ªdøw_œãr
(
NOT_VALID
);

794 i‡(
cmdbuff
 !
NULL
)

799 
cmdbuff
[
cmdÀn
] = 
NUL
;

800 i‡(
cmdÀn
 !0 && (
some_key_ty≥d
 || 
fú°c
 != ':'))

802 
	`add_to_hi°‹y
(
hi°y≥
, 
cmdbuff
);

803 i‡(
fú°c
 == ':')

805 
	`vim_‰ì
(
√w_œ°_cmdlöe
);

806 
√w_œ°_cmdlöe
 = 
	`°rßve
(
cmdbuff
);

810 i‡(
gŸesc
)

812 
	`vim_‰ì
(
cmdbuff
);

813 
cmdbuff
 = 
NULL
;

814 
	`MSG
("");

815 
ªdøw_cmdlöe
 = 
TRUE
;

824 
	`msg_check
();

825 
msg_s¸ﬁl
 = 
ßve_msg_s¸ﬁl
;

826 
Sèã
 = 
NORMAL
;

827 #ifde‡
USE_MOUSE


828 
	`£tmou£
();

830  
cmdbuff
;

831 
	}
}

842 
	$put_⁄_cmdlöe
(
°r
, 
Àn
, 
ªdøw
)

843 
ch¨_u
 *
°r
;

844 
Àn
;

845 
ªdøw
;

847 
i
;

849 i‡(
Àn
 < 0)

850 
Àn
 = 
	`STRLEN
(
°r
);

853 i‡(
cmdÀn
 + 
Àn
 + 1 >
cmdbufÊí
)

854 
i
 = 
	`ªÆloc_cmdbuff
(
cmdÀn
 + 
Àn
);

856 
i
 = 
OK
;

857 i‡(
i
 =
OK
)

859 i‡(!
ovî°rike
)

861 
	`vim_memmove
(
cmdbuff
 + 
cmdpos
 + 
Àn
, cmdbuff + cmdpos,

862 (
size_t
)(
cmdÀn
 - 
cmdpos
));

863 
cmdÀn
 +
Àn
;

865 i‡(
cmdpos
 + 
Àn
 > 
cmdÀn
)

866 
cmdÀn
 = 
cmdpos
 + 
Àn
;

867 
	`vim_memmove
(
cmdbuff
 + 
cmdpos
, 
°r
, (
size_t
)
Àn
);

868 i‡(
ªdøw
)

869 
	`msg_ouâøns_Àn
(
cmdbuff
 + 
cmdpos
, 
cmdÀn
 - cmdpos);

870 
cmdpos
 +
Àn
;

871 
Àn
--)

872 
cmd•os
 +
	`ch¨size
(
°r
[
Àn
]);

874 i‡(
ªdøw
)

875 
	`msg_check
();

876  
i
;

877 
	}
}

880 
	$Æloc_cmdbuff
(
Àn
)

881 
Àn
;

886 i‡(
Àn
 < 80)

887 
Àn
 = 100;

889 
Àn
 += 20;

891 
cmdbuff
 = 
	`Æloc
(
Àn
);

892 
cmdbufÊí
 = 
Àn
;

893 
	}
}

900 
	$ªÆloc_cmdbuff
(
Àn
)

901 
Àn
;

903 
ch¨_u
 *
p
;

905 
p
 = 
cmdbuff
;

906 
	`Æloc_cmdbuff
(
Àn
);

907 i‡(
cmdbuff
 =
NULL
)

909 
cmdbuff
 = 
p
;

910  
FAIL
;

912 
	`vim_memmove
(
cmdbuff
, 
p
, (
size_t
)
cmdÀn
);

913 
	`vim_‰ì
(
p
);

914  
OK
;

915 
	}
}

922 
	$putcmdlöe
(
c
)

923 
c
;

925 
ch¨_u
 
buf
[1];

927 
buf
[0] = 
c
;

928 
	`msg_ouâøns_Àn
(
buf
, 1);

929 
	`msg_ouâøns_Àn
(
cmdbuff
 + 
cmdpos
, 
cmdÀn
 - cmdpos);

930 
	`curs‹cmd
();

931 
	}
}

938 
	$ªdøwcmdlöe
()

940 
msg_s¸ﬁÀd
 = 0;

941 
√ed_waô_ªtu∫
 = 
FALSE
;

942 
	`compuã_cmdrow
();

943 
	`ªdøwcmd
();

944 
	`curs‹cmd
();

945 
	}
}

948 
	$compuã_cmdrow
()

950 
cmdlöe_row
 = 
œ°wö
->
w_wöpos
 +Üa°wö->
w_height
 +

951 
œ°wö
->
w_°©us_height
;

952 
	}
}

958 
	$ªdøwcmd
()

960 
i
;

962 
	`msg_°¨t
();

963 
	`msg_outch¨
(
cmdfú°c
);

964 
	`msg_ouâøns_Àn
(
cmdbuff
, 
cmdÀn
);

965 
	`msg_˛r_eos
();

967 
cmd•os
 = 1;

968 
i
 = 0; i < 
cmdÀn
 && i < 
cmdpos
; ++i)

969 
cmd•os
 +
	`ch¨size
(
cmdbuff
[
i
]);

974 
msg_s¸ﬁl
 = 
FALSE
;

975 #ifde‡
SLEEP_IN_EMSG


976 
√ed_¶ìp
 = 
FALSE
;

978 
	}
}

981 
	$curs‹cmd
()

983 
	`msg_pos
(
cmdlöe_row
 + (
cmd•os
 / ()
Cﬁumns
), cmdspos % ()Columns);

984 
	`wödgŸo
(
msg_row
, 
msg_cﬁ
);

985 
	}
}

994 
	$ccheck_abbr
(
c
)

995 
c
;

997 i‡(
p_∑°e
 || 
no_abbr
)

998  
FALSE
;

1000  
	`check_abbr
(
c
, 
cmdbuff
, 
cmdpos
, 0);

1001 
	}
}

1017 
	$do_cmdlöe
(
cmdlöe
, 
sourcög
, 
ª≥©ög
)

1018 
ch¨_u
 *
cmdlöe
;

1019 
sourcög
;

1020 
ª≥©ög
;

1022 
cmdlöñí
;

1023 
ch¨_u
 *
√xtcomm
;

1024 
ªcursive
 = 0;

1025 
gŸ_cmdlöe
 = 
FALSE
;

1026 
msg_didout_bef‹e_°¨t
;

1033 i‡(
cmdlöe
 =
NULL
)

1035 i‡((
cmdlöe
 = 
	`gëcmdlöe
(':', 1L)Ë=
NULL
)

1038 
√ed_waô_ªtu∫
 = 
FALSE
;

1039  
FAIL
;

1041 
gŸ_cmdlöe
 = 
TRUE
;

1046 
	`Æloc_cmdbuff
(()
	`STRLEN
(
cmdlöe
));

1047 i‡(
cmdbuff
 =
NULL
)

1048  
FAIL
;

1049 
	`STRCPY
(
cmdbuff
, 
cmdlöe
);

1050 
cmdlöe
 = 
cmdbuff
;

1052 
cmdlöñí
 = 
cmdbufÊí
;

1059 
msg_didout_bef‹e_°¨t
 = 
msg_didout
;

1060 i‡(!
ª≥©ög
 && !
ªcursive
)

1062 
msg_did™y
 = 
FALSE
;

1063 
	`msg_°¨t
();

1064 
msg_s¸ﬁl
 = 
TRUE
;

1065 #ifde‡
SLEEP_IN_EMSG


1066 ++
d⁄t_¶ìp
;

1068 ++
no_waô_ªtu∫
;

1069 ++
RedøwögDißbÀd
;

1077 ++
ªcursive
;

1080 
√xtcomm
 = 
	`do_⁄e_cmd
(&
cmdlöe
, &
cmdlöñí
, 
sourcög
);

1081 i‡(
√xtcomm
 =
NULL
)

1083 
	`STRCPY
(
cmdlöe
, 
√xtcomm
);

1085 --
ªcursive
;

1086 
	`vim_‰ì
(
cmdlöe
);

1093 i‡(!
ª≥©ög
 && !
ªcursive
)

1095 --
RedøwögDißbÀd
;

1096 #ifde‡
SLEEP_IN_EMSG


1097 --
d⁄t_¶ìp
;

1099 --
no_waô_ªtu∫
;

1100 
msg_s¸ﬁl
 = 
FALSE
;

1101 i‡(
√ed_waô_ªtu∫
 || (
	`msg_check
(Ë&& !
d⁄t_waô_ªtu∫
))

1108 
msg_didout
 = 
msg_didout_bef‹e_°¨t
;

1109 
	`waô_ªtu∫
(
FALSE
);

1117 i‡(
gŸ_cmdlöe
 && 
√w_œ°_cmdlöe
 !
NULL
)

1119 
	`vim_‰ì
(
œ°_cmdlöe
);

1120 
œ°_cmdlöe
 = 
√w_œ°_cmdlöe
;

1121 
√w_œ°_cmdlöe
 = 
NULL
;

1123  
OK
;

1124 
	}
}

1126 *(
	gmake_cmd_ch¨s
[6]) =

1148 
ch¨_u
 *

1149 
	$do_⁄e_cmd
(
cmdlöï
, 
cmdlöñíp
, 
sourcög
)

1150 
ch¨_u
 **
cmdlöï
;

1151 *
cmdlöñíp
;

1152 
sourcög
;

1154 
ch¨_u
 *
p
;

1155 
ch¨_u
 *
q
;

1156 
ch¨_u
 *
s
;

1157 
ch¨_u
 *
cmd
, *
¨g
;

1158 
ch¨_u
 *
do_ecmd_cmd
 = 
NULL
;

1159 
löír_t
 
do_ecmd_ um
 = 0;

1160 
i
 = 0;

1161 
Àn
;

1162 
cmdidx
;

1163 
¨gt
;

1164 
löír_t
 
 um
;

1165 
n
 = 0;

1166 
addr_cou¡
;

1167 
FPOS
 
pos
;

1168 
≠≥nd
 = 
FALSE
;

1169 
u£fûãr
 = 
FALSE
;

1170 
ch¨_u
 *
√xtcomm
 = 
NULL
;

1171 
amou¡
 = 0;

1172 
ch¨_u
 *
îr‹msg
 = 
NULL
;

1173 
WIN
 *
ﬁd_curwö
 = 
NULL
;

1176 i‡(
quôm‹e
)

1177 --
quôm‹e
;

1178 
did_emsg
 = 
FALSE
;

1184 
cmd
 = *
cmdlöï
; 
	`vim_°rchr
((
ch¨_u
 *)" \t:", *cmdË!
NULL
; cmd++)

1187 i‡(*
cmd
 ='"' || *cmd =
NUL
)

1188 
d€nd
;

1207 
addr_cou¡
 = 0;

1208 --
cmd
;

1211 
löe1
 = 
löe2
;

1212 
löe2
 = 
curwö
->
w_curs‹
.
 um
;

1213 
cmd
 = 
	`skùwhôe
(cmd + 1);

1214 
 um
 = 
	`gë_addªss
(&
cmd
);

1215 i‡(
cmd
 =
NULL
)

1216 
d€nd
;

1217 i‡(
 um
 =
MAXLNUM
)

1219 i‡(*
cmd
 == '%')

1221 ++
cmd
;

1222 
löe1
 = 1;

1223 
löe2
 = 
curbuf
->
b_ml
.
ml_löe_cou¡
;

1224 ++
addr_cou¡
;

1226 i‡(*
cmd
 == '*')

1228 
FPOS
 *
Â
;

1230 ++
cmd
;

1231 
Â
 = 
	`gëm¨k
('<', 
FALSE
);

1232 i‡(
	`check_m¨k
(
Â
Ë=
FAIL
)

1233 
d€nd
;

1234 
löe1
 = 
Â
->
 um
;

1235 
Â
 = 
	`gëm¨k
('>', 
FALSE
);

1236 i‡(
	`check_m¨k
(
Â
Ë=
FAIL
)

1237 
d€nd
;

1238 
löe2
 = 
Â
->
 um
;

1239 ++
addr_cou¡
;

1243 
löe2
 = 
 um
;

1244 
addr_cou¡
++;

1246 i‡(*
cmd
 == ';')

1248 i‡(
löe2
 == 0)

1249 
curwö
->
w_curs‹
.
 um
 = 1;

1251 
curwö
->
w_curs‹
.
 um
 = 
löe2
;

1253 } *
cmd
 == ',' || *cmd == ';');

1256 i‡(
addr_cou¡
 == 1)

1258 
löe1
 = 
löe2
;

1260 i‡(
 um
 =
MAXLNUM
)

1261 
addr_cou¡
 = 0;

1271 
cmd
 = 
	`skùwhôe
(cmd);

1272 i‡(*
cmd
 == ':')

1273 
cmd
 = 
	`skùwhôe
(cmd + 1);

1279 i‡(*
cmd
 =
NUL
 || *cmd == '"' ||

1280 ((*
cmd
 == '|' || *cmd == '\n') &&

1281 (
√xtcomm
 = 
cmd
 + 1Ë!
NULL
))

1289 i‡(*
cmd
 == '|')

1291 
cmdidx
 = 
CMD_¥öt
;

1292 
cmdswôch
;

1294 i‡(
addr_cou¡
 != 0)

1296 i‡(
löe2
 == 0)

1297 
curwö
->
w_curs‹
.
 um
 = 1;

1298 i‡(
löe2
 > 
curbuf
->
b_ml
.
ml_löe_cou¡
)

1299 
curwö
->
w_curs‹
.
 um
 = 
curbuf
->
b_ml
.
ml_löe_cou¡
;

1301 
curwö
->
w_curs‹
.
 um
 = 
löe2
;

1302 
	`begölöe
(
MAYBE
);

1307 
d€nd
;

1317 i‡(*
cmd
 == 'k')

1319 
cmdidx
 = 
CMD_k
;

1320 
p
 = 
cmd
 + 1;

1322 i‡(*
cmd
 ='s' && 
	`vim_°rchr
((
ch¨_u
 *)"cgr", cmd[1]Ë!
NULL
 &&

1323 
	`STRNCMP
("§e", 
cmd
, (
size_t
)3) != 0)

1325 
cmdidx
 = 
CMD_sub°ôuã
;

1326 
p
 = 
cmd
 + 1;

1330 
p
 = 
cmd
;

1331 
	`ißÕha
(*
p
))

1332 ++
p
;

1334 i‡(
p
 =
cmd
 && 
	`vim_°rchr
((
ch¨_u
 *)"@!=><&~#", *pË!
NULL
)

1335 ++
p
;

1336 
i
 = ()(
p
 - 
cmd
);

1338 
cmdidx
 = 0; cmdidx < 
CMD_SIZE
; ++cmdidx)

1339 i‡(
	`STRNCMP
(
cmd«mes
[
cmdidx
].
cmd_«me
, (*)
cmd
, (
size_t
)
i
) == 0)

1341 i‡(
i
 =0 || 
cmdidx
 =
CMD_SIZE
)

1343 
	`STRCPY
(
IObuff
, "NotánÉditor command");

1344 i‡(!
sourcög
)

1346 
	`STRCAT
(
IObuff
, ": ");

1347 
	`STRNCAT
(
IObuff
, *
cmdlöï
, 40);

1349 
îr‹msg
 = 
IObuff
;

1350 
d€nd
;

1354 i‡(*
p
 == '!')

1356 ++
p
;

1357 
f‹˚ô
 = 
TRUE
;

1360 
f‹˚ô
 = 
FALSE
;

1365 
¨gt
 = 
cmd«mes
[
cmdidx
].
cmd_¨gt
;

1367 i‡(!(
¨gt
 & 
RANGE
Ë&& 
addr_cou¡
)

1369 
îr‹msg
 = 
e_n‹™ge
;

1370 
d€nd
;

1373 i‡(!(
¨gt
 & 
BANG
Ë&& 
f‹˚ô
)

1375 
îr‹msg
 = 
e_nob™g
;

1376 
d€nd
;

1384 i‡(!
globÆ_busy
 && 
löe1
 > 
löe2
)

1386 i‡(
sourcög
)

1388 
îr‹msg
 = (
ch¨_u
 *)"BackwardsÑange given";

1389 
d€nd
;

1391 i‡(
	`ask_ye¢o
((
ch¨_u
 *)"Backw¨d†øngêgiví, OKÅÿsw≠", 
FALSE
) != 'y')

1392 
d€nd
;

1393 
 um
 = 
löe1
;

1394 
löe1
 = 
löe2
;

1395 
löe2
 = 
 um
;

1401 i‡(
löe1
 < 0 || 
löe2
 < 0 ||Üöe1 >Üöe2 || ((
¨gt
 & 
RANGE
) &&

1402 !(
¨gt
 & 
NOTADR
Ë&& 
löe2
 > 
curbuf
->
b_ml
.
ml_löe_cou¡
))

1404 
îr‹msg
 = 
e_övønge
;

1405 
d€nd
;

1408 i‡((
¨gt
 & 
NOTADR
Ë&& 
addr_cou¡
 == 0)

1409 
löe2
 = 1;

1411 i‡(!(
¨gt
 & 
ZEROR
))

1413 i‡(
löe1
 == 0)

1414 
löe1
 = 1;

1415 i‡(
löe2
 == 0)

1416 
löe2
 = 1;

1423 i‡(
cmdidx
 =
CMD_make
)

1425 
	`Æloc_cmdbuff
(()(
	`STRLEN
(
p_mp
Ë+ STRLEN(
p
) + 2));

1426 i‡(
cmdbuff
 =
NULL
)

1427 
d€nd
;

1431 
i
 = 0; i < 6; i += 2)

1432 i‡(!
	`STRCMP
(
make_cmd_ch¨s
[
i
], 
p
))

1433 
s
 = (
ch¨_u
 *)(
make_cmd_ch¨s
[
i
 + 1]); *s; ++s)

1434 
	`msg_outch¨
(*
s
 - 16);

1435 
	`STRCPY
(
cmdbuff
, 
p_mp
);

1436 
	`STRCAT
(
cmdbuff
, " ");

1437 
	`STRCAT
(
cmdbuff
, 
p
);

1439 
	`vim_‰ì
(*
cmdlöï
);

1440 *
cmdlöï
 = 
cmdbuff
;

1441 *
cmdlöñíp
 = 
cmdbufÊí
;

1442 
p
 = 
cmdbuff
;

1449 i‡(
cmdidx
 =
CMD_b™g
)

1450 
¨g
 = 
p
;

1452 
¨g
 = 
	`skùwhôe
(
p
);

1454 i‡(
cmdidx
 =
CMD_wrôe
)

1456 i‡(*
¨g
 == '>')

1458 i‡(*++
¨g
 != '>')

1460 
îr‹msg
 = (
ch¨_u
 *)"Use w or w>>";

1461 
d€nd
;

1463 
¨g
 = 
	`skùwhôe
(arg + 1);

1464 
≠≥nd
 = 
TRUE
;

1466 i‡(*
¨g
 == '!')

1468 ++
¨g
;

1469 
u£fûãr
 = 
TRUE
;

1473 i‡(
cmdidx
 =
CMD_ªad
)

1475 i‡(
f‹˚ô
)

1477 
u£fûãr
 = 
TRUE
;

1478 
f‹˚ô
 = 
FALSE
;

1480 i‡(*
¨g
 == '!')

1482 ++
¨g
;

1483 
u£fûãr
 = 
TRUE
;

1487 i‡(
cmdidx
 =
CMD_lshi·
 || cmdidx =
CMD_rshi·
)

1489 
amou¡
 = 1;

1490 *
¨g
 =*
cmd
)

1492 ++
¨g
;

1493 ++
amou¡
;

1495 
¨g
 = 
	`skùwhôe
(arg);

1502 i‡((
¨gt
 & 
EDITCMD
Ë&& !
u£fûãr
)

1503 
do_ecmd_cmd
 = 
	`gë¨gcmd
(&
¨g
);

1509 i‡((
¨gt
 & 
TRLBAR
Ë&& !
u£fûãr
)

1511 
p
 = 
¨g
; *p; ++p)

1513 i‡(*
p
 =
	`Cål
('V'))

1515 i‡(
¨gt
 & (
USECTRLV
 | 
XFILE
))

1516 ++
p
;

1518 
	`STRCPY
(
p
,Ö + 1);

1519 i‡(*
p
 =
NUL
)

1522 i‡((*
p
 ='"' && !(
¨gt
 & 
NOTRLCOM
)) ||

1523 *
p
 == '|' || *p == '\n')

1529 i‡((
	`vim_°rchr
(
p_˝o
, 
CPO_BAR
Ë=
NULL
 ||

1530 !(
¨gt
 & 
USECTRLV
)Ë&& *(
p
 - 1) == '\\')

1532 
	`STRCPY
(
p
 - 1,Ö);

1533 --
p
;

1537 i‡(*
p
 == '|' || *p == '\n')

1538 
√xtcomm
 = 
p
 + 1;

1539 *
p
 = 
NUL
;

1544 i‡(!(
¨gt
 & 
NOTRLCOM
))

1545 
	`dñ_åaûög_•a˚s
(
¨g
);

1552 i‡(
cmdidx
 =
CMD_b™g
 || 
u£fûãr
)

1554 
p
 = 
¨g
; *p; ++p)

1556 i‡(*
p
 == '\\' &&Ö[1])

1557 ++
p
;

1558 i‡(*
p
 == '\n')

1560 
√xtcomm
 = 
p
 + 1;

1561 *
p
 = 
NUL
;

1567 i‡((
¨gt
 & 
DFLALL
Ë&& 
addr_cou¡
 == 0)

1569 
löe1
 = 1;

1570 
löe2
 = 
curbuf
->
b_ml
.
ml_löe_cou¡
;

1573 
ªg«me
 = 0;

1575 i‡((
¨gt
 & 
REGSTR
Ë&& *
¨g
 !
NUL
 && 
	`is_y™k_buf„r
(*¨g, 
FALSE
) &&

1576 !((
¨gt
 & 
COUNT
Ë&& 
	`isdigô
(*
¨g
)))

1578 
ªg«me
 = *
¨g
;

1579 
¨g
 = 
	`skùwhôe
(arg + 1);

1582 i‡((
¨gt
 & 
COUNT
Ë&& 
	`isdigô
(*
¨g
))

1584 
n
 = 
	`gëdigôs
(&
¨g
);

1585 
¨g
 = 
	`skùwhôe
(arg);

1586 i‡(
n
 <= 0)

1588 
îr‹msg
 = 
e_zîocou¡
;

1589 
d€nd
;

1591 i‡(
¨gt
 & 
NOTADR
)

1593 
löe2
 = 
n
;

1594 i‡(
addr_cou¡
 == 0)

1595 
addr_cou¡
 = 1;

1599 
löe1
 = 
löe2
;

1600 
löe2
 +
n
 - 1;

1601 ++
addr_cou¡
;

1605 i‡(
löe2
 > 
curbuf
->
b_ml
.
ml_löe_cou¡
)

1606 
löe2
 = 
curbuf
->
b_ml
.
ml_löe_cou¡
;

1610 i‡(!(
¨gt
 & 
EXTRA
Ë&& *
¨g
 !
NUL
 &&

1611 
	`vim_°rchr
((
ch¨_u
 *)"|\"", *
¨g
Ë=
NULL
)

1613 
îr‹msg
 = 
e_åaûög
;

1614 
d€nd
;

1617 i‡((
¨gt
 & 
NEEDARG
Ë&& *
¨g
 =
NUL
)

1619 
îr‹msg
 = 
e_¨gªq
;

1620 
d€nd
;

1631 i‡(
¨gt
 & 
XFILE
)

1633 
ch¨_u
 *
buf
 = 
NULL
;

1634 
ex∑nd_wûdˇrds
;

1635 
•ec_idx
;

1636 *(
•ec_°r
[]) =

1639 
	#SPEC_PERC
 0

	)

1641 
	#SPEC_HASH
 1

	)

1643 
	#SPEC_CWORD
 2

	)

1645 
	#SPEC_CCWORD
 3

	)

1647 
	#SPEC_CFILE
 4

	)

1649 
	#SPEC_AFILE
 5

	)

1651 
	#SPEC_COUNT
 6

	)

1658 
ex∑nd_wûdˇrds
 = 
	`mch_has_wûdˇrd
(
¨g
);

1659 
p
 = 
¨g
; *p; ++p)

1664 
•ec_idx
 = 0; s≥c_idx < 
SPEC_COUNT
; ++spec_idx)

1666 
n
 = 
	`°æí
(
•ec_°r
[
•ec_idx
]);

1667 i‡(
	`STRNCMP
(
p
, 
•ec_°r
[
•ec_idx
], 
n
) == 0)

1670 i‡(
•ec_idx
 =
SPEC_COUNT
)

1677 i‡(*(
p
 - 1) == '\\')

1679 --
p
;

1680 
	`STRCPY
(
p
,Ö + 1);

1687 i‡(
•ec_idx
 =
SPEC_CWORD
 || s≥c_idx =
SPEC_CCWORD
)

1689 
Àn
 = 
	`föd_idít_undî_curs‹
(&
q
, 
•ec_idx
 =
SPEC_CWORD
 ?

1690 (
FIND_IDENT
|
FIND_STRING
) : FIND_STRING);

1691 i‡(
Àn
 == 0)

1692 
d€nd
;

1704 
•ec_idx
)

1706 
SPEC_PERC
:

1707 i‡(
curbuf
->
b_fûíame
 =
NULL
)

1709 
îr‹msg
 = (
ch¨_u
 *)"No fileÇameÅo substitute for '%'";

1710 
d€nd
;

1712 
q
 = 
curbuf
->
b_xfûíame
;

1715 
SPEC_HASH
:

1716 
q
 = 
p
 + 1;

1717 
i
 = ()
	`gëdigôs
(&
q
);

1718 
n
 = 
q
 - 
p
;

1720 i‡(
	`buÊi°_«me_ƒ
(
i
, &
q
, &
do_ecmd_ um
) ==

1721 
FAIL
)

1723 
îr‹msg
 = (
ch¨_u
 *)"noálternate filenameÅo substitute for '#'";

1724 
d€nd
;

1728 
SPEC_CFILE
:

1729 
q
 = 
	`fûe_«me_©_curs‹
(
FNAME_MESS
|
FNAME_HYP
);

1730 i‡(
q
 =
NULL
)

1731 
d€nd
;

1732 
buf
 = 
q
;

1735 
SPEC_AFILE
:

1736 
q
 = 
autocmd_‚ame
;

1737 i‡(
q
 =
NULL
)

1739 
îr‹msg
 = (
ch¨_u
 *)"noáutocommand filenameÅo substitute for \"<afile>\"";

1740 
d€nd
;

1745 
Àn
 = 
	`STRLEN
(
q
);

1746 i‡(
p
[
n
] == '<')

1748 ++
n
;

1749 i‡((
s
 = 
	`vim_°ºchr
(
q
, '.')Ë!
NULL
 && s >
	`gëèû
(q))

1750 
Àn
 = 
s
 - 
q
;

1754 
ch¨_u
 *
èû
;

1757 i‡(
p
[
n
] == ':' &&Ö[n + 1] == 'p')

1759 
n
 += 2;

1760 
s
 = 
	`FuŒName_ßve
(
q
);

1761 
	`vim_‰ì
(
buf
);

1762 i‡(
s
 =
NULL
)

1763 
d€nd
;

1764 
q
 = 
s
;

1765 
Àn
 = 
	`STRLEN
(
q
);

1766 
buf
 = 
q
;

1769 
èû
 = 
	`gëèû
(
q
);

1773 
p
[
n
] == ':' &&Ö[n + 1] == 'h')

1775 
n
 += 2;

1776 
èû
 > 
q
 && 
	`i•©h£p
(tail[-1]))

1777 --
èû
;

1778 
Àn
 = 
èû
 - 
q
;

1779 
èû
 > 
q
 && !
	`i•©h£p
(tail[-1]))

1780 --
èû
;

1784 i‡(
p
[
n
] == ':' &&Ö[n + 1] == 't')

1786 
n
 += 2;

1787 
Àn
 -
èû
 - 
q
;

1788 
q
 = 
èû
;

1795 
p
[
n
] == ':' &&

1796 (
p
[
n
 + 1] == 'e' ||Ö[n + 1] == 'r'))

1802 i‡(
p
[
n
 + 1] ='e' && 
q
 > 
èû
)

1803 
s
 = 
q
 - 2;

1805 
s
 = 
q
 + 
Àn
 - 1;

1806  ; 
s
 > 
èû
; --s)

1807 i‡(
s
[0] == '.')

1809 i‡(
p
[
n
 + 1] == 'e')

1811 i‡(
s
 > 
èû
)

1813 
Àn
 +
q
 - (
s
 + 1);

1814 
q
 = 
s
 + 1;

1816 i‡(
q
 <
èû
)

1817 
Àn
 = 0;

1821 i‡(
s
 > 
èû
)

1822 
Àn
 = 
s
 - 
q
;

1824 
n
 += 2;

1836 
i
 = 
	`STRLEN
(*
cmdlöï
Ë+ 
Àn
 + 3;

1837 i‡(
√xtcomm
)

1838 
i
 +
	`STRLEN
(
√xtcomm
);

1839 
	`Æloc_cmdbuff
(
i
);

1840 i‡(
cmdbuff
 =
NULL
)

1841 
d€nd
;

1843 
i
 = 
p
 - *
cmdlöï
;

1844 
	`vim_memmove
(
cmdbuff
, *
cmdlöï
, (
size_t
)
i
);

1845 
	`vim_memmove
(
cmdbuff
 + 
i
, 
q
, (
size_t
)
Àn
);

1846 
i
 +
Àn
;

1847 
	`STRCPY
(
cmdbuff
 + 
i
, 
p
 + 
n
);

1848 
p
 = 
cmdbuff
 + 
i
 - 1;

1849 
	`vim_‰ì
(
buf
);

1851 i‡(
√xtcomm
)

1853 
i
 = 
	`STRLEN
(
cmdbuff
) + 1;

1854 
	`STRCPY
(
cmdbuff
 + 
i
, 
√xtcomm
);

1855 
√xtcomm
 = 
cmdbuff
 + 
i
;

1857 
cmd
 = 
cmdbuff
 + (cmd - *
cmdlöï
);

1858 
¨g
 = 
cmdbuff
 + (¨g - *
cmdlöï
);

1859 
	`vim_‰ì
(*
cmdlöï
);

1860 *
cmdlöï
 = 
cmdbuff
;

1861 *
cmdlöñíp
 = 
cmdbufÊí
;

1868 i‡((
¨gt
 & 
NOSPC
Ë&& !
u£fûãr
)

1870 #i‡
	`deföed
(
UNIX
)

1878 i‡(!
ex∑nd_wûdˇrds
)

1879 
p
 = 
¨g
; *p; ++p)

1882 i‡(
p
[1] && (*∞='\\' || *∞=
	`Cål
('V')))

1883 ++
p
;

1884 i‡(
	`vim_iswhôe
(*
p
))

1886 
îr‹msg
 = (
ch¨_u
 *)"Only one fileÇameállowed";

1887 
d€nd
;

1894 
	`back¶ash_hÆve
(
¨g
, 
ex∑nd_wûdˇrds
);

1896 i‡(
ex∑nd_wûdˇrds
)

1898 i‡((
p
 = 
	`Ex∑ndO√
(
¨g
, 
NULL
, 
WILD_LIST_NOTFOUND
,

1899 
WILD_EXPAND_FREE
)Ë=
NULL
)

1900 
d€nd
;

1901 
n
 = 
¨g
 - *
cmdlöï
;

1902 
i
 = 
	`STRLEN
(
p
Ë+ 
n
;

1903 i‡(
√xtcomm
)

1904 
i
 +
	`STRLEN
(
√xtcomm
);

1905 
	`Æloc_cmdbuff
(
i
);

1906 i‡(
cmdbuff
 !
NULL
)

1908 
	`STRNCPY
(
cmdbuff
, *
cmdlöï
, 
n
);

1909 
	`STRCPY
(
cmdbuff
 + 
n
, 
p
);

1910 i‡(
√xtcomm
)

1912 
i
 = 
	`STRLEN
(
cmdbuff
) + 1;

1913 
	`STRCPY
(
cmdbuff
 + 
i
, 
√xtcomm
);

1914 
√xtcomm
 = 
cmdbuff
 + 
i
;

1916 
cmd
 = 
cmdbuff
 + (cmd - *
cmdlöï
);

1917 
¨g
 = 
cmdbuff
 + 
n
;

1918 
	`vim_‰ì
(*
cmdlöï
);

1919 *
cmdlöï
 = 
cmdbuff
;

1920 *
cmdlöñíp
 = 
cmdbufÊí
;

1922 
	`vim_‰ì
(
p
);

1931 i‡((
¨gt
 & 
BUFNAME
Ë&& *
¨g
 && 
addr_cou¡
 == 0)

1938 i‡(
cmdidx
 =
CMD_bdñëe
 || cmdidx =
CMD_bu∆ﬂd
)

1939 
p
 = 
	`skùtowhôe_esc
(
¨g
);

1942 
p
 = 
¨g
 + 
	`STRLEN
(arg);

1943 
p
 > 
¨g
 && 
	`vim_iswhôe
(p[-1]))

1944 --
p
;

1946 
löe2
 = 
	`buÊi°_föd∑t
(
¨g
, 
p
);

1947 i‡(
löe2
 < 0)

1948 
d€nd
;

1949 
addr_cou¡
 = 1;

1950 
¨g
 = 
	`skùwhôe
(
p
);

1969 
cmdswôch
:

1970 
cmdidx
)

1975 
CMD_quô
:

1977 i‡(
	`check_m‹e
(
FALSE
Ë=
OK
 && 
	`⁄ly_⁄e_wödow
())

1978 
exôög
 = 
TRUE
;

1979 i‡(
	`check_ch™ged
(
curbuf
, 
FALSE
, FALSE) ||

1980 
	`check_m‹e
(
TRUE
Ë=
FAIL
 ||

1981 (
	`⁄ly_⁄e_wödow
(Ë&& 
	`check_ch™ged_™y
()))

1983 
exôög
 = 
FALSE
;

1984 
	`£âmode
(1);

1987 i‡(
	`⁄ly_⁄e_wödow
())

1988 
	`gëout
(0);

1989 
	`˛o£_wödow
(
curwö
, 
TRUE
);

1995 
CMD_qÆl
:

1996 
exôög
 = 
TRUE
;

1997 i‡(!
	`check_ch™ged_™y
())

1998 
	`gëout
(0);

1999 
exôög
 = 
FALSE
;

2000 
	`£âmode
(1);

2006 
CMD_˛o£
:

2007 
	`˛o£_wödow
(
curwö
, 
FALSE
);

2013 
CMD_⁄ly
:

2014 
	`˛o£_Ÿhîs
(
TRUE
);

2017 
CMD_°›
:

2018 
CMD_su•íd
:

2019 #ifde‡
WIN32


2023 i‡(
	`ˇn_íd_ãrmˇp_mode
(
TRUE
Ë=
FALSE
)

2026 i‡(!
f‹˚ô
)

2027 
	`autowrôe_Æl
();

2028 
	`wödgŸo
(()
Rows
 - 1, 0);

2029 
	`outch¨
('\n');

2030 
	`Êushbuf
();

2031 
	`°›ãrmˇp
();

2032 
	`mch_ª°‹e_tôÀ
(3);

2033 
	`mch_su•íd
();

2034 
	`makëôÀ
();

2035 
	`°¨âîmˇp
();

2036 
	`s¸ﬁl_°¨t
();

2037 
mu°_ªdøw
 = 
CLEAR
;

2038 
	`£t_wösize
(0, 0, 
FALSE
);

2041 
CMD_exô
:

2042 
CMD_xô
:

2043 
CMD_wq
:

2045 i‡(
	`check_m‹e
(
FALSE
Ë=
OK
 && 
	`⁄ly_⁄e_wödow
())

2046 
exôög
 = 
TRUE
;

2047 i‡(((
cmdidx
 =
CMD_wq
 || 
curbuf
->
b_ch™ged
) &&

2048 
	`do_wrôe
(
¨g
, 
FALSE
Ë=
FAIL
) ||

2049 
	`check_m‹e
(
TRUE
Ë=
FAIL
 ||

2050 (
	`⁄ly_⁄e_wödow
(Ë&& 
	`check_ch™ged_™y
()))

2052 
exôög
 = 
FALSE
;

2053 
	`£âmode
(1);

2056 i‡(
	`⁄ly_⁄e_wödow
())

2057 
	`gëout
(0);

2058 
	`˛o£_wödow
(
curwö
, 
TRUE
);

2061 
CMD_xÆl
:

2062 
CMD_wqÆl
:

2063 
exôög
 = 
TRUE
;

2066 
CMD_wÆl
:

2068 
BUF
 *
buf
;

2069 
îr‹
 = 0;

2071 
buf
 = 
fú°buf
; bu‡!
NULL
; bu‡buf->
b_√xt
)

2073 i‡(
buf
->
b_ch™ged
)

2075 i‡(
buf
->
b_fûíame
 =
NULL
)

2077 
	`emsg
(
e_n⁄ame
);

2078 ++
îr‹
;

2080 i‡(!
f‹˚ô
 && 
buf
->
b_p_ro
)

2082 
	`EMSG2
("\"%s\" i†ªad⁄ly, u£ !Åÿwrôê™yway", 
buf
->
b_xfûíame
);

2083 ++
îr‹
;

2085 i‡(
	`buf_wrôe_Æl
(
buf
Ë=
FAIL
)

2086 ++
îr‹
;

2089 i‡(
exôög
)

2091 i‡(!
îr‹
)

2092 
	`gëout
(0);

2093 
exôög
 = 
FALSE
;

2094 
	`£âmode
(1);

2099 
CMD_¥e£rve
:

2100 
	`ml_¥e£rve
(
curbuf
, 
TRUE
);

2103 
CMD_ªcovî
:

2104 
ªcovîymode
 = 
TRUE
;

2105 i‡(!
	`check_ch™ged
(
curbuf
, 
FALSE
, 
TRUE
) &&

2106 (*
¨g
 =
NUL
 || 
	`£t‚ame
◊rg, 
NULL
, 
TRUE
Ë=
OK
))

2107 
	`ml_ªcovî
();

2108 
ªcovîymode
 = 
FALSE
;

2111 
CMD_¨gs
:

2115 i‡(*
¨g
 !
NUL
 && *arg != '|' && *arg != '\n')

2116 
do_√xt
;

2118 i‡(
¨g_cou¡
 == 0)

2120 i‡(
	`check_‚ame
(Ë=
OK
)

2121 
	`smsg
((
ch¨_u
 *)"[%s]", 
curbuf
->
b_fûíame
);

2128 
	`gŸocmdlöe
(
TRUE
);

2129 
i
 = 0; i < 
¨g_cou¡
; ++i)

2131 i‡(
i
 =
curwö
->
w_¨g_idx
)

2132 
	`msg_outch¨
('[');

2133 
	`msg_ouâøns
(
¨g_fûes
[
i
]);

2134 i‡(
i
 =
curwö
->
w_¨g_idx
)

2135 
	`msg_outch¨
(']');

2136 
	`msg_outch¨
(' ');

2140 
CMD_w√xt
:

2141 
CMD_wNext
:

2142 
CMD_w¥evious
:

2143 i‡(
cmd
[1] == 'n')

2144 
i
 = 
curwö
->
w_¨g_idx
 + ()
löe2
;

2146 
i
 = 
curwö
->
w_¨g_idx
 - ()
löe2
;

2147 
löe1
 = 1;

2148 
löe2
 = 
curbuf
->
b_ml
.
ml_löe_cou¡
;

2149 i‡(
	`do_wrôe
(
¨g
, 
FALSE
Ë=
FAIL
)

2151 
d⁄extfûe
;

2153 
CMD_√xt
:

2154 
CMD_¢ext
:

2155 
do_√xt
:

2160 i‡(!(
p_hid
 || 
cmdidx
 =
CMD_¢ext
) &&

2161 
	`check_ch™ged
(
curbuf
, 
TRUE
, 
FALSE
))

2164 i‡(*
¨g
 !
NUL
)

2166 i‡(
	`do_¨gli°
(
¨g
Ë=
FAIL
)

2168 
i
 = 0;

2171 
i
 = 
curwö
->
w_¨g_idx
 + ()
löe2
;

2173 
d⁄extfûe
: i‡(
i
 < 0 || i >
¨g_cou¡
)

2175 i‡(
¨g_cou¡
 <= 1)

2176 
	`EMSG
("There is only one fileÅoÉdit");

2177 i‡(
i
 < 0)

2178 
	`EMSG
("Cannot go before first file");

2180 
	`EMSG
("Cannot go beyondÜast file");

2183 
	`£çcm¨k
();

2184 i‡(*
cmd
 == 's')

2186 i‡(
	`wö_•lô
(0, 
FALSE
Ë=
FAIL
)

2191 
Ÿhî
;

2197 
Ÿhî
 = 
TRUE
;

2198 i‡(
p_hid
)

2199 
Ÿhî
 = 
	`Ÿhîfûe
(
	`fix_‚ame
(
¨g_fûes
[
i
]));

2200 i‡((!
p_hid
 || !
Ÿhî
) &&

2201 
	`check_ch™ged
(
curbuf
, 
TRUE
, !
Ÿhî
))

2204 
curwö
->
w_¨g_idx
 = 
i
;

2205 i‡(
i
 =
¨g_cou¡
 - 1)

2206 
¨g_had_œ°
 = 
TRUE
;

2207 ()
	`do_ecmd
(0, 
¨g_fûes
[
curwö
->
w_¨g_idx
],

2208 
NULL
, 
do_ecmd_cmd
, 
p_hid
, 
do_ecmd_ um
, 
FALSE
);

2211 
CMD_¥evious
:

2212 
CMD_•ªvious
:

2213 
CMD_Next
:

2214 
CMD_sNext
:

2215 
i
 = 
curwö
->
w_¨g_idx
 - ()
löe2
;

2216 
d⁄extfûe
;

2218 
CMD_ªwöd
:

2219 
CMD_§ewöd
:

2220 
i
 = 0;

2221 
d⁄extfûe
;

2223 
CMD_œ°
:

2224 
CMD_¶a°
:

2225 
i
 = 
¨g_cou¡
 - 1;

2226 
d⁄extfûe
;

2228 
CMD_¨gumít
:

2229 
CMD_ßrgumít
:

2230 i‡(
addr_cou¡
)

2231 
i
 = 
löe2
 - 1;

2233 
i
 = 
curwö
->
w_¨g_idx
;

2234 
d⁄extfûe
;

2236 
CMD_Æl
:

2237 
CMD_ßŒ
:

2238 i‡(
addr_cou¡
 == 0)

2239 
löe2
 = 9999;

2240 
	`do_¨g_Æl
(()
löe2
);

2243 
CMD_buf„r
:

2244 
CMD_sbuf„r
:

2245 i‡(*
¨g
)

2247 
îr‹msg
 = 
e_åaûög
;

2250 i‡(
addr_cou¡
 == 0)

2251 ()
	`do_buf„r
(*
cmd
 ='s' ? 
DOBUF_SPLIT
 : 
DOBUF_GOTO
,

2252 
DOBUF_CURRENT
, 
FORWARD
, 0, 0);

2254 ()
	`do_buf„r
(*
cmd
 ='s' ? 
DOBUF_SPLIT
 : 
DOBUF_GOTO
,

2255 
DOBUF_FIRST
, 
FORWARD
, ()
löe2
, 0);

2258 
CMD_bmodifõd
:

2259 
CMD_sbmodifõd
:

2260 ()
	`do_buf„r
(*
cmd
 ='s' ? 
DOBUF_SPLIT
 : 
DOBUF_GOTO
,

2261 
DOBUF_MOD
, 
FORWARD
, ()
löe2
, 0);

2264 
CMD_b√xt
:

2265 
CMD_sb√xt
:

2266 ()
	`do_buf„r
(*
cmd
 ='s' ? 
DOBUF_SPLIT
 : 
DOBUF_GOTO
,

2267 
DOBUF_CURRENT
, 
FORWARD
, ()
löe2
, 0);

2270 
CMD_bNext
:

2271 
CMD_b¥evious
:

2272 
CMD_sbNext
:

2273 
CMD_sb¥evious
:

2274 ()
	`do_buf„r
(*
cmd
 ='s' ? 
DOBUF_SPLIT
 : 
DOBUF_GOTO
,

2275 
DOBUF_CURRENT
, 
BACKWARD
, ()
löe2
, 0);

2278 
CMD_bªwöd
:

2279 
CMD_sbªwöd
:

2280 ()
	`do_buf„r
(*
cmd
 ='s' ? 
DOBUF_SPLIT
 : 
DOBUF_GOTO
,

2281 
DOBUF_FIRST
, 
FORWARD
, 0, 0);

2284 
CMD_bœ°
:

2285 
CMD_sbœ°
:

2286 ()
	`do_buf„r
(*
cmd
 ='s' ? 
DOBUF_SPLIT
 : 
DOBUF_GOTO
,

2287 
DOBUF_LAST
, 
FORWARD
, 0, 0);

2290 
CMD_bu∆ﬂd
:

2291 
CMD_bdñëe
:

2292 
îr‹msg
 = 
	`do_bufdñ
(

2293 
cmdidx
 =
CMD_bdñëe
 ? 
DOBUF_DEL
 : 
DOBUF_UNLOAD
,

2294 
¨g
, 
addr_cou¡
, ()
löe1
, ()
löe2
, 
f‹˚ô
);

2297 
CMD_unhide
:

2298 
CMD_sunhide
:

2299 i‡(
addr_cou¡
 == 0)

2300 
löe2
 = 9999;

2301 ()
	`do_buf„r_Æl
(()
löe2
, 
FALSE
);

2304 
CMD_bÆl
:

2305 
CMD_sbÆl
:

2306 i‡(
addr_cou¡
 == 0)

2307 
löe2
 = 9999;

2308 ()
	`do_buf„r_Æl
(()
löe2
, 
TRUE
);

2311 
CMD_buf„rs
:

2312 
CMD_fûes
:

2313 
CMD_ls
:

2314 
	`buÊi°_li°
();

2317 
CMD_wrôe
:

2318 i‡(
u£fûãr
)

2319 
	`do_b™g
(1, 
löe1
, 
löe2
, 
FALSE
, 
¨g
, 
TRUE
, FALSE);

2321 ()
	`do_wrôe
(
¨g
, 
≠≥nd
);

2328 
CMD_mode
:

2329 i‡(*
¨g
 =
NUL
 || 
	`mch_s¸ìnmode
◊rgË!
FAIL
)

2330 
	`£t_wösize
(0, 0, 
FALSE
);

2336 
CMD_ªsize
:

2337 
n
 = 
	`©ﬁ
((*)
¨g
);

2338 i‡(*
¨g
 == '-' || *arg == '+')

2339 
	`wö_£theight
(
curwö
->
w_height
 + ()
n
);

2342 i‡(
n
 == 0)

2343 
n
 = 9999;

2344 
	`wö_£theight
(()
n
);

2353 
CMD_svõw
:

2354 
CMD_•lô
:

2355 
CMD_√w
:

2356 
ﬁd_curwö
 = 
curwö
;

2357 i‡(
	`wö_•lô
(
addr_cou¡
 ? ()
löe2
 : 0, 
FALSE
Ë=
FAIL
)

2361 
CMD_edô
:

2362 
CMD_ex
:

2363 
CMD_visuÆ
:

2364 
CMD_võw
:

2365 i‡((
cmdidx
 =
CMD_√w
Ë&& *
¨g
 =
NUL
)

2367 
	`£çcm¨k
();

2368 ()
	`do_ecmd
(0, 
NULL
, NULL, 
do_ecmd_cmd
, 
TRUE
,

2369 (
löír_t
)1, 
FALSE
);

2371 i‡(
cmdidx
 !
CMD_•lô
 || *
¨g
 !
NUL
)

2373 
n
 = 
ªad⁄lymode
;

2374 i‡(
cmdidx
 =
CMD_võw
 || cmdidx =
CMD_svõw
)

2375 
ªad⁄lymode
 = 
TRUE
;

2376 
	`£çcm¨k
();

2377 ()
	`do_ecmd
(0, 
¨g
, 
NULL
, 
do_ecmd_cmd
, 
p_hid
,

2378 
do_ecmd_ um
, 
FALSE
);

2379 
ªad⁄lymode
 = 
n
;

2382 
	`upd©eS¸ìn
(
NOT_VALID
);

2385 i‡((
cmdidx
 =
CMD_√w
 || cmdidx =
CMD_•lô
) &&

2386 *
¨g
 !
NUL
 && 
curwö
 !
ﬁd_curwö
 &&

2387 
ﬁd_curwö
->
w_buf„r
 !
curbuf
)

2388 
ﬁd_curwö
->
w_Æt_‚um
 = 
curbuf
->
b_‚um
;

2391 #ifde‡
USE_GUI


2396 
CMD_gvim
:

2397 
CMD_gui
:

2398 i‡(
¨g
[0] == '-' &&árg[1] == 'f' &&

2399 (
¨g
[2] =
NUL
 || 
	`vim_iswhôe
(arg[2])))

2401 
gui
.
dof‹k
 = 
FALSE
;

2402 
¨g
 = 
	`skùwhôe
(arg + 2);

2405 
gui
.
dof‹k
 = 
TRUE
;

2406 i‡(!
gui
.
ö_u£
)

2407 
	`gui_°¨t
();

2408 i‡(*
¨g
 !
NUL
 && *arg != '|' && *arg != '\n')

2409 
do_√xt
;

2413 
CMD_fûe
:

2414 
	`do_fûe
(
¨g
, 
f‹˚ô
);

2417 
CMD_sw≠«me
:

2418 i‡(
curbuf
->
b_ml
.
ml_mÂ
 =
NULL
 ||

2419 (
p
 = 
curbuf
->
b_ml
.
ml_mÂ
->
mf_‚ame
Ë=
NULL
)

2420 
	`MSG
("No swap file");

2422 
	`msg
(
p
);

2425 
CMD_mf°©
:

2426 
	`mf_°©i°ics
();

2429 
CMD_ªad
:

2430 i‡(
u£fûãr
)

2432 
	`do_b™g
(1, 
löe1
, 
löe2
, 
FALSE
, 
¨g
, FALSE, 
TRUE
);

2435 i‡(
	`u_ßve
(
löe2
, (
löír_t
)÷öe2 + 1)Ë=
FAIL
)

2437 i‡(*
¨g
 =
NUL
)

2439 i‡(
	`check_‚ame
(Ë=
FAIL
)

2441 
i
 = 
	`ªadfûe
(
curbuf
->
b_fûíame
, curbuf->
b_sfûíame
,

2442 
löe2
, 
FALSE
, (
löír_t
)0, 
MAXLNUM
, FALSE);

2446 
i
 = 
	`ªadfûe
(
¨g
, 
NULL
,

2447 
löe2
, 
FALSE
, (
löír_t
)0, 
MAXLNUM
, FALSE);

2449 i‡(
i
 =
FAIL
)

2451 
	`emsg2
(
e_nŸ›í
, 
¨g
);

2455 
	`upd©eS¸ìn
(
NOT_VALID
);

2458 
CMD_cd
:

2459 
CMD_chdú
:

2460 #ifde‡
UNIX


2464 i‡(*
¨g
 =
NUL
)

2466 
	`ex∑nd_ív
((
ch¨_u
 *)"$HOME", 
NameBuff
, 
MAXPATHL
);

2467 
¨g
 = 
NameBuff
;

2470 i‡(*
¨g
 !
NUL
)

2472 i‡(!
did_cd
)

2474 
BUF
 *
buf
;

2478 
buf
 = 
fú°buf
; bu‡!
NULL
; bu‡buf->
b_√xt
)

2480 
buf
->
b_xfûíame
 = buf->
b_fûíame
;

2481 
	`mf_fuŒ«me
(
buf
->
b_ml
.
ml_mÂ
);

2483 
	`°©us_ªdøw_Æl
();

2485 
did_cd
 = 
TRUE
;

2486 i‡(
	`vim_chdú
((*)
¨g
))

2487 
	`emsg
(
e_Áûed
);

2492 
CMD_pwd
:

2493 i‡(
	`mch_dú«me
(
NameBuff
, 
MAXPATHL
Ë=
OK
)

2494 
	`msg
(
NameBuff
);

2496 
	`emsg
(
e_unknown
);

2499 
CMD_equÆ
:

2500 
	`smsg
((
ch¨_u
 *)"löê%ld", ()
löe2
);

2503 
CMD_li°
:

2504 
i
 = 
curwö
->
w_p_li°
;

2505 
curwö
->
w_p_li°
 = 1;

2506 
CMD_numbî
:

2507 
CMD_pound
:

2508 
CMD_¥öt
:

2509  ;!
gŸ_öt
; 
	`mch_bªakcheck
())

2511 
	`¥öt_löe
(
löe1
,

2512 (
cmdidx
 =
CMD_numbî
 || cmdidx =
CMD_pound
));

2513 i‡(++
löe1
 > 
löe2
)

2515 
	`Êushbuf
();

2517 
	`£çcm¨k
();

2518 
curwö
->
w_curs‹
.
 um
 = 
löe2
;

2520 i‡(
cmdidx
 =
CMD_li°
)

2521 
curwö
->
w_p_li°
 = 
i
;

2525 
CMD_shñl
:

2526 
	`do_shñl
(
NULL
);

2529 
CMD_¶ìp
:

2530 
n
 = 
curwö
->
w_wöpos
 + curwö->
w_row
 - 
msg_s¸ﬁÀd
;

2531 i‡(
n
 >= 0)

2533 
	`wödgŸo
(()
n
, 
curwö
->
w_cﬁ
);

2534 
	`Êushbuf
();

2536 
	`mch_dñay
(
löe2
 * 1000L, 
TRUE
);

2539 
CMD_°ag
:

2540 
po°p⁄ed_•lô
 = 
TRUE
;

2542 
CMD_èg
:

2543 
	`do_èg
(
¨g
, 0, 
addr_cou¡
 ? ()
löe2
 : 1);

2546 
CMD_p›
:

2547 
	`do_èg
((
ch¨_u
 *)"", 1, 
addr_cou¡
 ? ()
löe2
 : 1);

2550 
CMD_ègs
:

2551 
	`do_ègs
();

2554 
CMD_m¨ks
:

2555 
	`do_m¨ks
(
¨g
);

2558 
CMD_jumps
:

2559 
	`do_jumps
();

2562 
CMD_ascii
:

2563 
	`do_ascii
();

2566 
CMD_check∑th
:

2567 
	`föd_∑âîn_ö_∑th
(
NULL
, 0, 
FALSE
, FALSE, 
CHECK_PATH
, 1L,

2568 
f‹˚ô
 ? 
ACTION_SHOW_ALL
 : 
ACTION_SHOW
,

2569 (
löír_t
)1, (löír_t)
MAXLNUM
);

2572 
CMD_digøphs
:

2573 #ifde‡
DIGRAPHS


2574 i‡(*
¨g
)

2575 
	`putdigøph
(
¨g
);

2577 
	`li°digøphs
();

2579 
	`EMSG
("No digraphs inÅhis version");

2583 
CMD_£t
:

2584 ()
	`do_£t
(
¨g
);

2587 
CMD_fixdñ
:

2588 
	`do_fixdñ
();

2591 #ifde‡
AUTOCMD


2592 
CMD_autocmd
:

2597 i‡(
£cuª
)

2599 
£cuª
 = 2;

2600 
îr‹msg
 = 
e_curdú
;

2603 
	`do_autocmd
(
¨g
, 
f‹˚ô
);

2606 
CMD_dﬂutocmd
:

2607 
	`do_dﬂutocmd
(
¨g
);

2608 
	`do_modñöes
();

2612 
CMD_abbªvüã
:

2613 
CMD_ˇbbªv
:

2614 
CMD_übbªv
:

2615 
CMD_˙‹óbbªv
:

2616 
CMD_ö‹óbbªv
:

2617 
CMD_n‹óbbªv
:

2618 
CMD_u«bbªvüã
:

2619 
CMD_cu«bbªv
:

2620 
CMD_iu«bbªv
:

2621 
i
 = 
ABBREV
;

2622 
dﬂbbr
;

2624 
CMD_nm≠
:

2625 
CMD_vm≠
:

2626 
CMD_cm≠
:

2627 
CMD_im≠
:

2628 
CMD_m≠
:

2629 
CMD_¬‹em≠
:

2630 
CMD_vn‹em≠
:

2631 
CMD_˙‹em≠
:

2632 
CMD_ö‹em≠
:

2633 
CMD_n‹em≠
:

2638 i‡(
£cuª
)

2640 
£cuª
 = 2;

2641 
	`msg_ouâøns
(
cmd
);

2642 
	`msg_outch¨
('\n');

2644 
CMD_nunm≠
:

2645 
CMD_vunm≠
:

2646 
CMD_cunm≠
:

2647 
CMD_iunm≠
:

2648 
CMD_unm≠
:

2649 
i
 = 0;

2650 
dﬂbbr
:

2651 i‡(*
cmd
 == 'c')

2653 
i
 +
CMDLINE
;

2654 ++
cmd
;

2656 i‡(*
cmd
 == 'i')

2658 
i
 +
INSERT
;

2659 ++
cmd
;

2662 i‡(*
cmd
 == 'n' && *(cmd + 1) != 'o')

2664 
i
 +
NORMAL
;

2665 ++
cmd
;

2667 i‡(*
cmd
 == 'v')

2669 
i
 +
VISUAL
;

2670 ++
cmd
;

2672 i‡(
f‹˚ô
 || 
i
)

2673 
i
 +
INSERT
 + 
CMDLINE
;

2675 
i
 +
NORMAL
 + 
VISUAL
;

2676 
	`do_m≠
((*
cmd
 ='n'Ë? 2 : (*cmd ='u'), 
¨g
, 
i
))

2678 1: 
	`emsg
(
e_öv¨g
);

2680 2: 
	`emsg
(
e_nom≠
);

2682 3: 
	`emsg
(
e_ambm≠
);

2687 
CMD_m≠˛ór
:

2688 
CMD_im≠˛ór
:

2689 
CMD_nm≠˛ór
:

2690 
CMD_vm≠˛ór
:

2691 
CMD_cm≠˛ór
:

2692 
	`m≠_˛ór
(*
cmd
, 
f‹˚ô
, 
FALSE
);

2695 
CMD_ab˛ór
:

2696 
CMD_üb˛ór
:

2697 
CMD_ˇb˛ór
:

2698 
	`m≠_˛ór
(*
cmd
, 
FALSE
, 
TRUE
);

2701 #ifde‡
USE_GUI


2702 
CMD_míu
: 
CMD_n‹emíu
: 
CMD_unmíu
:

2703 
CMD_nmíu
: 
CMD_¬‹emíu
: 
CMD_nunmíu
:

2704 
CMD_vmíu
: 
CMD_vn‹emíu
: 
CMD_vunmíu
:

2705 
CMD_imíu
: 
CMD_ö‹emíu
: 
CMD_iunmíu
:

2706 
CMD_cmíu
: 
CMD_˙‹emíu
: 
CMD_cunmíu
:

2707 
	`gui_do_míu
(
cmd
, 
¨g
, 
f‹˚ô
);

2711 
CMD_di•œy
:

2712 
CMD_ªgi°îs
:

2713 
	`do_dis
(
¨g
);

2716 
CMD_hñp
:

2717 
	`do_hñp
(
¨g
);

2720 
CMD_vîsi⁄
:

2721 
	`do_vîsi⁄
(
¨g
);

2724 
CMD_wösize
:

2725 
löe1
 = 
	`gëdigôs
(&
¨g
);

2726 
¨g
 = 
	`skùwhôe
(arg);

2727 
löe2
 = 
	`gëdigôs
(&
¨g
);

2728 
	`£t_wösize
(()
löe1
, ()
löe2
, 
TRUE
);

2731 
CMD_dñëe
:

2732 
CMD_y™k
:

2733 
CMD_rshi·
:

2734 
CMD_lshi·
:

2735 
y™kbuf„r
 = 
ªg«me
;

2736 
curbuf
->
b_›_°¨t
.
 um
 = 
löe1
;

2737 
curbuf
->
b_›_íd
.
 um
 = 
löe2
;

2738 
›_löe_cou¡
 = 
löe2
 - 
löe1
 + 1;

2739 
›_mŸi⁄_ty≥
 = 
MLINE
;

2740 i‡(
cmdidx
 !
CMD_y™k
)

2742 
	`£çcm¨k
();

2743 
curwö
->
w_curs‹
.
 um
 = 
löe1
;

2744 
	`begölöe
(
MAYBE
);

2746 
cmdidx
)

2748 
CMD_dñëe
:

2749 
	`do_dñëe
();

2751 
CMD_y™k
:

2752 ()
	`do_y™k
(
FALSE
, 
TRUE
);

2754 #ifde‡
RIGHTLEFT


2755 
CMD_rshi·
:

2756 
	`do_shi·
(
curwö
->
w_p_æ
 ? 
LSHIFT
 : 
RSHIFT
, 
FALSE
, 
amou¡
);

2758 
CMD_lshi·
:

2759 
	`do_shi·
(
curwö
->
w_p_æ
 ? 
RSHIFT
 : 
LSHIFT
, 
FALSE
, 
amou¡
);

2762 
CMD_rshi·
:

2763 
	`do_shi·
(
RSHIFT
, 
FALSE
, 
amou¡
);

2765 
CMD_lshi·
:

2766 
	`do_shi·
(
LSHIFT
, 
FALSE
, 
amou¡
);

2772 
CMD_put
:

2773 
y™kbuf„r
 = 
ªg«me
;

2774 
curwö
->
w_curs‹
.
 um
 = 
löe2
;

2775 
	`do_put
(
f‹˚ô
 ? 
BACKWARD
 : 
FORWARD
, -1L, 
FALSE
);

2778 
CMD_t
:

2779 
CMD_c›y
:

2780 
CMD_move
:

2781 
n
 = 
	`gë_addªss
(&
¨g
);

2782 i‡(
¨g
 =
NULL
)

2784 
√xtcomm
 = 
NULL
;

2790 i‡(
n
 =
MAXLNUM
 ||Ç < 0 ||Ç > 
curbuf
->
b_ml
.
ml_löe_cou¡
)

2792 
	`emsg
(
e_övaddr
);

2796 i‡(
cmdidx
 =
CMD_move
)

2798 i‡(
	`do_move
(
löe1
, 
löe2
, 
n
Ë=
FAIL
)

2802 
	`do_c›y
(
löe1
, 
löe2
, 
n
);

2803 
	`u_˛óæöe
();

2804 
	`begölöe
(
MAYBE
);

2805 
	`upd©eS¸ìn
(
NOT_VALID
);

2808 
CMD_™d
:

2809 
CMD_tûde
:

2810 
CMD_sub°ôuã
:

2811 
	`do_sub
(
löe1
, 
löe2
, 
¨g
, &
√xtcomm
,

2812 
cmdidx
 =
CMD_sub°ôuã
 ? 0 :

2813 
cmdidx
 =
CMD_™d
 ? 1 : 2);

2816 
CMD_joö
:

2817 
curwö
->
w_curs‹
.
 um
 = 
löe1
;

2818 i‡(
löe1
 =
löe2
)

2820 i‡(
addr_cou¡
 >= 2)

2822 i‡(
löe2
 =
curbuf
->
b_ml
.
ml_löe_cou¡
)

2824 
	`bìp_Êush
();

2827 ++
löe2
;

2829 
	`do_do_joö
(
löe2
 - 
löe1
 + 1, !
f‹˚ô
, 
FALSE
);

2830 
	`begölöe
(
TRUE
);

2833 
CMD_globÆ
:

2834 i‡(
f‹˚ô
)

2835 *
cmd
 = 'v';

2836 
CMD_vglobÆ
:

2837 
	`do_glob
(*
cmd
, 
löe1
, 
löe2
, 
¨g
);

2840 
CMD_©
:

2841 
curwö
->
w_curs‹
.
 um
 = 
löe2
;

2843 i‡(
	`do_execbuf
(*
¨g
, 
TRUE
,

2844 
	`vim_°rchr
(
p_˝o
, 
CPO_EXECBUF
Ë!
NULL
Ë=
FAIL
)

2845 
	`bìp_Êush
();

2848 
	`v≥ekc
() == ':')

2850 ()
	`vgëc
();

2851 ()
	`do_cmdlöe
((
ch¨_u
 *)
NULL
, 
TRUE
, TRUE);

2855 
CMD_b™g
:

2856 
	`do_b™g
(
addr_cou¡
, 
löe1
, 
löe2
, 
f‹˚ô
, 
¨g
, 
TRUE
, TRUE);

2859 
CMD_undo
:

2860 
	`u_undo
(1);

2863 
CMD_ªdo
:

2864 
	`u_ªdo
(1);

2867 
CMD_sour˚
:

2868 i‡(
f‹˚ô
)

2869 ()
	`›ís¸ùt
(
¨g
);

2871 i‡(
	`do_sour˚
(
¨g
, 
FALSE
Ë=
FAIL
)

2872 
	`emsg2
(
e_nŸ›í
, 
¨g
);

2875 #ifde‡
VIMINFO


2876 
CMD_rvimöfo
:

2877 
p
 = 
p_vimöfo
;

2878 i‡(*
p_vimöfo
 =
NUL
)

2879 
p_vimöfo
 = (
ch¨_u
 *)"'100";

2880 i‡(
	`ªad_vimöfo
(
¨g
, 
TRUE
, TRUE, 
f‹˚ô
Ë=
FAIL
)

2881 
	`EMSG
("Cannot open viminfo file forÑeading");

2882 
p_vimöfo
 = 
p
;

2885 
CMD_wvimöfo
:

2886 
p
 = 
p_vimöfo
;

2887 i‡(*
p_vimöfo
 =
NUL
)

2888 
p_vimöfo
 = (
ch¨_u
 *)"'100";

2889 
	`wrôe_vimöfo
(
¨g
, 
f‹˚ô
);

2890 
p_vimöfo
 = 
p
;

2894 
CMD_mkvimrc
:

2895 i‡(*
¨g
 =
NUL
)

2896 
¨g
 = (
ch¨_u
 *)
VIMRC_FILE
;

2899 
CMD_mkexrc
:

2901 
FILE
 *
fd
;

2903 i‡(*
¨g
 =
NUL
)

2904 
¨g
 = (
ch¨_u
 *)
EXRC_FILE
;

2905 #ifde‡
UNIX


2907 i‡(
	`mch_isdú
(
¨g
))

2909 
	`EMSG2
("\"%s\" i†®dúe˘‹y", 
¨g
);

2913 i‡(!
f‹˚ô
 && 
	`vim_„xi°s
(
¨g
))

2915 
	`EMSG2
("\"%s\"Éxi°†(u£ !Åÿovîride)", 
¨g
);

2919 i‡((
fd
 = 
	`f›í
((*)
¨g
, 
WRITEBIN
)Ë=
NULL
)

2921 
	`EMSG2
("C™nŸ o≥¿\"%s\" f‹ wrôög", 
¨g
);

2926 i‡(
cmdidx
 =
CMD_mkvimrc
)

2928 #ifde‡
USE_CRNL


2929 
	`Ârötf
(
fd
, "version 4.0\r\n");

2931 
	`Ârötf
(
fd
, "version 4.0\n");

2935 i‡(
	`makem≠
(
fd
Ë=
FAIL
 || 
	`make£t
(fd) == FAIL ||

2936 
	`f˛o£
(
fd
))

2937 
	`emsg
(
e_wrôe
);

2941 
CMD_cc
:

2942 
	`qf_jump
(0, 
addr_cou¡
 ? ()
löe2
 : 0);

2945 
CMD_cfûe
:

2946 i‡(*
¨g
 !
NUL
)

2952 
¨g
 -= 3;

2953 
¨g
[0] = 'e';

2954 
¨g
[1] = 'f';

2955 
¨g
[2] = '=';

2956 ()
	`do_£t
(
¨g
);

2958 i‡(
	`qf_öô
(Ë=
OK
)

2959 
	`qf_jump
(0, 0);

2962 
CMD_˛i°
:

2963 
	`qf_li°
(
f‹˚ô
);

2966 
CMD_˙ext
:

2967 
	`qf_jump
(
FORWARD
, 
addr_cou¡
 ? ()
löe2
 : 1);

2970 
CMD_cNext
:

2971 
CMD_˝ªvious
:

2972 
	`qf_jump
(
BACKWARD
, 
addr_cou¡
 ? ()
löe2
 : 1);

2975 
CMD_cquô
:

2976 
	`gëout
(1);

2978 
CMD_m¨k
:

2979 
CMD_k
:

2980 
pos
 = 
curwö
->
w_curs‹
;

2981 
curwö
->
w_curs‹
.
 um
 = 
löe2
;

2982 
	`begölöe
(
MAYBE
);

2983 ()
	`£tm¨k
(*
¨g
);

2984 
curwö
->
w_curs‹
 = 
pos
;

2987 
CMD_˚¡î
:

2988 
CMD_right
:

2989 
CMD_À·
:

2990 
	`do_Æign
(
löe1
, 
löe2
, 
	`©oi
((*)
¨g
),

2991 
cmdidx
 =
CMD_˚¡î
 ? 0 : cmdidx =
CMD_right
 ? 1 : -1);

2994 
CMD_ªèb
:

2995 
n
 = 
	`gëdigôs
(&
¨g
);

2996 
	`do_ªèb
(
löe1
, 
löe2
, ()
n
, 
f‹˚ô
);

2997 
	`u_˛óæöe
();

2998 
	`upd©eS¸ìn
(
NOT_VALID
);

3001 
CMD_make
:

3002 
	`do_make
(
¨g
);

3009 
CMD_n‹mÆ
:

3014 
	`ös_ty≥buf
(
¨g
, 
f‹˚ô
 ? -1 : 0, 0, 
TRUE
);

3015 (!
	`°uff_em±y
(Ë|| !
	`ty≥buf_ty≥d
()Ë&& !
gŸ_öt
)

3017 
	`adju°_curs‹
();

3018 
	`cursupd©e
();

3019 
	`n‹mÆ
();

3023 
CMD_i£¨ch
:

3024 
CMD_d£¨ch
:

3025 
i
 = 
ACTION_SHOW
;

3026 
föd_∑t
;

3028 
CMD_ûi°
:

3029 
CMD_dli°
:

3030 
i
 = 
ACTION_SHOW_ALL
;

3031 
föd_∑t
;

3033 
CMD_ijump
:

3034 
CMD_djump
:

3035 
i
 = 
ACTION_GOTO
;

3036 
föd_∑t
;

3038 
CMD_i•lô
:

3039 
CMD_d•lô
:

3040 
i
 = 
ACTION_SPLIT
;

3041 
föd_∑t
:

3043 
whﬁe
 = 
TRUE
;

3045 
n
 = 1;

3046 i‡(
	`isdigô
(*
¨g
))

3048 
n
 = 
	`gëdigôs
(&
¨g
);

3049 
¨g
 = 
	`skùwhôe
(arg);

3051 i‡(*
¨g
 == '/')

3053 
whﬁe
 = 
FALSE
;

3054 ++
¨g
;

3055 
p
 = 
¨g
; *p && *p != '/';Ö++)

3056 i‡(*
p
 ='\\' &&Ö[1] !
NUL
)

3057 
p
++;

3058 i‡(*
p
)

3060 *
p
++ = 
NUL
;

3061 
p
 = 
	`skùwhôe
(p);

3064 i‡(*
p
 && 
	`vim_°rchr
((
ch¨_u
 *)"|\"\n", *pË=
NULL
)

3065 
îr‹msg
 = 
e_åaûög
;

3067 
√xtcomm
 = 
p
;

3070 
	`föd_∑âîn_ö_∑th
(
¨g
, ()
	`STRLEN
◊rg), 
whﬁe
, !
f‹˚ô
,

3071 *
cmd
 ='d' ? 
FIND_DEFINE
 : 
FIND_ANY
,

3072 
n
, 
i
, 
löe1
, 
löe2
);

3078 
îr‹msg
 = (
ch¨_u
 *)"Sorry,Åhis command isÇot implemented";

3082 
d€nd
:

3083 i‡(
îr‹msg
 !
NULL
)

3085 
	`emsg
(
îr‹msg
);

3086 i‡(
sourcög
)

3088 
	`MSG_OUTSTR
(": ");

3089 
	`msg_ouâøns
(*
cmdlöï
);

3092 i‡(
did_emsg
)

3093 
√xtcomm
 = 
NULL
;

3094 
f‹˚ô
 = 
FALSE
;

3095 i‡(
√xtcomm
 && *√xtcomm =
NUL
)

3096 
√xtcomm
 = 
NULL
;

3097  
√xtcomm
;

3098 
	}
}

3106 
	$autowrôe
(
buf
)

3107 
BUF
 *
buf
;

3109 i‡(!
p_aw
 || (!
f‹˚ô
 && 
buf
->
b_p_ro
Ë|| buf->
b_fûíame
 =
NULL
)

3110  
FAIL
;

3111  
	`buf_wrôe_Æl
(
buf
);

3112 
	}
}

3118 
	$autowrôe_Æl
()

3120 
BUF
 *
buf
;

3122 i‡(!
p_aw
)

3124 
buf
 = 
fú°buf
; buf; bu‡buf->
b_√xt
)

3125 i‡(
buf
->
b_ch™ged
 && !buf->
b_p_ro
)

3126 ()
	`buf_wrôe_Æl
(
buf
);

3127 
	}
}

3135 
	$buf_wrôe_Æl
(
buf
)

3136 
BUF
 *
buf
;

3138  (
	`buf_wrôe
(
buf
, buf->
b_fûíame
, buf->
b_sfûíame
,

3139 (
löír_t
)1, 
buf
->
b_ml
.
ml_löe_cou¡
, 0, 0, 
TRUE
, 
FALSE
));

3140 
	}
}

3152 
	$do_wrôe
(
‚ame
, 
≠≥nd
)

3153 
ch¨_u
 *
‚ame
;

3154 
≠≥nd
;

3156 
Ÿhî
;

3157 
ch¨_u
 *
s‚ame
 = 
NULL
;

3159 i‡(*
‚ame
 =
NUL
)

3160 
Ÿhî
 = 
FALSE
;

3163 
s‚ame
 = 
‚ame
;

3164 
‚ame
 = 
	`fix_‚ame
(fname);

3165 
Ÿhî
 = 
	`Ÿhîfûe
(
‚ame
);

3171 i‡(
Ÿhî
)

3172 
	`£è…‚ame
(
‚ame
, 
s‚ame
, (
löír_t
)1);

3178 i‡(!
Ÿhî
 && (
	`check_ªad⁄ly
(Ë|| 
	`check_‚ame
(Ë=
FAIL
))

3179  
FAIL
;

3181 i‡(!
Ÿhî
)

3183 
‚ame
 = 
curbuf
->
b_fûíame
;

3184 
s‚ame
 = 
curbuf
->
b_sfûíame
;

3188 i‡((
löe1
 !1 || 
löe2
 !
curbuf
->
b_ml
.
ml_löe_cou¡
) &&

3189 !
f‹˚ô
 && !
≠≥nd
 && !
p_wa
)

3191 
	`EMSG
("Use !Åo writeÖartial buffer");

3192  
FAIL
;

3200 i‡((
Ÿhî
 || 
curbuf
->
b_nŸedôed
Ë&& !
f‹˚ô
 &&

3201 !
≠≥nd
 && !
p_wa
 && 
	`vim_„xi°s
(
‚ame
))

3203 #ifde‡
UNIX


3205 i‡(
	`mch_isdú
(
‚ame
))

3206 
	`EMSG2
("\"%s\" i†®dúe˘‹y", 
‚ame
);

3209 
	`emsg
(
e_exi°s
);

3210  
FAIL
;

3212  (
	`buf_wrôe
(
curbuf
, 
‚ame
, 
s‚ame
, 
löe1
, 
löe2
,

3213 
≠≥nd
, 
f‹˚ô
, 
TRUE
, 
FALSE
));

3214 
	}
}

3235 
	$do_ecmd
(
‚um
, 
‚ame
, 
s‚ame
, 
comm™d
, 
hide
, 
√w um
, 
£t_hñp
)

3236 
‚um
;

3237 
ch¨_u
 *
‚ame
;

3238 
ch¨_u
 *
s‚ame
;

3239 
ch¨_u
 *
comm™d
;

3240 
hide
;

3241 
löír_t
 
√w um
;

3242 
£t_hñp
;

3244 
Ÿhî_fûe
;

3245 
ﬁdbuf
 = 
FALSE
;

3246 
BUF
 *
buf
;

3248 i‡(
‚um
 != 0)

3250 i‡(
‚um
 =
curbuf
->
b_‚um
)

3251  
OK
;

3252 
Ÿhî_fûe
 = 
TRUE
;

3257 i‡(
s‚ame
 =
NULL
)

3258 
s‚ame
 = 
‚ame
;

3259 #ifde‡
USE_FNAME_CASE


3260 #ifde‡
USE_LONG_FNAME


3261 i‡(
USE_LONG_FNAME
)

3263 
	`‚ame_ˇ£
(
s‚ame
);

3266 i‡(
‚ame
 =
NULL
)

3267 
Ÿhî_fûe
 = 
TRUE
;

3269 i‡(*
‚ame
 =
NUL
 && 
curbuf
->
b_fûíame
 =
NULL
)

3270 
Ÿhî_fûe
 = 
FALSE
;

3273 i‡(*
‚ame
 =
NUL
)

3275 
‚ame
 = 
curbuf
->
b_fûíame
;

3276 
s‚ame
 = 
curbuf
->
b_sfûíame
;

3278 
‚ame
 = 
	`fix_‚ame
(fname);

3279 
Ÿhî_fûe
 = 
	`Ÿhîfûe
(
‚ame
);

3287 i‡((!
Ÿhî_fûe
 || (
curbuf
->
b_nwödows
 =1 && !
hide
)) &&

3288 
	`check_ch™ged
(
curbuf
, 
FALSE
, !
Ÿhî_fûe
))

3290 i‡(
‚um
 =0 && 
Ÿhî_fûe
 && 
‚ame
 !
NULL
)

3291 
	`£è…‚ame
(
‚ame
, 
s‚ame
, (
löír_t
)1);

3292  
FAIL
;

3299 i‡(
VIsuÆ_a˘ive
)

3300 
	`íd_visuÆ_mode
();

3306 i‡(
Ÿhî_fûe
)

3308 
curwö
->
w_Æt_‚um
 = 
curbuf
->
b_‚um
;

3309 
	`buÊi°_Æénum
();

3311 i‡(
‚um
)

3312 
buf
 = 
	`buÊi°_födƒ
(
‚um
);

3314 
buf
 = 
	`buÊi°_√w
(
‚ame
, 
s‚ame
, 1L, 
TRUE
);

3315 i‡(
buf
 =
NULL
)

3316  
FAIL
;

3317 i‡(
buf
->
b_ml
.
ml_mÂ
 =
NULL
)

3319 
ﬁdbuf
 = 
FALSE
;

3320 
buf
->
b_nwödows
 = 1;

3324 
ﬁdbuf
 = 
TRUE
;

3325 ++
buf
->
b_nwödows
;

3326 
	`buf_check_time°amp
(
buf
);

3335 i‡(
buf
 !
curbuf
)

3337 #ifde‡
AUTOCMD


3338 
	`≠∂y_autocmds
(
EVENT_BUFLEAVE
, 
NULL
, NULL);

3340 #ifde‡
VIMINFO


3341 
curbuf
->
b_œ°_curs‹
 = 
curwö
->
w_curs‹
;

3343 
	`buf_c›y_›ti⁄s
(
curbuf
, 
buf
, 
TRUE
);

3344 
	`˛o£_buf„r
(
curwö
, 
curbuf
, !
hide
, 
FALSE
);

3345 
curwö
->
w_buf„r
 = 
buf
;

3346 
curbuf
 = 
buf
;

3349 
curwö
->
w_pcm¨k
.
 um
 = 1;

3350 
curwö
->
w_pcm¨k
.
cﬁ
 = 0;

3352 i‡(
	`check_‚ame
(Ë=
FAIL
)

3353  
FAIL
;

3359 ++
RedøwögDißbÀd
;

3360 i‡(
£t_hñp
)

3361 
curbuf
->
b_hñp
 = 
TRUE
;

3370 i‡(!
Ÿhî_fûe
)

3372 i‡(
√w um
 == 0)

3373 
√w um
 = 
curwö
->
w_curs‹
.
 um
;

3374 
	`buf_‰ìÆl
(
curbuf
);

3375 
	`buf_˛ór
(
curbuf
);

3376 
curbuf
->
b_›_°¨t
.
 um
 = 0;

3377 
curbuf
->
b_›_íd
.
 um
 = 0;

3383 
	`check_¨g_idx
();

3385 i‡(!
ﬁdbuf
)

3386 ()
	`›í_buf„r
();

3387 
	`wö_öô
(
curwö
);

3388 
	`makëôÀ
();

3390 i‡(
comm™d
 =
NULL
)

3392 i‡(
√w um
)

3394 
curwö
->
w_curs‹
.
 um
 = 
√w um
;

3395 
	`check_curs‹
();

3396 
	`begölöe
(
MAYBE
);

3399 
	`begölöe
(
TRUE
);

3406 i‡(
ﬁdbuf
)

3407 
	`fûeöfo
(
did_cd
, 
TRUE
, 
FALSE
);

3409 i‡(
comm™d
 !
NULL
)

3410 
	`do_cmdlöe
(
comm™d
, 
TRUE
, 
FALSE
);

3411 --
RedøwögDißbÀd
;

3412 i‡(!
skù_ªdøw
)

3413 
	`upd©eS¸ìn
(
CURSUPD
);

3415 i‡(
p_im
)

3416 
√ed_°¨t_ö£πmode
 = 
TRUE
;

3417  
OK
;

3418 
	}
}

3423 
ch¨_u
 *

3424 
	$gë¨gcmd
(
¨gp
)

3425 
ch¨_u
 **
¨gp
;

3427 
ch¨_u
 *
¨g
 = *
¨gp
;

3428 
ch¨_u
 *
comm™d
 = 
NULL
;

3430 i‡(*
¨g
 == '+')

3432 ++
¨g
;

3433 i‡(
	`vim_is•a˚
(*
¨g
))

3434 
comm™d
 = (
ch¨_u
 *)"$";

3440 
comm™d
 = 
¨g
;

3441 
¨g
 = 
	`skùtowhôe
(
comm™d
);

3442 i‡(*
¨g
)

3443 *
¨g
++ = 
NUL
;

3446 
¨g
 = 
	`skùwhôe
(arg);

3447 *
¨gp
 = 
¨g
;

3449  
comm™d
;

3450 
	}
}

3460 
	$back¶ash_hÆve
(
p
, 
ex∑nd_wûdˇrds
)

3461 
ch¨_u
 *
p
;

3462 
ex∑nd_wûdˇrds
;

3464  ; *
p
; ++p)

3465 i‡(
	`is_back¶ash
(
p
)

3466 #i‡
	`deföed
(
MSDOS
Ë|| deföed(
WIN32
)

3467 && 
p
[1] != '*' &&Ö[1] != '?'

3469 #i‡
	`deföed
(
UNIX
Ë|| deföed(
OS2
)

3470 && !(
ex∑nd_wûdˇrds
 &&

3471 
	`vim_°rchr
((
ch¨_u
 *)" *?[{`$\\", 
p
[1]))

3474 
	`STRCPY
(
p
,Ö + 1);

3475 
	}
}

3478 
	$do_make
(
¨g
)

3479 
ch¨_u
 *
¨g
;

3481 i‡(*
p_ef
 =
NUL
)

3483 
	`EMSG
("errorfile optionÇot set");

3487 
	`autowrôe_Æl
();

3488 
	`vim_ªmove
(
p_ef
);

3490 
	`•rötf
((*)
IObuff
, "%†%†%s", 
¨g
, 
p_•
, 
p_ef
);

3491 
	`MSG_OUTSTR
(":!");

3492 
	`msg_ouâøns
(
IObuff
);

3493 
	`do_shñl
(
IObuff
);

3495 #ifde‡
AMIGA


3496 
	`Êushbuf
();

3498 ()
	`ch¨_avaû
();

3501 i‡(
	`qf_öô
(Ë=
OK
)

3502 
	`qf_jump
(0, 0);

3504 
	`vim_ªmove
(
p_ef
);

3505 
	}
}

3513 
	$do_¨gli°
(
°r
)

3514 
ch¨_u
 *
°r
;

3516 
√w_cou¡
 = 0;

3517 
ch¨_u
 **
√w_fûes
 = 
NULL
;

3518 
exp_cou¡
;

3519 
ch¨_u
 **
exp_fûes
;

3520 
ch¨_u
 **
t
;

3521 
ch¨_u
 *
p
;

3522 
öquŸe
;

3523 
i
;

3525 *
°r
)

3530 
t
 = (
ch¨_u
 **)
	`œŒoc
((
l⁄g_u
)((ch¨_u *Ë* (
√w_cou¡
 + 1)), 
TRUE
);

3531 i‡(
t
 !
NULL
)

3532 
i
 = 
√w_cou¡
; --i >= 0; )

3533 
t
[
i
] = 
√w_fûes
[i];

3534 
	`vim_‰ì
(
√w_fûes
);

3535 i‡(
t
 =
NULL
)

3536  
FAIL
;

3537 
√w_fûes
 = 
t
;

3538 
√w_fûes
[
√w_cou¡
++] = 
°r
;

3543 
öquŸe
 = 
FALSE
;

3544 
p
 = 
°r
; *str; ++str)

3550 i‡(
	`is_back¶ash
(
°r
))

3551 *
p
++ = *++
°r
;

3554 i‡(!
öquŸe
 && 
	`vim_is•a˚
(*
°r
))

3556 i‡(*
°r
 == '"')

3557 
öquŸe
 ^
TRUE
;

3559 *
p
++ = *
°r
;

3562 
°r
 = 
	`skùwhôe
(str);

3563 *
p
 = 
NUL
;

3566 
i
 = 
	`Ex∑ndWûdC¨ds
(
√w_cou¡
, 
√w_fûes
, &
exp_cou¡
,

3567 &
exp_fûes
, 
FALSE
, 
TRUE
);

3568 
	`vim_‰ì
(
√w_fûes
);

3569 i‡(
i
 =
FAIL
)

3570  
FAIL
;

3571 i‡(
exp_cou¡
 == 0)

3573 
	`emsg
(
e_nom©ch
);

3574  
FAIL
;

3576 i‡(
¨g_exp
)

3577 
	`FªeWûd
(
¨g_cou¡
, 
¨g_fûes
);

3579 
¨g_exp
 = 
TRUE
;

3580 
¨g_fûes
 = 
exp_fûes
;

3581 
¨g_cou¡
 = 
exp_cou¡
;

3582 
¨g_had_œ°
 = 
FALSE
;

3587 
i
 = 0; i < 
¨g_cou¡
; ++i)

3588 ()
	`buÊi°_add
(
¨g_fûes
[
i
]);

3590  
OK
;

3591 
	}
}

3599 
	$is_back¶ash
(
°r
)

3600 
ch¨_u
 *
°r
;

3602 #ifde‡
BACKSLASH_IN_FILENAME


3603  (
°r
[0] ='\\' && så[1] !
NUL
 &&

3604 !(
	`isfûech¨
(
°r
[1]) && str[1] != '\\'));

3606  (
°r
[0] ='\\' && så[1] !
NUL
);

3608 
	}
}

3614 
	$check_¨g_idx
()

3616 
t
;

3618 i‡(
¨g_cou¡
 > 1 && (
curbuf
->
b_fûíame
 =
NULL
 ||

3619 (
t
 = 
	`fuŒ∑thcmp
(
¨g_fûes
[
curwö
->
w_¨g_idx
],

3620 
curbuf
->
b_fûíame
)Ë=
FPC_DIFF
 || 
t
 =
FPC_DIFFX
))

3621 
curwö
->
w_¨g_idx_övÆid
 = 
TRUE
;

3623 
curwö
->
w_¨g_idx_övÆid
 = 
FALSE
;

3624 
	}
}

3627 
	$gŸocmdlöe
(
˛r
)

3628 
˛r
;

3630 
	`msg_°¨t
();

3631 i‡(
˛r
)

3632 
	`msg_˛r_eos
();

3633 
	`wödgŸo
(
cmdlöe_row
, 0);

3634 
	}
}

3637 
	$check_ªad⁄ly
()

3639 i‡(!
f‹˚ô
 && 
curbuf
->
b_p_ro
)

3641 
	`emsg
(
e_ªad⁄ly
);

3642  
TRUE
;

3644  
FALSE
;

3645 
	}
}

3651 
	$check_ch™ged
(
buf
, 
checkaw
, 
mu…_wö
)

3652 
BUF
 *
buf
;

3653 
checkaw
;

3654 
mu…_wö
;

3656 i‡–!
f‹˚ô
 &&

3657 
buf
->
b_ch™ged
 && (
mu…_wö
 || buf->
b_nwödows
 <= 1) &&

3658 (!
checkaw
 || 
	`autowrôe
(
buf
Ë=
FAIL
))

3660 
	`emsg
(
e_nowπmsg
);

3661  
TRUE
;

3663  
FALSE
;

3664 
	}
}

3671 
	$check_ch™ged_™y
()

3673 
BUF
 *
buf
;

3674 
ßve
;

3676 i‡(!
f‹˚ô
)

3678 
buf
 = 
fú°buf
; bu‡!
NULL
; bu‡buf->
b_√xt
)

3680 i‡(
buf
->
b_ch™ged
)

3684 
exôög
 = 
FALSE
;

3685 i‡(
	`EMSG2
("No write sinceÜast change for buffer \"%s\"",

3686 
buf
->
b_xfûíame
 =
NULL
 ? (
ch¨_u
 *)"No File" :

3687 
buf
->
b_xfûíame
))

3689 
ßve
 = 
no_waô_ªtu∫
;

3690 
no_waô_ªtu∫
 = 
FALSE
;

3691 
	`waô_ªtu∫
(
FALSE
);

3692 
no_waô_ªtu∫
 = 
ßve
;

3694 ()
	`do_buf„r
(
DOBUF_GOTO
, 
DOBUF_FIRST
, 
FORWARD
,

3695 
buf
->
b_‚um
, 0);

3696  
TRUE
;

3700  
FALSE
;

3701 
	}
}

3708 
	$check_‚ame
()

3710 i‡(
curbuf
->
b_fûíame
 =
NULL
)

3712 
	`emsg
(
e_n⁄ame
);

3713  
FAIL
;

3715  
OK
;

3716 
	}
}

3727 
	$check_m‹e
(
mesßge
)

3728 
mesßge
;

3730 i‡(!
f‹˚ô
 && 
	`⁄ly_⁄e_wödow
(Ë&& 
¨g_cou¡
 > 1 && !
¨g_had_œ°
 &&

3731 
quôm‹e
 == 0)

3733 i‡(
mesßge
)

3735 
	`emsg2
((
ch¨_u
 *)"%ld more filesÅoÉdit",

3736 (
ch¨_u
 *)()(
¨g_cou¡
 - 
curwö
->
w_¨g_idx
 - 1));

3737 
quôm‹e
 = 2;

3739  
FAIL
;

3741  
OK
;

3742 
	}
}

3753 
	$gëfûe
(
‚um
, 
‚ame
, 
s‚ame
, 
£çm
, 
 um
)

3754 
‚um
;

3755 
ch¨_u
 *
‚ame
;

3756 
ch¨_u
 *
s‚ame
;

3757 
£çm
;

3758 
löír_t
 
 um
;

3760 
Ÿhî
;

3762 i‡(
‚um
 == 0)

3764 
	`‚ame_ex∑nd
(&
‚ame
, &
s‚ame
);

3765 
Ÿhî
 = 
	`Ÿhîfûe
(
‚ame
);

3768 
Ÿhî
 = (
‚um
 !
curbuf
->
b_‚um
);

3770 i‡(
Ÿhî
)

3771 ++
no_waô_ªtu∫
;

3772 i‡(
Ÿhî
 && !
f‹˚ô
 && 
curbuf
->
b_nwödows
 == 1 &&

3773 !
p_hid
 && 
curbuf
->
b_ch™ged
 && 
	`autowrôe
(curbufË=
FAIL
)

3775 i‡(
Ÿhî
)

3776 --
no_waô_ªtu∫
;

3777 
	`emsg
(
e_nowπmsg
);

3780 i‡(
Ÿhî
)

3781 --
no_waô_ªtu∫
;

3782 i‡(
£çm
)

3783 
	`£çcm¨k
();

3784 i‡(!
Ÿhî
)

3786 i‡(
 um
 != 0)

3787 
curwö
->
w_curs‹
.
 um
 =Ünum;

3788 
	`check_curs‹
();

3789 
	`begölöe
(
MAYBE
);

3793 i‡(
	`do_ecmd
(
‚um
, 
‚ame
, 
s‚ame
, 
NULL
, 
p_hid
, 
 um
, 
FALSE
Ë=
OK
)

3796 
	}
}

3808 
	$vim_°∫˝y
(
to
, 
‰om
, 
Àn
)

3809 
ch¨_u
 *
to
;

3810 
ch¨_u
 *
‰om
;

3811 
Àn
;

3813 
i
;

3815 i‡(
to
 <
‰om
)

3817 
Àn
-- && *
‰om
)

3818 *
to
++ = *
‰om
++;

3819 i‡(
Àn
 >= 0)

3820 *
to
 = *
‰om
;

3824 
i
 = 0; i < 
Àn
; i++)

3826 
to
++;

3827 i‡(*
‰om
++ =
NUL
)

3829 
i
++;

3833 ; 
i
 > 0; i--)

3834 *--
to
 = *--
‰om
;

3836 
	}
}

3845 
	$√xtwûd
(
ty≥
)

3846 
ty≥
;

3848 
i
;

3849 
ch¨_u
 *
p1
;

3850 
ch¨_u
 *
p2
;

3851 
ﬁdÀn
;

3852 
difÊí
;

3853 
v
;

3855 i‡(
cmd_numfûes
 == -1)

3856 
	`£t_ex∑nd_c⁄ãxt
(
cmdfú°c
, 
cmdbuff
);

3857 i‡(
ex∑nd_c⁄ãxt
 =
EXPAND_UNSUCCESSFUL
)

3859 
	`bìp_Êush
();

3860  
OK
;

3862 i‡(
ex∑nd_c⁄ãxt
 =
EXPAND_NOTHING
)

3865  
FAIL
;

3867 
ex∑nd_öãø˘ivñy
 = 
TRUE
;

3869 
	`MSG_OUTSTR
("...");

3870 
	`Êushbuf
();

3872 
i
 = 
ex∑nd_∑âîn
 - 
cmdbuff
;

3873 
ﬁdÀn
 = 
cmdpos
 - 
i
;

3875 i‡(
ty≥
 =
WILD_NEXT
 ||Åy≥ =
WILD_PREV
)

3880 
p2
 = 
	`Ex∑ndO√
(
NULL
, NULL, 0, 
ty≥
);

3887 i‡((
p1
 = 
	`add°¨
(&
cmdbuff
[
i
], 
ﬁdÀn
)Ë=
NULL
)

3888 
p2
 = 
NULL
;

3891 
p2
 = 
	`Ex∑ndO√
(
p1
, 
	`°∫ßve
(&
cmdbuff
[
i
], 
ﬁdÀn
),

3892 
WILD_HOME_REPLACE
, 
ty≥
);

3893 
	`vim_‰ì
(
p1
);

3897 i‡(
p2
 !
NULL
)

3899 i‡(
cmdÀn
 + (
difÊí
 = 
	`STRLEN
(
p2
Ë- 
ﬁdÀn
Ë> 
cmdbufÊí
 - 4)

3900 
v
 = 
	`ªÆloc_cmdbuff
(
cmdÀn
 + 
difÊí
);

3902 
v
 = 
OK
;

3903 i‡(
v
 =
OK
)

3905 
	`vim_°∫˝y
(&
cmdbuff
[
cmdpos
 + 
difÊí
], &cmdbuff[cmdpos],

3906 
cmdÀn
 - 
cmdpos
);

3907 
	`STRNCPY
(&
cmdbuff
[
i
], 
p2
, 
	`STRLEN
(p2));

3908 
cmdÀn
 +
difÊí
;

3909 
cmdpos
 +
difÊí
;

3911 
	`vim_‰ì
(
p2
);

3914 
	`ªdøwcmd
();

3915 i‡(
cmd_numfûes
 <0 && 
p2
 =
NULL
)

3916 
	`bìp_Êush
();

3917 i‡(
cmd_numfûes
 == 1)

3918 ()
	`Ex∑ndO√
(
NULL
, NULL, 0, 
WILD_FREE
);

3920 
ex∑nd_öãø˘ivñy
 = 
FALSE
;

3921  
OK
;

3922 
	}
}

3924 
	#MAXSUFLEN
 30

	)

3942 
ch¨_u
 *

3943 
	$Ex∑ndO√
(
°r
, 
‹ig
, 
›ti⁄s
, 
mode
)

3944 
ch¨_u
 *
°r
;

3945 
ch¨_u
 *
‹ig
;

3946 
›ti⁄s
;

3947 
mode
;

3949 
ch¨_u
 *
ss
 = 
NULL
;

3950 
ch¨_u
 **
cmd_fûes
 = 
NULL
;

3951 
födex
;

3952 
ch¨_u
 *
‹ig_ßve
 = 
NULL
;

3953 
i
, 
found
 = 0;

3954 
mu…m©ch
 = 
FALSE
;

3955 
l⁄g_u
 
Àn
;

3956 
ch¨_u
 *
£tsuf
;

3957 
‚amñí
, 
£tsuÊí
;

3958 
ch¨_u
 
suf_buf
[
MAXSUFLEN
];

3959 
ch¨_u
 *
p
;

3964 i‡(
mode
 =
WILD_NEXT
 || modê=
WILD_PREV
)

3966 i‡(
cmd_numfûes
 > 0)

3968 i‡(
mode
 =
WILD_PREV
)

3970 i‡(
födex
 == -1)

3971 
födex
 = 
cmd_numfûes
;

3972 --
födex
;

3975 ++
födex
;

3981 i‡(
födex
 < 0)

3983 i‡(
‹ig_ßve
 =
NULL
)

3984 
födex
 = 
cmd_numfûes
 - 1;

3986 
födex
 = -1;

3988 i‡(
födex
 >
cmd_numfûes
)

3990 i‡(
‹ig_ßve
 =
NULL
)

3991 
födex
 = 0;

3993 
födex
 = -1;

3995 i‡(
födex
 == -1)

3996  
	`°rßve
(
‹ig_ßve
);

3997  
	`°rßve
(
cmd_fûes
[
födex
]);

4000  
NULL
;

4004 i‡(
cmd_numfûes
 !-1 && 
mode
 !
WILD_ALL
 && modê!
WILD_LONGEST
)

4006 
	`FªeWûd
(
cmd_numfûes
, 
cmd_fûes
);

4007 
cmd_numfûes
 = -1;

4008 
	`vim_‰ì
(
‹ig_ßve
);

4009 
‹ig_ßve
 = 
NULL
;

4011 
födex
 = 0;

4013 i‡(
mode
 =
WILD_FREE
)

4014  
NULL
;

4016 i‡(
cmd_numfûes
 == -1)

4018 
	`vim_‰ì
(
‹ig_ßve
);

4019 
‹ig_ßve
 = 
‹ig
;

4020 i‡(
	`Ex∑ndFromC⁄ãxt
(
°r
, &
cmd_numfûes
, &
cmd_fûes
, 
FALSE
,

4021 
›ti⁄s
Ë=
FAIL
)

4023 i‡(
cmd_numfûes
 == 0)

4025 i‡(!
ex∑nd_öãø˘ivñy
)

4026 
	`emsg
(
e_nom©ch
);

4034 i‡(*
°r
 ='~' && (
›ti⁄s
 & 
WILD_HOME_REPLACE
))

4036 
i
 = 0; i < 
cmd_numfûes
; ++i)

4038 
p
 = 
	`home_ª∂a˚_ßve
(
NULL
, 
cmd_fûes
[
i
]);

4039 i‡(
p
 !
NULL
)

4041 
	`vim_‰ì
(
cmd_fûes
[
i
]);

4042 
cmd_fûes
[
i
] = 
p
;

4051 i‡(
ex∑nd_öãø˘ivñy
 &&

4052 (
ex∑nd_c⁄ãxt
 =
EXPAND_FILES
 ||

4053 
ex∑nd_c⁄ãxt
 =
EXPAND_BUFFERS
 ||

4054 
ex∑nd_c⁄ãxt
 =
EXPAND_DIRECTORIES
))

4056 
i
 = 0; i < 
cmd_numfûes
; ++i)

4058 
p
 = 
	`°rßve_esˇ≥d
(
cmd_fûes
[
i
],

4059 #ifde‡
BACKSLASH_IN_FILENAME


4060 (
ch¨_u
 *)" *?[{`$%#");

4062 (
ch¨_u
 *)" *?[{`$\\%#");

4064 i‡(
p
 !
NULL
)

4066 
	`vim_‰ì
(
cmd_fûes
[
i
]);

4067 
cmd_fûes
[
i
] = 
p
;

4072 i‡(
mode
 !
WILD_ALL
 && modê!
WILD_LONGEST
)

4074 i‡(
cmd_numfûes
 > 1)

4076 
found
 = -2;

4077 
i
 = 0; i < 
cmd_numfûes
; ++i)

4079 
‚amñí
 = 
	`STRLEN
(
cmd_fûes
[
i
]);

4080 
£tsuÊí
 = 0;

4081 
£tsuf
 = 
p_su
; *setsuf; )

4083 
£tsuÊí
 = 
	`c›y_›ti⁄_∑π
(&
£tsuf
, 
suf_buf
,

4084 
MAXSUFLEN
, ".,");

4085 i‡(
‚amñí
 >
£tsuÊí
 && 
	`STRNCMP
(
suf_buf
,

4086 
cmd_fûes
[
i
] + 
‚amñí
 - 
£tsuÊí
,

4087 (
size_t
)
£tsuÊí
) == 0)

4089 
£tsuÊí
 = 0;

4091 i‡(
£tsuÊí
)

4093 i‡(
found
 >= 0)

4095 
mu…m©ch
 = 
TRUE
;

4098 
found
 = 
i
;

4101 i‡(
mu…m©ch
 || 
found
 < 0)

4108 i‡(!
ex∑nd_öãø˘ivñy
)

4109 
	`emsg
(
e_toom™y
);

4111 
	`bìp_Êush
();

4112 
found
 = 0;

4113 
mu…m©ch
 = 
TRUE
;

4115 i‡(
found
 >0 && !(
mu…m©ch
 && 
mode
 =
WILD_EXPAND_FREE
))

4116 
ss
 = 
	`°rßve
(
cmd_fûes
[
found
]);

4122 i‡(
mode
 =
WILD_LONGEST
 && 
cmd_numfûes
 > 0)

4124 
Àn
 = 0; 
cmd_fûes
[0][len]; ++len)

4126 
i
 = 0; i < 
cmd_numfûes
; ++i)

4128 #ifde‡
CASE_INSENSITIVE_FILENAME


4129 i‡((
ex∑nd_c⁄ãxt
 =
EXPAND_DIRECTORIES
 ||

4130 
ex∑nd_c⁄ãxt
 =
EXPAND_FILES
 ||

4131 
ex∑nd_c⁄ãxt
 =
EXPAND_BUFFERS
) &&

4132 
	`touµî
(
cmd_fûes
[
i
][
Àn
]) !=Åoupper(cmd_files[0][len]))

4136 i‡(
cmd_fûes
[
i
][
Àn
] != cmd_files[0][len])

4139 i‡(
i
 < 
cmd_numfûes
)

4141 
	`vim_bìp
();

4145 
ss
 = 
	`Æloc
(()
Àn
 + 1);

4146 i‡(
ss
)

4148 
	`STRNCPY
(
ss
, 
cmd_fûes
[0], 
Àn
);

4149 
ss
[
Àn
] = 
NUL
;

4151 
födex
 = -1;

4155 i‡(
mode
 =
WILD_ALL
 && 
cmd_numfûes
 > 0)

4157 
Àn
 = 0;

4158 
i
 = 0; i < 
cmd_numfûes
; ++i)

4159 
Àn
 +
	`STRLEN
(
cmd_fûes
[
i
]) + 1;

4160 
ss
 = 
	`œŒoc
(
Àn
, 
TRUE
);

4161 i‡(
ss
)

4163 *
ss
 = 
NUL
;

4164 
i
 = 0; i < 
cmd_numfûes
; ++i)

4166 
	`STRCAT
(
ss
, 
cmd_fûes
[
i
]);

4167 i‡(
i
 !
cmd_numfûes
 - 1)

4168 
	`STRCAT
(
ss
, " ");

4173 i‡(
mode
 =
WILD_EXPAND_FREE
 || modê=
WILD_ALL
)

4175 
	`FªeWûd
(
cmd_numfûes
, 
cmd_fûes
);

4176 
cmd_numfûes
 = -1;

4178  
ss
;

4179 
	}
}

4185 
	$showm©ches
(
buff
)

4186 
ch¨_u
 *
buff
;

4188 
ch¨_u
 *
fûe_°r
;

4189 
num_fûes
;

4190 
ch¨_u
 **
fûes_found
;

4191 
i
, 
j
, 
k
;

4192 
maxÀn
;

4193 
löes
;

4194 
cﬁumns
;

4195 
ch¨_u
 *
p
;

4196 
œ°Àn
;

4198 
	`£t_ex∑nd_c⁄ãxt
(
cmdfú°c
, 
cmdbuff
);

4199 i‡(
ex∑nd_c⁄ãxt
 =
EXPAND_UNSUCCESSFUL
)

4201 
	`bìp_Êush
();

4202  
OK
;

4204 i‡(
ex∑nd_c⁄ãxt
 =
EXPAND_NOTHING
)

4207  
FAIL
;

4209 
ex∑nd_öãø˘ivñy
 = 
TRUE
;

4212 
fûe_°r
 = 
	`add°¨
(
ex∑nd_∑âîn
, ()(
buff
 + 
cmdpos
 -Éxpand_pattern));

4213 i‡(
fûe_°r
 =
NULL
)

4215 
ex∑nd_öãø˘ivñy
 = 
FALSE
;

4216  
OK
;

4219 
msg_did™y
 = 
FALSE
;

4220 
	`msg_°¨t
();

4221 
	`msg_outch¨
('\n');

4222 
	`Êushbuf
();

4223 
cmdlöe_row
 = 
msg_row
;

4224 
msg_did™y
 = 
FALSE
;

4225 
	`msg_°¨t
();

4228 i‡(
	`Ex∑ndFromC⁄ãxt
(
fûe_°r
, &
num_fûes
, &
fûes_found
, 
FALSE
, 0Ë=
FAIL
)

4230 
num_fûes
 = 0;

4231 
fûes_found
 = (
ch¨_u
 **)"";

4235 
maxÀn
 = 0;

4236 
i
 = 0; i < 
num_fûes
; ++i)

4238 i‡(
ex∑nd_c⁄ãxt
 =
EXPAND_FILES
 ||Éx∑nd_c⁄ãxà=
EXPAND_BUFFERS
)

4240 
	`home_ª∂a˚
(
NULL
, 
fûes_found
[
i
], 
NameBuff
, 
MAXPATHL
);

4241 
j
 = 
	`°rsize
(
NameBuff
);

4244 
j
 = 
	`°rsize
(
fûes_found
[
i
]);

4245 i‡(
j
 > 
maxÀn
)

4246 
maxÀn
 = 
j
;

4250 
maxÀn
 += 2;

4251 
cﬁumns
 = (()
Cﬁumns
 + 2Ë/ 
maxÀn
;

4252 i‡(
cﬁumns
 < 1)

4253 
cﬁumns
 = 1;

4254 
löes
 = (
num_fûes
 + 
cﬁumns
 - 1) / columns;

4256 ()
	`£t_highlight
('d');

4259 
i
 = 0; i < 
löes
; ++i)

4261 
œ°Àn
 = 999;

4262 
k
 = 
i
; k < 
num_fûes
; k +
löes
)

4264 
j
 = 
maxÀn
 - 
œ°Àn
; --j >= 0; )

4265 
	`msg_outch¨
(' ');

4266 i‡(
ex∑nd_c⁄ãxt
 =
EXPAND_FILES
 ||

4267 
ex∑nd_c⁄ãxt
 =
EXPAND_BUFFERS
)

4270 
j
 = (
	`mch_isdú
(
fûes_found
[
k
]));

4271 
	`home_ª∂a˚
(
NULL
, 
fûes_found
[
k
], 
NameBuff
, 
MAXPATHL
);

4272 
p
 = 
NameBuff
;

4276 
j
 = 
FALSE
;

4277 
p
 = 
fûes_found
[
k
];

4279 i‡(
j
)

4280 
	`°¨t_highlight
();

4281 
œ°Àn
 = 
	`msg_ouâøns
(
p
);

4282 i‡(
j
)

4283 
	`°›_highlight
();

4285 
	`msg_outch¨
('\n');

4286 
	`Êushbuf
();

4287 i‡(
gŸ_öt
)

4289 
gŸ_öt
 = 
FALSE
;

4293 
	`vim_‰ì
(
fûe_°r
);

4294 
	`FªeWûd
(
num_fûes
, 
fûes_found
);

4300 
cmdlöe_row
 = 
msg_row
;

4302 
ex∑nd_öãø˘ivñy
 = 
FALSE
;

4303  
OK
;

4304 
	}
}

4313 
ch¨_u
 *

4314 
	$add°¨
(
‚ame
, 
Àn
)

4315 
ch¨_u
 *
‚ame
;

4316 
Àn
;

4318 
ch¨_u
 *
ªtvÆ
;

4319 
i
, 
j
;

4320 
√w_Àn
;

4321 
ch¨_u
 *
èû
;

4323 i‡(
ex∑nd_öãø˘ivñy
 && 
ex∑nd_c⁄ãxt
 !
EXPAND_FILES
 &&

4324 
ex∑nd_c⁄ãxt
 !
EXPAND_DIRECTORIES
)

4333 i‡(
ex∑nd_c⁄ãxt
 =
EXPAND_HELP
)

4334 
ªtvÆ
 = 
	`°∫ßve
(
‚ame
, 
Àn
);

4337 
√w_Àn
 = 
Àn
 + 2;

4338 
i
 = 0; i < 
Àn
; i++)

4340 i‡(
‚ame
[
i
] == '*' || fname[i] == '~')

4341 
√w_Àn
++;

4345 i‡(
ex∑nd_c⁄ãxt
 =
EXPAND_BUFFERS
 && 
‚ame
[
i
] == '.')

4346 
√w_Àn
++;

4348 
ªtvÆ
 = 
	`Æloc
(
√w_Àn
);

4349 i‡(
ªtvÆ
 !
NULL
)

4351 
ªtvÆ
[0] = '^';

4352 
j
 = 1;

4353 
i
 = 0; i < 
Àn
; i++, 
j
++)

4355 i‡(
‚ame
[
i
] ='\\' && ++ò=
Àn
)

4358 
‚ame
[
i
])

4360 '*': 
ªtvÆ
[
j
++] = '.';

4362 '~': 
ªtvÆ
[
j
++] = '\\';

4364 '?': 
ªtvÆ
[
j
] = '.';

4366 '.': i‡(
ex∑nd_c⁄ãxt
 =
EXPAND_BUFFERS
)

4367 
ªtvÆ
[
j
++] = '\\';

4370 
ªtvÆ
[
j
] = 
‚ame
[
i
];

4372 
ªtvÆ
[
j
] = 
NUL
;

4378 
ªtvÆ
 = 
	`Æloc
(
Àn
 + 4);

4379 i‡(
ªtvÆ
 !
NULL
)

4381 
	`STRNCPY
(
ªtvÆ
, 
‚ame
, 
Àn
);

4382 
ªtvÆ
[
Àn
] = 
NUL
;

4383 
	`back¶ash_hÆve
(
ªtvÆ
, 
TRUE
);

4384 
Àn
 = 
	`STRLEN
(
ªtvÆ
);

4392 
èû
 = 
	`gëèû
(
ªtvÆ
);

4393 i‡(*
èû
 !'~' && 
	`vim_°rchr
—aû, '$'Ë=
NULL


4394 && 
	`vim_°rchr
(
ªtvÆ
, '`'Ë=
NULL
)

4396 #ifde‡
MSDOS


4401 
i
 = 
Àn
 - 1; i >= 0; --i)

4402 i‡(
	`vim_°rchr
((
ch¨_u
 *)".\\/:", 
ªtvÆ
[
i
]Ë!
NULL
)

4404 i‡(
i
 < 0 || 
ªtvÆ
[i] != '.')

4406 
ªtvÆ
[
Àn
++] = '*';

4407 
ªtvÆ
[
Àn
++] = '.';

4410 
ªtvÆ
[
Àn
++] = '*';

4412 
ªtvÆ
[
Àn
] = 
NUL
;

4415  
ªtvÆ
;

4416 
	}
}

4426 
	$do_sour˚
(
‚ame
, 
check_Ÿhî
)

4427 
ch¨_u
 *
‚ame
;

4428 
check_Ÿhî
;

4430 
FILE
 *
Â
;

4431 
Àn
;

4432 #ifde‡
USE_CRNL


4433 
has_¸
;

4434 
ãxtmode
 = -1;

4435 
îr‹
 = 
FALSE
;

4438 
	`ex∑nd_ív
(
‚ame
, 
NameBuff
, 
MAXPATHL
);

4439 
Â
 = 
	`f›í
((*)
NameBuff
, 
READBIN
);

4440 i‡(
Â
 =
NULL
 && 
check_Ÿhî
)

4446 
Àn
 = 
	`STRLEN
(
NameBuff
);

4447 i‡(((
Àn
 > 6 && 
	`i•©h£p
(
NameBuff
[len - 7])) ||Üen == 6) &&

4448 (
NameBuff
[
Àn
 - 6] == '.' || NameBuff[len - 6] == '_') &&

4449 (
	`STRCMP
(&
NameBuff
[
Àn
 - 5], "vimrc") == 0))

4451 i‡(
NameBuff
[
Àn
 - 6] == '_')

4452 
NameBuff
[
Àn
 - 6] = '.';

4454 
NameBuff
[
Àn
 - 6] = '_';

4455 
Â
 = 
	`f›í
((*)
NameBuff
, 
READBIN
);

4459 i‡(
Â
 =
NULL
)

4460  
FAIL
;

4462 #ifde‡
USE_CRNL


4464 i‡(!
p_è
)

4465 
ãxtmode
 = 1;

4467 
sourcög_«me
 = 
‚ame
;

4468 
sourcög_ um
 = 1;

4469 #ifde‡
SLEEP_IN_EMSG


4470 ++
d⁄t_¶ìp
;

4472 
Àn
 = 0;

4473 
	`fgës
((*)
IObuff
 + 
Àn
, 
IOSIZE
 -Üí, 
Â
Ë!
NULL
 && !
gŸ_öt
)

4475 
Àn
 = 
	`STRLEN
(
IObuff
) - 1;

4476 i‡(
Àn
 >0 && 
IObuff
[len] == '\n')

4478 #ifde‡
USE_CRNL


4479 
has_¸
 = (
Àn
 > 0 && 
IObuff
[len - 1] == '\r');

4480 i‡(
ãxtmode
 == -1)

4482 i‡(
has_¸
)

4483 
ãxtmode
 = 1;

4485 
ãxtmode
 = 0;

4488 i‡(
ãxtmode
)

4490 i‡(
has_¸
)

4491 --
Àn
;

4494 i‡(!
îr‹
)

4495 
	`EMSG
("Warning: WrongÜine separator, ^M may be missing");

4496 
îr‹
 = 
TRUE
;

4497 
ãxtmode
 = 0;

4502 i‡(
Àn
 > 0 &&Üí < 
IOSIZE
 && 
IObuff
[À¿- 1] =
	`Cål
('V'))

4504 
IObuff
[
Àn
 - 1] = '\n';

4505 ++
sourcög_ um
;

4508 
IObuff
[
Àn
] = 
NUL
;

4511 
	`mch_bªakcheck
();

4512 
	`do_cmdlöe
(
IObuff
, 
TRUE
, TRUE);

4513 
Àn
 = 0;

4514 ++
sourcög_ um
;

4516 
	`f˛o£
(
Â
);

4517 i‡(
gŸ_öt
)

4518 
	`emsg
(
e_öãº
);

4519 #ifde‡
SLEEP_IN_EMSG


4520 --
d⁄t_¶ìp
;

4522 
sourcög_«me
 = 
NULL
;

4523 
sourcög_ um
 = 0;

4524  
OK
;

4525 
	}
}

4533 
löír_t


4534 
	$gë_addªss
(
±r
)

4535 
ch¨_u
 **
±r
;

4537 
löír_t
 
curs‹_ um
 = 
curwö
->
w_curs‹
.
 um
;

4538 
c
;

4539 
i
;

4540 
n
;

4541 
ch¨_u
 *
cmd
;

4542 
FPOS
 
pos
;

4543 
FPOS
 *
Â
;

4544 
löír_t
 
 um
;

4546 
cmd
 = 
	`skùwhôe
(*
±r
);

4547 
 um
 = 
MAXLNUM
;

4550 *
cmd
)

4553 ++
cmd
;

4554 
 um
 = 
curs‹_ um
;

4558 ++
cmd
;

4559 
 um
 = 
curbuf
->
b_ml
.
ml_löe_cou¡
;

4563 i‡(*++
cmd
 =
NUL
 || (
	`check_m¨k
(

4564 
Â
 = 
	`gëm¨k
(*
cmd
++, 
FALSE
)Ë=
FAIL
))

4565 
îr‹
;

4566 
 um
 = 
Â
->lnum;

4571 
c
 = *
cmd
++;

4572 
pos
 = 
curwö
->
w_curs‹
;

4573 i‡(
c
 == '/')

4575 ++
curwö
->
w_curs‹
.
 um
;

4576 
curwö
->
w_curs‹
.
cﬁ
 = 0;

4580 --
curwö
->
w_curs‹
.
 um
;

4581 
curwö
->
w_curs‹
.
cﬁ
 = 
MAXCOL
;

4583 
£¨chcmdÀn
 = 0;

4584 i‡(!
	`do_£¨ch
(
c
, 
cmd
, 1L,

4585 
SEARCH_HIS
 + 
SEARCH_MSG
 + 
SEARCH_START
))

4587 
cmd
 = 
NULL
;

4588 
curwö
->
w_curs‹
 = 
pos
;

4589 
îr‹
;

4591 
 um
 = 
curwö
->
w_curs‹
.lnum;

4592 
curwö
->
w_curs‹
 = 
pos
;

4594 
cmd
 +
£¨chcmdÀn
;

4598 ++
cmd
;

4599 i‡(*
cmd
 == '&')

4600 
i
 = 
RE_SUBST
;

4601 i‡(*
cmd
 == '?' || *cmd == '/')

4602 
i
 = 
RE_SEARCH
;

4605 
	`emsg
(
e_back¶ash
);

4606 
cmd
 = 
NULL
;

4607 
îr‹
;

4611 i‡(*
cmd
 != '?')

4613 
pos
.
 um
 = 
curwö
->
w_curs‹
.lnum + 1;

4614 
pos
.
cﬁ
 = 0;

4619 
pos
.
 um
 = 
curwö
->
w_curs‹
.lnum - 1;

4620 
pos
.
cﬁ
 = 
MAXCOL
;

4622 i‡(
	`£¨chô
(&
pos
, *
cmd
 ='?' ? 
BACKWARD
 : 
FORWARD
,

4623 (
ch¨_u
 *)"", 1L,

4624 
SEARCH_MSG
 + 
SEARCH_START
, 
i
Ë=
OK
)

4625 
 um
 = 
pos
.lnum;

4628 
cmd
 = 
NULL
;

4629 
îr‹
;

4631 ++
cmd
;

4635 i‡(
	`isdigô
(*
cmd
))

4636 
 um
 = 
	`gëdigôs
(&
cmd
);

4641 
cmd
 = 
	`skùwhôe
(cmd);

4642 i‡(*
cmd
 !'-' && *cmd !'+' && !
	`isdigô
(*cmd))

4645 i‡(
 um
 =
MAXLNUM
)

4646 
 um
 = 
curs‹_ um
;

4647 i‡(
	`isdigô
(*
cmd
))

4648 
i
 = '+';

4650 
i
 = *
cmd
++;

4651 i‡(!
	`isdigô
(*
cmd
))

4652 
n
 = 1;

4654 
n
 = 
	`gëdigôs
(&
cmd
);

4655 i‡(
i
 == '-')

4656 
 um
 -
n
;

4658 
 um
 +
n
;

4660 
curs‹_ um
 = 
 um
;

4661 } *
cmd
 == '/' || *cmd == '?');

4663 
îr‹
:

4664 *
±r
 = 
cmd
;

4665  
 um
;

4666 
	}
}

4700 
	$£t_ex∑nd_c⁄ãxt
(
fú°c
, 
buff
)

4701 
fú°c
;

4702 
ch¨_u
 *
buff
;

4704 
ch¨_u
 *
√xtcomm
;

4705 
ch¨_u
 
ﬁd_ch¨
;

4707 
ﬁd_ch¨
 = 
cmdbuff
[
cmdpos
];

4708 
cmdbuff
[
cmdpos
] = 
NUL
;

4709 
√xtcomm
 = 
buff
;

4710 
√xtcomm
 !
NULL
)

4711 
√xtcomm
 = 
	`£t_⁄e_cmd_c⁄ãxt
(
fú°c
,Çextcomm);

4712 
cmdbuff
[
cmdpos
] = 
ﬁd_ch¨
;

4713 
	}
}

4722 
ch¨_u
 *

4723 
	$£t_⁄e_cmd_c⁄ãxt
(
fú°c
, 
buff
)

4724 
fú°c
;

4725 
ch¨_u
 *
buff
;

4727 
ch¨_u
 *
p
;

4728 
ch¨_u
 *
cmd
, *
¨g
;

4729 
i
;

4730 
cmdidx
;

4731 
¨gt
;

4732 
ch¨_u
 
dñim
;

4733 
f‹˚d
 = 
FALSE
;

4734 
u£fûãr
 = 
FALSE
;

4736 
ex∑nd_∑âîn
 = 
buff
;

4737 i‡(
fú°c
 != ':')

4739 
ex∑nd_c⁄ãxt
 = 
EXPAND_NOTHING
;

4740  
NULL
;

4742 
ex∑nd_c⁄ãxt
 = 
EXPAND_COMMANDS
;

4747 
cmd
 = 
buff
; 
	`vim_°rchr
((
ch¨_u
 *)" \t:|", *cmdË!
NULL
; cmd++)

4749 
ex∑nd_∑âîn
 = 
cmd
;

4751 i‡(*
cmd
 =
NUL
)

4752  
NULL
;

4753 i‡(*
cmd
 == '"')

4755 
ex∑nd_c⁄ãxt
 = 
EXPAND_NOTHING
;

4756  
NULL
;

4766 *
cmd
 !
NUL
 && (
	`vim_is•a˚
(*cmdË|| 
	`isdigô
(*cmd) ||

4767 
	`vim_°rchr
((
ch¨_u
 *)".$%'/?-+,;", *
cmd
Ë!
NULL
))

4769 i‡(*
cmd
 == '\'')

4771 i‡(*++
cmd
 =
NUL
)

4772 
ex∑nd_c⁄ãxt
 = 
EXPAND_NOTHING
;

4774 i‡(*
cmd
 == '/' || *cmd == '?')

4776 
dñim
 = *
cmd
++;

4777 *
cmd
 !
NUL
 && *cmd !
dñim
)

4778 i‡(*
cmd
++ ='\\' && *cmd !
NUL
)

4779 ++
cmd
;

4780 i‡(*
cmd
 =
NUL
)

4781 
ex∑nd_c⁄ãxt
 = 
EXPAND_NOTHING
;

4783 i‡(*
cmd
 !
NUL
)

4784 ++
cmd
;

4791 
cmd
 = 
	`skùwhôe
(cmd);

4792 
ex∑nd_∑âîn
 = 
cmd
;

4793 i‡(*
cmd
 =
NUL
)

4794  
NULL
;

4795 i‡(*
cmd
 == '"')

4797 
ex∑nd_c⁄ãxt
 = 
EXPAND_NOTHING
;

4798  
NULL
;

4801 i‡(*
cmd
 == '|' || *cmd == '\n')

4802  
cmd
 + 1;

4810 i‡(*
cmd
 == 'k')

4812 
cmdidx
 = 
CMD_k
;

4813 
p
 = 
cmd
 + 1;

4817 
p
 = 
cmd
;

4818 
	`ißÕha
(*
p
) || *p == '*')

4819 ++
p
;

4821 i‡(
p
 =
cmd
 && 
	`vim_°rchr
((
ch¨_u
 *)"@!=><&~#", *pË!
NULL
)

4822 ++
p
;

4823 
i
 = ()(
p
 - 
cmd
);

4825 i‡(
i
 == 0)

4827 
ex∑nd_c⁄ãxt
 = 
EXPAND_UNSUCCESSFUL
;

4828  
NULL
;

4830 
cmdidx
 = 0; cmdidx < 
CMD_SIZE
; ++cmdidx)

4831 i‡(
	`STRNCMP
(
cmd«mes
[
cmdidx
].
cmd_«me
, 
cmd
, (
size_t
)
i
) == 0)

4839 i‡(
p
 =
cmdbuff
 + 
cmdpos
 && 
	`ißÕha
(p[-1]))

4840  
NULL
;

4842 i‡(
cmdidx
 =
CMD_SIZE
)

4844 i‡(*
cmd
 ='s' && 
	`vim_°rchr
((
ch¨_u
 *)"cgr", cmd[1]Ë!
NULL
)

4846 
cmdidx
 = 
CMD_sub°ôuã
;

4847 
p
 = 
cmd
 + 1;

4852 
ex∑nd_c⁄ãxt
 = 
EXPAND_UNSUCCESSFUL
;

4853  
NULL
;

4857 
ex∑nd_c⁄ãxt
 = 
EXPAND_NOTHING
;

4859 i‡(*
p
 == '!')

4861 
f‹˚d
 = 
TRUE
;

4862 ++
p
;

4868 
¨gt
 = 
cmd«mes
[
cmdidx
].
cmd_¨gt
;

4870 
¨g
 = 
	`skùwhôe
(
p
);

4872 i‡(
cmdidx
 =
CMD_wrôe
)

4874 i‡(*
¨g
 == '>')

4876 i‡(*++
¨g
 == '>')

4877 ++
¨g
;

4878 
¨g
 = 
	`skùwhôe
(arg);

4880 i‡(*
¨g
 == '!')

4882 ++
¨g
;

4883 
u£fûãr
 = 
TRUE
;

4887 i‡(
cmdidx
 =
CMD_ªad
)

4889 
u£fûãr
 = 
f‹˚d
;

4890 i‡(*
¨g
 == '!')

4892 ++
¨g
;

4893 
u£fûãr
 = 
TRUE
;

4897 i‡(
cmdidx
 =
CMD_lshi·
 || cmdidx =
CMD_rshi·
)

4899 *
¨g
 =*
cmd
)

4900 ++
¨g
;

4901 
¨g
 = 
	`skùwhôe
(arg);

4905 i‡((
¨gt
 & 
EDITCMD
Ë&& !
u£fûãr
 && *
¨g
 == '+')

4908 
p
 = 
¨g
 + 1;

4909 
¨g
 = 
	`skùtowhôe
(arg);

4912 i‡(
¨g
 >
cmdbuff
 + 
cmdpos
)

4913  
p
;

4916 
¨g
 = 
	`skùwhôe
(arg);

4923 i‡((
¨gt
 & 
TRLBAR
Ë&& !
u£fûãr
)

4925 
p
 = 
¨g
;

4926 *
p
)

4928 i‡(*
p
 =
	`Cål
('V'))

4930 i‡(
p
[1] !
NUL
)

4931 ++
p
;

4933 i‡((*
p
 ='"' && !(
¨gt
 & 
NOTRLCOM
)) || *p == '|' || *p == '\n')

4935 i‡(*(
p
 - 1) != '\\')

4937 i‡(*
p
 == '|' || *p == '\n')

4938  
p
 + 1;

4939  
NULL
;

4942 ++
p
;

4947 i‡(!(
¨gt
 & 
EXTRA
Ë&& *
¨g
 !
NUL
 &&

4948 
	`vim_°rchr
((
ch¨_u
 *)"|\"", *
¨g
Ë=
NULL
)

4949  
NULL
;

4952 
p
 = 
cmdbuff
 + 
cmdpos
;

4953 
p
 !
¨g
 && *∞!' ' && *∞!
TAB
)

4954 
p
--;

4955 i‡(*
p
 =' ' || *∞=
TAB
)

4956 
p
++;

4957 
ex∑nd_∑âîn
 = 
p
;

4959 i‡(
¨gt
 & 
XFILE
)

4961 
ö_quŸe
 = 
FALSE
;

4962 
ch¨_u
 *
bow
 = 
NULL
;

4968 
ex∑nd_∑âîn
 = 
	`skùwhôe
(
¨g
);

4969 
p
 = 
ex∑nd_∑âîn
; *p; ++p)

4971 i‡(*
p
 == '\\' &&Ö[1])

4972 ++
p
;

4973 #ifde‡
SPACE_IN_FILENAME


4974 i‡(
	`vim_iswhôe
(*
p
Ë&& (!(
¨gt
 & 
NOSPC
Ë|| 
u£fûãr
))

4976 i‡(
	`vim_iswhôe
(*
p
))

4979 
p
 = 
	`skùwhôe
(p);

4980 i‡(
ö_quŸe
)

4981 
bow
 = 
p
;

4983 
ex∑nd_∑âîn
 = 
p
;

4984 --
p
;

4986 i‡(*
p
 == '`')

4988 i‡(!
ö_quŸe
)

4990 
ex∑nd_∑âîn
 = 
p
;

4991 
bow
 = 
p
 + 1;

4993 
ö_quŸe
 = !in_quote;

5001 i‡(
bow
 !
NULL
 && 
ö_quŸe
)

5002 
ex∑nd_∑âîn
 = 
bow
;

5003 
ex∑nd_c⁄ãxt
 = 
EXPAND_FILES
;

5009 
cmdidx
)

5011 
CMD_cd
:

5012 
CMD_chdú
:

5013 
ex∑nd_c⁄ãxt
 = 
EXPAND_DIRECTORIES
;

5015 
CMD_globÆ
:

5016 
CMD_vglobÆ
:

5017 
dñim
 = *
¨g
;

5018 i‡(
dñim
)

5019 ++
¨g
;

5021 
¨g
[0] !
NUL
 &&árg[0] !
dñim
)

5023 i‡(
¨g
[0] ='\\' &&árg[1] !
NUL
)

5024 ++
¨g
;

5025 ++
¨g
;

5027 i‡(
¨g
[0] !
NUL
)

5028  
¨g
 + 1;

5030 
CMD_™d
:

5031 
CMD_sub°ôuã
:

5032 
dñim
 = *
¨g
;

5033 i‡(
dñim
)

5034 ++
¨g
;

5035 
i
 = 0; i < 2; i++, 
¨g
++)

5036 
¨g
[0] !
NUL
 &&árg[0] !
dñim
)

5038 i‡(
¨g
[0] ='\\' &&árg[1] !
NUL
)

5039 ++
¨g
;

5040 ++
¨g
;

5042 
¨g
[0] && 
	`vim_°rchr
((
ch¨_u
 *)"|\"#",árg[0]Ë=
NULL
)

5043 ++
¨g
;

5044 i‡(
¨g
[0] !
NUL
)

5045  
¨g
;

5047 
CMD_i£¨ch
:

5048 
CMD_d£¨ch
:

5049 
CMD_ûi°
:

5050 
CMD_dli°
:

5051 
CMD_ijump
:

5052 
CMD_djump
:

5053 
CMD_i•lô
:

5054 
CMD_d•lô
:

5055 
¨g
 = 
	`skùwhôe
(
	`skùdigôs
(arg));

5056 i‡(*
¨g
 == '/')

5058 ++
¨g
; *arg && *arg != '/';árg++)

5059 i‡(*
¨g
 ='\\' &&árg[1] !
NUL
)

5060 
¨g
++;

5061 i‡(*
¨g
)

5063 
¨g
 = 
	`skùwhôe
(arg + 1);

5066 i‡(*
¨g
 && 
	`vim_°rchr
((
ch¨_u
 *)"|\"\n", *¨gË=
NULL
)

5067 
ex∑nd_c⁄ãxt
 = 
EXPAND_NOTHING
;

5069  
¨g
;

5073 #ifde‡
AUTOCMD


5074 
CMD_autocmd
:

5075  
	`£t_c⁄ãxt_ö_autocmd
(
¨g
, 
FALSE
);

5077 
CMD_dﬂutocmd
:

5078  
	`£t_c⁄ãxt_ö_autocmd
(
¨g
, 
TRUE
);

5080 
CMD_£t
:

5081 
	`£t_c⁄ãxt_ö_£t_cmd
(
¨g
);

5083 
CMD_°ag
:

5084 
CMD_èg
:

5085 
ex∑nd_c⁄ãxt
 = 
EXPAND_TAGS
;

5086 
ex∑nd_∑âîn
 = 
¨g
;

5088 
CMD_hñp
:

5089 
ex∑nd_c⁄ãxt
 = 
EXPAND_HELP
;

5090 
ex∑nd_∑âîn
 = 
¨g
;

5092 
CMD_bdñëe
:

5093 
CMD_bu∆ﬂd
:

5094 (
ex∑nd_∑âîn
 = 
	`vim_°rchr
(
¨g
, ' ')Ë!
NULL
)

5095 
¨g
 = 
ex∑nd_∑âîn
 + 1;

5096 
CMD_buf„r
:

5097 
CMD_sbuf„r
:

5098 
ex∑nd_c⁄ãxt
 = 
EXPAND_BUFFERS
;

5099 
ex∑nd_∑âîn
 = 
¨g
;

5101 #ifde‡
USE_GUI


5102 
CMD_míu
: 
CMD_n‹emíu
: 
CMD_unmíu
:

5103 
CMD_nmíu
: 
CMD_¬‹emíu
: 
CMD_nunmíu
:

5104 
CMD_vmíu
: 
CMD_vn‹emíu
: 
CMD_vunmíu
:

5105 
CMD_imíu
: 
CMD_ö‹emíu
: 
CMD_iunmíu
:

5106 
CMD_cmíu
: 
CMD_˙‹emíu
: 
CMD_cunmíu
:

5107  
	`gui_£t_c⁄ãxt_ö_míu_cmd
(
cmd
, 
¨g
, 
f‹˚d
);

5113  
NULL
;

5114 
	}
}

5121 
	$Ex∑ndFromC⁄ãxt
(
∑t
, 
num_fûe
, 
fûe
, 
fûes_⁄ly
, 
›ti⁄s
)

5122 
ch¨_u
 *
∑t
;

5123 *
num_fûe
;

5124 
ch¨_u
 ***
fûe
;

5125 
fûes_⁄ly
;

5126 
›ti⁄s
;

5128 
ªgexp
 *
¥og
;

5129 
ªt
;

5130 
i
;

5131 
cou¡
;

5133 i‡(!
ex∑nd_öãø˘ivñy
 || 
ex∑nd_c⁄ãxt
 =
EXPAND_FILES
)

5134  
	`Ex∑ndWûdC¨ds
(1, &
∑t
, 
num_fûe
, 
fûe
, 
fûes_⁄ly
,

5135 (
›ti⁄s
 & 
WILD_LIST_NOTFOUND
));

5136 i‡(
ex∑nd_c⁄ãxt
 =
EXPAND_DIRECTORIES
)

5138 i‡(
	`Ex∑ndWûdC¨ds
(1, &
∑t
, 
num_fûe
, 
fûe
, 
fûes_⁄ly
,

5139 (
›ti⁄s
 & 
WILD_LIST_NOTFOUND
)Ë=
FAIL
)

5140  
FAIL
;

5141 
cou¡
 = 0;

5142 
i
 = 0; i < *
num_fûe
; i++)

5143 i‡(
	`mch_isdú
((*
fûe
)[
i
]))

5144 (*
fûe
)[
cou¡
++] = (*fûe)[
i
];

5146 
	`vim_‰ì
((*
fûe
)[
i
]);

5147 i‡(
cou¡
 == 0)

5149 
	`vim_‰ì
(*
fûe
);

5150 *
fûe
 = (
ch¨_u
 **)"";

5151 *
num_fûe
 = -1;

5152  
FAIL
;

5154 *
num_fûe
 = 
cou¡
;

5155  
OK
;

5157 *
fûe
 = (
ch¨_u
 **)"";

5158 *
num_fûe
 = 0;

5159 i‡(
ex∑nd_c⁄ãxt
 =
EXPAND_OLD_SETTING
)

5160  
	`Ex∑ndOldSëtög
(
num_fûe
, 
fûe
);

5162 i‡(
ex∑nd_c⁄ãxt
 =
EXPAND_HELP
)

5163  
	`föd_hñp_ègs
(
∑t
, 
num_fûe
, 
fûe
);

5165 
	`£t_ªg_ic
(
∑t
);

5166 #ifde‡
AUTOCMD


5167 i‡(
ex∑nd_c⁄ãxt
 =
EXPAND_EVENTS
)

5168 
ªg_ic
 = 
TRUE
;

5170 
ªg_magic
 = 
p_magic
;

5172 i‡(
ex∑nd_c⁄ãxt
 =
EXPAND_BUFFERS
)

5173  
	`Ex∑ndBu‚ames
(
∑t
, 
num_fûe
, 
fûe
, 
›ti⁄s
);

5175 
¥og
 = 
	`vim_ªgcomp
(
∑t
);

5176 i‡(
¥og
 =
NULL
)

5177  
FAIL
;

5179 i‡(
ex∑nd_c⁄ãxt
 =
EXPAND_COMMANDS
)

5180 
ªt
 = 
	`Ex∑ndComm™ds
(
¥og
, 
num_fûe
, 
fûe
);

5181 i‡(
ex∑nd_c⁄ãxt
 =
EXPAND_SETTINGS
 ||

5182 
ex∑nd_c⁄ãxt
 =
EXPAND_BOOL_SETTINGS
)

5183 
ªt
 = 
	`Ex∑ndSëtögs
(
¥og
, 
num_fûe
, 
fûe
);

5184 i‡(
ex∑nd_c⁄ãxt
 =
EXPAND_TAGS
)

5185 
ªt
 = 
	`föd_ègs
(
NULL
, 
¥og
, 
num_fûe
, 
fûe
, 
FALSE
);

5186 #ifde‡
AUTOCMD


5187 i‡(
ex∑nd_c⁄ãxt
 =
EXPAND_EVENTS
)

5188 
ªt
 = 
	`Ex∑ndEvíts
(
¥og
, 
num_fûe
, 
fûe
);

5190 #ifde‡
USE_GUI


5191 i‡(
ex∑nd_c⁄ãxt
 =
EXPAND_MENUS
)

5192 
ªt
 = 
	`gui_Ex∑ndMíuNames
(
¥og
, 
num_fûe
, 
fûe
);

5195 
ªt
 = 
FAIL
;

5197 
	`vim_‰ì
(
¥og
);

5198  
ªt
;

5199 
	}
}

5202 
	$Ex∑ndComm™ds
(
¥og
, 
num_fûe
, 
fûe
)

5203 
ªgexp
 *
¥og
;

5204 *
num_fûe
;

5205 
ch¨_u
 ***
fûe
;

5207 
cmdidx
;

5208 
cou¡
;

5209 
round
;

5215 
round
 = 1;Ñound <= 2; ++round)

5217 
cou¡
 = 0;

5218 
cmdidx
 = 0; cmdidx < 
CMD_SIZE
; cmdidx++)

5219 i‡(
	`vim_ªgexec
(
¥og
, 
cmd«mes
[
cmdidx
].
cmd_«me
, 
TRUE
))

5221 i‡(
round
 == 1)

5222 
cou¡
++;

5224 (*
fûe
)[
cou¡
++] = 
	`°rßve
(
cmd«mes
[
cmdidx
].
cmd_«me
);

5226 i‡(
round
 == 1)

5228 *
num_fûe
 = 
cou¡
;

5229 i‡(
cou¡
 =0 || (*
fûe
 = (
ch¨_u
 **)

5230 
	`Æloc
(()(
cou¡
 * (
ch¨_u
 *)))Ë=
NULL
)

5231  
FAIL
;

5234  
OK
;

5235 
	}
}

5237 #ifde‡
VIMINFO


5238 
ch¨_u
 **
	gvimöfo_hi°‹y
[2] = {
NULL
, NULL};

5239 
	gvimöfo_hisidx
[2] = {0, 0};

5240 
	gvimöfo_hi¶í
 = 0;

5241 
	gvimöfo_add_©_‰⁄t
 = 
FALSE
;

5244 
	$¥ï¨e_vimöfo_hi°‹y
(
Àn
)

5245 
Àn
;

5247 
i
;

5248 
num
;

5249 
ty≥
;

5251 
	`öô_hi°‹y
();

5252 
vimöfo_add_©_‰⁄t
 = (
Àn
 != 0);

5253 i‡(
Àn
 > 
hi¶í
)

5254 
Àn
 = 
hi¶í
;

5256 
ty≥
 = 0;Åype <= 1; ++type)

5260 
i
 = 0, 
num
 = 0; i < 
hi¶í
; i++)

5261 i‡(
hi°‹y
[
ty≥
][
i
] =
NULL
)

5262 
num
++;

5263 i‡(
num
 > 
Àn
)

5264 
Àn
 = 
num
;

5265 
vimöfo_hisidx
[
ty≥
] = 0;

5266 i‡(
Àn
 <= 0)

5267 
vimöfo_hi°‹y
[
ty≥
] = 
NULL
;

5269 
vimöfo_hi°‹y
[
ty≥
] = (
ch¨_u
 **)
	`œŒoc
(
Àn
 * (char_u *),

5270 
FALSE
);

5272 
vimöfo_hi¶í
 = 
Àn
;

5273 i‡(
vimöfo_hi°‹y
[0] =
NULL
 || viminfo_history[1] == NULL)

5274 
vimöfo_hi¶í
 = 0;

5275 
	}
}

5278 
	$ªad_vimöfo_hi°‹y
(
löe
, 
Â
)

5279 
ch¨_u
 *
löe
;

5280 
FILE
 *
Â
;

5282 
ty≥
;

5284 
ty≥
 = (
löe
[0] == ':' ? 0 : 1);

5285 i‡(
vimöfo_hisidx
[
ty≥
] !
vimöfo_hi¶í
)

5287 
	`vimöfo_ªad°rög
(
löe
);

5288 i‡(!
	`is_ö_hi°‹y
(
ty≥
, 
löe
 + 1, 
vimöfo_add_©_‰⁄t
))

5289 
vimöfo_hi°‹y
[
ty≥
][
vimöfo_hisidx
[ty≥]++] = 
	`°rßve
(
löe
 + 1);

5291  
	`vim_fgës
(
löe
, 
LSIZE
, 
Â
);

5292 
	}
}

5295 
	$föish_vimöfo_hi°‹y
()

5297 
idx
;

5298 
i
;

5299 
ty≥
;

5301 
ty≥
 = 0;Åype <= 1; ++type)

5303 i‡(
hi°‹y
[
ty≥
] =
NULL
)

5305 
idx
 = 
hisidx
[
ty≥
] + 
vimöfo_hisidx
[type];

5306 i‡(
idx
 >
hi¶í
)

5307 
idx
 -
hi¶í
;

5308 i‡(
vimöfo_add_©_‰⁄t
)

5309 
hisidx
[
ty≥
] = 
idx
;

5312 i‡(
hisidx
[
ty≥
] == -1)

5313 
hisidx
[
ty≥
] = 
hi¶í
 - 1;

5316 i‡(
hi°‹y
[
ty≥
][
idx
] !
NULL
)

5318 i‡(++
idx
 =
hi¶í
)

5319 
idx
 = 0;

5320 } 
idx
 !
hisidx
[
ty≥
]);

5321 i‡(
idx
 !
hisidx
[
ty≥
] && --idx < 0)

5322 
idx
 = 
hi¶í
 - 1;

5324 
i
 = 0; i < 
vimöfo_hisidx
[
ty≥
]; i++)

5326 
hi°‹y
[
ty≥
][
idx
] = 
vimöfo_hi°‹y
[ty≥][
i
];

5327 i‡(--
idx
 < 0)

5328 
idx
 = 
hi¶í
 - 1;

5330 
	`vim_‰ì
(
vimöfo_hi°‹y
[
ty≥
]);

5331 
vimöfo_hi°‹y
[
ty≥
] = 
NULL
;

5333 
	}
}

5336 
	$wrôe_vimöfo_hi°‹y
(
Â
)

5337 
FILE
 *
Â
;

5339 
i
;

5340 
ty≥
;

5341 
num_ßved
;

5343 
	`öô_hi°‹y
();

5344 i‡(
hi¶í
 == 0)

5346 
ty≥
 = 0;Åype <= 1; ++type)

5348 
num_ßved
 = 
	`gë_vimöfo_∑ømëî
(
ty≥
 == 0 ? ':' : '/');

5349 i‡(
num_ßved
 == 0)

5351 i‡(
num_ßved
 < 0)

5352 
num_ßved
 = 
hi¶í
;

5353 
	`Ârötf
(
Â
, "\n# %s History (newestÅo oldest):\n",

5354 
ty≥
 == 0 ? "Command Line" : "Search String");

5355 i‡(
num_ßved
 > 
hi¶í
)

5356 
num_ßved
 = 
hi¶í
;

5357 
i
 = 
hisidx
[
ty≥
];

5358 i‡(
i
 >= 0)

5359 
num_ßved
--)

5361 i‡(
hi°‹y
[
ty≥
][
i
] !
NULL
)

5363 
	`putc
(
ty≥
 =0 ? ':' : '?', 
Â
);

5364 
	`vimöfo_wrôe°rög
(
Â
, 
hi°‹y
[
ty≥
][
i
]);

5366 i‡(--
i
 < 0)

5367 
i
 = 
hi¶í
 - 1;

5370 
	}
}

	@src/cmdtab.h

15 
	#RANGE
 0x01

	)

16 
	#BANG
 0x02

	)

17 
	#EXTRA
 0x04

	)

18 
	#XFILE
 0x08

	)

19 
	#NOSPC
 0x10

	)

20 
	#DFLALL
 0x20

	)

21 
	#NODFL
 0x40

	)

22 
	#NEEDARG
 0x80

	)

23 
	#TRLBAR
 0x100

	)

24 
	#REGSTR
 0x200

	)

25 
	#COUNT
 0x400

	)

26 
	#NOTRLCOM
 0x800

	)

27 
	#ZEROR
 0x1000

	)

28 
	#USECTRLV
 0x2000

	)

29 
	#NOTADR
 0x4000

	)

30 
	#EDITCMD
 0x8000

	)

31 
	#BUFNAME
 0x10000

	)

32 
	#FILES
 (
XFILE
 + 
EXTRA
Ë

	)

33 
	#WORD1
 (
EXTRA
 + 
NOSPC
Ë

	)

34 
	#FILE1
 (
FILES
 + 
NOSPC
Ë

	)

35 
	#NAMEDF
 (
FILE1
 + 
NODFL
Ë

	)

36 
	#NAMEDFS
 (
FILES
 + 
NODFL
Ë

	)

47 
ch¨_u
 *
	mcmd_«me
;

48 
l⁄g_u
 
	mcmd_¨gt
;

49 } 
	gcmd«mes
[] =

51 {(
ch¨_u
 *)"≠≥nd", 
BANG
+
RANGE
+
TRLBAR
},

52 
	#CMD_≠≥nd
 0

	)

53 {(
ch¨_u
 *)"Æl", 
RANGE
+
NOTADR
+
COUNT
+
TRLBAR
},

54 
	#CMD_Æl
 1

	)

55 {(
ch¨_u
 *)"abbªvüã", 
EXTRA
+
TRLBAR
+
NOTRLCOM
+
USECTRLV
},

56 
	#CMD_abbªvüã
 2

	)

57 {(
ch¨_u
 *)"ab˛ór", 
TRLBAR
},

58 
	#CMD_ab˛ór
 3

	)

59 {(
ch¨_u
 *)"¨gs", 
BANG
+
NAMEDFS
+
EDITCMD
+
TRLBAR
},

60 
	#CMD_¨gs
 4

	)

61 {(
ch¨_u
 *)"¨gumít", 
BANG
+
RANGE
+
NOTADR
+
COUNT
+
EXTRA
+
EDITCMD
+
TRLBAR
},

62 
	#CMD_¨gumít
 5

	)

63 {(
ch¨_u
 *)"ascii", 
TRLBAR
},

64 
	#CMD_ascii
 6

	)

65 {(
ch¨_u
 *)"autocmd", 
BANG
+
EXTRA
+
NOTRLCOM
+
USECTRLV
},

66 
	#CMD_autocmd
 7

	)

67 {(
ch¨_u
 *)"buf„r", 
RANGE
+
NOTADR
+
BUFNAME
+
COUNT
+
EXTRA
+
TRLBAR
},

68 
	#CMD_buf„r
 8

	)

69 {(
ch¨_u
 *)"bÆl", 
RANGE
+
NOTADR
+
COUNT
+
TRLBAR
},

70 
	#CMD_bÆl
 9

	)

71 {(
ch¨_u
 *)"buf„rs", 
TRLBAR
},

72 
	#CMD_buf„rs
 10

	)

73 {(
ch¨_u
 *)"bdñëe", 
BANG
+
RANGE
+
BUFNAME
+
NOTADR
+
COUNT
+
EXTRA
+
TRLBAR
},

74 
	#CMD_bdñëe
 11

	)

75 {(
ch¨_u
 *)"bu∆ﬂd", 
BANG
+
RANGE
+
BUFNAME
+
NOTADR
+
COUNT
+
EXTRA
+
TRLBAR
},

76 
	#CMD_bu∆ﬂd
 12

	)

77 {(
ch¨_u
 *)"bmodifõd", 
RANGE
+
NOTADR
+
COUNT
+
TRLBAR
},

78 
	#CMD_bmodifõd
 13

	)

79 {(
ch¨_u
 *)"b√xt", 
RANGE
+
NOTADR
+
COUNT
+
TRLBAR
},

80 
	#CMD_b√xt
 14

	)

81 {(
ch¨_u
 *)"bNext", 
RANGE
+
NOTADR
+
COUNT
+
TRLBAR
},

82 
	#CMD_bNext
 15

	)

83 {(
ch¨_u
 *)"b¥evious", 
RANGE
+
NOTADR
+
COUNT
+
TRLBAR
},

84 
	#CMD_b¥evious
 16

	)

85 {(
ch¨_u
 *)"bªwöd", 
RANGE
+
TRLBAR
},

86 
	#CMD_bªwöd
 17

	)

87 {(
ch¨_u
 *)"bœ°", 
RANGE
+
TRLBAR
},

88 
	#CMD_bœ°
 18

	)

89 {(
ch¨_u
 *)"ch™ge", 
BANG
+
RANGE
+
COUNT
+
TRLBAR
},

90 
	#CMD_ch™ge
 19

	)

91 {(
ch¨_u
 *)"ˇbbªv", 
EXTRA
+
TRLBAR
+
NOTRLCOM
+
USECTRLV
},

92 
	#CMD_ˇbbªv
 20

	)

93 {(
ch¨_u
 *)"ˇb˛ór", 
TRLBAR
},

94 
	#CMD_ˇb˛ór
 21

	)

95 {(
ch¨_u
 *)"cc", 
RANGE
+
NOTADR
+
COUNT
+
TRLBAR
+
BANG
},

96 
	#CMD_cc
 22

	)

97 {(
ch¨_u
 *)"cd", 
NAMEDF
+
TRLBAR
},

98 
	#CMD_cd
 23

	)

99 {(
ch¨_u
 *)"˚¡î", 
TRLBAR
+
RANGE
+
EXTRA
},

100 
	#CMD_˚¡î
 24

	)

101 {(
ch¨_u
 *)"cfûe", 
TRLBAR
+
FILE1
+
BANG
},

102 
	#CMD_cfûe
 25

	)

103 {(
ch¨_u
 *)"chdú", 
NAMEDF
+
TRLBAR
},

104 
	#CMD_chdú
 26

	)

105 {(
ch¨_u
 *)"check∑th", 
TRLBAR
+
BANG
},

106 
	#CMD_check∑th
 27

	)

107 {(
ch¨_u
 *)"˛i°", 
TRLBAR
+
BANG
},

108 
	#CMD_˛i°
 28

	)

109 {(
ch¨_u
 *)"˛o£", 
BANG
+
TRLBAR
},

110 
	#CMD_˛o£
 29

	)

111 {(
ch¨_u
 *)"cm≠", 
EXTRA
+
TRLBAR
+
NOTRLCOM
+
USECTRLV
},

112 
	#CMD_cm≠
 30

	)

113 {(
ch¨_u
 *)"cm≠˛ór", 
TRLBAR
},

114 
	#CMD_cm≠˛ór
 31

	)

115 {(
ch¨_u
 *)"cmíu", 
EXTRA
+
TRLBAR
+
NOTRLCOM
+
USECTRLV
},

116 
	#CMD_cmíu
 32

	)

117 {(
ch¨_u
 *)"˙ext", 
RANGE
+
NOTADR
+
COUNT
+
TRLBAR
+
BANG
},

118 
	#CMD_˙ext
 33

	)

119 {(
ch¨_u
 *)"cNext", 
RANGE
+
NOTADR
+
COUNT
+
TRLBAR
+
BANG
},

120 
	#CMD_cNext
 34

	)

121 {(
ch¨_u
 *)"˙‹em≠", 
EXTRA
+
TRLBAR
+
NOTRLCOM
+
USECTRLV
},

122 
	#CMD_˙‹em≠
 35

	)

123 {(
ch¨_u
 *)"˙‹emíu", 
EXTRA
+
TRLBAR
+
NOTRLCOM
+
USECTRLV
},

124 
	#CMD_˙‹emíu
 36

	)

125 {(
ch¨_u
 *)"˙‹óbbªv", 
EXTRA
+
TRLBAR
+
NOTRLCOM
+
USECTRLV
},

126 
	#CMD_˙‹óbbªv
 37

	)

127 {(
ch¨_u
 *)"c›y", 
RANGE
+
EXTRA
+
TRLBAR
},

128 
	#CMD_c›y
 38

	)

129 {(
ch¨_u
 *)"˝ªvious", 
RANGE
+
NOTADR
+
COUNT
+
TRLBAR
+
BANG
},

130 
	#CMD_˝ªvious
 39

	)

131 {(
ch¨_u
 *)"cquô", 
TRLBAR
+
BANG
},

132 
	#CMD_cquô
 40

	)

133 {(
ch¨_u
 *)"cunm≠", 
EXTRA
+
TRLBAR
+
USECTRLV
},

134 
	#CMD_cunm≠
 41

	)

135 {(
ch¨_u
 *)"cunmíu", 
EXTRA
+
TRLBAR
+
USECTRLV
},

136 
	#CMD_cunmíu
 42

	)

137 {(
ch¨_u
 *)"cu«bbªv", 
EXTRA
+
TRLBAR
+
USECTRLV
},

138 
	#CMD_cu«bbªv
 43

	)

139 {(
ch¨_u
 *)"dñëe", 
RANGE
+
REGSTR
+
COUNT
+
TRLBAR
},

140 
	#CMD_dñëe
 44

	)

141 {(
ch¨_u
 *)"di•œy", 
EXTRA
+
NOTRLCOM
+
TRLBAR
},

142 
	#CMD_di•œy
 45

	)

143 {(
ch¨_u
 *)"digøphs", 
EXTRA
+
TRLBAR
},

144 
	#CMD_digøphs
 46

	)

145 {(
ch¨_u
 *)"djump", 
BANG
+
RANGE
+
DFLALL
+
EXTRA
},

146 
	#CMD_djump
 47

	)

147 {(
ch¨_u
 *)"dli°", 
BANG
+
RANGE
+
DFLALL
+
EXTRA
},

148 
	#CMD_dli°
 48

	)

149 {(
ch¨_u
 *)"dﬂutocmd", 
EXTRA
+
TRLBAR
},

150 
	#CMD_dﬂutocmd
 49

	)

151 {(
ch¨_u
 *)"d£¨ch", 
BANG
+
RANGE
+
DFLALL
+
EXTRA
},

152 
	#CMD_d£¨ch
 50

	)

153 {(
ch¨_u
 *)"d•lô", 
BANG
+
RANGE
+
DFLALL
+
EXTRA
+
TRLBAR
},

154 
	#CMD_d•lô
 51

	)

155 {(
ch¨_u
 *)"edô", 
BANG
+
FILE1
+
EDITCMD
+
TRLBAR
},

156 
	#CMD_edô
 52

	)

157 {(
ch¨_u
 *)"ex", 
BANG
+
FILE1
+
EDITCMD
+
TRLBAR
},

158 
	#CMD_ex
 53

	)

159 {(
ch¨_u
 *)"exô", 
RANGE
+
BANG
+
FILE1
+
DFLALL
+
TRLBAR
},

160 
	#CMD_exô
 54

	)

161 {(
ch¨_u
 *)"fûe", 
BANG
+
FILE1
+
TRLBAR
},

162 
	#CMD_fûe
 55

	)

163 {(
ch¨_u
 *)"fûes", 
TRLBAR
},

164 
	#CMD_fûes
 56

	)

165 {(
ch¨_u
 *)"fixdñ", 
TRLBAR
},

166 
	#CMD_fixdñ
 57

	)

167 {(
ch¨_u
 *)"globÆ", 
RANGE
+
BANG
+
EXTRA
+
DFLALL
},

168 
	#CMD_globÆ
 58

	)

169 {(
ch¨_u
 *)"gui", 
BANG
+
NAMEDFS
+
EDITCMD
+
TRLBAR
},

170 
	#CMD_gui
 59

	)

171 {(
ch¨_u
 *)"gvim", 
BANG
+
NAMEDFS
+
EDITCMD
+
TRLBAR
},

172 
	#CMD_gvim
 60

	)

173 {(
ch¨_u
 *)"hñp", 
EXTRA
+
NOTRLCOM
},

174 
	#CMD_hñp
 61

	)

175 {(
ch¨_u
 *)"ö£π", 
BANG
+
RANGE
+
TRLBAR
},

176 
	#CMD_ö£π
 62

	)

177 {(
ch¨_u
 *)"übbªv", 
EXTRA
+
TRLBAR
+
NOTRLCOM
+
USECTRLV
},

178 
	#CMD_übbªv
 63

	)

179 {(
ch¨_u
 *)"üb˛ór", 
TRLBAR
},

180 
	#CMD_üb˛ór
 64

	)

181 {(
ch¨_u
 *)"ijump", 
BANG
+
RANGE
+
DFLALL
+
EXTRA
},

182 
	#CMD_ijump
 65

	)

183 {(
ch¨_u
 *)"ûi°", 
BANG
+
RANGE
+
DFLALL
+
EXTRA
},

184 
	#CMD_ûi°
 66

	)

185 {(
ch¨_u
 *)"im≠", 
EXTRA
+
TRLBAR
+
NOTRLCOM
+
USECTRLV
},

186 
	#CMD_im≠
 67

	)

187 {(
ch¨_u
 *)"im≠˛ór", 
TRLBAR
},

188 
	#CMD_im≠˛ór
 68

	)

189 {(
ch¨_u
 *)"imíu", 
EXTRA
+
TRLBAR
+
NOTRLCOM
+
USECTRLV
},

190 
	#CMD_imíu
 69

	)

191 {(
ch¨_u
 *)"ö‹em≠", 
EXTRA
+
TRLBAR
+
NOTRLCOM
+
USECTRLV
},

192 
	#CMD_ö‹em≠
 70

	)

193 {(
ch¨_u
 *)"ö‹emíu", 
EXTRA
+
TRLBAR
+
NOTRLCOM
+
USECTRLV
},

194 
	#CMD_ö‹emíu
 71

	)

195 {(
ch¨_u
 *)"ö‹óbbªv", 
EXTRA
+
TRLBAR
+
NOTRLCOM
+
USECTRLV
},

196 
	#CMD_ö‹óbbªv
 72

	)

197 {(
ch¨_u
 *)"i£¨ch", 
BANG
+
RANGE
+
DFLALL
+
EXTRA
},

198 
	#CMD_i£¨ch
 73

	)

199 {(
ch¨_u
 *)"i•lô", 
BANG
+
RANGE
+
DFLALL
+
EXTRA
+
TRLBAR
},

200 
	#CMD_i•lô
 74

	)

201 {(
ch¨_u
 *)"iunm≠", 
EXTRA
+
TRLBAR
+
USECTRLV
},

202 
	#CMD_iunm≠
 75

	)

203 {(
ch¨_u
 *)"iunmíu", 
EXTRA
+
TRLBAR
+
USECTRLV
},

204 
	#CMD_iunmíu
 76

	)

205 {(
ch¨_u
 *)"iu«bbªv", 
EXTRA
+
TRLBAR
+
USECTRLV
},

206 
	#CMD_iu«bbªv
 77

	)

207 {(
ch¨_u
 *)"joö", 
BANG
+
RANGE
+
COUNT
+
TRLBAR
},

208 
	#CMD_joö
 78

	)

209 {(
ch¨_u
 *)"jumps", 
TRLBAR
},

210 
	#CMD_jumps
 79

	)

211 {(
ch¨_u
 *)"k", 
RANGE
+
WORD1
+
TRLBAR
},

212 
	#CMD_k
 80

	)

213 {(
ch¨_u
 *)"li°", 
RANGE
+
COUNT
+
TRLBAR
},

214 
	#CMD_li°
 81

	)

215 {(
ch¨_u
 *)"œ°", 
EXTRA
+
BANG
+
EDITCMD
+
TRLBAR
},

216 
	#CMD_œ°
 82

	)

217 {(
ch¨_u
 *)"À·", 
TRLBAR
+
RANGE
+
EXTRA
},

218 
	#CMD_À·
 83

	)

219 {(
ch¨_u
 *)"ls", 
TRLBAR
},

220 
	#CMD_ls
 84

	)

221 {(
ch¨_u
 *)"move", 
RANGE
+
EXTRA
+
TRLBAR
},

222 
	#CMD_move
 85

	)

223 {(
ch¨_u
 *)"m¨k", 
RANGE
+
WORD1
+
TRLBAR
},

224 
	#CMD_m¨k
 86

	)

225 {(
ch¨_u
 *)"m¨ks", 
EXTRA
+
TRLBAR
},

226 
	#CMD_m¨ks
 87

	)

227 {(
ch¨_u
 *)"m≠", 
BANG
+
EXTRA
+
TRLBAR
+
NOTRLCOM
+
USECTRLV
},

228 
	#CMD_m≠
 88

	)

229 {(
ch¨_u
 *)"m≠˛ór", 
BANG
+
TRLBAR
},

230 
	#CMD_m≠˛ór
 89

	)

231 {(
ch¨_u
 *)"make", 
NEEDARG
+
EXTRA
+
TRLBAR
+
XFILE
},

232 
	#CMD_make
 90

	)

233 {(
ch¨_u
 *)"míu", 
BANG
+
EXTRA
+
TRLBAR
+
NOTRLCOM
+
USECTRLV
},

234 
	#CMD_míu
 91

	)

235 {(
ch¨_u
 *)"mkexrc", 
BANG
+
FILE1
+
TRLBAR
},

236 
	#CMD_mkexrc
 92

	)

237 {(
ch¨_u
 *)"mkvimrc", 
BANG
+
FILE1
+
TRLBAR
},

238 
	#CMD_mkvimrc
 93

	)

239 {(
ch¨_u
 *)"mf°©", 
TRLBAR
},

240 
	#CMD_mf°©
 94

	)

241 {(
ch¨_u
 *)"mode", 
WORD1
+
TRLBAR
},

242 
	#CMD_mode
 95

	)

243 {(
ch¨_u
 *)"√xt", 
RANGE
+
NOTADR
+
BANG
+
NAMEDFS
+
EDITCMD
+
TRLBAR
},

244 
	#CMD_√xt
 96

	)

245 {(
ch¨_u
 *)"√w", 
BANG
+
FILE1
+
RANGE
+
NOTADR
+
EDITCMD
+
TRLBAR
},

246 
	#CMD_√w
 97

	)

247 {(
ch¨_u
 *)"nm≠", 
EXTRA
+
TRLBAR
+
NOTRLCOM
+
USECTRLV
},

248 
	#CMD_nm≠
 98

	)

249 {(
ch¨_u
 *)"nm≠˛ór", 
TRLBAR
},

250 
	#CMD_nm≠˛ór
 99

	)

251 {(
ch¨_u
 *)"nmíu", 
EXTRA
+
TRLBAR
+
NOTRLCOM
+
USECTRLV
},

252 
	#CMD_nmíu
 100

	)

253 {(
ch¨_u
 *)"¬‹em≠", 
EXTRA
+
TRLBAR
+
NOTRLCOM
+
USECTRLV
},

254 
	#CMD_¬‹em≠
 101

	)

255 {(
ch¨_u
 *)"¬‹emíu", 
EXTRA
+
TRLBAR
+
NOTRLCOM
+
USECTRLV
},

256 
	#CMD_¬‹emíu
 102

	)

257 {(
ch¨_u
 *)"numbî", 
RANGE
+
COUNT
+
TRLBAR
},

258 
	#CMD_numbî
 103

	)

259 {(
ch¨_u
 *)"#", 
RANGE
+
COUNT
+
TRLBAR
},

260 
	#CMD_pound
 104

	)

261 {(
ch¨_u
 *)"n‹em≠", 
BANG
+
EXTRA
+
TRLBAR
+
NOTRLCOM
+
USECTRLV
},

262 
	#CMD_n‹em≠
 105

	)

263 {(
ch¨_u
 *)"n‹emíu", 
BANG
+
EXTRA
+
TRLBAR
+
NOTRLCOM
+
USECTRLV
},

264 
	#CMD_n‹emíu
 106

	)

265 {(
ch¨_u
 *)"n‹óbbªv", 
EXTRA
+
TRLBAR
+
NOTRLCOM
+
USECTRLV
},

266 
	#CMD_n‹óbbªv
 107

	)

267 {(
ch¨_u
 *)"n‹mÆ", 
BANG
+
EXTRA
+
NEEDARG
+
NOTRLCOM
+
USECTRLV
},

268 
	#CMD_n‹mÆ
 108

	)

269 {(
ch¨_u
 *)"nunm≠", 
EXTRA
+
TRLBAR
+
USECTRLV
},

270 
	#CMD_nunm≠
 109

	)

271 {(
ch¨_u
 *)"nunmíu", 
EXTRA
+
TRLBAR
+
USECTRLV
},

272 
	#CMD_nunmíu
 110

	)

273 {(
ch¨_u
 *)"Next", 
EXTRA
+
RANGE
+
NOTADR
+
COUNT
+
BANG
+
EDITCMD
+
TRLBAR
},

274 
	#CMD_Next
 111

	)

275 {(
ch¨_u
 *)"›í", 
TRLBAR
},

276 
	#CMD_›í
 112

	)

277 {(
ch¨_u
 *)"⁄ly", 
BANG
+
TRLBAR
},

278 
	#CMD_⁄ly
 113

	)

279 {(
ch¨_u
 *)"¥öt", 
RANGE
+
COUNT
+
TRLBAR
},

280 
	#CMD_¥öt
 114

	)

281 {(
ch¨_u
 *)"p›", 
RANGE
+
NOTADR
+
COUNT
+
TRLBAR
+
ZEROR
},

282 
	#CMD_p›
 115

	)

283 {(
ch¨_u
 *)"put", 
RANGE
+
BANG
+
REGSTR
+
TRLBAR
},

284 
	#CMD_put
 116

	)

285 {(
ch¨_u
 *)"¥e£rve", 
TRLBAR
},

286 
	#CMD_¥e£rve
 117

	)

287 {(
ch¨_u
 *)"¥evious", 
EXTRA
+
RANGE
+
NOTADR
+
COUNT
+
BANG
+
EDITCMD
+
TRLBAR
},

288 
	#CMD_¥evious
 118

	)

289 {(
ch¨_u
 *)"pwd", 
TRLBAR
},

290 
	#CMD_pwd
 119

	)

291 {(
ch¨_u
 *)"quô", 
BANG
+
TRLBAR
},

292 
	#CMD_quô
 120

	)

293 {(
ch¨_u
 *)"qÆl", 
BANG
+
TRLBAR
},

294 
	#CMD_qÆl
 121

	)

295 {(
ch¨_u
 *)"ªad", 
BANG
+
RANGE
+
NAMEDF
+
TRLBAR
+
ZEROR
},

296 
	#CMD_ªad
 122

	)

297 {(
ch¨_u
 *)"ªwöd", 
EXTRA
+
BANG
+
EDITCMD
+
TRLBAR
},

298 
	#CMD_ªwöd
 123

	)

299 {(
ch¨_u
 *)"ªcovî", 
BANG
+
FILE1
+
TRLBAR
},

300 
	#CMD_ªcovî
 124

	)

301 {(
ch¨_u
 *)"ªdo", 
TRLBAR
},

302 
	#CMD_ªdo
 125

	)

303 {(
ch¨_u
 *)"ªgi°îs", 
EXTRA
+
NOTRLCOM
+
TRLBAR
},

304 
	#CMD_ªgi°îs
 126

	)

305 {(
ch¨_u
 *)"ªsize", 
TRLBAR
+
WORD1
},

306 
	#CMD_ªsize
 127

	)

307 {(
ch¨_u
 *)"ªèb", 
TRLBAR
+
RANGE
+
DFLALL
+
BANG
+
WORD1
},

308 
	#CMD_ªèb
 128

	)

309 {(
ch¨_u
 *)"right", 
TRLBAR
+
RANGE
+
EXTRA
},

310 
	#CMD_right
 129

	)

311 {(
ch¨_u
 *)"rvimöfo", 
BANG
+
FILE1
+
TRLBAR
},

312 
	#CMD_rvimöfo
 130

	)

313 {(
ch¨_u
 *)"sub°ôuã", 
RANGE
+
EXTRA
},

314 
	#CMD_sub°ôuã
 131

	)

315 {(
ch¨_u
 *)"ßrgumít", 
BANG
+
RANGE
+
NOTADR
+
COUNT
+
EXTRA
+
EDITCMD
+
TRLBAR
},

316 
	#CMD_ßrgumít
 132

	)

317 {(
ch¨_u
 *)"ßŒ", 
RANGE
+
NOTADR
+
COUNT
+
TRLBAR
},

318 
	#CMD_ßŒ
 133

	)

319 {(
ch¨_u
 *)"sbuf„r", 
RANGE
+
NOTADR
+
BUFNAME
+
COUNT
+
EXTRA
+
TRLBAR
},

320 
	#CMD_sbuf„r
 134

	)

321 {(
ch¨_u
 *)"sbÆl", 
RANGE
+
NOTADR
+
COUNT
+
TRLBAR
},

322 
	#CMD_sbÆl
 135

	)

323 {(
ch¨_u
 *)"sbmodifõd", 
RANGE
+
NOTADR
+
COUNT
+
TRLBAR
},

324 
	#CMD_sbmodifõd
 136

	)

325 {(
ch¨_u
 *)"sb√xt", 
RANGE
+
NOTADR
+
COUNT
+
TRLBAR
},

326 
	#CMD_sb√xt
 137

	)

327 {(
ch¨_u
 *)"sbNext", 
RANGE
+
NOTADR
+
COUNT
+
TRLBAR
},

328 
	#CMD_sbNext
 138

	)

329 {(
ch¨_u
 *)"sb¥evious", 
RANGE
+
NOTADR
+
COUNT
+
TRLBAR
},

330 
	#CMD_sb¥evious
 139

	)

331 {(
ch¨_u
 *)"sbªwöd", 
TRLBAR
},

332 
	#CMD_sbªwöd
 140

	)

333 {(
ch¨_u
 *)"sbœ°", 
TRLBAR
},

334 
	#CMD_sbœ°
 141

	)

335 {(
ch¨_u
 *)"su•íd", 
TRLBAR
+
BANG
},

336 
	#CMD_su•íd
 142

	)

337 {(
ch¨_u
 *)"£t", 
EXTRA
+
TRLBAR
},

338 
	#CMD_£t
 143

	)

339 {(
ch¨_u
 *)"shñl", 
TRLBAR
},

340 
	#CMD_shñl
 144

	)

341 {(
ch¨_u
 *)"¶ìp", 
RANGE
+
COUNT
+
NOTADR
+
TRLBAR
},

342 
	#CMD_¶ìp
 145

	)

343 {(
ch¨_u
 *)"sour˚", 
BANG
+
NAMEDF
+
NEEDARG
+
TRLBAR
},

344 
	#CMD_sour˚
 146

	)

345 {(
ch¨_u
 *)"•lô", 
BANG
+
FILE1
+
RANGE
+
NOTADR
+
EDITCMD
+
TRLBAR
},

346 
	#CMD_•lô
 147

	)

347 {(
ch¨_u
 *)"¢ext", 
RANGE
+
NOTADR
+
BANG
+
NAMEDFS
+
EDITCMD
+
TRLBAR
},

348 
	#CMD_¢ext
 148

	)

349 {(
ch¨_u
 *)"sNext", 
EXTRA
+
RANGE
+
NOTADR
+
COUNT
+
BANG
+
EDITCMD
+
TRLBAR
},

350 
	#CMD_sNext
 149

	)

351 {(
ch¨_u
 *)"•ªvious", 
EXTRA
+
RANGE
+
NOTADR
+
COUNT
+
BANG
+
EDITCMD
+
TRLBAR
},

352 
	#CMD_•ªvious
 150

	)

353 {(
ch¨_u
 *)"§ewöd", 
EXTRA
+
BANG
+
EDITCMD
+
TRLBAR
},

354 
	#CMD_§ewöd
 151

	)

355 {(
ch¨_u
 *)"¶a°", 
EXTRA
+
BANG
+
EDITCMD
+
TRLBAR
},

356 
	#CMD_¶a°
 152

	)

357 {(
ch¨_u
 *)"°›", 
TRLBAR
+
BANG
},

358 
	#CMD_°›
 153

	)

359 {(
ch¨_u
 *)"°ag", 
RANGE
+
NOTADR
+
BANG
+
WORD1
+
TRLBAR
+
ZEROR
},

360 
	#CMD_°ag
 154

	)

361 {(
ch¨_u
 *)"sunhide", 
RANGE
+
NOTADR
+
COUNT
+
TRLBAR
},

362 
	#CMD_sunhide
 155

	)

363 {(
ch¨_u
 *)"svõw", 
NEEDARG
+
RANGE
+
BANG
+
FILE1
+
EDITCMD
+
TRLBAR
},

364 
	#CMD_svõw
 156

	)

365 {(
ch¨_u
 *)"sw≠«me", 
TRLBAR
},

366 
	#CMD_sw≠«me
 157

	)

367 {(
ch¨_u
 *)"t", 
RANGE
+
EXTRA
+
TRLBAR
},

368 
	#CMD_t
 158

	)

369 {(
ch¨_u
 *)"èg", 
RANGE
+
NOTADR
+
BANG
+
WORD1
+
TRLBAR
+
ZEROR
},

370 
	#CMD_èg
 159

	)

371 {(
ch¨_u
 *)"ègs", 
TRLBAR
},

372 
	#CMD_ègs
 160

	)

373 {(
ch¨_u
 *)"undo", 
TRLBAR
},

374 
	#CMD_undo
 161

	)

375 {(
ch¨_u
 *)"u«bbªvüã", 
EXTRA
+
TRLBAR
+
USECTRLV
},

376 
	#CMD_u«bbªvüã
 162

	)

377 {(
ch¨_u
 *)"unhide", 
RANGE
+
NOTADR
+
COUNT
+
TRLBAR
},

378 
	#CMD_unhide
 163

	)

379 {(
ch¨_u
 *)"unm≠", 
BANG
+
EXTRA
+
TRLBAR
+
USECTRLV
},

380 
	#CMD_unm≠
 164

	)

381 {(
ch¨_u
 *)"unmíu", 
BANG
+
EXTRA
+
TRLBAR
+
USECTRLV
},

382 
	#CMD_unmíu
 165

	)

383 {(
ch¨_u
 *)"vglobÆ", 
RANGE
+
EXTRA
+
DFLALL
},

384 
	#CMD_vglobÆ
 166

	)

385 {(
ch¨_u
 *)"vîsi⁄", 
EXTRA
+
TRLBAR
},

386 
	#CMD_vîsi⁄
 167

	)

387 {(
ch¨_u
 *)"visuÆ", 
RANGE
+
BANG
+
FILE1
+
EDITCMD
+
TRLBAR
},

388 
	#CMD_visuÆ
 168

	)

389 {(
ch¨_u
 *)"võw", 
RANGE
+
BANG
+
FILE1
+
EDITCMD
+
TRLBAR
},

390 
	#CMD_võw
 169

	)

391 {(
ch¨_u
 *)"vm≠", 
EXTRA
+
TRLBAR
+
NOTRLCOM
+
USECTRLV
},

392 
	#CMD_vm≠
 170

	)

393 {(
ch¨_u
 *)"vm≠˛ór", 
TRLBAR
},

394 
	#CMD_vm≠˛ór
 171

	)

395 {(
ch¨_u
 *)"vmíu", 
EXTRA
+
TRLBAR
+
NOTRLCOM
+
USECTRLV
},

396 
	#CMD_vmíu
 172

	)

397 {(
ch¨_u
 *)"vn‹em≠", 
EXTRA
+
TRLBAR
+
NOTRLCOM
+
USECTRLV
},

398 
	#CMD_vn‹em≠
 173

	)

399 {(
ch¨_u
 *)"vn‹emíu", 
EXTRA
+
TRLBAR
+
NOTRLCOM
+
USECTRLV
},

400 
	#CMD_vn‹emíu
 174

	)

401 {(
ch¨_u
 *)"vunm≠", 
EXTRA
+
TRLBAR
+
USECTRLV
},

402 
	#CMD_vunm≠
 175

	)

403 {(
ch¨_u
 *)"vunmíu", 
EXTRA
+
TRLBAR
+
USECTRLV
},

404 
	#CMD_vunmíu
 176

	)

405 {(
ch¨_u
 *)"wrôe", 
RANGE
+
BANG
+
FILE1
+
DFLALL
+
TRLBAR
},

406 
	#CMD_wrôe
 177

	)

407 {(
ch¨_u
 *)"w√xt", 
RANGE
+
NOTADR
+
BANG
+
FILE1
+
TRLBAR
},

408 
	#CMD_w√xt
 178

	)

409 {(
ch¨_u
 *)"wNext", 
RANGE
+
NOTADR
+
BANG
+
FILE1
+
TRLBAR
},

410 
	#CMD_wNext
 179

	)

411 {(
ch¨_u
 *)"w¥evious", 
RANGE
+
NOTADR
+
BANG
+
FILE1
+
TRLBAR
},

412 
	#CMD_w¥evious
 180

	)

413 {(
ch¨_u
 *)"wösize", 
EXTRA
+
NEEDARG
+
TRLBAR
},

414 
	#CMD_wösize
 181

	)

415 {(
ch¨_u
 *)"wq", 
RANGE
+
BANG
+
FILE1
+
DFLALL
+
TRLBAR
},

416 
	#CMD_wq
 182

	)

417 {(
ch¨_u
 *)"wÆl", 
BANG
+
TRLBAR
},

418 
	#CMD_wÆl
 183

	)

419 {(
ch¨_u
 *)"wqÆl", 
BANG
+
FILE1
+
DFLALL
+
TRLBAR
},

420 
	#CMD_wqÆl
 184

	)

421 {(
ch¨_u
 *)"wvimöfo", 
BANG
+
FILE1
+
TRLBAR
},

422 
	#CMD_wvimöfo
 185

	)

423 {(
ch¨_u
 *)"xô", 
RANGE
+
BANG
+
FILE1
+
DFLALL
+
TRLBAR
},

424 
	#CMD_xô
 186

	)

425 {(
ch¨_u
 *)"xÆl", 
BANG
+
TRLBAR
},

426 
	#CMD_xÆl
 187

	)

427 {(
ch¨_u
 *)"y™k", 
RANGE
+
REGSTR
+
COUNT
+
TRLBAR
},

428 
	#CMD_y™k
 188

	)

429 {(
ch¨_u
 *)"z", 
RANGE
+
COUNT
+
TRLBAR
},

430 
	#CMD_z
 189

	)

431 {(
ch¨_u
 *)"@", 
RANGE
+
EXTRA
+
TRLBAR
},

432 
	#CMD_©
 190

	)

433 {(
ch¨_u
 *)"!", 
RANGE
+
BANG
+
NAMEDFS
},

434 
	#CMD_b™g
 191

	)

435 {(
ch¨_u
 *)"<", 
RANGE
+
COUNT
+
TRLBAR
},

436 
	#CMD_lshi·
 192

	)

437 {(
ch¨_u
 *)">", 
RANGE
+
COUNT
+
TRLBAR
},

438 
	#CMD_rshi·
 193

	)

439 {(
ch¨_u
 *)"=", 
RANGE
+
TRLBAR
},

440 
	#CMD_equÆ
 194

	)

441 {(
ch¨_u
 *)"&", 
RANGE
+
EXTRA
},

442 
	#CMD_™d
 195

	)

443 {(
ch¨_u
 *)"~", 
RANGE
+
EXTRA
}

444 
	#CMD_tûde
 196

	)

445 
	#CMD_SIZE
 197

	)

	@src/conf_os2.h

4 
	#CASE_INSENSITIVE_FILENAME


	)

5 
	#SPACE_IN_FILENAME


	)

6 
	#BACKSLASH_IN_FILENAME


	)

7 
	#BINARY_FILE_IO


	)

8 
	#USE_CRNL


	)

15 #unde‡
HAVE_X11


18 #unde‡
HAVE_LIBCURSES


21 
	#HAVE_LIBTERMCAP
 1

	)

24 #unde‡
HAVE_LIBTERMLIB


27 #unde‡
HAVE_LIBNCURSES


30 #unde‡
TERMINFO


33 
	#HAVE_OSPEED
 1

	)

36 
	#OSPEED_EXTERN


	)

39 
	#HAVE_UP_BC_PC
 1

	)

42 
	#UP_BC_PC_EXTERN


	)

45 #unde‡
HAVE_OUTFUNTYPE


48 
	#HAVE_DATE_TIME
 1

	)

50 #unde‡
UNIX


51 #unde‡
SVR4


54 
	#SIZEOF_INT
 4

	)

60 
	#USEBCOPY
 1

	)

61 #unde‡
USEMEMMOVE


62 #unde‡
USEMEMCPY


68 #unde‡
mode_t


71 #unde‡
off_t


74 #unde‡
pid_t


77 #unde‡
size_t


80 #unde‡
uid_t


83 #unde‡
gid_t


86 
	#TIME_WITH_SYS_TIME
 1

	)

89 
	#SYS_SELECT_WITH_SYS_TIME
 1

	)

92 
	#RETSIGTYPE
 

	)

95 
	#SIGRETURN


	)

98 #unde‡
BROKEN_TOUPPER


101 #unde‡
TGETSTR_CHAR_P


104 #unde‡
HAVE_SIGSET


107 #unde‡
BAD_GETCWD


110 
	#HAVE_GETCWD
 1

	)

113 
	#HAVE_GETWD
 1

	)

116 
	#HAVE_SELECT
 1

	)

119 
	#HAVE_STRCSPN
 1

	)

122 
	#HAVE_STRTOL
 1

	)

125 #unde‡
HAVE_KILLPG


128 
	#HAVE_TGETENT
 1

	)

131 
	#HAVE_MEMSET
 1

	)

134 
	#HAVE_STRERROR
 1

	)

137 #unde‡
HAVE_FCHOWN


140 
	#HAVE_RENAME
 1

	)

143 #unde‡
HAVE_FSYNC


146 #unde‡
HAVE_FCHDIR


149 #unde‡
HAVE_SETENV


152 
	#HAVE_PUTENV
 1

	)

155 #unde‡
HAVE_GETTIMEOFDAY


158 #unde‡
HAVE_GETPWUID


161 #unde‡
HAVE_GETPWNAM


164 
	#HAVE_QSORT
 1

	)

167 
	#HAVE_DIRENT_H
 1

	)

170 #unde‡
HAVE_SYS_NDIR_H


173 #unde‡
HAVE_SYS_DIR_H


176 #unde‡
HAVE_NDIR_H


179 
	#HAVE_SYS_WAIT_H
 1

	)

182 #unde‡
HAVE_UNION_WAIT


189 
	#HAVE_STDLIB_H
 1

	)

190 #unde‡
HAVE_STRING_H


193 #unde‡
HAVE_SYS_SELECT_H


196 
	#HAVE_SYS_UTSNAME_H
 1

	)

199 
	#HAVE_TERMCAP_H
 1

	)

202 
	#HAVE_FCNTL_H
 1

	)

205 
	#HAVE_SGTTY_H
 1

	)

208 
	#HAVE_SYS_IOCTL_H
 1

	)

211 
	#HAVE_SYS_TIME_H


	)

214 #unde‡
HAVE_TERMIO_H


217 
	#HAVE_UNISTD_H
 1

	)

220 #unde‡
HAVE_STROPTS_H


223 
	#HAVE_ERRNO_H
 1

	)

226 
	#HAVE_STRINGS_H
 1

	)

229 #unde‡
HAVE_SYS_SYSTEMINFO_H


232 
	#HAVE_LOCALE_H
 1

	)

235 #unde‡
HAVE_SYS_STREAM_H


238 #unde‡
HAVE_SYS_PTEM_H


241 
	#HAVE_TERMIOS_H
 1

	)

244 #unde‡
HAVE_LIBC_H


247 #unde‡
HAVE_SYS_STATFS_H


250 #unde‡
HAVE_SYS_POLL_H


253 #unde‡
HAVE_PWD_H


	@src/config.h

5 
	#HAVE_X11
 1

	)

11 
	#HAVE_LIBTERMCAP
 1

	)

20 
	#TERMINFO
 1

	)

23 
	#HAVE_OSPEED
 1

	)

29 
	#HAVE_UP_BC_PC
 1

	)

40 
	#UNIX
 1

	)

44 
	#SIZEOF_INT
 4

	)

51 
	#USEMEMMOVE
 1

	)

76 
	#TIME_WITH_SYS_TIME
 1

	)

79 
	#SYS_SELECT_WITH_SYS_TIME
 1

	)

82 
	#RETSIGTYPE
 

	)

85 
	#SIGRETURN
 

	)

100 
	#HAVE_GETCWD
 1

	)

103 
	#HAVE_GETWD
 1

	)

106 
	#HAVE_SELECT
 1

	)

109 
	#HAVE_STRCSPN
 1

	)

112 
	#HAVE_STRTOL
 1

	)

115 
	#HAVE_KILLPG
 1

	)

118 
	#HAVE_TGETENT
 1

	)

121 
	#HAVE_MEMSET
 1

	)

124 
	#HAVE_STRERROR
 1

	)

127 
	#HAVE_FCHOWN
 1

	)

130 
	#HAVE_RENAME
 1

	)

133 
	#HAVE_FSYNC
 1

	)

136 
	#HAVE_FCHDIR
 1

	)

139 
	#HAVE_SETENV
 1

	)

142 
	#HAVE_PUTENV
 1

	)

145 
	#HAVE_GETTIMEOFDAY
 1

	)

148 
	#HAVE_GETPWUID
 1

	)

151 
	#HAVE_GETPWNAM
 1

	)

154 
	#HAVE_QSORT
 1

	)

157 
	#HAVE_DIRENT_H
 1

	)

169 
	#HAVE_SYS_WAIT_H
 1

	)

179 
	#HAVE_STDLIB_H
 1

	)

180 
	#HAVE_STRING_H
 1

	)

183 
	#HAVE_SYS_SELECT_H
 1

	)

186 
	#HAVE_SYS_UTSNAME_H
 1

	)

189 
	#HAVE_TERMCAP_H
 1

	)

192 
	#HAVE_FCNTL_H
 1

	)

195 
	#HAVE_SGTTY_H
 1

	)

198 
	#HAVE_SYS_IOCTL_H
 1

	)

201 
	#HAVE_SYS_TIME_H
 1

	)

207 
	#HAVE_UNISTD_H
 1

	)

213 
	#HAVE_ERRNO_H
 1

	)

216 
	#HAVE_STRINGS_H
 1

	)

222 
	#HAVE_LOCALE_H
 1

	)

231 
	#HAVE_TERMIOS_H
 1

	)

243 
	#HAVE_PWD_H
 1

	)

	@src/csearch.c

14 
	~"vim.h
"

15 
	~"globÆs.h
"

16 
	~"¥Ÿo.h
"

17 
	~"›ti⁄.h
"

20 
	~"ªgexp.h
"

22 
do_sub_msg
 
__ARGS
(());

24 #ifde‡
VIMINFO


25 
ch¨_u
 *
	gﬁd_sub
 = 
NULL
;

46 
	gsub_nsubs
;

47 
löír_t
 
	gsub_∆öes
;

50 
	$do_sub
(
Õ
, 
up
, 
cmd
, 
√xtcomm™d
, 
u£_ﬁd
)

51 
löír_t
 
Õ
;

52 
löír_t
 
up
;

53 
ch¨_u
 *
cmd
;

54 
ch¨_u
 **
√xtcomm™d
;

55 
u£_ﬁd
;

57 
löír_t
 
 um
;

58 
i
;

59 
ch¨_u
 *
±r
;

60 
ch¨_u
 *
ﬁd_löe
;

61 
ªgexp
 *
¥og
;

62 
do_Æl
 = 
FALSE
;

63 
do_ask
 = 
FALSE
;

64 
do_¥öt
 = 
FALSE
;

65 
ch¨_u
 *
∑t
, *
sub
;

66 #i‚de‡
VIMINFO


67 
ch¨_u
 *
ﬁd_sub
 = 
NULL
;

69 
dñimôî
;

70 
subÀn
;

71 
gŸ_quô
 = 
FALSE
;

72 
gŸ_m©ch
 = 
FALSE
;

73 
ãmp
;

74 
which_∑t
;

76 i‡(!
globÆ_busy
)

78 
sub_nsubs
 = 0;

79 
sub_∆öes
 = 0;

82 i‡(
u£_ﬁd
 == 2)

83 
which_∑t
 = 
RE_LAST
;

85 
which_∑t
 = 
RE_SUBST
;

88 i‡(
u£_ﬁd
 =0 && *
cmd
 !
NUL
 &&

89 
	`vim_°rchr
((
ch¨_u
 *)"0123456789g¸|\"", *
cmd
Ë=
NULL
)

92 i‡(
	`ißÕha
(*
cmd
Ë|| 
	`isdigô
(*cmd))

94 
	`EMSG
("RegularÉxpressions can't be delimited byÜetters or digits");

102 i‡(*
cmd
 == '\\')

104 ++
cmd
;

105 i‡(
	`vim_°rchr
((
ch¨_u
 *)"/?&", *
cmd
Ë=
NULL
)

107 
	`emsg
(
e_back¶ash
);

110 i‡(*
cmd
 != '&')

111 
which_∑t
 = 
RE_SEARCH
;

112 
∑t
 = (
ch¨_u
 *)"";

113 
dñimôî
 = *
cmd
++;

117 
which_∑t
 = 
RE_LAST
;

118 
dñimôî
 = *
cmd
++;

119 
∑t
 = 
cmd
;

120 
cmd
 = 
	`skù_ªgexp
(cmd, 
dñimôî
);

121 i‡(
cmd
[0] =
dñimôî
)

122 *
cmd
++ = 
NUL
;

129 
sub
 = 
cmd
;

131 
cmd
[0])

133 i‡(
cmd
[0] =
dñimôî
)

135 *
cmd
++ = 
NUL
;

138 i‡(
cmd
[0] == '\\' && cmd[1] != 0)

139 ++
cmd
;

140 ++
cmd
;

143 
	`vim_‰ì
(
ﬁd_sub
);

144 
ﬁd_sub
 = 
	`°rßve
(
sub
);

148 i‡(
ﬁd_sub
 =
NULL
)

150 
	`emsg
(
e_n›ªsub
);

153 
∑t
 = 
NULL
;

154 
sub
 = 
ﬁd_sub
;

160 i‡(!
p_ed
)

162 i‡(
p_gd
)

163 
do_Æl
 = 
TRUE
;

165 
do_Æl
 = 
FALSE
;

166 
do_ask
 = 
FALSE
;

168 *
cmd
)

174 i‡(*
cmd
 == 'g')

175 
do_Æl
 = !do_all;

176 i‡(*
cmd
 == 'c')

177 
do_ask
 = !do_ask;

178 i‡(*
cmd
 == 'r')

179 
which_∑t
 = 
RE_LAST
;

180 i‡(*
cmd
 == 'p')

181 
do_¥öt
 = 
TRUE
;

184 ++
cmd
;

190 
cmd
 = 
	`skùwhôe
(cmd);

191 i‡(
	`isdigô
(*
cmd
))

193 
i
 = 
	`gëdigôs
(&
cmd
);

194 i‡(
i
 <= 0)

196 
	`emsg
(
e_zîocou¡
);

199 
Õ
 = 
up
;

200 
up
 +
i
 - 1;

206 
cmd
 = 
	`skùwhôe
(cmd);

207 i‡(*
cmd
)

209 i‡(
	`vim_°rchr
((
ch¨_u
 *)"|\"\n", *
cmd
Ë=
NULL
)

211 
	`emsg
(
e_åaûög
);

215 *
√xtcomm™d
 = 
cmd
 + 1;

218 i‡((
¥og
 = 
	`myªgcomp
(
∑t
, 
RE_SUBST
, 
which_∑t
, 
SEARCH_HIS
)Ë=
NULL
)

220 
	`emsg
(
e_övcmd
);

228 
sub
 = 
	`ªgtûde
(sub, ()
p_magic
);

230 
ﬁd_löe
 = 
NULL
;

231 
 um
 = 
Õ
;Ünum <
up
 && !(
gŸ_öt
 || 
gŸ_quô
); ++lnum)

233 
±r
 = 
	`ml_gë
(
 um
);

234 i‡(
	`vim_ªgexec
(
¥og
, 
±r
, 
TRUE
))

236 
ch¨_u
 *
√w_íd
, *
√w_°¨t
 = 
NULL
;

237 
ch¨_u
 *
ﬁd_m©ch
, *
ﬁd_c›y
;

238 
ch¨_u
 *
¥ev_ﬁd_m©ch
 = 
NULL
;

239 
ch¨_u
 *
p1
;

240 
did_sub
 = 
FALSE
;

241 
m©ch
, 
œ°⁄e
;

242 
Àn
, 
√eded_Àn
;

243 
√w_°¨t_Àn
 = 0;

247 i‡((
ﬁd_löe
 = 
	`°rßve
(
±r
)Ë=
NULL
)

249 
	`vim_ªgexec
(
¥og
, 
ﬁd_löe
, 
TRUE
);

252 i‡(!
gŸ_m©ch
)

254 
	`£çcm¨k
();

255 
gŸ_m©ch
 = 
TRUE
;

258 
ﬁd_c›y
 = 
ﬁd_m©ch
 = 
ﬁd_löe
;

265 
curwö
->
w_curs‹
.
 um
 =Ünum;

266 
curwö
->
w_curs‹
.
cﬁ
 = ()(
¥og
->
°¨ç
[0] - 
ﬁd_löe
);

273 i‡(
ﬁd_m©ch
 =
¥ev_ﬁd_m©ch
 && old_m©ch =
¥og
->
ídp
[0])

275 ++
ﬁd_m©ch
;

276 
skù
;

278 
ﬁd_m©ch
 = 
¥og
->
ídp
[0];

279 
¥ev_ﬁd_m©ch
 = 
ﬁd_m©ch
;

281 
do_ask
)

283 
ãmp
 = 
RedøwögDißbÀd
;

284 
RedøwögDißbÀd
 = 
FALSE
;

285 
	`comp_BŸlöe
(
curwö
);

286 
£¨ch_m©ch_Àn
 = 
¥og
->
ídp
[0] -Örog->
°¨ç
[0];

289 i‡(
£¨ch_m©ch_Àn
 == 0)

290 
£¨ch_m©ch_Àn
 = 1;

291 
highlight_m©ch
 = 
TRUE
;

292 
	`upd©eS¸ìn
(
CURSUPD
);

293 
highlight_m©ch
 = 
FALSE
;

294 
	`ªdøw_œãr
(
NOT_VALID
);

296 ()
	`£t_highlight
('r');

297 
msg_highlight
 = 
TRUE
;

298 
	`smsg
((
ch¨_u
 *)"ª∂a˚ wôh %†(y/n/a/q/^E/^Y)?", 
sub
);

299 
	`showruÀr
(
TRUE
);

300 
RedøwögDißbÀd
 = 
ãmp
;

302 ++
no_m≠pög
;

303 
i
 = 
	`vgëc
();

304 --
no_m≠pög
;

307 
msg_didout
 = 
FALSE
;

308 
msg_cﬁ
 = 0;

309 
	`gŸocmdlöe
(
TRUE
);

310 i‡(
i
 ='q' || i =
ESC
 || i =
	`Cål
('C'))

312 
gŸ_quô
 = 
TRUE
;

315 i‡(
i
 == 'n')

316 
skù
;

317 i‡(
i
 == 'y')

319 i‡(
i
 == 'a')

321 
do_ask
 = 
FALSE
;

324 i‡(
i
 =
	`Cål
('E'))

325 
	`s¸ﬁlup_˛amp
();

326 i‡(
i
 =
	`Cål
('Y'))

327 
	`s¸ﬁldown_˛amp
();

329 i‡(
gŸ_quô
)

333 
subÀn
 = 
	`vim_ªgsub
(
¥og
, 
sub
, 
ﬁd_löe
, 
FALSE
, ()
p_magic
);

334 i‡(
√w_°¨t
 =
NULL
)

341 
√w_°¨t_Àn
 = 
	`STRLEN
(
ﬁd_c›y
Ë+ 
subÀn
 + 25;

342 i‡((
√w_°¨t
 = 
	`Æloc_check
(
√w_°¨t_Àn
)Ë=
NULL
)

343 
outofmem
;

344 *
√w_°¨t
 = 
NUL
;

345 
√w_íd
 = 
√w_°¨t
;

353 
Àn
 = 
	`STRLEN
(
√w_°¨t
);

354 
√eded_Àn
 = 
Àn
 + 
	`STRLEN
(
ﬁd_c›y
Ë+ 
subÀn
 + 1;

355 i‡(
√eded_Àn
 > 
√w_°¨t_Àn
)

357 
√eded_Àn
 += 20;

358 i‡((
p1
 = 
	`Æloc_check
(
√eded_Àn
)Ë=
NULL
)

359 
outofmem
;

360 
	`STRCPY
(
p1
, 
√w_°¨t
);

361 
	`vim_‰ì
(
√w_°¨t
);

362 
√w_°¨t
 = 
p1
;

363 
√w_°¨t_Àn
 = 
√eded_Àn
;

365 
√w_íd
 = 
√w_°¨t
 + 
Àn
;

371 
i
 = 
¥og
->
°¨ç
[0] - 
ﬁd_c›y
;

372 
	`vim_memmove
(
√w_íd
, 
ﬁd_c›y
, (
size_t
)
i
);

373 
√w_íd
 +
i
;

375 
	`vim_ªgsub
(
¥og
, 
sub
, 
√w_íd
, 
TRUE
, ()
p_magic
);

376 
sub_nsubs
++;

377 
did_sub
 = 
TRUE
;

386 (
p1
 = 
	`vim_°rchr
(
√w_íd
, 
CR
)Ë!
NULL
)

388 i‡(
p1
 =
√w_íd
 ||Ö1[-1] !
	`Cål
('V'))

390 i‡(
	`u_össub
(
 um
Ë=
OK
)

392 *
p1
 = 
NUL
;

393 
	`m¨k_adju°
(
 um
, 
MAXLNUM
, 1L, 0L);

394 
	`ml_≠≥nd
(
 um
 - 1, 
√w_°¨t
,

395 (
cﬁƒ_t
)(
p1
 - 
√w_°¨t
 + 1), 
FALSE
);

396 ++
 um
;

397 ++
up
;

398 
	`STRCPY
(
√w_°¨t
, 
p1
 + 1);

399 
√w_íd
 = 
√w_°¨t
;

404 
	`STRCPY
(
p1
 - 1,Ö1);

405 
√w_íd
 = 
p1
;

409 
ﬁd_c›y
 = 
¥og
->
ídp
[0];

415 
skù
:

416 
m©ch
 = -1;

417 
œ°⁄e
 = (*
ﬁd_m©ch
 =
NUL
 || 
gŸ_öt
 || 
gŸ_quô
 || !
do_Æl
);

418 i‡(
œ°⁄e
 || 
do_ask
 ||

419 (
m©ch
 = 
	`vim_ªgexec
(
¥og
, 
ﬁd_m©ch
, ()
FALSE
)) == 0)

421 i‡(
√w_°¨t
)

429 
	`STRCAT
(
√w_°¨t
, 
ﬁd_c›y
);

430 
i
 = 
ﬁd_löe
 + 
	`STRLEN
(ﬁd_löeË- 
ﬁd_m©ch
;

431 i‡(
	`u_ßvesub
(
 um
Ë=
OK
)

432 
	`ml_ª∂a˚
(
 um
, 
√w_°¨t
, 
TRUE
);

434 
	`vim_‰ì
(
ﬁd_löe
);

435 
ﬁd_löe
 = 
√w_°¨t
;

436 
√w_°¨t
 = 
NULL
;

437 
ﬁd_m©ch
 = 
ﬁd_löe
 + 
	`STRLEN
(ﬁd_löeË- 
i
;

438 i‡(
ﬁd_m©ch
 < 
ﬁd_löe
)

440 
	`EMSG
("do_sub internalÉrror: old_match < old_line");

441 
ﬁd_m©ch
 = 
ﬁd_löe
;

443 
ﬁd_c›y
 = 
ﬁd_löe
;

445 i‡(
m©ch
 =-1 && !
œ°⁄e
)

446 
m©ch
 = 
	`vim_ªgexec
(
¥og
, 
ﬁd_m©ch
, ()
FALSE
);

447 i‡(
m©ch
 <= 0)

450 
	`löe_bªakcheck
();

453 i‡(
did_sub
)

454 ++
sub_∆öes
;

455 
	`vim_‰ì
(
ﬁd_löe
);

456 
ﬁd_löe
 = 
NULL
;

458 
	`löe_bªakcheck
();

461 
outofmem
:

462 
	`vim_‰ì
(
ﬁd_löe
);

463 i‡(
sub_nsubs
)

465 
CHANGED
;

466 i‡(!
globÆ_busy
)

468 
	`upd©eS¸ìn
(
CURSUPD
);

469 
	`begölöe
(
TRUE
);

470 i‡(!
	`do_sub_msg
(Ë&& 
do_ask
)

471 
	`MSG
("");

473 i‡(
do_¥öt
)

474 
	`¥öt_löe
(
curwö
->
w_curs‹
.
 um
, 
FALSE
);

476 i‡(!
globÆ_busy
)

478 i‡(
gŸ_öt
)

479 
	`emsg
(
e_öãº
);

480 i‡(
gŸ_m©ch
)

481 
	`MSG
("");

483 
	`emsg
(
e_nom©ch
);

486 
	`vim_‰ì
(
¥og
);

487 
	}
}

495 
	$do_sub_msg
()

497 i‡(
sub_nsubs
 > 
p_ªp‹t
)

499 
	`•rötf
((*)
msg_buf
, "%s%ld substitution%s on %ldÜine%s",

500 
gŸ_öt
 ? "(Interrupted) " : "",

501 
sub_nsubs
, 
	`∂uøl
(sub_nsubs),

502 ()
sub_∆öes
, 
	`∂uøl
(()sub_nlines));

503 i‡(
	`msg
(
msg_buf
))

504 
kìp_msg
 = 
msg_buf
;

505  
TRUE
;

507 i‡(
gŸ_öt
)

509 
	`emsg
(
e_öãº
);

510  
TRUE
;

512  
FALSE
;

513 
	}
}

535 
	$do_glob
(
ty≥
, 
Õ
, 
up
, 
cmd
)

536 
ty≥
;

537 
löír_t
 
Õ
, 
up
;

538 
ch¨_u
 *
cmd
;

540 
löír_t
 
 um
;

541 
löír_t
 
ﬁd_lcou¡
;

542 
nd⁄e
;

544 
ch¨_u
 
dñim
;

545 
ch¨_u
 *
∑t
;

546 
ªgexp
 *
¥og
;

547 
m©ch
;

548 
which_∑t
;

550 i‡(
globÆ_busy
)

552 
	`EMSG
("Cannot do :globalÑecursive");

556 
which_∑t
 = 
RE_LAST
;

557 
sub_nsubs
 = 0;

558 
sub_∆öes
 = 0;

565 i‡(*
cmd
 == '\\')

567 ++
cmd
;

568 i‡(
	`vim_°rchr
((
ch¨_u
 *)"/?&", *
cmd
Ë=
NULL
)

570 
	`emsg
(
e_back¶ash
);

573 i‡(*
cmd
 == '&')

574 
which_∑t
 = 
RE_SUBST
;

576 
which_∑t
 = 
RE_SEARCH
;

577 ++
cmd
;

578 
∑t
 = (
ch¨_u
 *)"";

580 i‡(*
cmd
 =
NUL
)

582 
	`EMSG
("RegularÉxpression missing from global");

587 
dñim
 = *
cmd
;

588 i‡(
dñim
)

589 ++
cmd
;

590 
∑t
 = 
cmd
;

591 
cmd
 = 
	`skù_ªgexp
(cmd, 
dñim
);

592 i‡(
cmd
[0] =
dñim
)

593 *
cmd
++ = 
NUL
;

596 i‡((
¥og
 = 
	`myªgcomp
(
∑t
, 
RE_BOTH
, 
which_∑t
, 
SEARCH_HIS
)Ë=
NULL
)

598 
	`emsg
(
e_övcmd
);

605 
nd⁄e
 = 0;

606 
 um
 = 
Õ
;Ünum <
up
 && !
gŸ_öt
; ++lnum)

609 
m©ch
 = 
	`vim_ªgexec
(
¥og
, 
	`ml_gë
(
 um
), ()
TRUE
);

610 i‡((
ty≥
 ='g' && 
m©ch
) || (type == 'v' && !match))

612 
	`ml_£tm¨ked
(
 um
);

613 
nd⁄e
++;

615 
	`löe_bªakcheck
();

621 i‡(
gŸ_öt
)

622 
	`MSG
("Interrupted");

623 i‡(
nd⁄e
 == 0)

624 
	`msg
(
e_nom©ch
);

632 
	`£çcm¨k
();

634 
globÆ_busy
 = 1;

635 
ﬁd_lcou¡
 = 
curbuf
->
b_ml
.
ml_löe_cou¡
;

636 !
gŸ_öt
 && (
 um
 = 
	`ml_fú°m¨ked
()Ë!0 && 
globÆ_busy
 == 1)

638 
curwö
->
w_curs‹
.
 um
 =Ünum;

639 
curwö
->
w_curs‹
.
cﬁ
 = 0;

640 i‡(*
cmd
 =
NUL
 || *cmd == '\n')

641 
	`do_cmdlöe
((
ch¨_u
 *)"p", 
FALSE
, 
TRUE
);

643 
	`do_cmdlöe
(
cmd
, 
FALSE
, 
TRUE
);

644 
	`mch_bªakcheck
();

647 
globÆ_busy
 = 0;

649 
mu°_ªdøw
 = 
CLEAR
;

650 
	`cursupd©e
();

654 i‡(!
	`do_sub_msg
())

655 
	`msgm‹e
(
curbuf
->
b_ml
.
ml_löe_cou¡
 - 
ﬁd_lcou¡
);

658 
	`ml_˛órm¨ked
();

659 
	`vim_‰ì
(
¥og
);

660 
	}
}

662 #ifde‡
VIMINFO


664 
	$ªad_vimöfo_sub_°rög
(
löe
, 
Â
, 
f‹˚
)

665 
ch¨_u
 *
löe
;

666 
FILE
 *
Â
;

667 
f‹˚
;

669 i‡(
ﬁd_sub
 !
NULL
 && 
f‹˚
)

670 
	`vim_‰ì
(
ﬁd_sub
);

671 i‡(
f‹˚
 || 
ﬁd_sub
 =
NULL
)

673 
	`vimöfo_ªad°rög
(
löe
);

674 
ﬁd_sub
 = 
	`°rßve
(
löe
 + 1);

676  
	`vim_fgës
(
löe
, 
LSIZE
, 
Â
);

677 
	}
}

680 
	$wrôe_vimöfo_sub_°rög
(
Â
)

681 
FILE
 *
Â
;

683 i‡(
	`gë_vimöfo_∑ømëî
('/'Ë!0 && 
ﬁd_sub
 !
NULL
)

685 
	`Ârötf
(
Â
, "\n# Last Substitute String:\n$");

686 
	`vimöfo_wrôe°rög
(
Â
, 
ﬁd_sub
);

688 
	}
}

	@src/digraph.c

13 
	~"vim.h
"

14 
	~"globÆs.h
"

15 
	~"¥Ÿo.h
"

16 
	~"›ti⁄.h
"

18 #ifde‡
DIGRAPHS


20 
gëexa˘digøph
 
__ARGS
((, , ));

21 
¥ötdigøph
 
__ARGS
((
ch¨_u
 *));

23 
ch¨_u
 (*
digøph√w
)[3];

24 
	gdigøphcou¡
 = 0;

26 #i‡
deföed
(
MSDOS
Ë|| deföed(
WIN32
Ë|| deföed(
OS2
)

27 
ch¨_u
 
	gdigøphdeÁu…
[][3] =

87 {
NUL
, NUL, NUL}

91 #ifde‡
_INCLUDE_HPUX_SOURCE


93 
ch¨_u
 
	gdigøphdeÁu…
[][3] =

189 {
NUL
, NUL, NUL}

194 
ch¨_u
 
	gdigøphdeÁu…
[][3] =

290 {
NUL
, NUL, NUL}

300 
	$do_digøph
(
c
)

301 
c
;

303 
back•a˚d
;

304 
œ°ch¨
;

306 i‡(
c
 == -1)

308 
back•a˚d
 = -1;

310 i‡(
p_dg
)

312 i‡(
back•a˚d
 >= 0)

313 
c
 = 
	`gëdigøph
(
back•a˚d
, c, 
FALSE
);

314 
back•a˚d
 = -1;

315 i‡((
c
 =
K_BS
 || c =
	`Cål
('H')Ë&& 
œ°ch¨
 >= 0)

316 
back•a˚d
 = 
œ°ch¨
;

318 
œ°ch¨
 = 
c
;

319  
c
;

320 
	}
}

327 
	$gëexa˘digøph
(
ch¨1
, 
ch¨2
, 
mëa
)

328 
ch¨1
;

329 
ch¨2
;

330 
mëa
;

332 
i
;

333 
ªtvÆ
;

335 i‡(
	`IS_SPECIAL
(
ch¨1
Ë|| IS_SPECIAL(
ch¨2
))

336  
ch¨2
;

337 
ªtvÆ
 = 0;

338 
i
 = 0; ; ++i)

340 i‡(
i
 =
digøphcou¡
)

342 
i
 = 0; 
digøphdeÁu…
[i][0] != 0; ++i)

343 i‡(
digøphdeÁu…
[
i
][0] =
ch¨1
 && digøphdeÁu…[i][1] =
ch¨2
)

345 
ªtvÆ
 = 
digøphdeÁu…
[
i
][2];

350 i‡(
digøph√w
[
i
][0] =
ch¨1
 && digøph√w[i][1] =
ch¨2
)

352 
ªtvÆ
 = 
digøph√w
[
i
][2];

357 i‡(
ªtvÆ
 == 0)

359 i‡(
ch¨1
 =' ' && 
mëa
)

360  (
ch¨2
 | 0x80);

361  
ch¨2
;

363  
ªtvÆ
;

364 
	}
}

371 
	$gëdigøph
(
ch¨1
, 
ch¨2
, 
mëa
)

372 
ch¨1
;

373 
ch¨2
;

374 
mëa
;

376 
ªtvÆ
;

378 i‡(((
ªtvÆ
 = 
	`gëexa˘digøph
(
ch¨1
, 
ch¨2
, 
mëa
)) == char2) &&

379 (
ch¨1
 !
ch¨2
) &&

380 ((
ªtvÆ
 = 
	`gëexa˘digøph
(
ch¨2
, 
ch¨1
, 
mëa
)) == char1))

381  
ch¨2
;

382  
ªtvÆ
;

383 
	}
}

390 
	$putdigøph
(
°r
)

391 
ch¨_u
 *
°r
;

393 
ch¨1
, 
ch¨2
, 
n
;

394 
	`ch¨_u
 (*
√wèb
)[3];

395 
i
;

397 *
°r
)

399 
°r
 = 
	`skùwhôe
(str);

400 i‡((
ch¨1
 = *
°r
++Ë=0 || (
ch¨2
 = *str++) == 0)

402 i‡(
ch¨1
 =
ESC
 || 
ch¨2
 == ESC)

404 
	`EMSG
("EscapeÇotállowed in digraph");

407 
°r
 = 
	`skùwhôe
(str);

408 i‡(!
	`isdigô
(*
°r
))

410 
	`emsg
(
e_numbî
);

413 
n
 = 
	`gëdigôs
(&
°r
);

414 i‡(
digøph√w
)

416 
i
 = 0; i < 
digøphcou¡
; ++i)

417 i‡(
digøph√w
[
i
][0] =
ch¨1
 && digøph√w[i][1] =
ch¨2
)

419 
digøph√w
[
i
][2] = 
n
;

422 i‡(
i
 < 
digøphcou¡
)

425 
√wèb
 = (
	`ch¨_u
 (*)[3])
	`Æloc
(
digøphcou¡
 * 3 + 3);

426 i‡(
√wèb
)

428 
	`vim_memmove
((*)
√wèb
, (*)
digøph√w
,

429 (
size_t
)(
digøphcou¡
 * 3));

430 
	`vim_‰ì
(
digøph√w
);

431 
digøph√w
 = 
√wèb
;

432 
digøph√w
[
digøphcou¡
][0] = 
ch¨1
;

433 
digøph√w
[
digøphcou¡
][1] = 
ch¨2
;

434 
digøph√w
[
digøphcou¡
][2] = 
n
;

435 ++
digøphcou¡
;

438 
	}
}

441 
	$li°digøphs
()

443 
i
;

445 
	`msg_outch¨
('\n');

446 
	`¥ötdigøph
(
NULL
);

447 
i
 = 0; 
digøphdeÁu…
[i][0] && !
gŸ_öt
; ++i)

449 i‡(
	`gëexa˘digøph
(
digøphdeÁu…
[
i
][0], digraphdefault[i][1],

450 
FALSE
Ë=
digøphdeÁu…
[
i
][2])

451 
	`¥ötdigøph
(
digøphdeÁu…
[
i
]);

452 
	`mch_bªakcheck
();

454 
i
 = 0; i < 
digøphcou¡
 && !
gŸ_öt
; ++i)

456 
	`¥ötdigøph
(
digøph√w
[
i
]);

457 
	`mch_bªakcheck
();

459 
mu°_ªdøw
 = 
CLEAR
;

461 
	}
}

464 
	$¥ötdigøph
(
p
)

465 
ch¨_u
 *
p
;

467 
ch¨_u
 
buf
[9];

468 
Àn
;

470 i‡(
p
 =
NULL
)

471 
Àn
 = 0;

472 i‡(
p
[2] != 0)

474 i‡(
Àn
 > 
Cﬁumns
 - 11)

476 
	`msg_outch¨
('\n');

477 
Àn
 = 0;

479 i‡(
Àn
)

480 
	`MSG_OUTSTR
(" ");

481 
	`•rötf
((*)
buf
, "%c%¯%¯%3d", 
p
[0],Ö[1],Ö[2],Ö[2]);

482 
	`msg_out°r
(
buf
);

483 
Àn
 += 11;

485 
	}
}

	@src/edit.c

13 
	~"vim.h
"

14 
	~"globÆs.h
"

15 
	~"¥Ÿo.h
"

16 
	~"›ti⁄.h
"

17 
	~"›s.h
"

19 #ifde‡
INSERT_EXPAND


23 
	#CTRL_X_WANT_IDENT
 0x100

	)

25 
	#CTRL_X_NOT_DEFINED_YET
 (1)

	)

26 
	#CTRL_X_SCROLL
 (2)

	)

27 
	#CTRL_X_WHOLE_LINE
 (3)

	)

28 
	#CTRL_X_FILES
 (4)

	)

29 
	#CTRL_X_TAGS
 (5 + 
CTRL_X_WANT_IDENT
)

	)

30 
	#CTRL_X_PATH_PATTERNS
 (6 + 
CTRL_X_WANT_IDENT
)

	)

31 
	#CTRL_X_PATH_DEFINES
 (7 + 
CTRL_X_WANT_IDENT
)

	)

32 
	#CTRL_X_FINISHED
 (8)

	)

33 
	#CTRL_X_DICTIONARY
 (9 + 
CTRL_X_WANT_IDENT
)

	)

35 
	sCom∂ëi⁄


37 
ch¨_u
 *
	m°r
;

38 
ch¨_u
 *
	m‚ame
;

39 
	m‹igöÆ
;

40 
Com∂ëi⁄
 *
	m√xt
;

41 
Com∂ëi⁄
 *
	m¥ev
;

44 
Com∂ëi⁄
 *
	gfú°_m©ch
 = 
NULL
;

45 
Com∂ëi⁄
 *
	gcuº_m©ch
 = 
NULL
;

47 
add_com∂ëi⁄
 
__ARGS
((
ch¨_u
 *
°r
, 
Àn
, ch¨_u *, 
dú
));

48 
make_cy˛ic
 
__ARGS
(());

49 
com∂ëe_di˘i⁄¨õs
 
__ARGS
((
ch¨_u
 *, ));

50 
‰ì_com∂ëi⁄s
 
__ARGS
(());

51 
cou¡_com∂ëi⁄s
 
__ARGS
(());

54 
	#BACKSPACE_CHAR
 1

	)

55 
	#BACKSPACE_WORD
 2

	)

56 
	#BACKSPACE_WORD_NOT_SPACE
 3

	)

57 
	#BACKSPACE_LINE
 4

	)

59 
ch™ge_ödít
 
__ARGS
((
ty≥
, 
amou¡
, 
round
));

60 
ö£π_•ecül
 
__ARGS
((, ));

61 
°¨t_¨row
 
__ARGS
((
FPOS
 *
íd_ö£π_pos
));

62 
°›_¨row
 
__ARGS
(());

63 
°›_ö£π
 
__ARGS
((
FPOS
 *
íd_ö£π_pos
));

64 
echeck_abbr
 
__ARGS
(());

66 
FPOS
 
	gIns°¨t
;

68 
cﬁƒ_t
 
	gIns°¨t_ãxéí
;

69 
cﬁƒ_t
 
	gIns°¨t_bœnk_vcﬁ
;

71 
ch¨_u
 *
	gœ°_ö£π
 = 
NULL
;

73 
	gœ°_ö£π_skù
;

75 
	g√w_ö£π_skù
;

77 #ifde‡
INSERT_EXPAND


78 
ch¨_u
 *
	g‹igöÆ_ãxt
 = 
NULL
;

82 #ifde‡
CINDENT


83 
	gˇn_cödít
;

90 
	$edô
(
öô°r
, 
°¨én
, 
cou¡
)

91 
öô°r
;

92 
°¨én
;

93 
cou¡
;

95 
c
;

96 
cc
;

97 
ch¨_u
 *
±r
;

98 
löír_t
 
 um
;

99 
ãmp
 = 0;

100 
mode
;

101 
œ°c
 = 0;

102 
cﬁƒ_t
 
möcﬁ
;

103 
löír_t
 
o_ um
 = 0;

104 
o_eﬁ
 = 
FALSE
;

105 
√ed_ªdøw
 = 
FALSE
;

106 
i
;

107 
did_back•a˚
 = 
TRUE
;

108 #ifde‡
RIGHTLEFT


109 
ªvös
;

110 
ªvösch¨s
 = 0;

111 
ªvö¶egÆ
 = 0;

112 
ªvösscﬁ
 = -1;

114 #ifde‡
INSERT_EXPAND


115 
FPOS
 
fú°_m©ch_pos
;

116 
FPOS
 
œ°_m©ch_pos
;

117 
FPOS
 *
com∂ëe_pos
;

118 
ch¨_u
 *
com∂ëe_∑t
 = 
NULL
;

119 
ch¨_u
 *
tmp_±r
;

120 
ch¨_u
 *
mesg
 = 
NULL
;

121 
ch¨_u
 *
quick_m
;

122 
°¨ãd_com∂ëi⁄
 = 
FALSE
;

123 
cﬁƒ_t
 
com∂ëe_cﬁ
 = 0;

124 
com∂ëe_dúe˘i⁄
;

125 
d⁄e_dú
 = 0;

127 
num_m©ches
;

128 
ch¨_u
 **
m©ches
;

129 
ªgexp
 *
¥og
;

130 
ßve_sm
 = -1;

131 
ßve_p_scs
;

133 #ifde‡
CINDENT


134 
löe_is_whôe
 = 
FALSE
;

136 
FPOS
 
ços
;

140 i‡(
msg_s¸ﬁl
 || 
emsg_⁄_di•œy
)

142 
	`mch_dñay
(1000L, 
TRUE
);

143 
msg_s¸ﬁl
 = 
FALSE
;

144 
emsg_⁄_di•œy
 = 
FALSE
;

146 #ifde‡
SLEEP_IN_EMSG


147 i‡(
√ed_¶ìp
)

149 
	`mch_dñay
(1000L, 
TRUE
);

150 
√ed_¶ìp
 = 
FALSE
;

154 #ifde‡
USE_MOUSE


159 i‡(
whîe_∑°e_°¨ãd
.
 um
 != 0)

160 
Ins°¨t
 = 
whîe_∑°e_°¨ãd
;

164 
Ins°¨t
 = 
curwö
->
w_curs‹
;

165 i‡(
°¨én
)

166 
Ins°¨t
.
cﬁ
 = 0;

168 
Ins°¨t_ãxéí
 = 
	`löëabsize
(
	`ml_gë_cuæöe
());

169 
Ins°¨t_bœnk_vcﬁ
 = 
MAXCOL
;

171 i‡(
öô°r
 !
NUL
 && !
ª°¨t_edô
)

173 
	`Re£tRedobuff
();

174 
	`AµídNumbîToRedobuff
(
cou¡
);

175 
	`AµídCh¨ToRedobuff
(
öô°r
);

176 i‡(
öô°r
 == 'g')

177 
	`AµídCh¨ToRedobuff
('I');

180 i‡(
öô°r
 == 'R')

181 
Sèã
 = 
REPLACE
;

183 
Sèã
 = 
INSERT
;

185 #ifde‡
USE_MOUSE


186 
	`£tmou£
();

188 
	`˛ór_showcmd
();

189 #ifde‡
RIGHTLEFT


190 
ªvös
 = (
Sèã
 =
INSERT
 && 
p_ri
);

191 i‡(
ªvös
)

192 
	`undi•œy_dﬁœr
();

199 i‡(
ª°¨t_edô
 && 
	`°uff_em±y
())

201 #ifde‡
USE_MOUSE


206 i‡(
whîe_∑°e_°¨ãd
.
 um
)

207 
¨row_u£d
 = 
FALSE
;

210 
¨row_u£d
 = 
TRUE
;

211 
ª°¨t_edô
 = 0;

219 i‡(((
o_eﬁ
 && 
curwö
->
w_curs‹
.
 um
 =
o_ um
) ||

220 
curwö
->
w_cursw™t
 > curwö->
w_vútcﬁ
) &&

221 *(
±r
 = 
	`ml_gë_cuæöe
(Ë+ 
curwö
->
w_curs‹
.
cﬁ
)

222 !
NUL
 &&

223 *(
±r
 + 1Ë=
NUL
)

224 ++
curwö
->
w_curs‹
.
cﬁ
;

228 
¨row_u£d
 = 
FALSE
;

229 
o_eﬁ
 = 
FALSE
;

231 #ifde‡
USE_MOUSE


232 
whîe_∑°e_°¨ãd
.
 um
 = 0;

234 #ifde‡
CINDENT


235 
ˇn_cödít
 = 
TRUE
;

238 i‡(
p_smd
)

239 
	`showmode
();

241 i‡(!
p_im
)

242 
	`ch™ge_w¨nög
();

244 #ifde‡
DIGRAPHS


245 
	`do_digøph
(-1);

252 
±r
 = 
	`gë_ö£πed
();

253 
√w_ö£π_skù
 = 
	`STRLEN
(
±r
);

254 
	`vim_‰ì
(
±r
);

256 
ﬁd_ödít
 = 0;

260 #ifde‡
RIGHTLEFT


261 i‡(!
ªvö¶egÆ
)

262 
ªvösscﬁ
 = -1;

264 
ªvö¶egÆ
 = 0;

266 i‡(
¨row_u£d
)

267 
cou¡
 = 0;

270 i‡(!
¨row_u£d
)

271 
curwö
->
w_£t_cursw™t
 = 
TRUE
;

274 
möcﬁ
 = 
curwö
->
w_cﬁ
;

275 
i
 = 
curwö
->
w_row
;

276 
	`cursupd©e
();

281 
msg_s¸ﬁl
 = 
FALSE
;

290 i‡(
curwö
->
w_p_wøp
 && !
did_back•a˚
 &&

291 ()
curwö
->
w_cﬁ
 < ()
möcﬁ
 - 
curbuf
->
b_p_ts
 &&

292 
i
 =
curwö
->
w_wöpos
 + curwö->
w_height
 - 1 &&

293 
curwö
->
w_curs‹
.
 um
 !curwö->
w_t›löe
)

295 ++
curwö
->
w_t›löe
;

296 
	`upd©eS¸ìn
(
VALID_TO_CURSCHAR
);

297 
	`cursupd©e
();

298 
√ed_ªdøw
 = 
FALSE
;

300 
did_back•a˚
 = 
FALSE
;

306 i‡(
√ed_ªdøw
)

308 
	`upd©ñöe
();

309 
√ed_ªdøw
 = 
FALSE
;

312 
	`showruÀr
(0);

313 
	`£tcurs‹
();

314 
emsg_⁄_di•œy
 = 
FALSE
;

316 
c
 = 
	`vgëc
();

317 i‡(
c
 =
	`Cål
('C'))

318 
gŸ_öt
 = 
FALSE
;

320 #ifde‡
RIGHTLEFT


321 i‡(
p_hkm≠
 && 
KeyTy≥d
)

322 
c
 = 
	`hkm≠
(c);

325 #ifde‡
INSERT_EXPAND


326 i‡(
˘æ_x_mode
 =
CTRL_X_NOT_DEFINED_YET
)

331 
c
)

333 
	`Cål
('E'):

334 
	`Cål
('Y'):

335 
˘æ_x_mode
 = 
CTRL_X_SCROLL
;

336 i‡(
Sèã
 =
INSERT
)

337 
edô_submode
 = (
ch¨_u
 *)" (insert) Scroll (^E/^Y)";

339 
edô_submode
 = (
ch¨_u
 *)" (replace) Scroll (^E/^Y)";

341 
	`Cål
('L'):

342 
˘æ_x_mode
 = 
CTRL_X_WHOLE_LINE
;

343 
edô_submode
 = (
ch¨_u
 *)" WholeÜine completion (^L/^N/^P)";

345 
	`Cål
('F'):

346 
˘æ_x_mode
 = 
CTRL_X_FILES
;

347 
edô_submode
 = (
ch¨_u
 *)" FileÇame completion (^F/^N/^P)";

349 
	`Cål
('K'):

350 
˘æ_x_mode
 = 
CTRL_X_DICTIONARY
;

351 
edô_submode
 = (
ch¨_u
 *)" Dictionary completion (^K/^N/^P)";

353 
	`Cål
(']'):

354 
˘æ_x_mode
 = 
CTRL_X_TAGS
;

355 
edô_submode
 = (
ch¨_u
 *)" Tag completion (^]/^N/^P)";

357 
	`Cål
('I'):

358 
˘æ_x_mode
 = 
CTRL_X_PATH_PATTERNS
;

359 
edô_submode
 = (
ch¨_u
 *)" PathÖattern completion (^N/^P)";

361 
	`Cål
('D'):

362 
˘æ_x_mode
 = 
CTRL_X_PATH_DEFINES
;

363 
edô_submode
 = (
ch¨_u
 *)" Definition completion (^D/^N/^P)";

366 
˘æ_x_mode
 = 0;

369 
	`showmode
();

371 i‡(
˘æ_x_mode
)

374 i‡(!
	`is_˘æ_x_key
(
c
))

376 i‡(
˘æ_x_mode
 =
CTRL_X_SCROLL
)

377 
˘æ_x_mode
 = 0;

379 
˘æ_x_mode
 = 
CTRL_X_FINISHED
;

380 
edô_submode
 = 
NULL
;

382 
	`showmode
();

384 i‡(
°¨ãd_com∂ëi⁄
 || 
˘æ_x_mode
 =
CTRL_X_FINISHED
)

390 
	`showmode
();

391 i‡((
˘æ_x_mode
 =0 && 
c
 !
	`Cål
('N') && c != Ctrl('P')) ||

392 
˘æ_x_mode
 =
CTRL_X_FINISHED
)

399 i‡(
cuº_m©ch
 !
NULL
)

408 
±r
 = 
cuº_m©ch
->
°r
;

409 
tmp_±r
 = 
‹igöÆ_ãxt
;

410 *
tmp_±r
 && *tmp_±∏=*
±r
)

412 ++
tmp_±r
;

413 ++
±r
;

415 
ãmp
 = 0; 
tmp_±r
[temp]; ++temp)

416 
	`AµídCh¨ToRedobuff
(
K_BS
);

417 i‡(*
±r
)

418 
	`AµídToRedobuff
(
±r
);

421 
 um
 = 
curwö
->
w_curs‹
.lnum;

422 
	`ö£πch¨
(
NUL
, 
FALSE
, -1);

423 i‡(
 um
 !
curwö
->
w_curs‹
.lnum)

424 
	`upd©eS¸ìn
(
CURSUPD
);

426 
√ed_ªdøw
 = 
TRUE
;

428 
	`vim_‰ì
(
com∂ëe_∑t
);

429 
com∂ëe_∑t
 = 
NULL
;

430 
	`vim_‰ì
(
‹igöÆ_ãxt
);

431 
‹igöÆ_ãxt
 = 
NULL
;

432 
	`‰ì_com∂ëi⁄s
();

433 
°¨ãd_com∂ëi⁄
 = 
FALSE
;

434 
˘æ_x_mode
 = 0;

435 
p_sm
 = 
ßve_sm
;

436 i‡(
edô_submode
 !
NULL
)

438 
edô_submode
 = 
NULL
;

439 
	`showmode
();

445 i‡(
c
 !
	`Cål
('D'))

446 
œ°c
 = 
c
;

448 #ifde‡
DIGRAPHS


449 
c
 = 
	`do_digøph
(c);

452 i‡(
c
 =
	`Cål
('V') || c == Ctrl('Q'))

454 i‡(
NextS¸ìn
 !
NULL
)

455 
	`s¸ìn_outch¨
('^', 
curwö
->
w_wöpos
 + curwö->
w_row
,

456 #ifde‡
RIGHTLEFT


457 
curwö
->
w_p_æ
 ? ()
Cﬁumns
 - 1 - curwö->
w_cﬁ
 :

459 
curwö
->
w_cﬁ
);

460 
	`AµídToRedobuff
((
ch¨_u
 *)"\026");

461 
	`cursupd©e
();

463 i‡(!
	`add_to_showcmd
(
c
, 
FALSE
))

464 
	`£tcurs‹
();

466 
c
 = 
	`gë_lôîÆ
();

467 
	`˛ór_showcmd
();

468 
	`ö£π_•ecül
(
c
, 
TRUE
);

469 
√ed_ªdøw
 = 
TRUE
;

470 #ifde‡
RIGHTLEFT


471 
ªvösch¨s
++;

472 
ªvö¶egÆ
++;

477 #ifde‡
CINDENT


478 i‡(
curbuf
->
b_p_cö


479 #ifde‡
INSERT_EXPAND


480 && !
˘æ_x_mode


484 
löe_is_whôe
 = 
	`öödít
(0);

491 i‡(
	`ö_cökeys
(
c
, '!', 
löe_is_whôe
))

492 
f‹˚_cödít
;

498 i‡(
ˇn_cödít
 && 
	`ö_cökeys
(
c
, '*', 
löe_is_whôe
))

500 
	`°›_¨row
();

503 
	`fixthi¶öe
(
gë_c_ödít
);

506 
√ed_ªdøw
 = 
TRUE
;

511 #ifde‡
RIGHTLEFT


512 i‡(
curwö
->
w_p_æ
)

513 
c
)

515 
K_LEFT
: 
c
 = 
K_RIGHT
; ;

516 
K_S_LEFT
: 
c
 = 
K_S_RIGHT
; ;

517 
K_RIGHT
: 
c
 = 
K_LEFT
; ;

518 
K_S_RIGHT
: 
c
 = 
K_S_LEFT
; ;

522 
c
)

524 
K_INS
:

525 i‡(
Sèã
 =
REPLACE
)

526 
Sèã
 = 
INSERT
;

528 
Sèã
 = 
REPLACE
;

529 
	`AµídCh¨ToRedobuff
(
K_INS
);

530 
	`showmode
();

533 #ifde‡
INSERT_EXPAND


534 
	`Cål
('X'):

536 
˘æ_x_mode
 = 
CTRL_X_NOT_DEFINED_YET
;

537 
	`MSG
("^X mode (^E/^Y/^L/^]/^F/^I/^K/^D)");

541 
	`Cål
('O'):

542 i‡(
	`echeck_abbr
(
	`Cål
('O'Ë+ 
ABBR_OFF
))

544 
cou¡
 = 0;

545 i‡(
Sèã
 =
INSERT
)

546 
ª°¨t_edô
 = 'I';

548 
ª°¨t_edô
 = 'R';

549 
o_ um
 = 
curwö
->
w_curs‹
.
 um
;

550 
o_eﬁ
 = (
	`gch¨_curs‹
(Ë=
NUL
);

551 
doESCkey
;

554 
K_HELP
:

555 
K_F1
:

556 
	`°uffch¨Ródbuff
(
K_HELP
);

559 
ESC
:

560 i‡(
	`echeck_abbr
(
ESC
 + 
ABBR_OFF
))

564 
	`Cål
('C'):

565 
doESCkey
:

566 
ãmp
 = 
curwö
->
w_curs‹
.
cﬁ
;

567 i‡(!
¨row_u£d
)

569 
	`AµídToRedobuff
(
ESC_STR
);

571 i‡(--
cou¡
 > 0)

573 ()
	`°¨t_ªdo_ös
();

576 
	`°›_ö£π
(&
curwö
->
w_curs‹
);

577 i‡(
dﬁœr_vcﬁ
)

579 
dﬁœr_vcﬁ
 = 0;

582 i‡(
curwö
->
w_ªdr_°©us
 =
TRUE
)

583 
mu°_ªdøw
 = 
NOT_VALID
;

585 
√ed_ªdøw
 = 
TRUE
;

588 i‡(
√ed_ªdøw
)

589 
	`upd©ñöe
();

593 i‡(!
ª°¨t_edô
 && (
cﬁƒ_t
)
ãmp
 =
curwö
->
w_curs‹
.
cﬁ
)

594 
curwö
->
w_£t_cursw™t
 = 
TRUE
;

599 i‡(
curwö
->
w_curs‹
.
cﬁ
 != 0 &&

600 (!
ª°¨t_edô
 || 
	`gch¨_curs‹
(Ë=
NUL
)

601 #ifde‡
RIGHTLEFT


602 && !
ªvös


605 --
curwö
->
w_curs‹
.
cﬁ
;

606 i‡(
Sèã
 =
REPLACE
)

607 
	`ª∂a˚_Êush
();

608 
Sèã
 = 
NORMAL
;

609 #ifde‡
USE_MOUSE


610 
	`£tmou£
();

614 i‡(
Rec‹dög
 || 
ª°¨t_edô
)

615 
	`showmode
();

616 i‡(
p_smd
)

617 
	`MSG
("");

618 
ﬁd_ödít
 = 0;

619  (
c
 =
	`Cål
('O'));

626 
K_ZERO
:

627 
NUL
:

628 
	`Cål
('A'):

629 i‡(
	`°uff_ö£πed
(
NUL
, 1L, (
c
 =
	`Cål
('A'))Ë=
FAIL
 &&

630 
c
 !
	`Cål
('A'))

631 
doESCkey
;

637 
	`Cål
('R'):

638 i‡(
NextS¸ìn
 !
NULL
)

639 
	`s¸ìn_outch¨
('"', 
curwö
->
w_wöpos
 + curwö->
w_row
,

640 #ifde‡
RIGHTLEFT


641 
curwö
->
w_p_æ
 ? ()
Cﬁumns
 - 1 - curwö->
w_cﬁ
 :

643 
curwö
->
w_cﬁ
);

644 i‡(!
	`add_to_showcmd
(
c
, 
FALSE
))

645 
	`£tcurs‹
();

648 ++
no_m≠pög
;

649 #ifde‡
HAVE_LANGMAP


650 
cc
 = 
	`vgëc
();

651 
	`LANGMAP_ADJUST
(
cc
, 
TRUE
);

652 i‡(
	`ö£πbuf
(
cc
Ë=
FAIL
)

654 i‡(
	`ö£πbuf
(
	`vgëc
()Ë=
FAIL
)

657 
	`bìp_Êush
();

658 
√ed_ªdøw
 = 
TRUE
;

660 --
no_m≠pög
;

661 
	`˛ór_showcmd
();

664 #ifde‡
RIGHTLEFT


665 
	`Cål
('B'):

666 
p_ri
 = !p_ri;

667 
ªvös
 = (
Sèã
 =
INSERT
 && 
p_ri
);

668 i‡(
ªvös
)

669 
	`undi•œy_dﬁœr
();

670 
	`showmode
();

673 
	`Cål
('_'):

675 i‡(
ªvös
 && 
ªvösch¨s
 && 
ªvösscﬁ
 >= 0)

676 
	`gch¨_curs‹
(Ë!
NUL
 && 
ªvösch¨s
--)

677 ++
curwö
->
w_curs‹
.
cﬁ
;

678 
p_ri
 = !p_ri;

679 
ªvös
 = (
Sèã
 =
INSERT
 && 
p_ri
);

680 i‡(
ªvös
)

682 
ªvösscﬁ
 = 
curwö
->
w_curs‹
.
cﬁ
;

683 
ªvö¶egÆ
++;

684 
ªvösch¨s
 = 0;

685 
	`undi•œy_dﬁœr
();

688 
ªvösscﬁ
 = -1;

689 
p_hkm≠
 = 
curwö
->
w_p_æ
 ^ 
p_ri
;

690 
	`showmode
();

701 
	`Cål
('D'):

702 #ifde‡
INSERT_EXPAND


703 i‡(
˘æ_x_mode
 =
CTRL_X_PATH_DEFINES
)

704 
docom∂ëe
;

707 
	`Cål
('T'):

708 
	`°›_¨row
();

709 
	`AµídCh¨ToRedobuff
(
c
);

714 i‡((
œ°c
 ='0' ||Üa°¯='^'Ë&& 
curwö
->
w_curs‹
.
cﬁ
)

716 --
curwö
->
w_curs‹
.
cﬁ
;

717 ()
	`dñch¨
(
FALSE
);

718 i‡(
œ°c
 == '^')

719 
ﬁd_ödít
 = 
	`gë_ödít
();

720 
	`ch™ge_ödít
(
INDENT_SET
, 0, 
TRUE
);

723 
	`ch™ge_ödít
(
c
 =
	`Cål
('D'Ë? 
INDENT_DEC
 : 
INDENT_INC
,

724 0, 
TRUE
);

726 
did_ai
 = 
FALSE
;

727 
did_si
 = 
FALSE
;

728 
ˇn_si
 = 
FALSE
;

729 
ˇn_si_back
 = 
FALSE
;

730 #ifde‡
CINDENT


731 
ˇn_cödít
 = 
FALSE
;

733 
ªdøw
;

735 
K_DEL
:

736 
	`°›_¨row
();

737 i‡(
	`gch¨_curs‹
(Ë=
NUL
)

739 
ãmp
 = 
curwö
->
w_curs‹
.
cﬁ
;

740 i‡(!
p_bs
 ||

741 
	`u_ßve
((
löír_t
)(
curwö
->
w_curs‹
.
 um
 - 1),

742 (
löír_t
)(
curwö
->
w_curs‹
.
 um
 + 2)Ë=
FAIL
 ||

743 
	`do_joö
(
FALSE
, 
TRUE
Ë=
FAIL
)

744 
	`bìp_Êush
();

746 
curwö
->
w_curs‹
.
cﬁ
 = 
ãmp
;

748 i‡(
	`dñch¨
(
FALSE
Ë=
FAIL
)

749 
	`bìp_Êush
();

750 
did_ai
 = 
FALSE
;

751 
did_si
 = 
FALSE
;

752 
ˇn_si
 = 
FALSE
;

753 
ˇn_si_back
 = 
FALSE
;

754 
	`AµídCh¨ToRedobuff
(
c
);

755 
ªdøw
;

757 
K_BS
:

758 
	`Cål
('H'):

759 
mode
 = 
BACKSPACE_CHAR
;

760 
dodñ
:

765 i‡(
	`bu„m±y
() || (

766 #ifde‡
RIGHTLEFT


767 !
ªvös
 &&

769 ((
curwö
->
w_curs‹
.
 um
 == 1 &&

770 
curwö
->
w_curs‹
.
cﬁ
 <= 0) ||

771 (
p_bs
 < 2 && (
¨row_u£d
 ||

772 (
curwö
->
w_curs‹
.
 um
 =
Ins°¨t
.lnum &&

773 
curwö
->
w_curs‹
.
cﬁ
 <
Ins°¨t
.col) ||

774 (
curwö
->
w_curs‹
.
cﬁ
 <0 && 
p_bs
 == 0))))))

776 
	`bìp_Êush
();

777 
ªdøw
;

780 
	`°›_¨row
();

781 #ifde‡
CINDENT


782 i‡(
	`öödít
(0))

783 
ˇn_cödít
 = 
FALSE
;

785 #ifde‡
RIGHTLEFT


786 i‡(
ªvös
)

787 
	`öc_curs‹
();

789 i‡(
curwö
->
w_curs‹
.
cﬁ
 <= 0)

791 
 um
 = 
Ins°¨t
.lnum;

792 i‡(
curwö
->
w_curs‹
.
 um
 =
Ins°¨t
.lnum

793 #ifde‡
RIGHTLEFT


794 || 
ªvös


798 i‡(
	`u_ßve
((
löír_t
)(
curwö
->
w_curs‹
.
 um
 - 2),

799 (
löír_t
)(
curwö
->
w_curs‹
.
 um
 + 1)Ë=
FAIL
)

800 
ªdøw
;

801 --
Ins°¨t
.
 um
;

802 
Ins°¨t
.
cﬁ
 = 0;

809 
cc
 = -1;

810 i‡(
Sèã
 =
REPLACE
)

811 
cc
 = 
	`ª∂a˚_p›
();

814 i‡(
Sèã
 !
REPLACE
 || 
curwö
->
w_curs‹
.
 um
 >Ünum)

816 
ãmp
 = 
	`gch¨_curs‹
();

817 --
curwö
->
w_curs‹
.
 um
;

818 ()
	`do_joö
(
FALSE
, 
	`curs_rows
(Ë=
OK
);

819 i‡(
ãmp
 =
NUL
 && 
	`gch¨_curs‹
() != NUL)

820 ++
curwö
->
w_curs‹
.
cﬁ
;

828 i‡(
Sèã
 =
REPLACE
)

835 
Sèã
 = 
NORMAL
;

839 
cc
 > 0)

841 
ãmp
 = 
curwö
->
w_curs‹
.
cﬁ
;

842 
	`ös_ch¨
(
cc
);

843 
curwö
->
w_curs‹
.
cﬁ
 = 
ãmp
;

844 
cc
 = 
	`ª∂a˚_p›
();

846 
cc
 = 
	`ª∂a˚_p›
();

847 i‡(
cc
 > 0)

849 
	`ös_ch¨
(
cc
);

850 
	`dec_curs‹
();

852 
Sèã
 = 
REPLACE
;

856 
	`dec_curs‹
();

857 
did_ai
 = 
FALSE
;

861 #ifde‡
RIGHTLEFT


862 i‡(
ªvös
)

863 
	`dec_curs‹
();

865 
möcﬁ
 = 0;

867 i‡(
mode
 =
BACKSPACE_LINE
 && 
curbuf
->
b_p_ai


868 #ifde‡
RIGHTLEFT


869 && !
ªvös


873 
ãmp
 = 
curwö
->
w_curs‹
.
cﬁ
;

874 
	`begölöe
(
TRUE
);

875 i‡(
curwö
->
w_curs‹
.
cﬁ
 < (
cﬁƒ_t
)
ãmp
)

876 
möcﬁ
 = 
curwö
->
w_curs‹
.
cﬁ
;

877 
curwö
->
w_curs‹
.
cﬁ
 = 
ãmp
;

884 #ifde‡
RIGHTLEFT


885 i‡(!
ªvös
)

887 
	`dec_curs‹
();

890 i‡(
mode
 =
BACKSPACE_WORD
 &&

891 !
	`vim_is•a˚
(
	`gch¨_curs‹
()))

893 
mode
 = 
BACKSPACE_WORD_NOT_SPACE
;

894 
ãmp
 = 
	`isw‹dch¨
(
	`gch¨_curs‹
());

897 i‡(
mode
 =
BACKSPACE_WORD_NOT_SPACE
 &&

898 (
	`vim_is•a˚
(
cc
 = 
	`gch¨_curs‹
()) ||

899 
	`isw‹dch¨
(
cc
Ë!
ãmp
))

901 #ifde‡
RIGHTLEFT


902 i‡(!
ªvös
)

904 
	`öc_curs‹
();

905 #ifde‡
RIGHTLEFT


906 i‡(
Sèã
 =
REPLACE
)

907 
	`dec_curs‹
();

911 i‡(
Sèã
 =
REPLACE
)

918 
cc
 = 
	`ª∂a˚_p›
();

919 i‡(
cc
 > 0)

920 
	`pch¨_curs‹
(
cc
);

921 i‡(
cc
 == 0)

922 ()
	`dñch¨
(
FALSE
);

926 ()
	`dñch¨
(
FALSE
);

927 #ifde‡
RIGHTLEFT


928 i‡(
ªvösch¨s
)

930 
ªvösch¨s
--;

931 
ªvö¶egÆ
++;

933 i‡(
ªvös
 && 
	`gch¨_curs‹
(Ë=
NUL
)

938 i‡(
mode
 =
BACKSPACE_CHAR
)

941 #ifde‡
RIGHTLEFT


942 
ªvös
 ||

944 (
curwö
->
w_curs‹
.
cﬁ
 > 
möcﬁ
 &&

945 (
curwö
->
w_curs‹
.
 um
 !
Ins°¨t
.lnum ||

946 
curwö
->
w_curs‹
.
cﬁ
 !
Ins°¨t
.col)));

947 
did_back•a˚
 = 
TRUE
;

949 
did_si
 = 
FALSE
;

950 
ˇn_si
 = 
FALSE
;

951 
ˇn_si_back
 = 
FALSE
;

952 i‡(
curwö
->
w_curs‹
.
cﬁ
 <= 1)

953 
did_ai
 = 
FALSE
;

959 
	`AµídCh¨ToRedobuff
(
c
);

960 
ªdøw
:

961 
√ed_ªdøw
 = 
TRUE
;

964 
	`Cål
('W'):

965 
mode
 = 
BACKSPACE_WORD
;

966 
dodñ
;

968 
	`Cål
('U'):

969 
mode
 = 
BACKSPACE_LINE
;

970 
dodñ
;

972 #ifde‡
USE_MOUSE


973 
K_LEFTMOUSE
:

974 
K_LEFTDRAG
:

975 
K_LEFTRELEASE
:

976 
K_MIDDLEMOUSE
:

977 
K_MIDDLEDRAG
:

978 
K_MIDDLERELEASE
:

979 
K_RIGHTMOUSE
:

980 
K_RIGHTDRAG
:

981 
K_RIGHTRELEASE
:

982 #ifde‡
USE_GUI


984 i‡(!
gui
.
ö_u£
)

986 i‡(!
	`mou£_has
(
MOUSE_INSERT
))

989 
	`undi•œy_dﬁœr
();

990 
ços
 = 
curwö
->
w_curs‹
;

991 i‡(
	`do_mou£
(
c
, 
BACKWARD
, 1L, 
FALSE
))

993 
	`°¨t_¨row
(&
ços
);

994 #ifde‡
CINDENT


995 
ˇn_cödít
 = 
TRUE
;

1001 
K_IGNORE
:

1005 #ifde‡
USE_GUI


1006 
K_SCROLLBAR
:

1007 
	`undi•œy_dﬁœr
();

1008 
ços
 = 
curwö
->
w_curs‹
;

1009 i‡(
	`gui_do_s¸ﬁl
())

1011 
	`°¨t_¨row
(&
ços
);

1012 #ifde‡
CINDENT


1013 
ˇn_cödít
 = 
TRUE
;

1018 
K_HORIZ_SCROLLBAR
:

1019 
	`undi•œy_dﬁœr
();

1020 
ços
 = 
curwö
->
w_curs‹
;

1021 i‡(
	`gui_do_h‹iz_s¸ﬁl
())

1023 
	`°¨t_¨row
(&
ços
);

1024 #ifde‡
CINDENT


1025 
ˇn_cödít
 = 
TRUE
;

1031 
K_LEFT
:

1032 
	`undi•œy_dﬁœr
();

1033 
ços
 = 
curwö
->
w_curs‹
;

1034 i‡(
	`⁄ñe·
(Ë=
OK
)

1036 
	`°¨t_¨row
(&
ços
);

1037 #ifde‡
RIGHTLEFT


1039 i‡(
ªvösscﬁ
 != -1 &&

1040 ()
curwö
->
w_curs‹
.
cﬁ
 >
ªvösscﬁ
)

1041 
ªvö¶egÆ
++;

1042 
ªvösch¨s
++;

1050 i‡(
	`vim_°rchr
(
p_ww
, '['Ë!
NULL
 &&

1051 
curwö
->
w_curs‹
.
 um
 > 1)

1053 
	`°¨t_¨row
(&
ços
);

1054 --(
curwö
->
w_curs‹
.
 um
);

1055 
	`cﬁadv™˚
(
MAXCOL
);

1056 
curwö
->
w_£t_cursw™t
 = 
TRUE
;

1059 
	`bìp_Êush
();

1062 
K_HOME
:

1063 
	`undi•œy_dﬁœr
();

1064 
ços
 = 
curwö
->
w_curs‹
;

1065 i‡((
mod_mask
 & 
MOD_MASK_CTRL
))

1066 
curwö
->
w_curs‹
.
 um
 = 1;

1067 
curwö
->
w_curs‹
.
cﬁ
 = 0;

1068 
curwö
->
w_cursw™t
 = 0;

1069 
	`°¨t_¨row
(&
ços
);

1072 
K_END
:

1073 
	`undi•œy_dﬁœr
();

1074 
ços
 = 
curwö
->
w_curs‹
;

1075 i‡((
mod_mask
 & 
MOD_MASK_CTRL
))

1076 
curwö
->
w_curs‹
.
 um
 = 
curbuf
->
b_ml
.
ml_löe_cou¡
;

1077 
	`cﬁadv™˚
(
MAXCOL
);

1078 
curwö
->
w_cursw™t
 = 
MAXCOL
;

1079 
	`°¨t_¨row
(&
ços
);

1082 
K_S_LEFT
:

1083 
	`undi•œy_dﬁœr
();

1084 i‡(
curwö
->
w_curs‹
.
 um
 > 1 || curwö->w_curs‹.
cﬁ
 > 0)

1086 
	`°¨t_¨row
(&
curwö
->
w_curs‹
);

1087 ()
	`bck_w‹d
(1L, 0, 
FALSE
);

1090 
	`bìp_Êush
();

1093 
K_RIGHT
:

1094 
	`undi•œy_dﬁœr
();

1095 i‡(
	`gch¨_curs‹
(Ë!
NUL
)

1097 
	`°¨t_¨row
(&
curwö
->
w_curs‹
);

1098 
curwö
->
w_£t_cursw™t
 = 
TRUE
;

1099 ++
curwö
->
w_curs‹
.
cﬁ
;

1100 #ifde‡
RIGHTLEFT


1101 
ªvö¶egÆ
++;

1102 i‡(
ªvösch¨s
)

1103 
ªvösch¨s
--;

1108 i‡(
	`vim_°rchr
(
p_ww
, ']'Ë!
NULL
 &&

1109 
curwö
->
w_curs‹
.
 um
 < 
curbuf
->
b_ml
.
ml_löe_cou¡
)

1111 
	`°¨t_¨row
(&
curwö
->
w_curs‹
);

1112 
curwö
->
w_£t_cursw™t
 = 
TRUE
;

1113 ++
curwö
->
w_curs‹
.
 um
;

1114 
curwö
->
w_curs‹
.
cﬁ
 = 0;

1117 
	`bìp_Êush
();

1120 
K_S_RIGHT
:

1121 
	`undi•œy_dﬁœr
();

1122 i‡(
curwö
->
w_curs‹
.
 um
 < 
curbuf
->
b_ml
.
ml_löe_cou¡
 ||

1123 
	`gch¨_curs‹
(Ë!
NUL
)

1125 
	`°¨t_¨row
(&
curwö
->
w_curs‹
);

1126 ()
	`fwd_w‹d
(1L, 0, 0);

1129 
	`bìp_Êush
();

1132 
K_UP
:

1133 
	`undi•œy_dﬁœr
();

1134 
ços
 = 
curwö
->
w_curs‹
;

1135 i‡(
	`curs‹_up
(1LË=
OK
)

1137 
	`°¨t_¨row
(&
ços
);

1138 #ifde‡
CINDENT


1139 
ˇn_cödít
 = 
TRUE
;

1143 
	`bìp_Êush
();

1146 
K_S_UP
:

1147 
K_PAGEUP
:

1148 
	`undi•œy_dﬁœr
();

1149 
ços
 = 
curwö
->
w_curs‹
;

1150 i‡(
	`⁄ïage
(
BACKWARD
, 1LË=
OK
)

1152 
	`°¨t_¨row
(&
ços
);

1153 #ifde‡
CINDENT


1154 
ˇn_cödít
 = 
TRUE
;

1158 
	`bìp_Êush
();

1161 
K_DOWN
:

1162 
	`undi•œy_dﬁœr
();

1163 
ços
 = 
curwö
->
w_curs‹
;

1164 i‡(
	`curs‹_down
(1LË=
OK
)

1166 
	`°¨t_¨row
(&
ços
);

1167 #ifde‡
CINDENT


1168 
ˇn_cödít
 = 
TRUE
;

1172 
	`bìp_Êush
();

1175 
K_S_DOWN
:

1176 
K_PAGEDOWN
:

1177 
	`undi•œy_dﬁœr
();

1178 
ços
 = 
curwö
->
w_curs‹
;

1179 i‡(
	`⁄ïage
(
FORWARD
, 1LË=
OK
)

1181 
	`°¨t_¨row
(&
ços
);

1182 #ifde‡
CINDENT


1183 
ˇn_cödít
 = 
TRUE
;

1187 
	`bìp_Êush
();

1190 
TAB
:

1191 #ifde‡
INSERT_EXPAND


1192 i‡(
˘æ_x_mode
 =
CTRL_X_PATH_PATTERNS
)

1193 
docom∂ëe
;

1196 i‡(
Ins°¨t_bœnk_vcﬁ
 =
MAXCOL
 &&

1197 
curwö
->
w_curs‹
.
 um
 =
Ins°¨t
.lnum)

1198 
Ins°¨t_bœnk_vcﬁ
 = 
curwö
->
w_vútcﬁ
;

1199 i‡(
	`echeck_abbr
(
TAB
 + 
ABBR_OFF
))

1201 
i
 = 
	`öödít
(0);

1202 #ifde‡
CINDENT


1203 i‡(
i
)

1204 
ˇn_cödít
 = 
FALSE
;

1206 i‡(!
curbuf
->
b_p_ë
 && !(
p_°a
 && 
i
))

1207 
n‹mÆch¨
;

1209 
	`°›_¨row
();

1210 
did_ai
 = 
FALSE
;

1211 
did_si
 = 
FALSE
;

1212 
ˇn_si
 = 
FALSE
;

1213 
ˇn_si_back
 = 
FALSE
;

1214 
	`AµídToRedobuff
((
ch¨_u
 *)"\t");

1216 i‡(
p_°a
 && 
i
)

1218 
	`ch™ge_ödít
(
INDENT_INC
, 0, 
p_§
);

1219 
ªdøw
;

1225 
ãmp
 = ()
curbuf
->
b_p_ts
;

1226 
ãmp
 -
curwö
->
w_vútcﬁ
 %Åemp;

1233 
	`ös_ch¨
(' ');

1234 --
ãmp
)

1236 
	`ös_°r
((
ch¨_u
 *)" ");

1237 i‡(
Sèã
 =
REPLACE
)

1238 
	`ª∂a˚_push
(
NUL
);

1240 
ªdøw
;

1242 
CR
:

1243 
NL
:

1244 i‡(
	`echeck_abbr
(
c
 + 
ABBR_OFF
))

1246 
	`°›_¨row
();

1247 i‡(
Sèã
 =
REPLACE
)

1248 
	`ª∂a˚_push
(
NUL
);

1249 #ifde‡
RIGHTLEFT


1252 i‡(
ªvös
)

1253 
	`gch¨_curs‹
(Ë!
NUL
)

1254 ++
curwö
->
w_curs‹
.
cﬁ
;

1257 
	`AµídToRedobuff
(
NL_STR
);

1258 i‡(
	`has_f‹m©_›ti⁄
(
FO_RET_COMS
))

1259 
fo_do_commíts
 = 
TRUE
;

1260 
i
 = 
	`O≥ncmd
(
FORWARD
, 
TRUE
, 
FALSE
);

1261 
fo_do_commíts
 = 
FALSE
;

1262 #ifde‡
CINDENT


1263 
ˇn_cödít
 = 
TRUE
;

1265 i‡(!
i
)

1266 
doESCkey
;

1269 #ifde‡
DIGRAPHS


1270 
	`Cål
('K'):

1271 #ifde‡
INSERT_EXPAND


1272 i‡(
˘æ_x_mode
 =
CTRL_X_DICTIONARY
)

1273 
docom∂ëe
;

1275 i‡(
NextS¸ìn
 !
NULL
)

1276 
	`s¸ìn_outch¨
('?', 
curwö
->
w_wöpos
 + curwö->
w_row
,

1277 #ifde‡
RIGHTLEFT


1278 
curwö
->
w_p_æ
 ? ()
Cﬁumns
 - 1 - curwö->
w_cﬁ
 :

1280 
curwö
->
w_cﬁ
);

1281 i‡(!
	`add_to_showcmd
(
c
, 
FALSE
))

1282 
	`£tcurs‹
();

1285 ++
no_m≠pög
;

1286 ++
Ælow_keys
;

1287 
c
 = 
	`vgëc
();

1288 --
no_m≠pög
;

1289 --
Ælow_keys
;

1290 i‡(
	`IS_SPECIAL
(
c
))

1292 
	`˛ór_showcmd
();

1293 
	`ö£π_•ecül
(
c
, 
TRUE
);

1294 
√ed_ªdøw
 = 
TRUE
;

1297 i‡(
c
 !
ESC
)

1299 i‡(
	`ch¨size
(
c
Ë=1 && 
NextS¸ìn
 !
NULL
)

1300 
	`s¸ìn_outch¨
(
c
, 
curwö
->
w_wöpos
 + curwö->
w_row
,

1301 #ifde‡
RIGHTLEFT


1302 
curwö
->
w_p_æ
 ? ()
Cﬁumns
 - 1 - curwö->
w_cﬁ
 :

1304 
curwö
->
w_cﬁ
);

1305 i‡(!
	`add_to_showcmd
(
c
, 
FALSE
))

1306 
	`£tcurs‹
();

1307 ++
no_m≠pög
;

1308 ++
Ælow_keys
;

1309 
cc
 = 
	`vgëc
();

1310 --
no_m≠pög
;

1311 --
Ælow_keys
;

1312 i‡(
cc
 !
ESC
)

1314 
	`AµídToRedobuff
((
ch¨_u
 *)"\026");

1315 
c
 = 
	`gëdigøph
(c, 
cc
, 
TRUE
);

1316 
	`˛ór_showcmd
();

1317 
n‹mÆch¨
;

1320 
	`˛ór_showcmd
();

1321 
√ed_ªdøw
 = 
TRUE
;

1324 #ifde‡
INSERT_EXPAND


1325 
	`Cål
('K'):

1326 i‡(
˘æ_x_mode
 !
CTRL_X_DICTIONARY
)

1327 
n‹mÆch¨
;

1328 
docom∂ëe
;

1332 #ifde‡
INSERT_EXPAND


1333 
	`Cål
(']'):

1334 i‡(
˘æ_x_mode
 !
CTRL_X_TAGS
)

1335 
n‹mÆch¨
;

1336 
docom∂ëe
;

1338 
	`Cål
('F'):

1339 i‡(
˘æ_x_mode
 !
CTRL_X_FILES
)

1340 
n‹mÆch¨
;

1341 
docom∂ëe
;

1343 
	`Cål
('L'):

1344 i‡(
˘æ_x_mode
 !
CTRL_X_WHOLE_LINE
)

1345 
n‹mÆch¨
;

1348 
	`Cål
('P'):

1349 
	`Cål
('N'):

1350 
docom∂ëe
:

1351 i‡(
c
 =
	`Cål
('P') || c == Ctrl('L'))

1352 
com∂ëe_dúe˘i⁄
 = 
BACKWARD
;

1354 
com∂ëe_dúe˘i⁄
 = 
FORWARD
;

1355 
quick_m
 = 
mesg
 = 
NULL
;

1356 i‡(!
°¨ãd_com∂ëi⁄
)

1361 
ßve_sm
 = 
p_sm
;

1362 
p_sm
 = 
FALSE
;

1364 i‡(
˘æ_x_mode
 == 0)

1366 
edô_submode
 = (
ch¨_u
 *)" Keyword completion (^P/^N)";

1367 
	`showmode
();

1369 
did_ai
 = 
FALSE
;

1370 
did_si
 = 
FALSE
;

1371 
ˇn_si
 = 
FALSE
;

1372 
ˇn_si_back
 = 
FALSE
;

1373 
	`°›_¨row
();

1374 
d⁄e_dú
 = 0;

1375 
fú°_m©ch_pos
 = 
curwö
->
w_curs‹
;

1376 
±r
 = 
tmp_±r
 = 
	`ml_gë
(
fú°_m©ch_pos
.
 um
);

1377 
com∂ëe_cﬁ
 = 
fú°_m©ch_pos
.
cﬁ
;

1378 
ãmp
 = ()
com∂ëe_cﬁ
 - 1;

1381 i‡(
˘æ_x_mode
 =0 || (˘æ_x_modê& 
CTRL_X_WANT_IDENT
))

1383 i‡(
ãmp
 < 0 || !
	`isw‹dch¨
(
±r
[temp]))

1386 
com∂ëe_∑t
 = 
	`°rßve
((
ch¨_u
 *)"\\<\\k\\k");

1387 i‡(
com∂ëe_∑t
 =
NULL
)

1389 
tmp_±r
 +
com∂ëe_cﬁ
;

1390 
ãmp
 = 0;

1394 
ãmp
 >0 && 
	`isw‹dch¨
(
±r
[temp]))

1395 
ãmp
--;

1396 
tmp_±r
 +++
ãmp
;

1397 i‡((
ãmp
 = ()
com∂ëe_cﬁ
 -Åemp) == 1)

1402 
	`•rötf
((*)
IObuff
, "\\<%c\\k", *
tmp_±r
);

1403 
com∂ëe_∑t
 = 
	`°rßve
(
IObuff
);

1404 i‡(
com∂ëe_∑t
 =
NULL
)

1409 
com∂ëe_∑t
 = 
	`Æloc
(
ãmp
 + 3);

1410 i‡(
com∂ëe_∑t
 =
NULL
)

1412 
	`•rötf
((*)
com∂ëe_∑t
, "\\<%.*s", 
ãmp
,

1413 
tmp_±r
);

1417 i‡(
˘æ_x_mode
 =
CTRL_X_WHOLE_LINE
)

1419 
tmp_±r
 = 
	`skùwhôe
(
±r
);

1420 
ãmp
 = ()
com∂ëe_cﬁ
 - (
tmp_±r
 - 
±r
);

1421 
com∂ëe_∑t
 = 
	`°∫ßve
(
tmp_±r
, 
ãmp
);

1422 i‡(
com∂ëe_∑t
 =
NULL
)

1425 i‡(
˘æ_x_mode
 =
CTRL_X_FILES
)

1427 
ãmp
 >0 && 
	`isfûech¨
(
±r
[temp]))

1428 
ãmp
--;

1429 
tmp_±r
 +++
ãmp
;

1430 
ãmp
 = ()
com∂ëe_cﬁ
 -Åemp;

1431 
com∂ëe_∑t
 = 
	`add°¨
(
tmp_±r
, 
ãmp
);

1432 i‡(
com∂ëe_∑t
 =
NULL
)

1435 
‹igöÆ_ãxt
 = 
	`°∫ßve
(
tmp_±r
, 
ãmp
);

1436 i‡(
‹igöÆ_ãxt
 =
NULL
)

1438 
	`vim_‰ì
(
com∂ëe_∑t
);

1439 
com∂ëe_∑t
 = 
NULL
;

1443 
com∂ëe_cﬁ
 = 
tmp_±r
 - 
±r
;

1444 
fú°_m©ch_pos
.
cﬁ
 -
ãmp
;

1447 i‡(
˘æ_x_mode
 == 0)

1448 
	`dec
(&
fú°_m©ch_pos
);

1450 
œ°_m©ch_pos
 = 
fú°_m©ch_pos
;

1453 i‡(
˘æ_x_mode
 =
CTRL_X_PATH_PATTERNS
 ||

1454 
˘æ_x_mode
 =
CTRL_X_PATH_DEFINES
)

1456 
°¨ãd_com∂ëi⁄
 = 
TRUE
;

1457 
	`föd_∑âîn_ö_∑th
(
com∂ëe_∑t
,

1458 ()
	`STRLEN
(
com∂ëe_∑t
), 
FALSE
, FALSE,

1459 (
˘æ_x_mode
 =
CTRL_X_PATH_DEFINES
Ë? 
FIND_DEFINE


1460 : 
FIND_ANY
, 1L, 
ACTION_EXPAND
,

1461 (
löír_t
)1, (löír_t)
MAXLNUM
);

1463 i‡(
	`make_cy˛ic
() > 1)

1465 
	`•rötf
((*)
IObuff
, "Thereáre %d matches",

1466 
	`cou¡_com∂ëi⁄s
());

1467 
mesg
 = 
IObuff
;

1470 i‡(
˘æ_x_mode
 =
CTRL_X_DICTIONARY
)

1472 
°¨ãd_com∂ëi⁄
 = 
TRUE
;

1473 i‡(*
p_di˘
 =
NUL
)

1474 
mesg
 = (
ch¨_u
 *)"'dictionary' option isÉmpty";

1477 
	`com∂ëe_di˘i⁄¨õs
(
com∂ëe_∑t
,

1478 
com∂ëe_dúe˘i⁄
);

1479 i‡(
	`make_cy˛ic
() > 1)

1481 
	`•rötf
((*)
IObuff
,

1483 
	`cou¡_com∂ëi⁄s
());

1484 
mesg
 = 
IObuff
;

1488 i‡(
˘æ_x_mode
 =
CTRL_X_TAGS
)

1490 
°¨ãd_com∂ëi⁄
 = 
TRUE
;

1492 
	`£t_ªg_ic
(
com∂ëe_∑t
);

1493 
¥og
 = 
	`vim_ªgcomp
(
com∂ëe_∑t
);

1494 i‡(
¥og
 !
NULL
 &&

1495 
	`föd_ègs
(
NULL
, 
¥og
, &
num_m©ches
, &
m©ches
, 
FALSE
)

1496 =
OK
 && 
num_m©ches
 > 0)

1498 
i
 = 0; i < 
num_m©ches
; i++)

1499 i‡(
	`add_com∂ëi⁄
(
m©ches
[
i
], -1, 
NULL
,

1500 
FORWARD
Ë=
RET_ERROR
)

1502 
	`FªeWûd
(
num_m©ches
, 
m©ches
);

1503 
	`vim_‰ì
(
¥og
);

1504 i‡(
	`make_cy˛ic
() > 1)

1506 
	`•rötf
((*)
IObuff
,

1508 
	`cou¡_com∂ëi⁄s
());

1509 
mesg
 = 
IObuff
;

1514 
	`vim_‰ì
(
¥og
);

1515 
	`vim_‰ì
(
com∂ëe_∑t
);

1516 
com∂ëe_∑t
 = 
NULL
;

1519 i‡(
˘æ_x_mode
 =
CTRL_X_FILES
)

1521 
°¨ãd_com∂ëi⁄
 = 
TRUE
;

1522 
ex∑nd_öãø˘ivñy
 = 
TRUE
;

1523 i‡(
	`Ex∑ndWûdC¨ds
(1, &
com∂ëe_∑t
, &
num_m©ches
,

1524 &
m©ches
, 
FALSE
, FALSEË=
OK
)

1526 
i
 = 0; i < 
num_m©ches
; i++)

1527 i‡(
	`add_com∂ëi⁄
(
m©ches
[
i
], -1, 
NULL
,

1528 
FORWARD
Ë=
RET_ERROR
)

1530 
	`FªeWûd
(
num_m©ches
, 
m©ches
);

1531 i‡(
	`make_cy˛ic
() > 1)

1533 
	`•rötf
((*)
IObuff
,

1535 
	`cou¡_com∂ëi⁄s
());

1536 
mesg
 = 
IObuff
;

1541 
	`vim_‰ì
(
com∂ëe_∑t
);

1542 
com∂ëe_∑t
 = 
NULL
;

1544 
ex∑nd_öãø˘ivñy
 = 
FALSE
;

1551 
curwö
->
w_curs‹
.
cﬁ
 > 
com∂ëe_cﬁ
)

1553 
curwö
->
w_curs‹
.
cﬁ
--;

1554 i‡(
Sèã
 =
REPLACE
)

1556 i‡((
cc
 = 
	`ª∂a˚_p›
()) > 0)

1557 
	`pch¨
(
curwö
->
w_curs‹
, 
cc
);

1560 
	`dñch¨
(
FALSE
);

1562 
com∂ëe_pos
 = 
NULL
;

1563 i‡(
°¨ãd_com∂ëi⁄
 && 
cuº_m©ch
 =
NULL
 &&

1564 (
p_ws
 || 
d⁄e_dú
 =
BOTH_DIRECTIONS
))

1565 
quick_m
 = 
e_∑äŸf
;

1566 i‡(
cuº_m©ch
 !
NULL
 && 
com∂ëe_dúe˘i⁄
 =
FORWARD
 &&

1567 
cuº_m©ch
->
√xt
 !
NULL
)

1568 
cuº_m©ch
 = cuº_m©ch->
√xt
;

1569 i‡(
cuº_m©ch
 !
NULL
 && 
com∂ëe_dúe˘i⁄
 =
BACKWARD
 &&

1570 
cuº_m©ch
->
¥ev
 !
NULL
)

1571 
cuº_m©ch
 = cuº_m©ch->
¥ev
;

1574 
com∂ëe_pos
 = (
com∂ëe_dúe˘i⁄
 =
FORWARD
) ?

1575 &
œ°_m©ch_pos
 : &
fú°_m©ch_pos
;

1579 
ßve_p_scs
 = 
p_scs
;

1580 i‡(
curbuf
->
b_p_öf
)

1581 
p_scs
 = 
FALSE
;

1584 i‡(
˘æ_x_mode
 =
CTRL_X_WHOLE_LINE
)

1585 
ãmp
 = 
	`£¨ch_f‹_exa˘_löe
(
com∂ëe_pos
,

1586 
com∂ëe_dúe˘i⁄
, 
com∂ëe_∑t
);

1588 
ãmp
 = 
	`£¨chô
(
com∂ëe_pos
, 
com∂ëe_dúe˘i⁄
,

1589 
com∂ëe_∑t
, 1L,

1590 
SEARCH_KEEP
 + 
SEARCH_NFMSG
, 
RE_LAST
);

1591 i‡(
ãmp
 =
FAIL
)

1593 i‡(!
p_ws
 && 
d⁄e_dú
 !-
com∂ëe_dúe˘i⁄
)

1599 
ãmp
 = 
OK
;

1600 
d⁄e_dú
 = 
com∂ëe_dúe˘i⁄
;

1602 i‡(!
p_ws
)

1603 
d⁄e_dú
 = 
BOTH_DIRECTIONS
;

1606 i‡(!
°¨ãd_com∂ëi⁄
)

1608 
°¨ãd_com∂ëi⁄
 = 
TRUE
;

1609 
fú°_m©ch_pos
 = *
com∂ëe_pos
;

1610 
œ°_m©ch_pos
 = *
com∂ëe_pos
;

1612 i‡(
fú°_m©ch_pos
.
 um
 =
œ°_m©ch_pos
.lnum &&

1613 
fú°_m©ch_pos
.
cﬁ
 =
œ°_m©ch_pos
.col)

1616 
ãmp
 = 
FAIL
;

1619 
±r
 = 
	`ml_gë_pos
(
com∂ëe_pos
);

1620 i‡(
˘æ_x_mode
 =
CTRL_X_WHOLE_LINE
)

1621 
ãmp
 = 
	`STRLEN
(
±r
);

1624 
tmp_±r
 = 
±r
;

1625 
ãmp
 = 0;

1626 *
tmp_±r
 !
NUL
 && 
	`isw‹dch¨
(*tmp_ptr++))

1627 
ãmp
++;

1629 i‡(
	`add_com∂ëi⁄_™d_ö„rˇ£
(
±r
, 
ãmp
, 
NULL
,

1630 
com∂ëe_dúe˘i⁄
Ë!
FAIL
)

1632 
ãmp
 = 
OK
;

1636 
p_scs
 = 
ßve_p_scs
;

1638 i‡(
com∂ëe_pos
 !
NULL
 && 
ãmp
 =
FAIL
)

1640 
tŸ
;

1642 
tŸ
 = 
	`cou¡_com∂ëi⁄s
();

1643 i‡(
cuº_m©ch
 !
NULL
)

1644 ()
	`make_cy˛ic
();

1645 i‡(
tŸ
 > 1)

1647 
	`•rötf
((*)
IObuff
,

1648 "AŒ %d m©che†havênow bì¿found", 
tŸ
);

1649 
mesg
 = 
IObuff
;

1651 i‡(
tŸ
 == 0)

1652 
quick_m
 = 
e_∑äŸf
;

1656 i‡(
gŸ_öt
)

1658 ()
	`vgëc
();

1659 
gŸ_öt
 = 
FALSE
;

1665 i‡(
cuº_m©ch
 !
NULL
)

1666 
±r
 = 
cuº_m©ch
->
°r
;

1668 
±r
 = 
‹igöÆ_ãxt
;

1670 i‡(
cuº_m©ch
 =
NULL
 || cuº_m©ch->
‹igöÆ
)

1672 
edô_submode_exåa
 = (
ch¨_u
 *)"Backát original";

1673 
edô_submode_highl
 = 
TRUE
;

1675 i‡(
fú°_m©ch
 !
NULL
 && fú°_m©ch->
√xt
 != NULL &&

1676 (
fú°_m©ch
->
√xt
 == first_match ||

1677 
fú°_m©ch
->
√xt
->
‹igöÆ
))

1679 
edô_submode_exåa
 = (
ch¨_u
 *)"(the only match)";

1680 
edô_submode_highl
 = 
FALSE
;

1687 i‡(
±r
 !
NULL
)

1688 *
±r
)

1689 
	`ös_ch¨
(*
±r
++);

1691 
°¨ãd_com∂ëi⁄
 = 
TRUE
;

1692 
√ed_ªdøw
 = 
TRUE
;

1693 ()
	`£t_highlight
('r');

1694 
msg_highlight
 = 
TRUE
;

1695 i‡(
mesg
 !
NULL
)

1697 
	`msg
(
mesg
);

1698 
	`mch_dñay
(1000L, 
FALSE
);

1700 i‡(
quick_m
 !
NULL
)

1701 
	`msg
(
quick_m
);

1702 i‡(
edô_submode_exåa
 !
NULL
)

1703 
	`showmode
();

1704 
edô_submode_exåa
 = 
NULL
;

1705 
msg_highlight
 = 
FALSE
;

1713 i‡(
cuº_m©ch
 !
NULL
 && cuº_m©ch->
‚ame
 != NULL &&

1714 (
˘æ_x_mode
 !
CTRL_X_DICTIONARY
 ||

1715 (
mesg
 =
NULL
 && 
quick_m
 == NULL)))

1717 
	`STRCPY
(
IObuff
, "match in file ");

1718 
i
 = (
	`°rsize
(
cuº_m©ch
->
‚ame
Ë+ 16Ë- 
sc_cﬁ
;

1719 i‡(
i
 <= 0)

1720 
i
 = 0;

1722 
	`STRCAT
(
IObuff
, "<");

1723 
	`STRCAT
(
IObuff
, 
cuº_m©ch
->
‚ame
 + 
i
);

1724 
	`msg
(
IObuff
);

1729 
	`Cål
('Y'):

1730 #ifde‡
INSERT_EXPAND


1731 i‡(
˘æ_x_mode
 =
CTRL_X_SCROLL
)

1733 
	`s¸ﬁldown_˛amp
();

1734 
	`upd©eS¸ìn
(
VALID
);

1738 
 um
 = 
curwö
->
w_curs‹
.lnum - 1;

1739 
c›ych¨
;

1741 
	`Cål
('E'):

1742 #ifde‡
INSERT_EXPAND


1743 i‡(
˘æ_x_mode
 =
CTRL_X_SCROLL
)

1745 
	`s¸ﬁlup_˛amp
();

1746 
	`upd©eS¸ìn
(
VALID
);

1750 
 um
 = 
curwö
->
w_curs‹
.lnum + 1;

1751 
c›ych¨
:

1752 i‡(
 um
 < 1 ||Ünum > 
curbuf
->
b_ml
.
ml_löe_cou¡
)

1754 
	`bìp_Êush
();

1759 
ãmp
 = 0;

1760 
±r
 = 
	`ml_gë
(
 um
);

1761 (
cﬁƒ_t
)
ãmp
 < 
curwö
->
w_vútcﬁ
 && *
±r
)

1762 
ãmp
 +
	`lbr_ch¨èbsize
(
±r
++, (
cﬁƒ_t
)temp);

1764 i‡((
cﬁƒ_t
)
ãmp
 > 
curwö
->
w_vútcﬁ
)

1765 --
±r
;

1766 i‡((
c
 = *
±r
Ë=
NUL
)

1768 
	`bìp_Êush
();

1774 
n‹mÆch¨
:

1778 i‡(((
did_si
 || 
ˇn_si_back
Ë&& 
c
 == '{') ||

1779 (
ˇn_si
 && 
c
 == '}'))

1781 
FPOS
 *
pos
, 
ﬁd_pos
;

1786 i‡(
c
 ='}' && (
pos
 = 
	`födm©ch
('{')Ë!
NULL
)

1788 
ﬁd_pos
 = 
curwö
->
w_curs‹
;

1797 
±r
 = 
	`ml_gë
(
pos
->
 um
);

1798 
i
 = 
pos
->
cﬁ
;

1799 i‡(
i
 > 0)

1800 --
i
 > 0 && 
	`vim_iswhôe
(
±r
[i]))

1802 
curwö
->
w_curs‹
.
 um
 = 
pos
->lnum;

1803 
curwö
->
w_curs‹
.
cﬁ
 = 
i
;

1804 i‡(
±r
[
i
] =')' && (
pos
 = 
	`födm©ch
('(')Ë!
NULL
)

1805 
curwö
->
w_curs‹
 = *
pos
;

1806 
i
 = 
	`gë_ödít
();

1807 
curwö
->
w_curs‹
 = 
ﬁd_pos
;

1808 
	`£t_ödít
(
i
, 
TRUE
);

1810 i‡(
curwö
->
w_curs‹
.
cﬁ
 > 0)

1816 
ãmp
 = 
TRUE
;

1817 i‡(
c
 ='{' && 
ˇn_si_back
 &&

1818 
curwö
->
w_curs‹
.
 um
 > 1)

1820 
ﬁd_pos
 = 
curwö
->
w_curs‹
;

1821 
i
 = 
	`gë_ödít
();

1822 
curwö
->
w_curs‹
.
 um
 > 1)

1824 
±r
 = 
	`skùwhôe
(

1825 
	`ml_gë
(--(
curwö
->
w_curs‹
.
 um
)));

1829 i‡(*
±r
 !'#' && *±∏!
NUL
)

1832 i‡(
	`gë_ödít
(Ë>
i
)

1833 
ãmp
 = 
FALSE
;

1834 
curwö
->
w_curs‹
 = 
ﬁd_pos
;

1836 i‡(
ãmp
)

1837 
	`shi·_löe
(
TRUE
, 
FALSE
, 1);

1841 i‡(
curwö
->
w_curs‹
.
cﬁ
 > 0 && 
ˇn_si
 && 
c
 == '#')

1844 
ﬁd_ödít
 = 
	`gë_ödít
();

1845 
	`£t_ödít
(0, 
TRUE
);

1848 i‡(
c
 == ' ')

1850 #ifde‡
CINDENT


1851 i‡(
	`öödít
(0))

1852 
ˇn_cödít
 = 
FALSE
;

1854 i‡(
Ins°¨t_bœnk_vcﬁ
 =
MAXCOL
 &&

1855 
curwö
->
w_curs‹
.
 um
 =
Ins°¨t
.lnum)

1856 
Ins°¨t_bœnk_vcﬁ
 = 
curwö
->
w_vútcﬁ
;

1859 i‡(
	`isw‹dch¨
(
c
Ë|| !
	`echeck_abbr
(c))

1861 
	`ö£π_•ecül
(
c
, 
FALSE
);

1862 
√ed_ªdøw
 = 
TRUE
;

1863 #ifde‡
RIGHTLEFT


1864 
ªvö¶egÆ
++;

1865 
ªvösch¨s
++;

1871 #ifde‡
CINDENT


1872 i‡(
curbuf
->
b_p_cö
 && 
ˇn_cödít


1873 #ifde‡
INSERT_EXPAND


1874 && !
˘æ_x_mode


1878 
f‹˚_cödít
:

1882 i‡(
	`ö_cökeys
(
c
, ' ', 
löe_is_whôe
))

1884 
	`°›_¨row
();

1887 
	`fixthi¶öe
(
gë_c_ödít
);

1890 
√ed_ªdøw
 = 
TRUE
;

1896 
	}
}

1907 
	$ch™ge_ödít
(
ty≥
, 
amou¡
, 
round
)

1908 
ty≥
;

1909 
amou¡
;

1910 
round
;

1912 
vcﬁ
;

1913 
œ°_vcﬁ
;

1914 
ös°¨t_Àss
;

1915 
√w_curs‹_cﬁ
;

1916 
i
;

1917 
ch¨_u
 *
±r
;

1918 
ßve_p_li°
;

1921 
ßve_p_li°
 = 
curwö
->
w_p_li°
;

1922 i‡(
ßve_p_li°
)

1924 
curwö
->
w_p_li°
 = 
FALSE
;

1925 
	`curs_cﬁumns
(
FALSE
);

1927 
vcﬁ
 = 
curwö
->
w_vútcﬁ
;

1930 
√w_curs‹_cﬁ
 = 
curwö
->
w_curs‹
.
cﬁ
;

1931 
	`begölöe
(
TRUE
);

1932 
√w_curs‹_cﬁ
 -
curwö
->
w_curs‹
.
cﬁ
;

1934 
ös°¨t_Àss
 = 
curwö
->
w_curs‹
.
cﬁ
;

1940 i‡(
√w_curs‹_cﬁ
 < 0)

1941 
vcﬁ
 = 
	`gë_ödít
() - vcol;

1946 i‡(
ty≥
 =
INDENT_SET
)

1947 
	`£t_ödít
(
amou¡
, 
TRUE
);

1949 
	`shi·_löe
(
ty≥
 =
INDENT_DEC
, 
round
, 1);

1950 
ös°¨t_Àss
 -
curwö
->
w_curs‹
.
cﬁ
;

1961 i‡(
√w_curs‹_cﬁ
 >= 0)

1962 
√w_curs‹_cﬁ
 +
curwö
->
w_curs‹
.
cﬁ
;

1963 i‡(!(
Sèã
 & 
INSERT
))

1964 
√w_curs‹_cﬁ
 = 
curwö
->
w_curs‹
.
cﬁ
;

1970 
vcﬁ
 = 
	`gë_ödít
() - vcol;

1971 
curwö
->
w_vútcﬁ
 = (
vcﬁ
 < 0) ? 0 : vcol;

1976 
vcﬁ
 = 
œ°_vcﬁ
 = 0;

1977 
√w_curs‹_cﬁ
 = -1;

1978 
±r
 = 
	`ml_gë_cuæöe
();

1979 
vcﬁ
 <()
curwö
->
w_vútcﬁ
)

1981 
œ°_vcﬁ
 = 
vcﬁ
;

1982 ++
√w_curs‹_cﬁ
;

1983 
vcﬁ
 +
	`lbr_ch¨èbsize
(
±r
 + 
√w_curs‹_cﬁ
, (
cﬁƒ_t
)vcol);

1985 
vcﬁ
 = 
œ°_vcﬁ
;

1991 i‡(
vcﬁ
 !()
curwö
->
w_vútcﬁ
)

1993 
curwö
->
w_curs‹
.
cﬁ
 = 
√w_curs‹_cﬁ
;

1994 
i
 = ()
curwö
->
w_vútcﬁ
 - 
vcﬁ
;

1995 
±r
 = 
	`Æloc
(
i
 + 1);

1996 i‡(
±r
 !
NULL
)

1998 
√w_curs‹_cﬁ
 +
i
;

1999 
±r
[
i
] = 
NUL
;

2000 --
i
 >= 0)

2001 
±r
[
i
] = ' ';

2002 
	`ös_°r
(
±r
);

2003 
	`vim_‰ì
(
±r
);

2011 
ös°¨t_Àss
 = 
Ins°¨t
.
cﬁ
;

2014 
curwö
->
w_p_li°
 = 
ßve_p_li°
;

2016 i‡(
√w_curs‹_cﬁ
 <= 0)

2017 
curwö
->
w_curs‹
.
cﬁ
 = 0;

2019 
curwö
->
w_curs‹
.
cﬁ
 = 
√w_curs‹_cﬁ
;

2020 
curwö
->
w_£t_cursw™t
 = 
TRUE
;

2025 i‡((
Sèã
 & 
INSERT
Ë&& 
curwö
->
w_curs‹
.
 um
 =
Ins°¨t
.lnum &&

2026 
Ins°¨t
.
cﬁ
 != 0)

2028 i‡(()
Ins°¨t
.
cﬁ
 <
ös°¨t_Àss
)

2029 
Ins°¨t
.
cﬁ
 = 0;

2031 
Ins°¨t
.
cﬁ
 -
ös°¨t_Àss
;

2033 
	}
}

2035 #ifde‡
INSERT_EXPAND


2041 
	$is_˘æ_x_key
(
c
)

2042 
c
;

2044 
˘æ_x_mode
)

2048 
CTRL_X_NOT_DEFINED_YET
:

2049 i‡(
c
 =
	`Cål
('X') || c == Ctrl('Y') || c == Ctrl('E') ||

2050 
c
 =
	`Cål
('L') || c == Ctrl('F') || c == Ctrl(']') ||

2051 
c
 =
	`Cål
('I') || c == Ctrl('D') || c == Ctrl('P') ||

2052 
c
 =
	`Cål
('N'))

2053  
TRUE
;

2055 
CTRL_X_SCROLL
:

2056 i‡(
c
 =
	`Cål
('Y') || c == Ctrl('E'))

2057  
TRUE
;

2059 
CTRL_X_WHOLE_LINE
:

2060 i‡(
c
 =
	`Cål
('L') || c == Ctrl('P') || c == Ctrl('N'))

2061  
TRUE
;

2063 
CTRL_X_FILES
:

2064 i‡(
c
 =
	`Cål
('F') || c == Ctrl('P') || c == Ctrl('N'))

2065  
TRUE
;

2067 
CTRL_X_DICTIONARY
:

2068 i‡(
c
 =
	`Cål
('K') || c == Ctrl('P') || c == Ctrl('N'))

2069  
TRUE
;

2071 
CTRL_X_TAGS
:

2072 i‡(
c
 =
	`Cål
(']') || c == Ctrl('P') || c == Ctrl('N'))

2073  
TRUE
;

2075 
CTRL_X_PATH_PATTERNS
:

2076 i‡(
c
 =
	`Cål
('P') || c == Ctrl('N'))

2077  
TRUE
;

2079 
CTRL_X_PATH_DEFINES
:

2080 i‡(
c
 =
	`Cål
('D') || c == Ctrl('P') || c == Ctrl('N'))

2081  
TRUE
;

2084 
	`emsg
(
e_öã∫Æ
);

2087  
FALSE
;

2088 
	}
}

2097 
	$add_com∂ëi⁄_™d_ö„rˇ£
(
°r
, 
Àn
, 
‚ame
, 
dú
)

2098 
ch¨_u
 *
°r
;

2099 
Àn
;

2100 
ch¨_u
 *
‚ame
;

2101 
dú
;

2103 
has_lowî
 = 
FALSE
;

2104 
was_Àâî
 = 
FALSE
;

2105 
‹ig_Àn
;

2106 
idx
;

2108 i‡(
p_ic
 && 
curbuf
->
b_p_öf
 && 
Àn
 < 
IOSIZE
)

2111 
‹ig_Àn
 = 
	`STRLEN
(
‹igöÆ_ãxt
);

2114 
	`STRNCPY
(
IObuff
, 
°r
, 
Àn
);

2115 
IObuff
[
Àn
] = 
NUL
;

2118 
idx
 = 0; idx < 
‹ig_Àn
; ++idx)

2120 i‡(
	`i¶owî
(
‹igöÆ_ãxt
[
idx
]))

2122 
has_lowî
 = 
TRUE
;

2123 i‡(
	`isuµî
(
IObuff
[
idx
]))

2126 
idx
 = 
‹ig_Àn
; idx < 
Àn
; ++idx)

2127 
IObuff
[
idx
] = 
	`TO_LOWER
(IObuff[idx]);

2137 i‡(!
has_lowî
)

2139 
idx
 = 0; idx < 
‹ig_Àn
; ++idx)

2141 i‡(
was_Àâî
 && 
	`isuµî
(
‹igöÆ_ãxt
[
idx
]) &&

2142 
	`i¶owî
(
IObuff
[
idx
]))

2145 
idx
 = 
‹ig_Àn
; idx < 
Àn
; ++idx)

2146 
IObuff
[
idx
] = 
	`TO_UPPER
(IObuff[idx]);

2149 
was_Àâî
 = 
	`ißÕha
(
‹igöÆ_ãxt
[
idx
]);

2154 
	`STRNCPY
(
IObuff
, 
‹igöÆ_ãxt
, 
‹ig_Àn
);

2156  
	`add_com∂ëi⁄
(
IObuff
, 
Àn
, 
‚ame
, 
dú
);

2158  
	`add_com∂ëi⁄
(
°r
, 
Àn
, 
‚ame
, 
dú
);

2159 
	}
}

2168 
	$add_com∂ëi⁄
(
°r
, 
Àn
, 
‚ame
, 
dú
)

2169 
ch¨_u
 *
°r
;

2170 
Àn
;

2171 
ch¨_u
 *
‚ame
;

2172 
dú
;

2174 
Com∂ëi⁄
 *
m©ch
;

2176 
	`mch_bªakcheck
();

2177 i‡(
gŸ_öt
)

2178  
RET_ERROR
;

2179 i‡(
Àn
 < 0)

2180 
Àn
 = 
	`STRLEN
(
°r
);

2185 i‡(
fú°_m©ch
 !
NULL
)

2187 
m©ch
 = 
fú°_m©ch
;

2190 i‡(
	`STRNCMP
(
m©ch
->
°r
, så, (
size_t
)
Àn
) == 0 &&

2191 
m©ch
->
°r
[
Àn
] =
NUL
)

2192  
FAIL
;

2193 
m©ch
 = m©ch->
√xt
;

2194 } 
m©ch
 !
NULL
 && m©ch !
fú°_m©ch
);

2201 
m©ch
 = (
Com∂ëi⁄
 *)
	`Æloc
(()(Completion));

2202 i‡(
m©ch
 =
NULL
)

2203  
RET_ERROR
;

2204 i‡((
m©ch
->
°r
 = 
	`°∫ßve
(°r, 
Àn
)Ë=
NULL
)

2206 
	`vim_‰ì
(
m©ch
);

2207  
RET_ERROR
;

2209 i‡(
‚ame
 !
NULL
)

2210 
m©ch
->
‚ame
 = 
	`°rßve
(fname);

2212 
m©ch
->
‚ame
 = 
NULL
;

2213 
m©ch
->
‹igöÆ
 = 
FALSE
;

2218 i‡(
fú°_m©ch
 =
NULL
)

2220 
fú°_m©ch
 = 
cuº_m©ch
 = 
m©ch
;

2221 
cuº_m©ch
->
√xt
 = cuº_m©ch->
¥ev
 = 
NULL
;

2225 i‡(
dú
 =
FORWARD
)

2227 
m©ch
->
√xt
 = 
NULL
;

2228 
m©ch
->
¥ev
 = 
cuº_m©ch
;

2229 
cuº_m©ch
->
√xt
 = 
m©ch
;

2230 
cuº_m©ch
 = 
m©ch
;

2234 
m©ch
->
¥ev
 = 
NULL
;

2235 
m©ch
->
√xt
 = 
cuº_m©ch
;

2236 
cuº_m©ch
->
¥ev
 = 
m©ch
;

2237 
fú°_m©ch
 = 
cuº_m©ch
 = 
m©ch
;

2241  
OK
;

2242 
	}
}

2249 
	$make_cy˛ic
()

2251 
Com∂ëi⁄
 *
m©ch
, *
‹ig
;

2252 
cou¡
 = 0;

2254 i‡(
fú°_m©ch
 !
NULL
)

2259 
m©ch
 = 
fú°_m©ch
;

2260 
cou¡
 = 1;

2261 
m©ch
->
√xt
 !
NULL
)

2263 
m©ch
 = m©ch->
√xt
;

2264 ++
cou¡
;

2267 i‡(
‹igöÆ_ãxt
 !
NULL
)

2274 
‹ig
 = (
Com∂ëi⁄
 *)
	`Æloc
(()(

2275 
Com∂ëi⁄
));

2276 i‡(
‹ig
 !
NULL
)

2278 i‡((
‹ig
->
°r
 = 
	`°rßve
(
‹igöÆ_ãxt
)Ë=
NULL
)

2279 
	`vim_‰ì
(
‹ig
);

2282 
‹ig
->
‚ame
 = 
NULL
;

2283 
‹ig
->
‹igöÆ
 = 
TRUE
;

2284 
‹ig
->
¥ev
 = 
m©ch
;

2285 
m©ch
->
√xt
 = 
‹ig
;

2286 
m©ch
 = 
‹ig
;

2287 
cuº_m©ch
 = 
‹ig
;

2291 
m©ch
->
√xt
 = 
fú°_m©ch
;

2292 
fú°_m©ch
->
¥ev
 = 
m©ch
;

2294  
cou¡
;

2295 
	}
}

2302 
	$com∂ëe_di˘i⁄¨õs
(
∑t
, 
dú
)

2303 
ch¨_u
 *
∑t
;

2304 
dú
;

2306 
Com∂ëi⁄
 *
ßve_cuº_m©ch
 = 
cuº_m©ch
;

2307 
ch¨_u
 *
di˘
 = 
p_di˘
;

2308 
ch¨_u
 *
±r
;

2309 
ch¨_u
 *
buf
;

2310 
ch¨_u
 *
‚ame
;

2311 
©_°¨t
;

2312 
FILE
 *
Â
;

2313 
ªgexp
 *
¥og
 = 
NULL
;

2315 i‡((
buf
 = 
	`Æloc
(
LSIZE
)Ë=
NULL
)

2317 i‡(
cuº_m©ch
 !
NULL
)

2319 
cuº_m©ch
->
√xt
 !
NULL
)

2320 
cuº_m©ch
 = cuº_m©ch->
√xt
;

2322 i‡(*
di˘
 !
NUL
)

2324 ()
	`£t_highlight
('r');

2325 
msg_highlight
 = 
TRUE
;

2326 
	`MSG
("Please wait, searching dictionaries");

2327 
	`£t_ªg_ic
(
∑t
);

2328 
ªg_magic
 = 
p_magic
;

2329 
¥og
 = 
	`vim_ªgcomp
(
∑t
);

2331 *
di˘
 !
NUL
 && 
¥og
 !
NULL
 && !
gŸ_öt
)

2334 ()
	`c›y_›ti⁄_∑π
(&
di˘
, 
buf
, 
LSIZE
, ",");

2336 
Â
 = 
	`f›í
((*)
buf
, "r");

2338 i‡(
Â
 !
NULL
)

2340 
‚ame
 = 
	`°rßve
(
buf
);

2345 !
gŸ_öt
 && !
	`vim_fgës
(
buf
, 
LSIZE
, 
Â
))

2347 
±r
 = 
buf
;

2348 
©_°¨t
 = 
TRUE
;

2349 
	`vim_ªgexec
(
¥og
, 
±r
, 
©_°¨t
))

2351 
©_°¨t
 = 
FALSE
;

2352 
±r
 = 
¥og
->
°¨ç
[0];

2353 
	`isw‹dch¨
(*
±r
))

2354 ++
±r
;

2355 i‡(
	`add_com∂ëi⁄_™d_ö„rˇ£
(
¥og
->
°¨ç
[0],

2356 ()(
±r
 - 
¥og
->
°¨ç
[0]), 
‚ame
, 
FORWARD
)

2357 =
RET_ERROR
)

2360 
	`löe_bªakcheck
();

2362 
	`f˛o£
(
Â
);

2363 
	`vim_‰ì
(
‚ame
);

2366 
	`vim_‰ì
(
¥og
);

2367 i‡(
ßve_cuº_m©ch
 !
NULL
)

2368 
cuº_m©ch
 = 
ßve_cuº_m©ch
;

2369 i‡(
dú
 =
BACKWARD
)

2370 
cuº_m©ch
 = 
fú°_m©ch
;

2371 
	`vim_‰ì
(
buf
);

2372 
	}
}

2378 
	$‰ì_com∂ëi⁄s
()

2380 
Com∂ëi⁄
 *
m©ch
;

2382 i‡(
fú°_m©ch
 =
NULL
)

2384 
cuº_m©ch
 = 
fú°_m©ch
;

2387 
m©ch
 = 
cuº_m©ch
;

2388 
cuº_m©ch
 = cuº_m©ch->
√xt
;

2389 
	`vim_‰ì
(
m©ch
->
°r
);

2390 
	`vim_‰ì
(
m©ch
->
‚ame
);

2391 
	`vim_‰ì
(
m©ch
);

2392 } 
cuº_m©ch
 !
NULL
 && cuº_m©ch !
fú°_m©ch
);

2393 
fú°_m©ch
 = 
cuº_m©ch
 = 
NULL
;

2394 
	}
}

2400 
	$cou¡_com∂ëi⁄s
()

2402 
Com∂ëi⁄
 *
m©ch
;

2403 
num
 = 0;

2405 i‡(
fú°_m©ch
 =
NULL
)

2407 
m©ch
 = 
fú°_m©ch
;

2410 i‡(!
m©ch
->
‹igöÆ
)

2411 
num
++;

2412 
m©ch
 = m©ch->
√xt
;

2413 } 
m©ch
 !
NULL
 && m©ch !
fú°_m©ch
);

2414  
num
;

2415 
	}
}

2424 
	$gë_lôîÆ
()

2426 
cc
;

2427 
nc
;

2428 
i
;

2430 i‡(
gŸ_öt
)

2431  
	`Cål
('C');

2433 #ifde‡
USE_GUI


2440 i‡(
gui
.
ö_u£
)

2441 ++
Ælow_keys
;

2443 ++
no_m≠pög
;

2444 
cc
 = 0;

2445 
i
 = 0; i < 3; ++i)

2448 
nc
 = 
	`vgëc
();

2449 
nc
 =
K_IGNORE
 ||Ç¯=
K_SCROLLBAR
 ||Ç¯=
K_HORIZ_SCROLLBAR
);

2450 i‡(!(
Sèã
 & 
CMDLINE
))

2451 
	`add_to_showcmd
(
nc
, 
FALSE
);

2452 i‡(
	`IS_SPECIAL
(
nc
Ë|| !
	`isdigô
(nc))

2454 
cc
 = c¯* 10 + 
nc
 - '0';

2455 i‡(
cc
 > 255)

2456 
cc
 = 255;

2457 
nc
 = 0;

2459 i‡(
i
 == 0)

2461 i‡(
nc
 =
K_ZERO
)

2463 
cc
 = '\n';

2464 
nc
 = 0;

2468 
cc
 = 
nc
;

2469 
nc
 = 0;

2473 i‡(
cc
 == 0)

2474 
cc
 = '\n';

2476 --
no_m≠pög
;

2477 #ifde‡
USE_GUI


2478 i‡(
gui
.
ö_u£
)

2479 --
Ælow_keys
;

2481 i‡(
nc
)

2482 
	`vungëc
(
nc
);

2483 
gŸ_öt
 = 
FALSE
;

2484  
cc
;

2485 
	}
}

2491 
	$ö£π_•ecül
(
c
, 
Ælow_modmask
)

2492 
c
;

2493 
Ælow_modmask
;

2495 
ch¨_u
 *
p
;

2496 
Àn
;

2505 i‡(
	`IS_SPECIAL
(
c
Ë|| (
mod_mask
 && 
Ælow_modmask
))

2507 
p
 = 
	`gë_•ecül_key_«me
(
c
, 
mod_mask
);

2508 
Àn
 = 
	`STRLEN
(
p
);

2509 
c
 = 
p
[
Àn
 - 1];

2510 i‡(
Àn
 > 2)

2512 
p
[
Àn
 - 1] = 
NUL
;

2513 
	`ös_°r
(
p
);

2514 
	`AµídToRedobuff
(
p
);

2517 
	`ö£πch¨
(
c
, 
FALSE
, -1);

2518 
	}
}

2528 
	#ISSPECIAL
(
c
Ë((cË< ' ' || (cË>
DEL
)

	)

2531 
	$ö£πch¨
(
c
, 
f‹˚_f‹m©tög
, 
£c⁄d_ödít
)

2532 
c
;

2533 
f‹˚_f‹m©tög
;

2534 
£c⁄d_ödít
;

2536 
havëo_ªdøw
 = 
FALSE
;

2537 
ãxtwidth
;

2538 
cﬁƒ_t
 
Àadî_Àn
;

2539 
fú°_löe
 = 
TRUE
;

2540 
fo_ös_bœnk
;

2541 
ßve_ch¨
 = 
NUL
;

2543 
	`°›_¨row
();

2552 
ãxtwidth
 = 
curbuf
->
b_p_tw
;

2553 i‡(
ãxtwidth
 =0 && 
curbuf
->
b_p_wm
)

2554 
ãxtwidth
 = 
Cﬁumns
 - 
curbuf
->
b_p_wm
;

2555 i‡(
ãxtwidth
 < 0)

2556 
ãxtwidth
 = 0;

2557 i‡(
f‹˚_f‹m©tög
 && 
ãxtwidth
 == 0)

2559 
ãxtwidth
 = 
Cﬁumns
 - 1;

2560 i‡(
ãxtwidth
 > 79)

2561 
ãxtwidth
 = 79;

2564 
fo_ös_bœnk
 = 
	`has_f‹m©_›ti⁄
(
FO_INS_BLANK
);

2578 i‡(
f‹˚_f‹m©tög
 || (!
	`vim_iswhôe
(
c
) &&

2579 !(
Sèã
 =
REPLACE
 && *
	`ml_gë_curs‹
(Ë!
NUL
) &&

2580 (
curwö
->
w_curs‹
.
 um
 !
Ins°¨t
.lnum ||

2581 ((!
	`has_f‹m©_›ti⁄
(
FO_INS_LONG
) ||

2582 
Ins°¨t_ãxéí
 <(
cﬁƒ_t
)
ãxtwidth
) &&

2583 (!
fo_ös_bœnk
 || 
Ins°¨t_bœnk_vcﬁ
 <(
cﬁƒ_t
)
ãxtwidth
)))))

2589 i‡(!
curbuf
->
b_p_ai
 && 
	`vim_iswhôe
(
	`gch¨_curs‹
()))

2591 
ßve_ch¨
 = 
	`gch¨_curs‹
();

2592 
	`pch¨_curs‹
('x');

2594 
ãxtwidth
 && 
curwö
->
w_vútcﬁ
 >(
cﬁƒ_t
)textwidth)

2596 
°¨tcﬁ
;

2597 
w™tcﬁ
;

2598 
foundcﬁ
;

2599 
íd_foundcﬁ
 = 0;

2600 
cﬁƒ_t
 
Àn
;

2602 i‡(!
f‹˚_f‹m©tög
 && 
	`has_f‹m©_›ti⁄
(
FO_WRAP_COMS
))

2603 
fo_do_commíts
 = 
TRUE
;

2606 
Àadî_Àn
 = 
	`gë_Àadî_Àn
(
	`ml_gë_cuæöe
(), 
NULL
);

2607 i‡(!
f‹˚_f‹m©tög
 && 
Àadî_Àn
 == 0 &&

2608 !
	`has_f‹m©_›ti⁄
(
FO_WRAP
))

2611 
ãxtwidth
 = 0;

2614 i‡((
°¨tcﬁ
 = 
curwö
->
w_curs‹
.
cﬁ
) == 0)

2617 
	`cﬁadv™˚
((
cﬁƒ_t
)
ãxtwidth
);

2618 
w™tcﬁ
 = 
curwö
->
w_curs‹
.
cﬁ
;

2620 
curwö
->
w_curs‹
.
cﬁ
 = 
°¨tcﬁ
 - 1;

2621 
foundcﬁ
 = 0;

2627 
curwö
->
w_curs‹
.
cﬁ
 > 0 &&

2628 ((!
fo_ös_bœnk
 && !
	`has_f‹m©_›ti⁄
(
FO_INS_VI
)) ||

2629 
curwö
->
w_curs‹
.
 um
 !
Ins°¨t
.lnum ||

2630 
curwö
->
w_curs‹
.
cﬁ
 >
Ins°¨t
.col))

2632 i‡(
	`vim_iswhôe
(
	`gch¨_curs‹
()))

2635 
íd_foundcﬁ
 = 
curwö
->
w_curs‹
.
cﬁ
;

2636 
curwö
->
w_curs‹
.
cﬁ
 > 0 &&

2637 
	`vim_iswhôe
(
	`gch¨_curs‹
()))

2638 --
curwö
->
w_curs‹
.
cﬁ
;

2639 i‡(
curwö
->
w_curs‹
.
cﬁ
 == 0 &&

2640 
	`vim_iswhôe
(
	`gch¨_curs‹
()))

2643 i‡(
curwö
->
w_curs‹
.
cﬁ
 < 
Àadî_Àn
)

2645 
foundcﬁ
 = 
curwö
->
w_curs‹
.
cﬁ
 + 1;

2646 i‡(
curwö
->
w_curs‹
.
cﬁ
 < (
cﬁƒ_t
)
w™tcﬁ
)

2649 --
curwö
->
w_curs‹
.
cﬁ
;

2652 i‡(
foundcﬁ
 == 0)

2654 
curwö
->
w_curs‹
.
cﬁ
 = 
°¨tcﬁ
;

2662 
ª∂a˚_off£t
 = 
°¨tcﬁ
 - 
íd_foundcﬁ
 - 1;

2668 
curwö
->
w_curs‹
.
cﬁ
 = 
foundcﬁ
;

2669 
	`vim_iswhôe
(
	`gch¨_curs‹
()))

2671 ++
curwö
->
w_curs‹
.
cﬁ
;

2672 --
°¨tcﬁ
;

2674 
°¨tcﬁ
 -
foundcﬁ
;

2675 i‡(
°¨tcﬁ
 < 0)

2676 
°¨tcﬁ
 = 0;

2679 
curwö
->
w_curs‹
.
cﬁ
 = 
foundcﬁ
;

2681 
	`O≥ncmd
(
FORWARD
, 
FALSE
, 
TRUE
);

2683 
ª∂a˚_off£t
 = 0;

2684 i‡(
£c⁄d_ödít
 >0 && 
fú°_löe
)

2685 
	`£t_ödít
(
£c⁄d_ödít
, 
TRUE
);

2686 
fú°_löe
 = 
FALSE
;

2692 
curwö
->
w_curs‹
.
cﬁ
 +
°¨tcﬁ
;

2693 
Àn
 = 
	`STRLEN
(
	`ml_gë_cuæöe
());

2694 i‡(
curwö
->
w_curs‹
.
cﬁ
 > 
Àn
)

2695 
curwö
->
w_curs‹
.
cﬁ
 = 
Àn
;

2697 
	`curs_cﬁumns
(
FALSE
);

2698 
havëo_ªdøw
 = 
TRUE
;

2699 #ifde‡
CINDENT


2700 
ˇn_cödít
 = 
TRUE
;

2704 i‡(
ßve_ch¨
)

2705 
	`pch¨_curs‹
(
ßve_ch¨
);

2707 i‡(
c
 =
NUL
)

2709 
fo_do_commíts
 = 
FALSE
;

2710 i‡(
havëo_ªdøw
)

2716 i‡(
curwö
->
w_curs‹
.
 um
 =curwö->
w_bŸlöe
 &&

2717 !
curwö
->
w_em±y_rows
)

2718 
	`wö_dñ_löes
(
curwö
, 0, 1, 
TRUE
, TRUE);

2719 
	`upd©eS¸ìn
(
CURSUPD
);

2722 i‡(
c
 =
NUL
)

2725 
did_ai
 = 
FALSE
;

2726 
did_si
 = 
FALSE
;

2727 
ˇn_si
 = 
FALSE
;

2728 
ˇn_si_back
 = 
FALSE
;

2734 
	#INPUT_BUFLEN
 100

	)

2735 i‡(!
	`ISSPECIAL
(
c
Ë&& 
	`v≥ekc
(Ë!
NUL
 && 
Sèã
 !
REPLACE


2736 #ifde‡
RIGHTLEFT


2737 && !
p_ri


2741 
ch¨_u
 
p
[
INPUT_BUFLEN
 + 1];

2742 
i
;

2744 
p
[0] = 
c
;

2745 
i
 = 1;

2746 (
c
 = 
	`v≥ekc
()Ë!
NUL
 && !
	`ISSPECIAL
(cË&& 
i
 < 
INPUT_BUFLEN
 &&

2747 (
ãxtwidth
 == 0 ||

2748 (
curwö
->
w_vútcﬁ
 +
	`ch¨size
(
p
[
i
 - 1])Ë< (
cﬁƒ_t
)
ãxtwidth
) &&

2749 !(!
no_abbr
 && !
	`isw‹dch¨
(
c
Ë&& isw‹dch¨(
p
[
i
 - 1])))

2751 #ifde‡
RIGHTLEFT


2752 
c
 = 
	`vgëc
();

2753 i‡(
p_hkm≠
 && 
KeyTy≥d
)

2754 
c
 = 
	`hkm≠
(c);

2755 
p
[
i
++] = 
c
;

2757 
p
[
i
++] = 
	`vgëc
();

2761 #ifde‡
DIGRAPHS


2762 
	`do_digøph
(-1);

2763 
	`do_digøph
(
p
[
i
-1]);

2765 
p
[
i
] = '\0';

2766 
	`ös_°r
(
p
);

2767 
	`AµídToRedobuff
(
p
);

2771 
	`ös_ch¨
(
c
);

2772 
	`AµídCh¨ToRedobuff
(
c
);

2774 
	}
}

2781 
	$°¨t_¨row
(
íd_ö£π_pos
)

2782 
FPOS
 *
íd_ö£π_pos
;

2784 i‡(!
¨row_u£d
)

2786 
	`AµídToRedobuff
(
ESC_STR
);

2787 
¨row_u£d
 = 
TRUE
;

2788 
	`°›_ö£π
(
íd_ö£π_pos
);

2790 
	}
}

2797 
	$°›_¨row
()

2799 i‡(
¨row_u£d
)

2801 ()
	`u_ßve_curs‹
();

2802 
Ins°¨t
 = 
curwö
->
w_curs‹
;

2803 
Ins°¨t_ãxéí
 = 
	`löëabsize
(
	`ml_gë_cuæöe
());

2804 
	`Re£tRedobuff
();

2805 
	`AµídToRedobuff
((
ch¨_u
 *)"1i");

2806 
¨row_u£d
 = 
FALSE
;

2808 
	}
}

2814 
	$°›_ö£π
(
íd_ö£π_pos
)

2815 
FPOS
 *
íd_ö£π_pos
;

2817 
	`°›_ªdo_ös
();

2822 
	`vim_‰ì
(
œ°_ö£π
);

2823 
œ°_ö£π
 = 
	`gë_ö£πed
();

2824 
œ°_ö£π_skù
 = 
√w_ö£π_skù
;

2830 i‡(
did_ai
 && !
¨row_u£d
)

2832 i‡(
	`gch¨_curs‹
(Ë=
NUL
 && 
curwö
->
w_curs‹
.
cﬁ
 > 0)

2833 --
curwö
->
w_curs‹
.
cﬁ
;

2834 
	`vim_iswhôe
(
	`gch¨_curs‹
()))

2835 
	`dñch¨
(
TRUE
);

2836 i‡(
	`gch¨_curs‹
(Ë!
NUL
)

2837 ++
curwö
->
w_curs‹
.
cﬁ
;

2838 i‡(
curwö
->
w_p_li°
)

2840 
	`upd©ñöe
();

2842 
did_ai
 = 
FALSE
;

2843 
did_si
 = 
FALSE
;

2844 
ˇn_si
 = 
FALSE
;

2845 
ˇn_si_back
 = 
FALSE
;

2848 
curbuf
->
b_›_°¨t
 = 
Ins°¨t
;

2849 
curbuf
->
b_›_íd
 = *
íd_ö£π_pos
;

2850 
	}
}

2857 
	$£t_œ°_ö£π
(
c
)

2858 
c
;

2860 
	`vim_‰ì
(
œ°_ö£π
);

2861 
œ°_ö£π
 = 
	`Æloc
(4);

2862 i‡(
œ°_ö£π
 !
NULL
)

2864 
œ°_ö£π
[0] = 
	`Cål
('V');

2865 
œ°_ö£π
[1] = 
c
;

2866 
œ°_ö£π
[2] = 
ESC
;

2867 
œ°_ö£π
[3] = 
NUL
;

2869 
œ°_ö£π_skù
 = 
	`isdigô
(
c
) ? 1 : 0;

2871 
	}
}

2880 
	$begölöe
(
Êag
)

2881 
Êag
;

2883 i‡(
Êag
 =
MAYBE
 && !
p_sﬁ
)

2884 
	`cﬁadv™˚
(
curwö
->
w_cursw™t
);

2887 
curwö
->
w_curs‹
.
cﬁ
 = 0;

2888 i‡(
Êag
)

2890 
ch¨_u
 *
±r
;

2892 
±r
 = 
	`ml_gë_cuæöe
(); 
	`vim_iswhôe
(*ptr); ++ptr)

2893 ++
curwö
->
w_curs‹
.
cﬁ
;

2895 
curwö
->
w_£t_cursw™t
 = 
TRUE
;

2897 
	}
}

2907 
	$⁄îight
()

2909 
ch¨_u
 *
±r
;

2911 
±r
 = 
	`ml_gë_curs‹
();

2912 i‡(*
±r
++ =
NUL
 || *ptr == NUL)

2913  
FAIL
;

2914 
curwö
->
w_£t_cursw™t
 = 
TRUE
;

2915 ++
curwö
->
w_curs‹
.
cﬁ
;

2916  
OK
;

2917 
	}
}

2920 
	$⁄ñe·
()

2922 i‡(
curwö
->
w_curs‹
.
cﬁ
 == 0)

2923  
FAIL
;

2924 
curwö
->
w_£t_cursw™t
 = 
TRUE
;

2925 --
curwö
->
w_curs‹
.
cﬁ
;

2926  
OK
;

2927 
	}
}

2930 
	$curs‹_up
(
n
)

2931 
n
;

2933 i‡(
n
 !0 && 
curwö
->
w_curs‹
.
 um
 == 1)

2934  
FAIL
;

2935 i‡(
n
 >
curwö
->
w_curs‹
.
 um
)

2936 
curwö
->
w_curs‹
.
 um
 = 1;

2938 
curwö
->
w_curs‹
.
 um
 -
n
;

2941 
	`cﬁadv™˚
(
curwö
->
w_cursw™t
);

2943 i‡(
›_ty≥
 =
NOP
)

2944 
	`cursupd©e
();

2946  
OK
;

2947 
	}
}

2950 
	$curs‹_down
(
n
)

2951 
n
;

2953 i‡(
n
 !0 && 
curwö
->
w_curs‹
.
 um
 =
curbuf
->
b_ml
.
ml_löe_cou¡
)

2954  
FAIL
;

2955 
curwö
->
w_curs‹
.
 um
 +
n
;

2956 i‡(
curwö
->
w_curs‹
.
 um
 > 
curbuf
->
b_ml
.
ml_löe_cou¡
)

2957 
curwö
->
w_curs‹
.
 um
 = 
curbuf
->
b_ml
.
ml_löe_cou¡
;

2960 
	`cﬁadv™˚
(
curwö
->
w_cursw™t
);

2962 i‡(
›_ty≥
 =
NOP
)

2963 
	`cursupd©e
();

2965  
OK
;

2966 
	}
}

2979 
	$s¸ìngo
(
dú
, 
di°
)

2980 
dú
;

2981 
di°
;

2983 
löñí
 = 
	`löëabsize
(
	`ml_gë_cuæöe
());

2984 
ªtvÆ
 = 
OK
;

2985 
©íd
 = 
FALSE
;

2986 
n
;

2988 
›_mŸi⁄_ty≥
 = 
MCHAR
;

2989 
›_ö˛usive
 = 
FALSE
;

2995 i‡(
curwö
->
w_cursw™t
 =
MAXCOL
)

2997 
©íd
 = 
TRUE
;

2998 
curwö
->
w_cursw™t
 = ((curwö->
w_vútcﬁ
 +

2999 (
curwö
->
w_p_nu
 ? 8 : 0)Ë/ 
Cﬁumns
 + 1) * Columns - 1;

3000 i‡(
curwö
->
w_p_nu
 && curwö->
w_cursw™t
 > 8)

3001 
curwö
->
w_cursw™t
 -= 8;

3004 
curwö
->
w_cursw™t
 >(
cﬁƒ_t
)(
löñí
 + 
Cﬁumns
))

3005 
curwö
->
w_cursw™t
 -
Cﬁumns
;

3007 
di°
--)

3009 i‡(
dú
 =
BACKWARD
)

3012 i‡(()
curwö
->
w_cursw™t
 >
Cﬁumns
)

3013 
curwö
->
w_cursw™t
 -
Cﬁumns
;

3016 i‡(
curwö
->
w_curs‹
.
 um
 == 1)

3018 
ªtvÆ
 = 
FAIL
;

3021 --
curwö
->
w_curs‹
.
 um
;

3022 
löñí
 = 
	`löëabsize
(
	`ml_gë_cuæöe
());

3023 
n
 = ((
löñí
 + (
curwö
->
w_p_nu
 ? 8 : 0Ë- 1Ë/ 
Cﬁumns
)

3024 * 
Cﬁumns
;

3025 i‡(
curwö
->
w_p_nu
 &&

3026 ()
curwö
->
w_cursw™t
 >
Cﬁumns
 - 8 && 
n
)

3027 
n
 -
Cﬁumns
;

3028 
curwö
->
w_cursw™t
 +
n
;

3033 
n
 = ((
löñí
 + (
curwö
->
w_p_nu
 ? 8 : 0Ë- 1Ë/ 
Cﬁumns
) * Columns;

3034 i‡(
curwö
->
w_p_nu
 && 
n
 > 8)

3035 
n
 -= 8;

3037 i‡(
curwö
->
w_cursw™t
 < (
cﬁƒ_t
)
n
)

3038 
curwö
->
w_cursw™t
 +
Cﬁumns
;

3041 i‡(
curwö
->
w_curs‹
.
 um
 =
curbuf
->
b_ml
.
ml_löe_cou¡
)

3043 
ªtvÆ
 = 
FAIL
;

3046 
curwö
->
w_curs‹
.
 um
++;

3047 
löñí
 = 
	`löëabsize
(
	`ml_gë_cuæöe
());

3048 
curwö
->
w_cursw™t
 %
Cﬁumns
;

3052 
	`cﬁadv™˚
(
curwö
->
w_cursw™t
);

3053 i‡(
©íd
)

3054 
curwö
->
w_cursw™t
 = 
MAXCOL
;

3055 i‡(
›_ty≥
 =
NOP
)

3056 
	`cursupd©e
();

3057  
ªtvÆ
;

3058 
	}
}

3066 
	$⁄ïage
(
dú
, 
cou¡
)

3067 
dú
;

3068 
cou¡
;

3070 
löír_t
 
Õ
;

3071 
n
;

3072 
off
;

3074 i‡(
curbuf
->
b_ml
.
ml_löe_cou¡
 == 1)

3075  
FAIL
;

3076  ; 
cou¡
 > 0; --count)

3078 i‡(
dú
 =
FORWARD
 ? (
curwö
->
w_t›löe
 >=

3079 
curbuf
->
b_ml
.
ml_löe_cou¡
 - 1Ë: (
curwö
->
w_t›löe
 == 1))

3081 
	`bìp_Êush
();

3082  
FAIL
;

3084 i‡(
dú
 =
FORWARD
)

3087 i‡(
curwö
->
w_bŸlöe
 > 
curbuf
->
b_ml
.
ml_löe_cou¡
)

3088 
curwö
->
w_t›löe
 = 
curbuf
->
b_ml
.
ml_löe_cou¡
;

3093 i‡(
	`∂öes
(
curwö
->
w_bŸlöe
Ë>curwö->
w_height
 - 2 ||

3094 
curwö
->
w_bŸlöe
 - curwö->
w_t›löe
 <= 3)

3095 
off
 = 0;

3097 
off
 = 2;

3098 
curwö
->
w_t›löe
 = curwö->
w_bŸlöe
 - 
off
;

3099 
curwö
->
w_curs‹
.
 um
 = curwö->
w_t›löe
;

3101 
	`comp_BŸlöe
(
curwö
);

3105 
Õ
 = 
curwö
->
w_t›löe
;

3110 i‡((
n
 = 
	`∂öes
(
Õ
)Ë> 
curwö
->
w_height
 / 2)

3111 --
Õ
;

3112 i‡(
Õ
 < 
curbuf
->
b_ml
.
ml_löe_cou¡
 &&

3113 
n
 + 
	`∂öes
(
Õ
 + 1Ë< 
curwö
->
w_height
 / 2)

3114 ++
Õ
;

3115 
curwö
->
w_curs‹
.
 um
 = 
Õ
;

3116 
n
 = 0;

3117 
n
 <
curwö
->
w_height
 && 
Õ
 >= 1)

3119 
n
 +
	`∂öes
(
Õ
);

3120 --
Õ
;

3122 i‡(
n
 <
curwö
->
w_height
)

3124 
curwö
->
w_t›löe
 = 1;

3125 
	`comp_BŸlöe
(
curwö
);

3127 i‡(
Õ
 >
curwö
->
w_t›löe
 - 2)

3129 --
curwö
->
w_t›löe
;

3130 
	`comp_BŸlöe
(
curwö
);

3131 
curwö
->
w_curs‹
.
 um
 = curwö->
w_bŸlöe
 - 1;

3135 
curwö
->
w_t›löe
 = 
Õ
 + 2;

3136 
	`comp_BŸlöe
(
curwö
);

3140 
	`curs‹_c‹ª˘
();

3141 
	`begölöe
(
MAYBE
);

3142 
	`upd©eS¸ìn
(
VALID
);

3143  
OK
;

3144 
	}
}

3149 
	$hÆÂage
(
Êag
, 
Pªnum
)

3150 
Êag
;

3151 
löír_t
 
Pªnum
;

3153 
s¸ﬁÀd
 = 0;

3154 
i
;

3155 
n
;

3157 i‡(
Pªnum
)

3158 
curwö
->
w_p_s¸ﬁl
 = (
Pªnum
 > curwö->
w_height
) ?

3159 
curwö
->
w_height
 : 
Pªnum
;

3160 
n
 = (
curwö
->
w_p_s¸ﬁl
 <curwö->
w_height
) ?

3161 
curwö
->
w_p_s¸ﬁl
 : curwö->
w_height
;

3163 i‡(
Êag
)

3165 
n
 > 0 && 
curwö
->
w_bŸlöe
 <
curbuf
->
b_ml
.
ml_löe_cou¡
)

3167 
i
 = 
	`∂öes
(
curwö
->
w_t›löe
);

3168 
n
 -
i
;

3169 i‡(
n
 < 0 && 
s¸ﬁÀd
)

3171 
s¸ﬁÀd
 +
i
;

3172 ++
curwö
->
w_t›löe
;

3173 
	`comp_BŸlöe
(
curwö
);

3174 #i‚de‡
KEEP_SCREEN_LINE


3175 i‡(
curwö
->
w_curs‹
.
 um
 < 
curbuf
->
b_ml
.
ml_löe_cou¡
)

3176 ++
curwö
->
w_curs‹
.
 um
;

3179 #i‚de‡
KEEP_SCREEN_LINE


3183 i‡(
n
 > 0)

3185 
curwö
->
w_curs‹
.
 um
 +
n
;

3186 i‡(
curwö
->
w_curs‹
.
 um
 > 
curbuf
->
b_ml
.
ml_löe_cou¡
)

3187 
curwö
->
w_curs‹
.
 um
 = 
curbuf
->
b_ml
.
ml_löe_cou¡
;

3191 (
curwö
->
w_curs‹
.
 um
 < curwö->
w_t›löe
 || 
s¸ﬁÀd
 > 0)

3192 && 
curwö
->
w_curs‹
.
 um
 < curwö->
w_bŸlöe
 - 1)

3194 
s¸ﬁÀd
 -
	`∂öes
(
curwö
->
w_curs‹
.
 um
);

3195 i‡(
s¸ﬁÀd
 < 0 && 
curwö
->
w_curs‹
.
 um
 >curwö->
w_t›löe
)

3197 ++
curwö
->
w_curs‹
.
 um
;

3203 
n
 > 0 && 
curwö
->
w_t›löe
 > 1)

3205 
i
 = 
	`∂öes
(
curwö
->
w_t›löe
 - 1);

3206 
n
 -
i
;

3207 i‡(
n
 < 0 && 
s¸ﬁÀd
)

3209 
s¸ﬁÀd
 +
i
;

3210 --
curwö
->
w_t›löe
;

3211 #i‚de‡
KEEP_SCREEN_LINE


3212 i‡(
curwö
->
w_curs‹
.
 um
 > 1)

3213 --
curwö
->
w_curs‹
.
 um
;

3216 
	`comp_BŸlöe
(
curwö
);

3217 #i‚de‡
KEEP_SCREEN_LINE


3221 i‡(
n
 > 0)

3223 i‡(
curwö
->
w_curs‹
.
 um
 > (
löír_t
)
n
)

3224 
curwö
->
w_curs‹
.
 um
 -
n
;

3226 
curwö
->
w_curs‹
.
 um
 = 1;

3230 
s¸ﬁÀd
 +
n
;

3231 
curwö
->
w_curs‹
.
 um
 > curwö->
w_t›löe
 &&

3232 (
s¸ﬁÀd
 > 0 || 
curwö
->
w_curs‹
.
 um
 >curwö->
w_bŸlöe
))

3234 
s¸ﬁÀd
 -
	`∂öes
(
curwö
->
w_curs‹
.
 um
 - 1);

3235 i‡(
s¸ﬁÀd
 < 0 && 
curwö
->
w_curs‹
.
 um
 < curwö->
w_bŸlöe
)

3237 --
curwö
->
w_curs‹
.
 um
;

3241 
	`curs‹_c‹ª˘
();

3242 
	`begölöe
(
MAYBE
);

3243 
	`upd©eS¸ìn
(
VALID
);

3244 
	}
}

3252 
	$°uff_ö£πed
(
c
, 
cou¡
, 
no_esc
)

3253 
c
;

3254 
cou¡
;

3255 
no_esc
;

3257 
ch¨_u
 *
esc_±r
 = 
NULL
;

3258 
ch¨_u
 *
±r
;

3260 
±r
 = 
	`gë_œ°_ö£π
();

3261 i‡(
±r
 =
NULL
)

3263 
	`EMSG
(
e_noö°ext
);

3264  
FAIL
;

3267 i‡(
c
)

3268 
	`°uffch¨Ródbuff
(
c
);

3269 i‡(
no_esc
 && (
esc_±r
 = (
ch¨_u
 *)
	`vim_°ºchr
(
±r
, 27)Ë!
NULL
)

3270 *
esc_±r
 = 
NUL
;

3273 
	`°uffRódbuff
(
±r
);

3274 --
cou¡
 > 0);

3276 i‡(
esc_±r
 !
NULL
)

3277 *
esc_±r
 = 27;

3279  
OK
;

3280 
	}
}

3282 
ch¨_u
 *

3283 
	$gë_œ°_ö£π
()

3285 i‡(
œ°_ö£π
 =
NULL
)

3286  
NULL
;

3287  
œ°_ö£π
 + 
œ°_ö£π_skù
;

3288 
	}
}

3297 
	$echeck_abbr
(
c
)

3298 
c
;

3300 i‡(
p_∑°e
 || 
no_abbr
)

3301  
FALSE
;

3303  
	`check_abbr
(
c
, 
	`ml_gë_cuæöe
(), 
curwö
->
w_curs‹
.
cﬁ
,

3304 
curwö
->
w_curs‹
.
 um
 =
Ins°¨t
. um ? Ins°¨t.
cﬁ
 : 0);

3305 
	}
}

3319 
ch¨_u
 *
	gª∂a˚_°ack
 = 
NULL
;

3320 
	gª∂a˚_°ack_ƒ
 = 0;

3321 
	gª∂a˚_°ack_Àn
 = 0;

3324 
	$ª∂a˚_push
(
c
)

3325 
c
;

3327 
ch¨_u
 *
p
;

3329 i‡(
ª∂a˚_°ack_ƒ
 < 
ª∂a˚_off£t
)

3331 i‡(
ª∂a˚_°ack_Àn
 <
ª∂a˚_°ack_ƒ
)

3333 
ª∂a˚_°ack_Àn
 += 50;

3334 
p
 = 
	`œŒoc
((
ch¨_u
Ë* 
ª∂a˚_°ack_Àn
, 
TRUE
);

3335 i‡(
p
 =
NULL
)

3337 
ª∂a˚_°ack_Àn
 -= 50;

3340 i‡(
ª∂a˚_°ack
 !
NULL
)

3342 
	`vim_memmove
(
p
, 
ª∂a˚_°ack
,

3343 (
size_t
)(
ª∂a˚_°ack_ƒ
 * (
ch¨_u
)));

3344 
	`vim_‰ì
(
ª∂a˚_°ack
);

3346 
ª∂a˚_°ack
 = 
p
;

3348 
p
 = 
ª∂a˚_°ack
 + 
ª∂a˚_°ack_ƒ
 - 
ª∂a˚_off£t
;

3349 i‡(
ª∂a˚_off£t
)

3350 
	`vim_memmove
(
p
 + 1,Ö, (
size_t
)(
ª∂a˚_off£t
 * (
ch¨_u
)));

3351 *
p
 = 
c
;

3352 ++
ª∂a˚_°ack_ƒ
;

3353 
	}
}

3362 
	$ª∂a˚_p›
()

3364 i‡(
ª∂a˚_°ack_ƒ
 == 0)

3366  ()
ª∂a˚_°ack
[--
ª∂a˚_°ack_ƒ
];

3367 
	}
}

3374 
	$ª∂a˚_Êush
()

3376 
	`vim_‰ì
(
ª∂a˚_°ack
);

3377 
ª∂a˚_°ack
 = 
NULL
;

3378 
ª∂a˚_°ack_Àn
 = 0;

3379 
ª∂a˚_°ack_ƒ
 = 0;

3380 
	}
}

3382 #i‡
deföed
(
LISPINDENT
Ë|| deföed(
CINDENT
)

3391 
	$fixthi¶öe
(
gë_the_ödít
)

3392 (*
gë_the_ödít
Ë
	`__ARGS
(());

3394 
	`ch™ge_ödít
(
INDENT_SET
, 
	`gë_the_ödít
(), 
FALSE
);

3395 i‡(
	`löewhôe
(
curwö
->
w_curs‹
.
 um
))

3396 
did_ai
 = 
TRUE
;

3397 
	}
}

3400 #ifde‡
CINDENT


3410 
	$ö_cökeys
(
keyty≥d
, 
whí
, 
löe_is_em±y
)

3411 
keyty≥d
;

3412 
whí
;

3413 
löe_is_em±y
;

3415 
ch¨_u
 *
look
;

3416 
åy_m©ch
;

3417 
ch¨_u
 *
p
;

3419 
look
 = 
curbuf
->
b_p_cök
; *look; )

3425 
whí
)

3427 '*': 
åy_m©ch
 = (*
look
 == '*'); ;

3428 '!': 
åy_m©ch
 = (*
look
 == '!'); ;

3429 : 
åy_m©ch
 = (*
look
 != '*'); ;

3431 i‡(*
look
 == '*' || *look == '!')

3432 ++
look
;

3437 i‡(*
look
 == '0')

3439 i‡(!
löe_is_em±y
)

3440 
åy_m©ch
 = 
FALSE
;

3441 ++
look
;

3447 i‡(*
look
 == '^' &&Üook[1] >= '@' &&Üook[1] <= '_')

3449 i‡(
åy_m©ch
 && 
keyty≥d
 =
	`Cål
(
look
[1]))

3450  
TRUE
;

3451 
look
 += 2;

3457 i‡(*
look
 == 'o')

3459 i‡(
åy_m©ch
 && 
keyty≥d
 =
KEY_OPEN_FORW
)

3460  
TRUE
;

3461 ++
look
;

3463 i‡(*
look
 == 'O')

3465 i‡(
åy_m©ch
 && 
keyty≥d
 =
KEY_OPEN_BACK
)

3466  
TRUE
;

3467 ++
look
;

3474 i‡(*
look
 == 'e')

3476 i‡(
åy_m©ch
 && 
keyty≥d
 ='e' && 
curwö
->
w_curs‹
.
cﬁ
 >= 4)

3478 
p
 = 
	`ml_gë_cuæöe
();

3479 i‡(
	`skùwhôe
(
p
Ë=∞+ 
curwö
->
w_curs‹
.
cﬁ
 - 4 &&

3480 
	`STRNCMP
(
p
 + 
curwö
->
w_curs‹
.
cﬁ
 - 4, "else", 4) == 0)

3481  
TRUE
;

3483 ++
look
;

3490 i‡(*
look
 == ':')

3492 i‡(
åy_m©ch
 && 
keyty≥d
 == ':')

3494 
p
 = 
	`ml_gë_cuæöe
();

3495 i‡(
	`isˇ£
(
p
Ë|| 
	`i¶abñ
(30))

3496  
TRUE
;

3498 ++
look
;

3505 i‡(*
look
 == '<')

3507 i‡(
åy_m©ch
)

3514 i‡(
	`vim_°rchr
((
ch¨_u
 *)"<>!*oOe0", 
look
[1]Ë!
NULL
 &&

3515 
keyty≥d
 =
look
[1])

3516  
TRUE
;

3518 i‡(
keyty≥d
 =
	`gë_•ecül_key_code
(
look
 + 1))

3519  
TRUE
;

3521 *
look
 && *look != '>')

3522 
look
++;

3523 *
look
 == '>')

3524 
look
++;

3532 i‡(
åy_m©ch
 && *
look
 =
keyty≥d
)

3533  
TRUE
;

3534 ++
look
;

3540 
look
 = 
	`skù_to_›ti⁄_∑π
(look);

3542  
FALSE
;

3543 
	}
}

3546 #i‡
deföed
(
RIGHTLEFT
Ë|| deföed(
PROTO
)

3551 
	$hkm≠
(
c
)

3552 
c
;

3554 
c
)

3563 ',': 
c
 = '{'; ;

3564 '.': 
c
 = 'v'; ;

3565 ';': 
c
 = 't'; ;

3567 
°r
[] = "zqbcxlsjphmkwonu ydafeÑig";

3569 i‡(
c
 < 'a' || c > 'z')

3570  
c
;

3571 
c
 = 
°r
[c - 'a'];

3576  
c
 - 'a' + 
p_Æïh
;

3577 
	}
}

	@src/feature.h

29 
	#DIGRAPHS


	)

38 
	#HAVE_LANGMAP


	)

46 
	#INSERT_EXPAND


	)

54 
	#RIGHTLEFT


	)

62 
	#EMACS_TAGS


	)

69 
	#AUTOCMD


	)

77 
	#VIMINFO


	)

95 #ifde‡
HAVE_TGETENT


97 
	#NO_BUILTIN_TCAPS


	)

101 #i‚de‡
NO_BUILTIN_TCAPS


103 
	#ALL_BUILTIN_TCAPS


	)

106 
	#SOME_BUILTIN_TCAPS


	)

122 #i‡1 || 
deföed
(
PROTO
)

123 
	#LISPINDENT


	)

126 #i‡1 || 
deföed
(
PROTO
)

127 
	#CINDENT


	)

131 
	#SMARTINDENT


	)

144 
	#COMPATIBLE


	)

152 
	#WRITEBACKUP


	)

161 
	#SAVE_XTERM_SCREEN


	)

168 
	#DEBUG


	)

175 
	#VIMRC_FILE
 ".vimrc"

	)

182 
	#EXRC_FILE
 ".exrc"

	)

189 
	#GVIMRC_FILE
 ".gvimrc"

	)

196 
	#USR_VIMRC_FILE
 "~/somewhîe/.vimrc"

	)

203 
	#USR_EXRC_FILE
 "~/somewhîe/.exrc"

	)

210 
	#USR_GVIMRC_FILE
 "~/somewhîe/.gvimrc"

	)

217 
	#SYS_VIMRC_FILE
 "/somewhîe/.vimrc"

	)

224 
	#SYS_GVIMRC_FILE
 "/somewhîe/.gvimrc"

	)

231 
	#VIM_HLP
 "/somewhîe/vim_hñp.txt"

	)

245 
	#USE_SYSTEM


	)

253 
	#WANT_X11


	)

266 
	#NO_ARP


	)

	@src/fileio.c

13 #i‡
deföed
 
MSDOS
 || deföed 
WIN32


14 
	~<io.h
>

17 
	~"vim.h
"

18 
	~"globÆs.h
"

19 
	~"¥Ÿo.h
"

20 
	~"›ti⁄.h
"

21 #ifde‡
HAVE_FCNTL_H


22 
	~<f˙é.h
>

25 #ifde‡
LATTICE


26 
	~<¥Ÿo/dos.h
>

29 
	#BUFSIZE
 8192

	)

30 
	#SBUFSIZE
 256

	)

32 #ifde‡
VIMINFO


33 
check_m¨ks_ªad
 
__ARGS
(());

35 
msg_add_‚ame
 
__ARGS
((
BUF
 *, 
ch¨_u
 *));

36 
msg_add_ãxtmode
 
__ARGS
(());

37 
msg_add_löes
 
__ARGS
((, , ));

38 
wrôe_buf
 
__ARGS
((, 
ch¨_u
 *, ));

40 
löír_t
 
	gwrôe_no_eﬁ_ um
 = 0;

45 
	$fûemess
(
buf
, 
«me
, 
s
)

46 
BUF
 *
buf
;

47 
ch¨_u
 *
«me
;

48 
ch¨_u
 *
s
;

50 
	`msg_add_‚ame
(
buf
, 
«me
);

51 
	`STRCAT
(
IObuff
, 
s
);

57 
	`msg_°¨t
();

58 
	`msg_ouâøns
(
IObuff
);

59 
	`°›_highlight
();

60 
	`msg_˛r_eos
();

61 
	`Êushbuf
();

62 
	}
}

80 
	$ªadfûe
(
‚ame
, 
s‚ame
, 
‰om
, 
√wfûe
, 
löes_to_skù
, 
löes_to_ªad
, 
fûãrög
)

81 
ch¨_u
 *
‚ame
;

82 
ch¨_u
 *
s‚ame
;

83 
löír_t
 
‰om
;

84 
√wfûe
;

85 
löír_t
 
löes_to_skù
;

86 
löír_t
 
löes_to_ªad
;

87 
fûãrög
;

89 
fd
;

90 
ch¨_u
 
c
;

91 
löír_t
 
 um
 = 
‰om
;

92 
ch¨_u
 *
±r
 = 
NULL
;

93 
ch¨_u
 *
buf„r
 = 
NULL
;

94 
ch¨_u
 *
√w_buf„r
 = 
NULL
;

95 
ch¨_u
 *
löe_°¨t
 = 
NULL
;

96 
cﬁƒ_t
 
Àn
;

97 
size
;

98 
ch¨_u
 *
p
;

99 
fûesize
 = 0;

100 
•lô
 = 0;

101 
	#UNKNOWN
 0x0ffffff‡

	)

102 
löír_t
 
löe˙t
 = 
curbuf
->
b_ml
.
ml_löe_cou¡
;

103 
îr‹
 = 
FALSE
;

104 
tx_îr‹
 = 
FALSE
;

105 
löîe°
 = 0;

106 
fú°∑π
 = 
TRUE
;

107 #ifde‡
UNIX


108 
≥rm
;

110 
ãxtmode
 = 
curbuf
->
b_p_tx
;

111 
°©
 
°
;

112 
fûe_ªad⁄ly
;

113 
löír_t
 
skù_cou¡
 = 
löes_to_skù
;

114 
löír_t
 
ªad_cou¡
 = 
löes_to_ªad
;

115 
msg_ßve
 = 
msg_s¸ﬁl
;

116 
löír_t
 
ªad_no_eﬁ_ um
 = 0;

127 i‡(
curbuf
->
b_fûíame
 =
NULL
 && !
fûãrög
 &&

128 
	`vim_°rchr
(
p_˝o
, 
CPO_FNAMER
Ë!
NULL
)

130 i‡(
	`£t‚ame
(
‚ame
, 
s‚ame
, 
FALSE
Ë=
OK
)

131 
curbuf
->
b_nŸedôed
 = 
TRUE
;

134 i‡(
	`sh‹tmess
(
SHM_OVER
Ë|| 
curbuf
->
b_hñp
)

135 
msg_s¸ﬁl
 = 
FALSE
;

137 
msg_s¸ﬁl
 = 
TRUE
;

138 i‡(
s‚ame
 =
NULL
)

139 
s‚ame
 = 
‚ame
;

146 #i‡
	`deföed
(
UNIX
Ë|| deföed(
__EMX__
)

147 i‡(!
did_cd
)

148 
‚ame
 = 
s‚ame
;

151 #ifde‡
UNIX


156 
≥rm
 = 
	`gë≥rm
(
‚ame
);

157 #ifde‡
_POSIX_SOURCE


158 i‡(
≥rm
 >0 && !
	`S_ISREG
(perm)

159 #ifde‡
S_ISFIFO


160 && !
	`S_ISFIFO
(
≥rm
)

164 i‡(
≥rm
 >0 && (≥rm & 
S_IFMT
Ë!
S_IFREG


165 #ifde‡
S_IFIFO


166 && (
≥rm
 & 
S_IFMT
Ë!
S_IFIFO


168 #ifde‡
S_IFSOCK


169 && (
≥rm
 & 
S_IFMT
Ë!
S_IFSOCK


174 #ifde‡
_POSIX_SOURCE


175 i‡(
	`S_ISDIR
(
≥rm
))

177 i‡((
≥rm
 & 
S_IFMT
Ë=
S_IFDIR
)

179 
	`fûemess
(
curbuf
, 
‚ame
, (
ch¨_u
 *)"isá directory");

181 
	`fûemess
(
curbuf
, 
‚ame
, (
ch¨_u
 *)"isÇotá file");

182 
msg_s¸ﬁl
 = 
msg_ßve
;

183  
FAIL
;

192 i‡(
√wfûe
 && !
ªad⁄lymode
)

193 
curbuf
->
b_p_ro
 = 
FALSE
;

195 i‡(
√wfûe
)

197 i‡(
	`°©
((*)
‚ame
, &
°
) >= 0)

199 
curbuf
->
b_mtime
 = 
°
.
°_mtime
;

200 
curbuf
->
b_mtime_ªad
 = 
°
.
°_mtime
;

201 #ifde‡
UNIX


207 i‡(
curbuf
->
b_ml
.
ml_mÂ
->
mf_‚ame
 !
NULL
)

208 ()
	`£çîm
(
curbuf
->
b_ml
.
ml_mÂ
->
mf_‚ame
,

209 (
°
.
°_mode
 & 0777) | 0600);

214 
curbuf
->
b_mtime
 = 0;

215 
curbuf
->
b_mtime_ªad
 = 0;

223 
fûe_ªad⁄ly
 = 
FALSE
;

224 #i‡
	`deföed
(
UNIX
Ë|| deföed(
DJGPP
Ë|| deföed(
__EMX__
)

226 #ifde‡
UNIX


227 !(
≥rm
 & 0222) ||

229 
	`ac˚ss
((*)
‚ame
, 
W_OK
))

230 
fûe_ªad⁄ly
 = 
TRUE
;

231 
fd
 = 
	`›í
((*)
‚ame
, 
O_RDONLY
 | 
O_EXTRA
);

233 i‡(!
√wfûe
 || 
ªad⁄lymode
 || (
fd
 =

234 
	`›í
((*)
‚ame
, 
O_RDWR
 | 
O_EXTRA
)) < 0)

236 
fûe_ªad⁄ly
 = 
TRUE
;

237 
fd
 = 
	`›í
((*)
‚ame
, 
O_RDONLY
 | 
O_EXTRA
);

241 i‡(
fd
 < 0)

243 #i‚de‡
UNIX


244 
isdú_f
;

246 
msg_s¸ﬁl
 = 
msg_ßve
;

247 #i‚de‡
UNIX


251 
isdú_f
 = (
	`mch_isdú
(
‚ame
));

253 i‡(!
did_cd
)

254 
‚ame
 = 
s‚ame
;

255 i‡(
isdú_f
)

256 
	`fûemess
(
curbuf
, 
‚ame
, (
ch¨_u
 *)"isá directory");

259 i‡(
√wfûe
)

261 #ifde‡
UNIX


262 i‡(
≥rm
 < 0)

265 
	`fûemess
(
curbuf
, 
‚ame
, (
ch¨_u
 *)"[New File]");

266 #ifde‡
AUTOCMD


267 
	`≠∂y_autocmds
(
EVENT_BUFNEWFILE
, 
‚ame
, fname);

269  
OK
;

271 #ifde‡
UNIX


273 
	`fûemess
(
curbuf
, 
‚ame
, (
ch¨_u
 *)"[Permission Denied]");

277  
FAIL
;

285 i‡((
√wfûe
 && 
fûe_ªad⁄ly
Ë|| 
curbuf
->
b_hñp
)

286 
curbuf
->
b_p_ro
 = 
TRUE
;

288 i‡(
√wfûe
)

289 
curbuf
->
b_p_eﬁ
 = 
TRUE
;

291 #i‚de‡
UNIX


293 i‡(!
did_cd
)

294 
‚ame
 = 
s‚ame
;

296 ++
no_waô_ªtu∫
;

301 
curbuf
->
b_›_°¨t
.
 um
 = ((
‰om
 == 0) ? 1 : from);

302 
curbuf
->
b_›_°¨t
.
cﬁ
 = 0;

304 #ifde‡
AUTOCMD


306 
m
 = 
msg_s¸ﬁl
;

307 
n
 = 
msg_s¸ﬁÀd
;

314 
msg_s¸ﬁl
 = 
TRUE
;

315 i‡(
fûãrög
)

316 
	`≠∂y_autocmds
(
EVENT_FILTERREADPRE
, 
NULL
, 
‚ame
);

317 i‡(
√wfûe
)

318 
	`≠∂y_autocmds
(
EVENT_BUFREADPRE
, 
NULL
, 
‚ame
);

320 
	`≠∂y_autocmds
(
EVENT_FILEREADPRE
, 
‚ame
, fname);

321 i‡(
msg_s¸ﬁÀd
 =
n
)

322 
msg_s¸ﬁl
 = 
m
;

326 i‡(!
ªcovîymode
 && !
fûãrög
)

327 
	`fûemess
(
curbuf
, 
‚ame
, (
ch¨_u
 *)"");

329 
msg_s¸ﬁl
 = 
FALSE
;

331 
ªåy
:

332 !
îr‹
 && !
gŸ_öt
)

340 #i‡
SIZEOF_INT
 <= 2

341 i‡(
löîe°
 >= 0x7ff0)

343 ++
•lô
;

344 *
±r
 = 
NL
;

345 
size
 = 1;

350 #i‡
SIZEOF_INT
 > 2

351 
size
 = 0x10000L;

353 
size
 = 0x7ff0L - 
löîe°
;

356  ; 
size
 >= 10; size >>= 1)

358 i‡((
√w_buf„r
 = 
	`œŒoc
((
l⁄g_u
)(
size
 + 
löîe°
 + 1), 
FALSE
)Ë!
NULL
)

361 i‡(
√w_buf„r
 =
NULL
)

363 
	`do_outofmem_msg
();

364 
îr‹
 = 
TRUE
;

367 i‡(
löîe°
)

368 
	`vim_memmove
(
√w_buf„r
, 
±r
 - 
löîe°
, (
size_t
)linerest);

369 
	`vim_‰ì
(
buf„r
);

370 
buf„r
 = 
√w_buf„r
;

371 
±r
 = 
buf„r
 + 
löîe°
;

372 
löe_°¨t
 = 
buf„r
;

374 i‡((
size
 = 
	`ªad
(
fd
, (*)
±r
, (
size_t
)size)) <= 0)

376 i‡(
size
 < 0)

377 
îr‹
 = 
TRUE
;

380 
fûesize
 +
size
;

385 i‡(
fú°∑π
 && 
p_è
)

387 
p
 = 
±r
;Ö <Öå + 
size
; ++p)

388 i‡(*
p
 =
NL
)

390 i‡(
p
 > 
±r
 &&Ö[-1] =
CR
)

391 
ãxtmode
 = 
TRUE
;

393 
ãxtmode
 = 
FALSE
;

395 i‡(
√wfûe
)

396 
curbuf
->
b_p_tx
 = 
ãxtmode
;

402 
fú°∑π
 = 
FALSE
;

408 --
±r
;

409 ++
±r
, --
size
 >= 0)

411 i‡((
c
 = *
±r
Ë!
NUL
 && c !
NL
)

413 i‡(
c
 =
NUL
)

414 *
±r
 = 
NL
;

417 i‡(
skù_cou¡
 == 0)

419 *
±r
 = 
NUL
;

420 
Àn
 = 
±r
 - 
löe_°¨t
 + 1;

421 i‡(
ãxtmode
)

423 i‡(
±r
[-1] =
CR
)

425 
±r
[-1] = 
NUL
;

426 --
Àn
;

434 i‡(!
tx_îr‹
)

436 i‡(
p_è
 && 
	`l£ek
(
fd
, 0L, 
SEEK_SET
) == 0)

438 
 um
 > 
‰om
)

439 
	`ml_dñëe
(
 um
--, 
FALSE
);

440 
ãxtmode
 = 
FALSE
;

441 i‡(
√wfûe
)

442 
curbuf
->
b_p_tx
 = 
FALSE
;

443 
löîe°
 = 0;

444 
fûesize
 = 0;

445 
skù_cou¡
 = 
löes_to_skù
;

446 
ªad_cou¡
 = 
löes_to_ªad
;

447 
ªåy
;

450 
tx_îr‹
 = 
TRUE
;

453 i‡(
	`ml_≠≥nd
(
 um
, 
löe_°¨t
, 
Àn
, 
√wfûe
Ë=
FAIL
)

455 
îr‹
 = 
TRUE
;

458 ++
 um
;

459 i‡(--
ªad_cou¡
 == 0)

461 
îr‹
 = 
TRUE
;

462 
löe_°¨t
 = 
±r
;

467 --
skù_cou¡
;

468 
löe_°¨t
 = 
±r
 + 1;

471 
löîe°
 = 
±r
 - 
löe_°¨t
;

472 
	`mch_bªakcheck
();

475 i‡(
îr‹
 && 
ªad_cou¡
 == 0)

476 
îr‹
 = 
FALSE
;

478 i‡(!
îr‹
 && !
gŸ_öt
 && 
löîe°
 != 0

479 #ifde‡
USE_CRNL


483 && !(!
curbuf
->
b_p_bö
 && *
löe_°¨t
 =
	`Cål
('Z') &&

484 
±r
 =
löe_°¨t
 + 1)

492 i‡(
√wfûe
)

493 
curbuf
->
b_p_eﬁ
 = 
FALSE
;

494 *
±r
 = 
NUL
;

495 i‡(
	`ml_≠≥nd
(
 um
, 
löe_°¨t
,

496 (
cﬁƒ_t
)(
±r
 - 
löe_°¨t
 + 1), 
√wfûe
Ë=
FAIL
)

497 
îr‹
 = 
TRUE
;

499 
ªad_no_eﬁ_ um
 = ++
 um
;

501 i‡(
 um
 !
‰om
 && !
√wfûe
)

502 
CHANGED
;

504 
	`˛o£
(
fd
);

505 
	`vim_‰ì
(
buf„r
);

507 --
no_waô_ªtu∫
;

510 i‡(!
ªcovîymode
)

514 i‡(
√wfûe
 && !(
curbuf
->
b_ml
.
ml_Êags
 & 
ML_EMPTY
))

516 
	`ml_dñëe
(
curbuf
->
b_ml
.
ml_löe_cou¡
, 
FALSE
);

517 --
löe˙t
;

519 
löe˙t
 = 
curbuf
->
b_ml
.
ml_löe_cou¡
 -Üinecnt;

520 i‡(
fûesize
 == 0)

521 
löe˙t
 = 0;

522 i‡(!
√wfûe
)

523 
	`m¨k_adju°
(
‰om
 + 1, 
MAXLNUM
, ()
löe˙t
, 0L);

525 i‡(
gŸ_öt
)

527 
	`fûemess
(
curbuf
, 
‚ame
, 
e_öãº
);

528 
msg_s¸ﬁl
 = 
msg_ßve
;

529 #ifde‡
VIMINFO


530 
	`check_m¨ks_ªad
();

532  
OK
;

535 i‡(!
fûãrög
)

537 
	`msg_add_‚ame
(
curbuf
, 
‚ame
);

538 
c
 = 
FALSE
;

540 #ifde‡
UNIX


541 #ifde‡
S_ISFIFO


542 i‡(
	`S_ISFIFO
(
≥rm
))

544 
	`STRCAT
(
IObuff
, "[fifo/socket]");

545 
c
 = 
TRUE
;

548 #ifde‡
S_IFIFO


549 i‡((
≥rm
 & 
S_IFMT
Ë=
S_IFIFO
)

551 
	`STRCAT
(
IObuff
, "[fifo]");

552 
c
 = 
TRUE
;

555 #ifde‡
S_IFSOCK


556 i‡((
≥rm
 & 
S_IFMT
Ë=
S_IFSOCK
)

558 
	`STRCAT
(
IObuff
, "[socket]");

559 
c
 = 
TRUE
;

564 i‡(
curbuf
->
b_p_ro
)

566 
	`STRCAT
(
IObuff
, 
	`sh‹tmess
(
SHM_RO
) ? "[RO]" : "[readonly]");

567 
c
 = 
TRUE
;

569 i‡(
ªad_no_eﬁ_ um
)

571 
	`STRCAT
(
IObuff
, 
	`sh‹tmess
(
SHM_LAST
) ? "[noeol]" :

573 
c
 = 
TRUE
;

575 i‡(
tx_îr‹
)

577 
	`STRCAT
(
IObuff
, "[CR missing]");

578 
c
 = 
TRUE
;

580 i‡(
•lô
)

582 
	`STRCAT
(
IObuff
, "[longÜines split]");

583 
c
 = 
TRUE
;

585 i‡(
îr‹
)

587 
	`STRCAT
(
IObuff
, "[READ ERRORS]");

588 
c
 = 
TRUE
;

590 i‡(
	`msg_add_ãxtmode
(
ãxtmode
))

591 
c
 = 
TRUE
;

592 
	`msg_add_löes
(
c
, ()
löe˙t
, 
fûesize
);

593 
	`msg_åunc
(
IObuff
);

596 i‡(
îr‹
 && 
√wfûe
)

597 
curbuf
->
b_p_ro
 = 
TRUE
;

599 
	`u_˛óæöe
();

601 i‡(
‰om
 < 
curbuf
->
b_ml
.
ml_löe_cou¡
)

603 
curwö
->
w_curs‹
.
 um
 = 
‰om
 + 1;

604 
	`begölöe
(
TRUE
);

610 
curbuf
->
b_›_°¨t
.
 um
 = 
‰om
 + 1;

611 
curbuf
->
b_›_°¨t
.
cﬁ
 = 0;

612 
curbuf
->
b_›_íd
.
 um
 = 
‰om
 + 
löe˙t
;

613 
curbuf
->
b_›_íd
.
cﬁ
 = 0;

615 
msg_s¸ﬁl
 = 
msg_ßve
;

617 #ifde‡
AUTOCMD


619 
m
 = 
msg_s¸ﬁl
;

620 
n
 = 
msg_s¸ﬁÀd
;

627 
wrôe_no_eﬁ_ um
 = 
ªad_no_eﬁ_ um
;

634 
msg_s¸ﬁl
 = 
TRUE
;

635 i‡(
fûãrög
)

636 
	`≠∂y_autocmds
(
EVENT_FILTERREADPOST
, 
NULL
, 
‚ame
);

637 i‡(
√wfûe
)

638 
	`≠∂y_autocmds
(
EVENT_BUFREADPOST
, 
NULL
, 
‚ame
);

640 
	`≠∂y_autocmds
(
EVENT_FILEREADPOST
, 
‚ame
, fname);

641 i‡(
msg_s¸ﬁÀd
 =
n
)

642 
msg_s¸ﬁl
 = 
m
;

644 
wrôe_no_eﬁ_ um
 = 0;

648 #ifde‡
VIMINFO


649 
	`check_m¨ks_ªad
();

652 i‡(
ªcovîymode
 && 
îr‹
)

653  
FAIL
;

654  
OK
;

655 
	}
}

657 #ifde‡
VIMINFO


659 
	$check_m¨ks_ªad
()

661 i‡(!
curbuf
->
b_m¨ks_ªad
 && 
	`gë_vimöfo_∑ømëî
('\'') > 0)

663 
	`ªad_vimöfo
(
NULL
, 
FALSE
, 
TRUE
, FALSE);

664 
curbuf
->
b_m¨ks_ªad
 = 
TRUE
;

666 
	}
}

685 
	$buf_wrôe
(
buf
, 
‚ame
, 
s‚ame
, 
°¨t
, 
íd
, 
≠≥nd
, 
f‹˚ô
,

686 
ª£t_ch™ged
, 
fûãrög
)

687 
BUF
 *
buf
;

688 
ch¨_u
 *
‚ame
;

689 
ch¨_u
 *
s‚ame
;

690 
löír_t
 
°¨t
, 
íd
;

691 
≠≥nd
;

692 
f‹˚ô
;

693 
ª£t_ch™ged
;

694 
fûãrög
;

696 
fd
;

697 
ch¨_u
 *
backup
 = 
NULL
;

698 
ch¨_u
 *
f‚ame
;

699 #ifde‡
AUTOCMD


700 
BUF
 *
ßve_buf
;

702 
ch¨_u
 *
s
;

703 
ch¨_u
 *
±r
;

704 
ch¨_u
 
c
;

705 
Àn
;

706 
löír_t
 
 um
;

707 
nch¨s
;

708 
ch¨_u
 *
îrmsg
 = 
NULL
;

709 
ch¨_u
 *
buf„r
;

710 
ch¨_u
 
smÆlbuf
[
SBUFSIZE
];

711 
ch¨_u
 *
backup_ext
;

712 
bufsize
;

713 
≥rm
 = -1;

714 
ªtvÆ
 = 
OK
;

715 
√wfûe
 = 
FALSE
;

716 
msg_ßve
 = 
msg_s¸ﬁl
;

717 
ovîwrôög
;

718 #i‡
	`deföed
(
UNIX
Ë|| deföed(
__EMX__XX
)

719 
°©
 
°_ﬁd
;

720 
made_wrôabÀ
 = 
FALSE
;

722 #ifde‡
AMIGA


723 
BPTR
 
Êock
;

726 
whﬁe
 = (
°¨t
 =1 && 
íd
 =
buf
->
b_ml
.
ml_löe_cou¡
);

727 #ifde‡
AUTOCMD


728 
löír_t
 
ﬁd_löe_cou¡
 = 
buf
->
b_ml
.
ml_löe_cou¡
;

731 i‡(
‚ame
 =
NULL
 || *‚amê=
NUL
)

732  
FAIL
;

740 i‡(
ª£t_ch™ged
 && 
whﬁe
 && 
buf
 =
curbuf
 &&

741 
curbuf
->
b_fûíame
 =
NULL
 && !
fûãrög
 &&

742 
	`vim_°rchr
(
p_˝o
, 
CPO_FNAMEW
Ë!
NULL
)

744 i‡(
	`£t‚ame
(
‚ame
, 
s‚ame
, 
FALSE
Ë=
OK
)

745 
curbuf
->
b_nŸedôed
 = 
TRUE
;

748 i‡(
s‚ame
 =
NULL
)

749 
s‚ame
 = 
‚ame
;

756 
f‚ame
 = 
‚ame
;

757 #ifde‡
UNIX


758 i‡(!
did_cd
)

759 
‚ame
 = 
s‚ame
;

763 i‡(*
p_bex
 =
NUL
)

764 
backup_ext
 = (
ch¨_u
 *)".bak";

766 
backup_ext
 = 
p_bex
;

768 i‡(
buf
->
b_fûíame
 !
NULL
 && 
	`‚amecmp
(
f‚ame
, buf->b_filename) == 0)

769 
ovîwrôög
 = 
TRUE
;

771 
ovîwrôög
 = 
FALSE
;

777 i‡(
£cuª
)

779 
£cuª
 = 2;

780 
	`emsg
(
e_curdú
);

781  
FAIL
;

784 i‡(
exôög
)

785 
	`£âmode
(0);

787 ++
no_waô_ªtu∫
;

792 
buf
->
b_›_°¨t
.
 um
 = 
°¨t
;

793 
buf
->
b_›_°¨t
.
cﬁ
 = 0;

794 
buf
->
b_›_íd
.
 um
 = 
íd
;

795 
buf
->
b_›_íd
.
cﬁ
 = 0;

797 #ifde‡
AUTOCMD


802 
ßve_buf
 = 
curbuf
;

803 
curbuf
 = 
buf
;

804 
curwö
->
w_buf„r
 = 
buf
;

805 i‡(
≠≥nd
)

806 
	`≠∂y_autocmds
(
EVENT_FILEAPPENDPRE
, 
‚ame
, fname);

807 i‡(
fûãrög
)

808 
	`≠∂y_autocmds
(
EVENT_FILTERWRITEPRE
, 
NULL
, 
‚ame
);

809 i‡(
ª£t_ch™ged
 && 
whﬁe
)

810 
	`≠∂y_autocmds
(
EVENT_BUFWRITEPRE
, 
‚ame
, fname);

812 
	`≠∂y_autocmds
(
EVENT_FILEWRITEPRE
, 
‚ame
, fname);

813 
curbuf
 = 
ßve_buf
;

814 
curwö
->
w_buf„r
 = 
ßve_buf
;

822 i‡(
buf
->
b_ml
.
ml_löe_cou¡
 !
ﬁd_löe_cou¡
)

824 i‡(
whﬁe
)

825 
íd
 = 
buf
->
b_ml
.
ml_löe_cou¡
;

826 i‡(
buf
->
b_ml
.
ml_löe_cou¡
 > 
ﬁd_löe_cou¡
)

827 
íd
 +
buf
->
b_ml
.
ml_löe_cou¡
 - 
ﬁd_löe_cou¡
;

830 
íd
 -
ﬁd_löe_cou¡
 - 
buf
->
b_ml
.
ml_löe_cou¡
;

831 i‡(
íd
 < 
°¨t
)

833 --
no_waô_ªtu∫
;

834 
	`EMSG
("Autocommand changedÇumber ofÜines in unexpected way");

835  
FAIL
;

841 i‡(
	`sh‹tmess
(
SHM_OVER
))

842 
msg_s¸ﬁl
 = 
FALSE
;

844 
msg_s¸ﬁl
 = 
TRUE
;

845 i‡(!
fûãrög
)

846 
	`fûemess
(
buf
,

847 #i‚de‡
UNIX


848 
did_cd
 ? 
‚ame
 : 
s‚ame
,

850 
‚ame
,

852 (
ch¨_u
 *)"");

853 
msg_s¸ﬁl
 = 
FALSE
;

855 
buf„r
 = 
	`Æloc
(
BUFSIZE
);

856 i‡(
buf„r
 =
NULL
)

860 
buf„r
 = 
smÆlbuf
;

861 
bufsize
 = 
SBUFSIZE
;

864 
bufsize
 = 
BUFSIZE
;

866 #i‡
	`deföed
(
UNIX
Ë&& !deföed(
ARCHIE
)

868 
°_ﬁd
.
°_dev
 = st_ﬁd.
°_öo
 = 0;

869 i‡(
	`°©
((*)
‚ame
, &
°_ﬁd
))

870 
√wfûe
 = 
TRUE
;

873 #ifde‡
_POSIX_SOURCE


874 i‡(!
	`S_ISREG
(
°_ﬁd
.
°_mode
))

876 i‡((
°_ﬁd
.
°_mode
 & 
S_IFMT
Ë!
S_IFREG
)

879 #ifde‡
_POSIX_SOURCE


880 i‡(
	`S_ISDIR
(
°_ﬁd
.
°_mode
))

882 i‡((
°_ﬁd
.
°_mode
 & 
S_IFMT
Ë=
S_IFDIR
)

884 
îrmsg
 = (
ch¨_u
 *)"isá directory";

886 
îrmsg
 = (
ch¨_u
 *)"isÇotá file";

887 
Áû
;

889 i‡(
buf
->
b_mtime_ªad
 != 0 &&

890 
buf
->
b_mtime_ªad
 !
°_ﬁd
.
°_mtime
 && 
ovîwrôög
)

892 
msg_s¸ﬁl
 = 
TRUE
;

893 
	`EMSG
("WARNING: The file has been changed sinceÑeading it!!!");

894 i‡(
	`ask_ye¢o
((
ch¨_u
 *)"Do youÑeally wantÅo writeÅo it",

895 
TRUE
) == 'n')

897 
ªtvÆ
 = 
FAIL
;

898 
Áû
;

900 
msg_s¸ﬁl
 = 
FALSE
;

902 
≥rm
 = 
°_ﬁd
.
°_mode
;

908 i‡(!
≠≥nd
 && 
≥rm
 >0 && (
p_wb
 || 
p_bk
 || *
p_pm
 !
NUL
) &&

909 (
fd
 = 
	`›í
((*)
‚ame
, 
O_RDONLY
 | 
O_EXTRA
)) >= 0)

911 
bfd
, 
buÊí
;

912 
ch¨_u
 
c›ybuf
[
BUFSIZE
 + 1], *
wp
;

913 
some_îr‹
 = 
FALSE
;

914 
°©
 
°_√w
;

915 
ch¨_u
 *
dúp
;

916 #i‚de‡
SHORT_FNAME


917 
did_£t_sh‹äame
;

932 
dúp
 = 
p_bdú
;

933 *
dúp
)

935 
°_√w
.
°_dev
 = st_√w.
°_öo
 = 0;

936 
°_√w
.
°_gid
 = 0;

941 
Àn
 = 
	`c›y_›ti⁄_∑π
(&
dúp
, 
c›ybuf
, 
BUFSIZE
, ",");

943 i‡(*
c›ybuf
 == '.')

944 
	`STRCPY
(
c›ybuf
, 
‚ame
);

947 i‡(!
	`i•©h£p
(
c›ybuf
[
Àn
 - 1]))

948 
c›ybuf
[
Àn
++] = 
PATHSEP
;

949 
	`STRCPY
(
c›ybuf
 + 
Àn
, 
	`gëèû
(
‚ame
));

952 #i‚de‡
SHORT_FNAME


953 
did_£t_sh‹äame
 = 
FALSE
;

964 
backup
 = 
	`buf_mod«me
(
buf
, 
c›ybuf
, 
backup_ext
);

965 i‡(
backup
 =
NULL
)

967 
some_îr‹
 = 
TRUE
;

968 
nobackup
;

974 i‡(!
	`°©
((*)
backup
, &
°_√w
))

983 i‡(
°_√w
.
°_dev
 =
°_ﬁd
.st_dev &&

984 
°_√w
.
°_öo
 =
°_ﬁd
.st_ino)

986 
	`vim_‰ì
(
backup
);

987 
backup
 = 
NULL
;

988 #i‚de‡
SHORT_FNAME


992 i‡(!(
buf
->
b_sh‹äame
 || buf->
b_p_¢
))

994 
buf
->
b_sh‹äame
 = 
TRUE
;

995 
did_£t_sh‹äame
 = 
TRUE
;

999 i‡(
did_£t_sh‹äame
)

1000 
buf
->
b_sh‹äame
 = 
FALSE
;

1010 i‡(!
p_bk
)

1012 
wp
 = 
backup
 + 
	`STRLEN
(backupË- 1 - STRLEN(
backup_ext
);

1013 i‡(
wp
 < 
backup
)

1014 
wp
 = 
backup
;

1015 *
wp
 = 'z';

1016 *
wp
 > 'a' && !
	`°©
((*)
backup
, &
°_√w
))

1017 --*
wp
;

1019 i‡(*
wp
 == 'a')

1021 
	`vim_‰ì
(
backup
);

1022 
backup
 = 
NULL
;

1032 i‡(
backup
 !
NULL
)

1035 
	`vim_ªmove
(
backup
);

1036 
bfd
 = 
	`›í
((*)
backup
, 
O_WRONLY
 | 
O_CREAT
 | 
O_EXTRA
, 0666);

1037 i‡(
bfd
 < 0)

1039 
	`vim_‰ì
(
backup
);

1040 
backup
 = 
NULL
;

1046 ()
	`£çîm
(
backup
, 
≥rm
 & 0777);

1053 i‡(
°_√w
.
°_gid
 !
°_ﬁd
.st_gid &&

1054 #ifde‡
HAVE_FCHOWN


1055 
	`fchown
(
bfd
, -1, 
°_ﬁd
.
°_gid
) != 0)

1057 
	`chown
(
backup
, -1, 
°_ﬁd
.
°_gid
) != 0)

1059 
	`£çîm
(
backup
, (
≥rm
 & 0707) | ((perm & 07) << 3));

1062 (
buÊí
 = 
	`ªad
(
fd
, (*)
c›ybuf
, 
BUFSIZE
)) > 0)

1064 i‡(
	`wrôe_buf
(
bfd
, 
c›ybuf
, 
buÊí
Ë=
FAIL
)

1066 
îrmsg
 = (
ch¨_u
 *)"Can't writeÅo backup file (use !Åo override)";

1070 i‡(
	`˛o£
(
bfd
Ë< 0 && 
îrmsg
 =
NULL
)

1071 
îrmsg
 = (
ch¨_u
 *)"CloseÉrror for backup file (use !Åo override)";

1072 i‡(
buÊí
 < 0)

1073 
îrmsg
 = (
ch¨_u
 *)"Can'tÑead file for backup (use !Åo override)";

1078 
nobackup
:

1079 
	`˛o£
(
fd
);

1081 i‡(
backup
 =
NULL
 && 
îrmsg
 == NULL)

1082 
îrmsg
 = (
ch¨_u
 *)"Cannot create backup file (use !Åo override)";

1084 i‡((
some_îr‹
 || 
îrmsg
Ë&& !
f‹˚ô
)

1086 
ªtvÆ
 = 
FAIL
;

1087 
Áû
;

1089 
îrmsg
 = 
NULL
;

1092 i‡(
f‹˚ô
 && (
°_ﬁd
.
°_uid
 =
	`gëuid
()Ë&& 
≥rm
 >= 0 && !(perm & 0200))

1094 
≥rm
 |= 0200;

1095 ()
	`£çîm
(
‚ame
, 
≥rm
);

1096 
made_wrôabÀ
 = 
TRUE
;

1108 
≥rm
 = 
	`gë≥rm
(
‚ame
);

1109 i‡(
≥rm
 < 0)

1110 
√wfûe
 = 
TRUE
;

1111 i‡(
	`mch_isdú
(
‚ame
))

1113 
îrmsg
 = (
ch¨_u
 *)"isá directory";

1114 
Áû
;

1116 i‡(!
≠≥nd
 && 
≥rm
 >0 && (
p_wb
 || 
p_bk
 || *
p_pm
 !
NUL
))

1118 
ch¨_u
 *
dúp
;

1119 
ch¨_u
 *
p
;

1125 
dúp
 = 
p_bdú
;

1126 *
dúp
)

1131 
Àn
 = 
	`c›y_›ti⁄_∑π
(&
dúp
, 
IObuff
, 
IOSIZE
, ",");

1133 #ifde‡
VMS


1134 i‡(!
	`memcmp
(
IObuff
, "sys$disk:", 9))

1136 i‡(*
IObuff
 == '.')

1138 
backup
 = 
	`buf_mod«me
(
buf
, 
‚ame
, 
backup_ext
);

1141 i‡(!
	`i•©h£p
(
IObuff
[
Àn
 - 1]))

1142 
IObuff
[
Àn
++] = 
PATHSEP
;

1143 
	`STRCPY
(
IObuff
 + 
Àn
, 
	`gëèû
(
‚ame
));

1144 
backup
 = 
	`buf_mod«me
(
buf
, 
IObuff
, 
backup_ext
);

1146 i‡(
backup
 !
NULL
)

1153 i‡(!
p_bk
 && 
	`gë≥rm
(
backup
) >= 0)

1155 
p
 = 
backup
 + 
	`STRLEN
(backupË- 1 - STRLEN(
backup_ext
);

1156 i‡(
p
 < 
backup
)

1157 
p
 = 
backup
;

1158 *
p
 = 'z';

1159 *
p
 > 'a' && 
	`gë≥rm
(
backup
) >= 0)

1160 --*
p
;

1162 i‡(*
p
 == 'a')

1164 
	`vim_‰ì
(
backup
);

1165 
backup
 = 
NULL
;

1169 i‡(
backup
 !
NULL
)

1178 #ifde‡
AMIGA


1192 
Êock
 = 
	`Lock
((
UBYTE
 *)
‚ame
, ()
ACCESS_READ
);

1194 
	`vim_ªmove
(
backup
);

1195 #ifde‡
AMIGA


1196 i‡(
Êock
)

1197 
	`UnLock
(
Êock
);

1203 i‡(
	`vim_ª«me
(
‚ame
, 
backup
) == 0)

1206 
	`vim_‰ì
(
backup
);

1207 
backup
 = 
NULL
;

1210 i‡(
backup
 =
NULL
 && !
f‹˚ô
)

1212 
îrmsg
 = (
ch¨_u
 *)"Can't make backup file (use !Åo override)";

1213 
Áû
;

1220 i‡(
f‹˚ô
 && 
ovîwrôög
)

1221 
buf
->
b_p_ro
 = 
FALSE
;

1230 i‡(
ª£t_ch™ged
 && !
√wfûe
 && !
	`Ÿhîfûe
(
f‚ame
) &&

1231 !(
exôög
 && 
backup
 !
NULL
))

1232 
	`ml_¥e£rve
(
buf
, 
FALSE
);

1241 (
fd
 = 
	`›í
((*)
‚ame
, 
O_WRONLY
 | 
O_EXTRA
 | (
≠≥nd
 ?

1242 (
f‹˚ô
 ? (
O_APPEND
 | 
O_CREAT
) : O_APPEND) :

1243 (
O_CREAT
 | 
O_TRUNC
)), 0666)) < 0)

1250 i‡(!
îrmsg
)

1252 
îrmsg
 = (
ch¨_u
 *)"Can't open file for writing";

1253 i‡(
f‹˚ô
)

1255 #ifde‡
UNIX


1258 
≥rm
 |= 0200;

1259 
made_wrôabÀ
 = 
TRUE
;

1260 i‡(
°_ﬁd
.
°_uid
 !
	`gëuid
(Ë|| st_ﬁd.
°_gid
 !
	`gëgid
())

1261 
≥rm
 &= 0777;

1263 i‡(!
≠≥nd
)

1264 
	`vim_ªmove
(
‚ame
);

1272 i‡(
backup
 !
NULL
)

1274 #ifde‡
UNIX


1275 
°©
 
°
;

1284 i‡(
	`°©
((*)
‚ame
, &
°
) < 0)

1286 
	`vim_ª«me
(
backup
, 
‚ame
);

1288 i‡(
	`°©
((*)
‚ame
, &
°
) >= 0)

1289 
	`vim_ªmove
(
backup
);

1292 
	`vim_ª«me
(
backup
, 
‚ame
);

1295 
Áû
;

1297 
îrmsg
 = 
NULL
;

1299 i‡(
íd
 > 
buf
->
b_ml
.
ml_löe_cou¡
)

1300 
íd
 = 
buf
->
b_ml
.
ml_löe_cou¡
;

1301 
Àn
 = 0;

1302 
s
 = 
buf„r
;

1303 
nch¨s
 = 0;

1304 i‡(
buf
->
b_ml
.
ml_Êags
 & 
ML_EMPTY
)

1305 
°¨t
 = 
íd
 + 1;

1306 
 um
 = 
°¨t
;Ünum <
íd
; ++lnum)

1312 
±r
 = 
	`ml_gë_buf
(
buf
, 
 um
, 
FALSE
) - 1;

1313 (
c
 = *++
±r
Ë!
NUL
)

1315 i‡(
c
 =
NL
)

1316 *
s
 = 
NUL
;

1318 *
s
 = 
c
;

1319 ++
s
;

1320 i‡(++
Àn
 !
bufsize
)

1322 i‡(
	`wrôe_buf
(
fd
, 
buf„r
, 
bufsize
Ë=
FAIL
)

1324 
íd
 = 0;

1327 
nch¨s
 +
bufsize
;

1328 
s
 = 
buf„r
;

1329 
Àn
 = 0;

1332 i‡(
íd
 =0 || (
 um
 =íd && 
buf
->
b_p_bö
 &&

1333 (
 um
 =
wrôe_no_eﬁ_ um
 ||

1334 (
 um
 =
buf
->
b_ml
.
ml_löe_cou¡
 && !buf->
b_p_eﬁ
))))

1336 i‡(
buf
->
b_p_tx
)

1338 *
s
 = 
CR
;

1339 ++
s
;

1340 i‡(++
Àn
 =
bufsize
)

1342 i‡(
	`wrôe_buf
(
fd
, 
buf„r
, 
bufsize
Ë=
FAIL
)

1344 
íd
 = 0;

1347 
nch¨s
 +
bufsize
;

1348 
s
 = 
buf„r
;

1349 
Àn
 = 0;

1352 *
s
 = 
NL
;

1353 ++
s
;

1354 i‡(++
Àn
 =
bufsize
 && 
íd
)

1356 i‡(
	`wrôe_buf
(
fd
, 
buf„r
, 
bufsize
Ë=
FAIL
)

1358 
íd
 = 0;

1361 
nch¨s
 +
bufsize
;

1362 
s
 = 
buf„r
;

1363 
Àn
 = 0;

1366 i‡(
Àn
 && 
íd
)

1368 i‡(
	`wrôe_buf
(
fd
, 
buf„r
, 
Àn
Ë=
FAIL
)

1369 
íd
 = 0;

1370 
nch¨s
 +
Àn
;

1373 i‡(
	`˛o£
(
fd
) != 0)

1375 
îrmsg
 = (
ch¨_u
 *)"Close failed";

1376 
Áû
;

1378 #ifde‡
UNIX


1379 i‡(
made_wrôabÀ
)

1380 
≥rm
 &= ~0200;

1382 i‡(
≥rm
 >= 0)

1383 ()
	`£çîm
(
‚ame
, 
≥rm
);

1385 i‡(
íd
 == 0)

1387 
îrmsg
 = (
ch¨_u
 *)"writeÉrror (file system full?)";

1397 i‡(
backup
 !
NULL
)

1399 #ifde‡
UNIX


1400 
ch¨_u
 
c›ybuf
[
BUFSIZE
 + 1];

1401 
bfd
, 
buÊí
;

1403 i‡((
bfd
 = 
	`›í
((*)
backup
, 
O_RDONLY
 | 
O_EXTRA
)) >= 0)

1405 i‡((
fd
 = 
	`›í
((*)
‚ame
,

1406 
O_WRONLY
 | 
O_CREAT
 | 
O_TRUNC
 | 
O_EXTRA
, 0666)) >= 0)

1409 (
buÊí
 = 
	`ªad
(
bfd
, (*)
c›ybuf
, 
BUFSIZE
)) > 0)

1410 i‡(
	`wrôe_buf
(
fd
, 
c›ybuf
, 
buÊí
Ë=
FAIL
)

1412 i‡(
	`˛o£
(
fd
Ë>0 && 
buÊí
 == 0)

1413 
íd
 = 1;

1415 
	`˛o£
(
bfd
);

1418 i‡(
	`vim_ª«me
(
backup
, 
‚ame
) == 0)

1419 
íd
 = 1;

1422 
Áû
;

1425 
 um
 -
°¨t
;

1426 --
no_waô_ªtu∫
;

1428 #i‚de‡
UNIX


1430 i‡(!
did_cd
)

1431 
‚ame
 = 
s‚ame
;

1433 i‡(!
fûãrög
)

1435 
	`msg_add_‚ame
(
buf
, 
‚ame
);

1436 
c
 = 
FALSE
;

1437 i‡(
√wfûe
)

1439 
	`STRCAT
(
IObuff
, 
	`sh‹tmess
(
SHM_NEW
) ? "[New]" : "[New File]");

1440 
c
 = 
TRUE
;

1442 i‡(
	`msg_add_ãxtmode
(
buf
->
b_p_tx
))

1443 
c
 = 
TRUE
;

1444 
	`msg_add_löes
(
c
, ()
 um
, 
nch¨s
);

1445 i‡(!
	`sh‹tmess
(
SHM_WRITE
))

1446 
	`STRCAT
(
IObuff
, 
	`sh‹tmess
(
SHM_WRI
) ? " [w]" : " written");

1448 
	`msg_åunc
(
IObuff
);

1451 i‡(
ª£t_ch™ged
 && 
whﬁe
)

1453 
	`UNCHANGED
(
buf
);

1454 
	`u_unch™ged
(
buf
);

1461 i‡(!
exôög
 && 
ovîwrôög
)

1463 
	`ml_time°amp
(
buf
);

1464 
buf
->
b_nŸedôed
 = 
FALSE
;

1471 i‡(*
p_pm
)

1473 *
‹g
 = (*)
	`buf_mod«me
(
buf
, 
‚ame
, 
p_pm
);

1475 i‡(
backup
 !
NULL
)

1477 
°©
 
°
;

1483 i‡(
‹g
 =
NULL
)

1484 
	`EMSG
("patchmode: can't save original file");

1485 i‡(
	`°©
(
‹g
, &
°
) < 0)

1487 
	`vim_ª«me
(
backup
, (
ch¨_u
 *)
‹g
);

1488 
	`vim_‰ì
(
backup
);

1489 
backup
 = 
NULL
;

1498 
em±y_fd
;

1500 i‡(
‹g
 =
NULL
 || (
em±y_fd
 =

1501 
	`›í
(
‹g
, 
O_CREAT
 | 
O_EXTRA
, 0666)) < 0)

1502 
	`EMSG
("patchmode: can'tÅouchÉmpty original file");

1504 
	`˛o£
(
em±y_fd
);

1506 i‡(
‹g
 !
NULL
)

1508 
	`£çîm
((
ch¨_u
 *)
‹g
, 
	`gë≥rm
(
‚ame
) & 0777);

1509 
	`vim_‰ì
(
‹g
);

1516 i‡(!
p_bk
 && 
backup
 !
NULL
 && 
	`vim_ªmove
(backup) != 0)

1517 
	`EMSG
("Can't delete backup file");

1519 
noÁû
;

1521 
Áû
:

1522 --
no_waô_ªtu∫
;

1523 
noÁû
:

1525 
	`vim_‰ì
(
backup
);

1526 i‡(
buf„r
 !
smÆlbuf
)

1527 
	`vim_‰ì
(
buf„r
);

1529 i‡(
îrmsg
 !
NULL
)

1532 i‡(
p_eb
)

1533 
	`bìp_Êush
();

1535 
	`Êush_buf„rs
(
FALSE
);

1536 ()
	`£t_highlight
('e');

1537 
	`°¨t_highlight
();

1538 
	`fûemess
(
buf
,

1539 #i‚de‡
UNIX


1540 
did_cd
 ? 
‚ame
 : 
s‚ame
,

1542 
‚ame
,

1544 
îrmsg
);

1545 
ªtvÆ
 = 
FAIL
;

1546 i‡(
íd
 == 0)

1548 
	`MSG_OUTSTR
("\nWARNING: Original file may beÜost or damaged\n");

1549 
	`MSG_OUTSTR
("don't quitÅheÉditor untilÅhe file is sucessfully written!");

1552 
msg_s¸ﬁl
 = 
msg_ßve
;

1554 #ifde‡
AUTOCMD


1559 
ßve_buf
 = 
curbuf
;

1560 
curbuf
 = 
buf
;

1561 
curwö
->
w_buf„r
 = 
buf
;

1562 i‡(
≠≥nd
)

1563 
	`≠∂y_autocmds
(
EVENT_FILEAPPENDPOST
, 
‚ame
, fname);

1564 i‡(
fûãrög
)

1565 
	`≠∂y_autocmds
(
EVENT_FILTERWRITEPOST
, 
NULL
, 
‚ame
);

1566 i‡(
ª£t_ch™ged
 && 
whﬁe
)

1567 
	`≠∂y_autocmds
(
EVENT_BUFWRITEPOST
, 
‚ame
, fname);

1569 
	`≠∂y_autocmds
(
EVENT_FILEWRITEPOST
, 
‚ame
, fname);

1570 
curbuf
 = 
ßve_buf
;

1571 
curwö
->
w_buf„r
 = 
ßve_buf
;

1574  
ªtvÆ
;

1575 
	}
}

1581 
	$msg_add_‚ame
(
buf
, 
‚ame
)

1582 
BUF
 *
buf
;

1583 
ch¨_u
 *
‚ame
;

1586 
	`home_ª∂a˚
(
buf
, 
‚ame
, 
IObuff
 + 1, 
IOSIZE
 - 1);

1587 
IObuff
[0] = '"';

1588 
	`STRCAT
(
IObuff
, "\" ");

1589 
	}
}

1596 
	$msg_add_ãxtmode
(
ãxtmode
)

1597 
ãxtmode
;

1599 #ifde‡
USE_CRNL


1600 i‡(!
ãxtmode
)

1602 
	`STRCAT
(
IObuff
, 
	`sh‹tmess
(
SHM_TEXT
) ? "[notx]" : "[notextmode]");

1603  
TRUE
;

1606 i‡(
ãxtmode
)

1608 
	`STRCAT
(
IObuff
, 
	`sh‹tmess
(
SHM_TEXT
) ? "[tx]" : "[textmode]");

1609  
TRUE
;

1612  
FALSE
;

1613 
	}
}

1619 
	$msg_add_löes
(
ö£π_•a˚
, 
 um
, 
nch¨s
)

1620 
ö£π_•a˚
;

1621 
 um
;

1622 
nch¨s
;

1624 
ch¨_u
 *
p
;

1626 
p
 = 
IObuff
 + 
	`STRLEN
(IObuff);

1628 i‡(
ö£π_•a˚
)

1629 *
p
++ = ' ';

1630 i‡(
	`sh‹tmess
(
SHM_LINES
))

1631 
	`•rötf
((*)
p
, "%ldL, %ldC", 
 um
, 
nch¨s
);

1633 
	`•rötf
((*)
p
, "%ldÜine%s, %ld character%s",

1634 
 um
, 
	`∂uøl
(lnum),

1635 
nch¨s
, 
	`∂uøl
(nchars));

1636 
	}
}

1644 
	$wrôe_buf
(
fd
, 
buf
, 
Àn
)

1645 
fd
;

1646 
ch¨_u
 *
buf
;

1647 
Àn
;

1649 
wÀn
;

1651 
Àn
)

1653 
wÀn
 = 
	`wrôe
(
fd
, (*)
buf
, (
size_t
)
Àn
);

1654 i‡(
wÀn
 <= 0)

1655  
FAIL
;

1656 
Àn
 -
wÀn
;

1657 
buf
 +
wÀn
;

1659  
OK
;

1660 
	}
}

1673 
ch¨_u
 *

1674 
	$mod«me
(
‚ame
, 
ext
)

1675 
ch¨_u
 *
‚ame
, *
ext
;

1677  
	`buf_mod«me
(
curbuf
, 
‚ame
, 
ext
);

1678 
	}
}

1680 
ch¨_u
 *

1681 
	$buf_mod«me
(
buf
, 
‚ame
, 
ext
)

1682 
BUF
 *
buf
;

1683 
ch¨_u
 *
‚ame
, *
ext
;

1685 
ch¨_u
 *
ªtvÆ
;

1686 
ch¨_u
 *
s
;

1687 
ch¨_u
 *
e
;

1688 
ch¨_u
 *
±r
;

1689 
‚amñí
, 
exéí
;

1691 
exéí
 = 
	`STRLEN
(
ext
);

1697 i‡(
‚ame
 =
NULL
 || *‚amê=
NUL
)

1699 
ªtvÆ
 = 
	`Æloc
(()(
MAXPATHL
 + 
exéí
 + 3));

1700 i‡(
ªtvÆ
 =
NULL
)

1701  
NULL
;

1702 i‡(
	`mch_dú«me
(
ªtvÆ
, 
MAXPATHL
Ë=
FAIL
 ||

1703 (
‚amñí
 = 
	`STRLEN
(
ªtvÆ
)) == 0)

1705 
	`vim_‰ì
(
ªtvÆ
);

1706  
NULL
;

1708 i‡(!
	`i•©h£p
(
ªtvÆ
[
‚amñí
 - 1]))

1710 
ªtvÆ
[
‚amñí
++] = 
PATHSEP
;

1711 
ªtvÆ
[
‚amñí
] = 
NUL
;

1716 
‚amñí
 = 
	`STRLEN
(
‚ame
);

1717 
ªtvÆ
 = 
	`Æloc
(()(
‚amñí
 + 
exéí
 + 2));

1718 i‡(
ªtvÆ
 =
NULL
)

1719  
NULL
;

1720 
	`STRCPY
(
ªtvÆ
, 
‚ame
);

1729 
±r
 = 
ªtvÆ
 + 
‚amñí
;Ötr >=Ñetval;Ötr--)

1731 i‡(*
ext
 == '.'

1732 #ifde‡
USE_LONG_FNAME


1733 && (!
USE_LONG_FNAME
 || 
buf
->
b_p_¢
 || buf->
b_sh‹äame
)

1735 #i‚de‡
SHORT_FNAME


1736 && (
buf
->
b_p_¢
 || buf->
b_sh‹äame
)

1740 i‡(*
±r
 == '.')

1741 *
±r
 = '_';

1742 i‡(
	`i•©h£p
(*
±r
))

1745 
±r
++;

1748 #i‚de‡
SHORT_FNAME


1749 i‡(
	`STRLEN
(
±r
Ë> ()
BASENAMELEN
)

1750 
±r
[
BASENAMELEN
] = '\0';

1753 
s
 = 
±r
 + 
	`STRLEN
(ptr);

1758 #ifde‡
USE_LONG_FNAME


1759 i‡(!
USE_LONG_FNAME
 || 
buf
->
b_p_¢
 || buf->
b_sh‹äame
)

1761 #i‚de‡
SHORT_FNAME


1762 i‡(
buf
->
b_p_¢
 || buf->
b_sh‹äame
)

1770 i‡(
‚ame
 =
NULL
 || *‚amê=
NUL
)

1772 i‡(*
ext
 == '.')

1773 *
s
++ = '_';

1779 i‡(*
ext
 == '.')

1781 i‡(
s
 - 
±r
 > (
size_t
)8)

1783 
s
 = 
±r
 + 8;

1784 *
s
 = '\0';

1791 i‡((
e
 = 
	`vim_°rchr
(
±r
, '.')Ë=
NULL
)

1792 *
s
++ = '.';

1797 i‡(()
	`STRLEN
(
e
Ë+ 
exéí
 > 4)

1798 
s
 = 
e
 + 4 - 
exéí
;

1800 #ifde‡
OS2


1806 i‡((
‚ame
 =
NULL
 || *‚amê=
NUL
Ë&& *
ext
 == '.')

1807 *
s
++ = '_';

1814 
	`STRCPY
(
s
, 
ext
);

1820 i‡(
‚ame
 !
NULL
 && 
	`STRCMP
(‚ame, 
ªtvÆ
) == 0)

1823 --
s
 >
±r
)

1825 i‡(*
s
 != '_')

1827 *
s
 = '_';

1831 i‡(
s
 < 
±r
)

1832 *
±r
 = 'v';

1834  
ªtvÆ
;

1835 
	}
}

1845 
	$vim_fgës
(
buf
, 
size
, 
Â
)

1846 
ch¨_u
 *
buf
;

1847 
size
;

1848 
FILE
 *
Â
;

1850 *
eof
;

1852 
buf
[
size
 - 2] = 
NUL
;

1853 
eof
 = 
	`fgës
((*)
buf
, 
size
, 
Â
);

1854 i‡(
buf
[
size
 - 2] !
NUL
 && buf[size - 2] != '\n')

1856 
buf
[
size
 - 1] = 
NUL
;

1861 
IObuff
[
IOSIZE
 - 2] = 
NUL
;

1862 
	`fgës
((*)
IObuff
, 
IOSIZE
, 
Â
);

1863 } 
IObuff
[
IOSIZE
 - 2] !
NUL
 && IObuff[IOSIZE - 2] != '\n');

1865  (
eof
 =
NULL
);

1866 
	}
}

1874 
	$vim_ª«me
(
‰om
, 
to
)

1875 
ch¨_u
 *
‰om
;

1876 
ch¨_u
 *
to
;

1878 
fd_ö
;

1879 
fd_out
;

1880 
n
;

1881 *
îrmsg
 = 
NULL
;

1888 
	`vim_ªmove
(
to
);

1893 i‡(
	`ª«me
((*)
‰om
, (*)
to
) == 0)

1899 
fd_ö
 = 
	`›í
((*)
‰om
, 
O_RDONLY
 | 
O_EXTRA
);

1900 i‡(
fd_ö
 == -1)

1902 
fd_out
 = 
	`¸ót
((*)
to
, 0666);

1903 i‡(
fd_out
 == -1)

1905 
	`˛o£
(
fd_ö
);

1908 (
n
 = 
	`ªad
(
fd_ö
, (*)
IObuff
, (
size_t
)
IOSIZE
)) > 0)

1909 i‡(
	`wrôe
(
fd_out
, (*)
IObuff
, (
size_t
)
n
) !=Ç)

1911 
îrmsg
 = "writingÅo";

1914 
	`˛o£
(
fd_ö
);

1915 i‡(
	`˛o£
(
fd_out
) < 0)

1916 
îrmsg
 = "closing";

1917 i‡(
n
 < 0)

1919 
îrmsg
 = "reading";

1920 
to
 = 
‰om
;

1922 i‡(
îrmsg
 !
NULL
)

1924 
	`•rötf
((*)
IObuff
, "Eº‹ %†'%s'", 
îrmsg
, 
to
);

1925 
	`emsg
(
IObuff
);

1928 
	`vim_ªmove
(
‰om
);

1930 
	}
}

1939 
	$check_time°amps
()

1941 
BUF
 *
buf
;

1943 i‡(!
	`°uff_em±y
(Ë|| 
globÆ_busy
 || !
	`ty≥buf_ty≥d
()

1944 #ifde‡
AUTOCMD


1945 || 
autocmd_busy


1948 
√ed_check_time°amps
 = 
TRUE
;

1951 ++
no_waô_ªtu∫
;

1952 
buf
 = 
fú°buf
; bu‡!
NULL
; bu‡buf->
b_√xt
)

1953 
	`buf_check_time°amp
(
buf
);

1954 --
no_waô_ªtu∫
;

1955 
√ed_check_time°amps
 = 
FALSE
;

1957 
	}
}

1963 
	$buf_check_time°amp
(
buf
)

1964 
BUF
 *
buf
;

1966 
°©
 
°
;

1967 
ch¨_u
 *
∑th
;

1969 i‡–
buf
->
b_fûíame
 !
NULL
 &&

1970 
buf
->
b_ml
.
ml_mÂ
 !
NULL
 &&

1971 !
buf
->
b_nŸedôed
 &&

1972 
buf
->
b_mtime
 != 0 &&

1973 
	`°©
((*)
buf
->
b_fûíame
, &
°
) >= 0 &&

1974 
buf
->
b_mtime
 !
°
.
°_mtime
)

1976 
∑th
 = 
	`home_ª∂a˚_ßve
(
buf
, buf->
b_xfûíame
);

1977 i‡(
∑th
 !
NULL
)

1979 
	`EMSG2
("Warning: File \"%s\" has changed sinceÉditing started",

1980 
∑th
);

1981 
buf
->
b_mtime
 = 
°
.
°_mtime
;

1982 
	`vim_‰ì
(
∑th
);

1985 
	}
}

	@src/getchar.c

18 
	~"vim.h
"

19 
	~"globÆs.h
"

20 
	~"¥Ÿo.h
"

21 
	~"›ti⁄.h
"

26 
	sbufblock


28 
bufblock
 *
	mb_√xt
;

29 
ch¨_u
 
	mb_°r
[1];

32 
	#MINIMAL_SIZE
 20

	)

37 
	sbuffhódî


39 
bufblock
 
	mbh_fú°
;

40 
bufblock
 *
	mbh_cuº
;

41 
	mbh_ödex
;

42 
	mbh_•a˚
;

45 
buffhódî
 
	g°uffbuff
 = {{
NULL
, {
NUL
}}, NULL, 0, 0};

46 
buffhódî
 
	gªdobuff
 = {{
NULL
, {
NUL
}}, NULL, 0, 0};

47 
buffhódî
 
	gﬁd_ªdobuff
 = {{
NULL
, {
NUL
}}, NULL, 0, 0};

48 
buffhódî
 
	gªc‹dbuff
 = {{
NULL
, {
NUL
}}, NULL, 0, 0};

54 
	gblock_ªdo
 = 
FALSE
;

59 
	sm≠block


61 
m≠block
 *
	mm_√xt
;

62 
ch¨_u
 *
	mm_keys
;

63 
	mm_keyÀn
;

64 
ch¨_u
 *
	mm_°r
;

65 
	mm_mode
;

66 
	mm_n‹em≠
;

69 
m≠block
 
	gm≠li°
 = {
NULL
, NULL, 0, NULL, 0, 0};

90 
ch¨_u
 *
	gn‹em≠buf
 = 
NULL
;

91 
	#TYPELEN_INIT
 (3 * (
MAXMAPLEN
 + 3))

	)

92 
ch¨_u
 
	gty≥buf_öô
[
TYPELEN_INIT
];

93 
ch¨_u
 
	gn‹em≠buf_öô
[
TYPELEN_INIT
];

95 
	gty≥m≠Àn
 = 0;

96 
	gno_abbr_˙t
 = 0;

97 
	gœ°_ªc‹ded_Àn
 = 0;

99 
‰ì_buff
 
__ARGS
((
buffhódî
 *));

100 
ch¨_u
 *
gë_bufc⁄t
 
__ARGS
((
buffhódî
 *, ));

101 
add_buff
 
__ARGS
((
buffhódî
 *, 
ch¨_u
 *));

102 
add_num_buff
 
__ARGS
((
buffhódî
 *, ));

103 
add_ch¨_buff
 
__ARGS
((
buffhódî
 *, ));

104 
ªad_°uff
 
__ARGS
(());

105 
°¨t_°uff
 
__ARGS
(());

106 
ªad_ªdo
 
__ARGS
((, ));

107 
c›y_ªdo
 
__ARGS
(());

108 
öô_ty≥buf
 
__ARGS
(());

109 
gŸch¨s
 
__ARGS
((
ch¨_u
 *, ));

110 
vgë‹≥ek
 
__ARGS
(());

111 
öch¨
 
__ARGS
((
ch¨_u
 *, , ));

112 
m≠_‰ì
 
__ARGS
((
m≠block
 *));

113 
showm≠
 
__ARGS
((
m≠block
 *));

119 
	$‰ì_buff
(
buf
)

120 
buffhódî
 *
buf
;

122 
bufblock
 *
p
, *
≈
;

124 
p
 = 
buf
->
bh_fú°
.
b_√xt
;Ö !
NULL
;Ö = 
≈
)

126 
≈
 = 
p
->
b_√xt
;

127 
	`vim_‰ì
(
p
);

129 
buf
->
bh_fú°
.
b_√xt
 = 
NULL
;

130 
	}
}

135 
ch¨_u
 *

136 
	$gë_bufc⁄t
(
buf„r
, 
dozîo
)

137 
buffhódî
 *
buf„r
;

138 
dozîo
;

140 
l⁄g_u
 
cou¡
 = 0;

141 
ch¨_u
 *
p
 = 
NULL
;

142 
ch¨_u
 *
p2
;

143 
ch¨_u
 *
°r
;

144 
bufblock
 *
bp
;

147 
bp
 = 
buf„r
->
bh_fú°
.
b_√xt
; b∞!
NULL
; bp = bp->b_next)

148 
cou¡
 +
	`STRLEN
(
bp
->
b_°r
);

150 i‡((
cou¡
 || 
dozîo
Ë&& (
p
 = 
	`œŒoc
(cou¡ + 1, 
TRUE
)Ë!
NULL
)

152 
p2
 = 
p
;

153 
bp
 = 
buf„r
->
bh_fú°
.
b_√xt
; b∞!
NULL
; bp = bp->b_next)

154 
°r
 = 
bp
->
b_°r
; *str; )

155 *
p2
++ = *
°r
++;

156 *
p2
 = 
NUL
;

158  (
p
);

159 
	}
}

165 
ch¨_u
 *

166 
	$gë_ªc‹ded
()

168 
ch¨_u
 *
p
;

169 
size_t
 
Àn
;

171 
p
 = 
	`gë_bufc⁄t
(&
ªc‹dbuff
, 
TRUE
);

172 
	`‰ì_buff
(&
ªc‹dbuff
);

177 
Àn
 = 
	`STRLEN
(
p
);

178 i‡(()
Àn
 >
œ°_ªc‹ded_Àn
)

179 
p
[
Àn
 - 
œ°_ªc‹ded_Àn
] = 
NUL
;

180  (
p
);

181 
	}
}

186 
ch¨_u
 *

187 
	$gë_ö£πed
()

189 (
	`gë_bufc⁄t
(&
ªdobuff
, 
FALSE
));

190 
	}
}

196 
	$add_buff
(
buf
, 
s
)

197 
buffhódî
 *
buf
;

198 
ch¨_u
 *
s
;

200 
bufblock
 *
p
;

201 
l⁄g_u
 
n
;

202 
l⁄g_u
 
Àn
;

204 i‡((
n
 = 
	`STRLEN
(
s
)) == 0)

207 i‡(
buf
->
bh_fú°
.
b_√xt
 =
NULL
)

209 
buf
->
bh_•a˚
 = 0;

210 
buf
->
bh_cuº
 = &(buf->
bh_fú°
);

212 i‡(
buf
->
bh_cuº
 =
NULL
)

214 
	`EMSG
("AddÅoÑead buffer");

217 i‡(
buf
->
bh_ödex
 != 0)

218 
	`STRCPY
(
buf
->
bh_fú°
.
b_√xt
->
b_°r
,

219 
buf
->
bh_fú°
.
b_√xt
->
b_°r
 + buf->
bh_ödex
);

220 
buf
->
bh_ödex
 = 0;

222 i‡(
buf
->
bh_•a˚
 >()
n
)

224 
	`°rˇt
((*)
buf
->
bh_cuº
->
b_°r
, (*)
s
);

225 
buf
->
bh_•a˚
 -
n
;

229 i‡(
n
 < 
MINIMAL_SIZE
)

230 
Àn
 = 
MINIMAL_SIZE
;

232 
Àn
 = 
n
;

233 
p
 = (
bufblock
 *)
	`œŒoc
((
l⁄g_u
)((bufblockË+ 
Àn
), 
TRUE
);

234 i‡(
p
 =
NULL
)

236 
buf
->
bh_•a˚
 = 
Àn
 - 
n
;

237 
	`STRCPY
(
p
->
b_°r
, 
s
);

239 
p
->
b_√xt
 = 
buf
->
bh_cuº
->b_next;

240 
buf
->
bh_cuº
->
b_√xt
 = 
p
;

241 
buf
->
bh_cuº
 = 
p
;

244 
	}
}

247 
	$add_num_buff
(
buf
, 
n
)

248 
buffhódî
 *
buf
;

249 
n
;

251 
ch¨_u
 
numbî
[32];

253 
	`•rötf
((*)
numbî
, "%ld", 
n
);

254 
	`add_buff
(
buf
, 
numbî
);

255 
	}
}

258 
	$add_ch¨_buff
(
buf
, 
c
)

259 
buffhódî
 *
buf
;

260 
c
;

262 
ch¨_u
 
ãmp
[4];

267 i‡(
	`IS_SPECIAL
(
c
Ë|| c =
K_SPECIAL
 || c =
NUL
)

269 
ãmp
[0] = 
K_SPECIAL
;

270 
ãmp
[1] = 
	`K_SECOND
(
c
);

271 
ãmp
[2] = 
	`K_THIRD
(
c
);

272 
ãmp
[3] = 
NUL
;

276 
ãmp
[0] = 
c
;

277 
ãmp
[1] = 
NUL
;

279 
	`add_buff
(
buf
, 
ãmp
);

280 
	}
}

287 
	$ªad_°uff
(
adv™˚
)

288 
adv™˚
;

290 
ch¨_u
 
c
;

291 
bufblock
 *
cuº
;

294 i‡(
°uffbuff
.
bh_fú°
.
b_√xt
 =
NULL
)

295  
NUL
;

297 
cuº
 = 
°uffbuff
.
bh_fú°
.
b_√xt
;

298 
c
 = 
cuº
->
b_°r
[
°uffbuff
.
bh_ödex
];

300 i‡(
adv™˚
)

302 i‡(
cuº
->
b_°r
[++
°uffbuff
.
bh_ödex
] =
NUL
)

304 
°uffbuff
.
bh_fú°
.
b_√xt
 = 
cuº
->b_next;

305 
	`vim_‰ì
(
cuº
);

306 
°uffbuff
.
bh_ödex
 = 0;

309  
c
;

310 
	}
}

316 
	$°¨t_°uff
()

318 i‡(
°uffbuff
.
bh_fú°
.
b_√xt
 !
NULL
)

320 
°uffbuff
.
bh_cuº
 = &(°uffbuff.
bh_fú°
);

321 
°uffbuff
.
bh_•a˚
 = 0;

323 
	}
}

329 
	$°uff_em±y
()

331  (
°uffbuff
.
bh_fú°
.
b_√xt
 =
NULL
);

332 
	}
}

340 
	$Êush_buf„rs
(
ty≥ahód
)

341 
ty≥ahód
;

343 
	`öô_ty≥buf
();

345 
	`°¨t_°uff
();

346 
	`ªad_°uff
(
TRUE
Ë!
NUL
)

349 i‡(
ty≥ahód
)

357 
	`öch¨
(
ty≥buf
, 
MAXMAPLEN
, 10L))

359 
ty≥off
 = 
MAXMAPLEN
;

360 
ty≥Àn
 = 0;

364 
ty≥off
 +
ty≥m≠Àn
;

365 
ty≥Àn
 -
ty≥m≠Àn
;

367 
ty≥m≠Àn
 = 0;

368 
no_abbr_˙t
 = 0;

369 
	}
}

376 
	$Re£tRedobuff
()

378 i‡(!
block_ªdo
)

380 
	`‰ì_buff
(&
ﬁd_ªdobuff
);

381 
ﬁd_ªdobuff
 = 
ªdobuff
;

382 
ªdobuff
.
bh_fú°
.
b_√xt
 = 
NULL
;

384 
	}
}

387 
	$AµídToRedobuff
(
s
)

388 
ch¨_u
 *
s
;

390 i‡(!
block_ªdo
)

391 
	`add_buff
(&
ªdobuff
, 
s
);

392 
	}
}

395 
	$AµídCh¨ToRedobuff
(
c
)

396 
c
;

398 i‡(!
block_ªdo
)

399 
	`add_ch¨_buff
(&
ªdobuff
, 
c
);

400 
	}
}

403 
	$AµídNumbîToRedobuff
(
n
)

404 
n
;

406 i‡(!
block_ªdo
)

407 
	`add_num_buff
(&
ªdobuff
, 
n
);

408 
	}
}

411 
	$°uffRódbuff
(
s
)

412 
ch¨_u
 *
s
;

414 
	`add_buff
(&
°uffbuff
, 
s
);

415 
	}
}

418 
	$°uffch¨Ródbuff
(
c
)

419 
c
;

421 
	`add_ch¨_buff
(&
°uffbuff
, 
c
);

422 
	}
}

425 
	$°uf‚umRódbuff
(
n
)

426 
n
;

428 
	`add_num_buff
(&
°uffbuff
, 
n
);

429 
	}
}

439 
	$ªad_ªdo
(
öô
, 
ﬁd_ªdo
)

440 
öô
;

441 
ﬁd_ªdo
;

443 
bufblock
 *
bp
;

444 
ch¨_u
 *
p
;

445 
c
;

447 i‡(
öô
)

449 i‡(
ﬁd_ªdo
)

450 
bp
 = 
ﬁd_ªdobuff
.
bh_fú°
.
b_√xt
;

452 
bp
 = 
ªdobuff
.
bh_fú°
.
b_√xt
;

453 i‡(
bp
 =
NULL
)

454  
FAIL
;

455 
p
 = 
bp
->
b_°r
;

456  
OK
;

458 i‡((
c
 = *
p
Ë!
NUL
)

460 i‡(
c
 =
K_SPECIAL
)

462 
c
 = 
	`TO_SPECIAL
(
p
[1],Ö[2]);

463 
p
 += 2;

465 i‡(*++
p
 =
NUL
 && 
bp
->
b_√xt
 !
NULL
)

467 
bp
 = bp->
b_√xt
;

468 
p
 = 
bp
->
b_°r
;

471  
c
;

472 
	}
}

479 
	$c›y_ªdo
(
ﬁd_ªdo
)

480 
ﬁd_ªdo
;

482 
c
;

484 (
c
 = 
	`ªad_ªdo
(
FALSE
, 
ﬁd_ªdo
)Ë!
NUL
)

485 
	`°uffch¨Ródbuff
(
c
);

486 
	}
}

498 
	$°¨t_ªdo
(
cou¡
, 
ﬁd_ªdo
)

499 
cou¡
;

500 
ﬁd_ªdo
;

502 
c
;

504 i‡(
	`ªad_ªdo
(
TRUE
, 
ﬁd_ªdo
Ë=
FAIL
)

505  
FAIL
;

507 
c
 = 
	`ªad_ªdo
(
FALSE
, 
ﬁd_ªdo
);

510 i‡(
c
 == '"')

512 
	`add_buff
(&
°uffbuff
, (
ch¨_u
 *)"\"");

513 
c
 = 
	`ªad_ªdo
(
FALSE
, 
ﬁd_ªdo
);

516 i‡(
c
 >= '1' && c < '9')

517 ++
c
;

518 
	`add_ch¨_buff
(&
°uffbuff
, 
c
);

519 
c
 = 
	`ªad_ªdo
(
FALSE
, 
ﬁd_ªdo
);

522 i‡(
c
 == 'v')

524 
VIsuÆ
 = 
curwö
->
w_curs‹
;

525 
VIsuÆ_a˘ive
 = 
TRUE
;

526 
ªdo_VIsuÆ_busy
 = 
TRUE
;

527 
c
 = 
	`ªad_ªdo
(
FALSE
, 
ﬁd_ªdo
);

531 i‡(
cou¡
)

533 
	`isdigô
(
c
))

534 
c
 = 
	`ªad_ªdo
(
FALSE
, 
ﬁd_ªdo
);

535 
	`add_num_buff
(&
°uffbuff
, 
cou¡
);

539 
	`add_ch¨_buff
(&
°uffbuff
, 
c
);

540 
	`c›y_ªdo
(
ﬁd_ªdo
);

541  
OK
;

542 
	}
}

550 
	$°¨t_ªdo_ös
()

552 
c
;

554 i‡(
	`ªad_ªdo
(
TRUE
, 
FALSE
Ë=
FAIL
)

555  
FAIL
;

556 
	`°¨t_°uff
();

559 (
c
 = 
	`ªad_ªdo
(
FALSE
, FALSE)Ë!
NUL
)

561 
c
 = 
	`TO_UPPER
(c);

562 i‡(
	`vim_°rchr
((
ch¨_u
 *)"AIRO", 
c
Ë!
NULL
)

564 i‡(
c
 == 'O')

565 
	`°uffRódbuff
(
NL_STR
);

571 
	`c›y_ªdo
(
FALSE
);

572 
block_ªdo
 = 
TRUE
;

573  
OK
;

574 
	}
}

577 
	$£t_ªdo_ös
()

579 
block_ªdo
 = 
TRUE
;

580 
	}
}

583 
	$°›_ªdo_ös
()

585 
block_ªdo
 = 
FALSE
;

586 
	}
}

594 
	$öô_ty≥buf
()

596 i‡(
ty≥buf
 =
NULL
)

598 
ty≥buf
 = 
ty≥buf_öô
;

599 
n‹em≠buf
 = 
n‹em≠buf_öô
;

600 
ty≥buÊí
 = 
TYPELEN_INIT
;

601 
ty≥Àn
 = 0;

602 
ty≥off
 = 0;

604 
	}
}

620 
	$ös_ty≥buf
(
°r
, 
n‹em≠
, 
off£t
, 
nŸty≥d
)

621 
ch¨_u
 *
°r
;

622 
n‹em≠
;

623 
off£t
;

624 
nŸty≥d
;

626 
ch¨_u
 *
s1
, *
s2
;

627 
√wÀn
;

628 
addÀn
;

629 
i
;

630 
√woff
;

632 
	`öô_ty≥buf
();

634 
addÀn
 = 
	`STRLEN
(
°r
);

638 i‡(
off£t
 =0 && 
addÀn
 <
ty≥off
)

640 
ty≥off
 -
addÀn
;

641 
	`vim_memmove
(
ty≥buf
 + 
ty≥off
, 
°r
, (
size_t
)
addÀn
);

650 
√woff
 = 
MAXMAPLEN
 + 4;

651 
√wÀn
 = 
ty≥Àn
 + 
addÀn
 + 
√woff
 + 2 * (
MAXMAPLEN
 + 4);

652 i‡(
√wÀn
 < 0)

654 
	`emsg
(
e_toocom∂
);

655 
	`£tcurs‹
();

656  
FAIL
;

658 
s1
 = 
	`Æloc
(
√wÀn
);

659 i‡(
s1
 =
NULL
)

660  
FAIL
;

661 
s2
 = 
	`Æloc
(
√wÀn
);

662 i‡(
s2
 =
NULL
)

664 
	`vim_‰ì
(
s1
);

665  
FAIL
;

667 
ty≥buÊí
 = 
√wÀn
;

670 
	`vim_memmove
(
s1
 + 
√woff
, 
ty≥buf
 + 
ty≥off
, (
size_t
)
off£t
);

672 
	`vim_memmove
(
s1
 + 
√woff
 + 
off£t
, 
°r
, (
size_t
)
addÀn
);

675 
	`vim_memmove
(
s1
 + 
√woff
 + 
off£t
 + 
addÀn
, 
ty≥buf
 + 
ty≥off
 + offset,

676 (
size_t
)(
ty≥Àn
 - 
off£t
 + 1));

677 i‡(
ty≥buf
 !
ty≥buf_öô
)

678 
	`vim_‰ì
(
ty≥buf
);

679 
ty≥buf
 = 
s1
;

681 
	`vim_memmove
(
s2
 + 
√woff
, 
n‹em≠buf
 + 
ty≥off
, (
size_t
)
off£t
);

682 
	`vim_memmove
(
s2
 + 
√woff
 + 
off£t
 + 
addÀn
,

683 
n‹em≠buf
 + 
ty≥off
 + 
off£t
, (
size_t
)(
ty≥Àn
 - offset));

684 i‡(
n‹em≠buf
 !
n‹em≠buf_öô
)

685 
	`vim_‰ì
(
n‹em≠buf
);

686 
n‹em≠buf
 = 
s2
;

688 
ty≥off
 = 
√woff
;

690 
ty≥Àn
 +
addÀn
;

699 i‡(
n‹em≠
 < 0)

700 
n‹em≠
 = 
addÀn
;

701 
i
 = 0; i < 
addÀn
; ++i)

702 
n‹em≠buf
[
ty≥off
 + 
i
 + 
off£t
] = (
n‹em≠
-- > 0);

705 i‡(
nŸty≥d
)

706 
ty≥m≠Àn
 +
addÀn
;

707 i‡(
no_abbr_˙t
 && 
off£t
 == 0)

708 
no_abbr_˙t
 +
addÀn
;

710  
OK
;

711 
	}
}

718 
	$ty≥buf_ty≥d
()

720  
ty≥m≠Àn
 == 0;

721 
	}
}

727 
	$dñ_ty≥buf
(
Àn
, 
off£t
)

728 
Àn
;

729 
off£t
;

731 
i
;

733 
ty≥Àn
 -
Àn
;

737 i‡(
off£t
 =0 && 
ty≥buÊí
 - (
ty≥off
 + 
Àn
Ë>
MAXMAPLEN
 + 3)

738 
ty≥off
 +
Àn
;

744 
i
 = 
ty≥off
 + 
off£t
;

748 i‡(
ty≥off
 > 
MAXMAPLEN
)

750 
	`vim_memmove
(
ty≥buf
 + 
MAXMAPLEN
,Åy≥bu‡+ 
ty≥off
, (
size_t
)
off£t
);

751 
	`vim_memmove
(
n‹em≠buf
 + 
MAXMAPLEN
,Ç‹em≠bu‡+ 
ty≥off
,

752 (
size_t
)
off£t
);

753 
ty≥off
 = 
MAXMAPLEN
;

756 
	`vim_memmove
(
ty≥buf
 + 
ty≥off
 + 
off£t
,Åy≥bu‡+ 
i
 + 
Àn
,

757 (
size_t
)(
ty≥Àn
 - 
off£t
 + 1));

759 
	`vim_memmove
(
n‹em≠buf
 + 
ty≥off
 + 
off£t
,Ç‹em≠bu‡+ 
i
 + 
Àn
,

760 (
size_t
)(
ty≥Àn
 - 
off£t
));

763 i‡(
ty≥m≠Àn
 > 
off£t
)

765 i‡(
ty≥m≠Àn
 < 
off£t
 + 
Àn
)

766 
ty≥m≠Àn
 = 
off£t
;

768 
ty≥m≠Àn
 -
Àn
;

770 i‡(
no_abbr_˙t
 > 
off£t
)

772 i‡(
no_abbr_˙t
 < 
off£t
 + 
Àn
)

773 
no_abbr_˙t
 = 
off£t
;

775 
no_abbr_˙t
 -
Àn
;

777 
	}
}

784 
	$gŸch¨s
(
s
, 
Àn
)

785 
ch¨_u
 *
s
;

786 
Àn
;

788 
c
;

789 
ch¨_u
 
buf
[2];

792 i‡(
Rec‹dög
)

793 
œ°_ªc‹ded_Àn
 +
Àn
;

795 
buf
[1] = 
NUL
;

796 
Àn
--)

798 
c
 = *
s
++;

799 
	`upd©es¸ùt
(
c
);

801 i‡(
Rec‹dög
)

803 
buf
[0] = 
c
;

804 
	`add_buff
(&
ªc‹dbuff
, 
buf
);

812 i‡((!(
Sèã
 & (
INSERT
 + 
CMDLINE
)Ë|| 
¨row_u£d
) &&

813 
s¸ùtö
[
curs¸ùt
] =
NULL
)

814 
	`u_sync
();

815 
	}
}

822 
	$›ís¸ùt
(
«me
)

823 
ch¨_u
 *
«me
;

825 
ﬁdcurs¸ùt
;

827 i‡(
curs¸ùt
 + 1 =
NSCRIPT
)

829 
	`emsg
(
e_√°ög
);

830  
FAIL
;

834 i‡(
s¸ùtö
[
curs¸ùt
] !
NULL
)

835 ++
curs¸ùt
;

837 
	`ex∑nd_ív
(
«me
, 
NameBuff
, 
MAXPATHL
);

838 i‡((
s¸ùtö
[
curs¸ùt
] = 
	`f›í
((*)
NameBuff
, 
READBIN
)Ë=
NULL
)

840 
	`emsg2
(
e_nŸ›í
, 
«me
);

841 i‡(
curs¸ùt
)

842 --
curs¸ùt
;

843  
FAIL
;

849 i‡(
globÆ_busy
)

851 
Sèã
 = 
NORMAL
;

852 
ﬁdcurs¸ùt
 = 
curs¸ùt
;

855 
	`n‹mÆ
();

856 
	`v≥ekc
();

858 
s¸ùtö
[
ﬁdcurs¸ùt
]);

859 
Sèã
 = 
CMDLINE
;

862  
OK
;

863 
	}
}

873 
	$upd©es¸ùt
(
c
)

874 
c
;

876 
cou¡
 = 0;

878 i‡(
c
 && 
s¸ùtout
)

879 
	`putc
(
c
, 
s¸ùtout
);

880 i‡(
c
 =0 || (
p_uc
 > 0 && ++
cou¡
 >=Ö_uc))

882 
	`ml_sync_Æl
(
c
 =0, 
TRUE
);

883 
cou¡
 = 0;

885 
	}
}

887 
	#K_NEEDMORET
 -1

	)

888 
	#M_NEEDMORET
 -2

	)

890 
	gﬁd_ch¨
 = -1;

893 
	$vgëc
()

895 
c
, 
c2
;

897 
mod_mask
 = 0x0;

898 
œ°_ªc‹ded_Àn
 = 0;

901 i‡(
mod_mask
)

903 ++
no_m≠pög
;

904 ++
Ælow_keys
;

906 
c
 = 
	`vgë‹≥ek
(
TRUE
);

907 i‡(
mod_mask
)

909 --
no_m≠pög
;

910 --
Ælow_keys
;

914 i‡(
c
 =
K_SPECIAL
)

916 ++
no_m≠pög
;

917 
c2
 = 
	`vgë‹≥ek
(
TRUE
);

918 
c
 = 
	`vgë‹≥ek
(
TRUE
);

919 --
no_m≠pög
;

920 i‡(
c2
 =
KS_MODIFIER
)

922 
mod_mask
 = 
c
;

925 
c
 = 
	`TO_SPECIAL
(
c2
, c);

927 #ifde‡
MSDOS


932 i‡(
c
 =
K_NUL
 && 
	`v≥ekc
() == 3)

933 ()
	`vgë‹≥ek
(
TRUE
);

936  
	`check_shi·ed_•ec_key
(
c
);

938 
	}
}

941 
	$v≥ekc
()

943  (
	`vgë‹≥ek
(
FALSE
));

944 
	}
}

951 
	$ch¨_avaû
()

953 
ªtvÆ
;

955 ++
no_m≠pög
;

956 
ªtvÆ
 = 
	`vgë‹≥ek
(
FALSE
);

957 --
no_m≠pög
;

958  (
ªtvÆ
 !
NUL
);

959 
	}
}

962 
	$vungëc
(
c
)

963 
c
;

965 
ﬁd_ch¨
 = 
c
;

966 
	}
}

983 
	$vgë‹≥ek
(
adv™˚
)

984 
adv™˚
;

986 
c
, 
c1
;

987 
keyÀn
 = 0;

988 #ifde‡
AMIGA


989 
ch¨_u
 *
s
;

991 
m≠block
 *
mp
;

992 
timedout
 = 
FALSE
;

994 
m≠dïth
 = 0;

995 
mode_dñëed
 = 
FALSE
;

996 
loˇl_Sèã
;

997 
mÀn
;

998 
max_mÀn
;

999 
i
;

1000 #ifde‡
USE_GUI


1001 
idx
;

1008 
loˇl_Sèã
 = 
Sèã
;

1009 i‡((
Sèã
 & 
NORMAL
Ë&& 
VIsuÆ_a˘ive
)

1010 
loˇl_Sèã
 = 
VISUAL
;

1015 i‡(
ﬁd_ch¨
 >= 0)

1017 
c
 = 
ﬁd_ch¨
;

1018 i‡(
adv™˚
)

1019 
ﬁd_ch¨
 = -1;

1020  
c
;

1023 i‡(
adv™˚
)

1024 
KeyStuf„d
 = 
FALSE
;

1026 
	`öô_ty≥buf
();

1027 
	`°¨t_°uff
();

1028 i‡(
adv™˚
 && 
ty≥m≠Àn
 == 0)

1029 
Exec_ªg
 = 
FALSE
;

1035 
c
 = 
	`ªad_°uff
(
adv™˚
);

1036 i‡(
c
 !
NUL
 && !
gŸ_öt
)

1038 i‡(
adv™˚
)

1040 
KeyTy≥d
 = 
FALSE
;

1041 
KeyStuf„d
 = 
TRUE
;

1043 i‡(
no_abbr_˙t
 == 0)

1044 
no_abbr_˙t
 = 1;

1057 
	`mch_bªakcheck
();

1058 i‡(
gŸ_öt
)

1060 
c
 = 
	`öch¨
(
ty≥buf
, 
MAXMAPLEN
, 0L);

1068 i‡((
c
 || 
ty≥m≠Àn
Ë&& (
Sèã
 & (
INSERT
 + 
CMDLINE
)))

1069 
c
 = 
ESC
;

1071 
c
 = 
	`Cål
('C');

1072 
	`Êush_buf„rs
(
TRUE
);

1075 i‡(
ty≥Àn
 > 0)

1091 
mp
 = 
NULL
;

1092 
max_mÀn
 = 0;

1093 i‡(!
timedout
 && 
no_m≠pög
 =0 && (
ty≥m≠Àn
 == 0 ||

1094 (
p_ªm≠
 && 
n‹em≠buf
[
ty≥off
] =
FALSE
))

1095 && !(
p_∑°e
 && (
Sèã
 & (
INSERT
 + 
CMDLINE
)))

1096 && !(
Sèã
 =
HITRETURN
 && (
ty≥buf
[
ty≥off
] =
CR


1097 || 
ty≥buf
[
ty≥off
] == ' '))

1098 && 
Sèã
 !
ASKMORE


1099 #ifde‡
INSERT_EXPAND


1100 && !(
˘æ_x_mode
 && 
	`is_˘æ_x_key
(
ty≥buf
[
ty≥off
]))

1104 
c1
 = 
ty≥buf
[
ty≥off
];

1105 #ifde‡
HAVE_LANGMAP


1106 
	`LANGMAP_ADJUST
(
c1
, 
TRUE
);

1108 
mp
 = 
m≠li°
.
m_√xt
; mp; mp = mp->m_next)

1116 i‡–
mp
->
m_keys
[0] =
c1
 &&

1117 !(
mp
->
m_mode
 & 
ABBREV
) &&

1118 (
mp
->
m_mode
 & 
loˇl_Sèã
))

1120 
n
;

1121 #ifde‡
HAVE_LANGMAP


1122 
c2
;

1126 
mÀn
 = 1; mÀ¿< 
ty≥Àn
; ++mlen)

1128 #ifde‡
HAVE_LANGMAP


1129 
c2
 = 
ty≥buf
[
ty≥off
 + 
mÀn
];

1130 
	`LANGMAP_ADJUST
(
c2
, 
TRUE
);

1131 i‡(
mp
->
m_keys
[
mÀn
] !
c2
)

1133 i‡(
mp
->
m_keys
[
mÀn
] !=

1134 
ty≥buf
[
ty≥off
 + 
mÀn
])

1141 
n
 = 0;Ç < 
mÀn
; ++n)

1142 i‡(
n‹em≠buf
[
ty≥off
 + 
n
] =
TRUE
)

1144 i‡(
n
 !
mÀn
)

1148 
keyÀn
 = 
mp
->
m_keyÀn
;

1149 i‡(
mÀn
 =(
keyÀn
 > 
ty≥Àn
 ?

1150 
ty≥Àn
 : 
keyÀn
))

1153 i‡(
keyÀn
 > 
ty≥Àn
)

1154 
keyÀn
 = 
M_NEEDMORET
;

1159 i‡(
max_mÀn
 < 
mÀn
)

1160 
max_mÀn
 = 
mÀn
;

1164 i‡(
mp
 =
NULL
)

1174 i‡((
no_m≠pög
 =0 || 
Ælow_keys
 != 0) &&

1175 (
ty≥m≠Àn
 == 0 ||

1176 (
p_ªm≠
 && 
n‹em≠buf
[
ty≥off
] =
FALSE
)) &&

1177 !
timedout
)

1178 
keyÀn
 = 
	`check_ãrmcode
(
max_mÀn
 + 1);

1180 
keyÀn
 = 0;

1181 i‡(
keyÀn
 == 0)

1183 #ifde‡
AMIGA


1184 i‡(
ty≥m≠Àn
 == 0 &&

1185 (
ty≥buf
[
ty≥off
] & 0xffË=
CSI
)

1187 
s
 = 
ty≥buf
 + 
ty≥off
 + 1;

1188 
s
 < 
ty≥buf
 + 
ty≥off
 + 
ty≥Àn
 &&

1189 (
	`isdigô
(*
s
) || *s == ';' || *s == ' ');

1190 ++
s
)

1192 i‡(*
s
 == 'r' || *s == '|')

1194 
	`dñ_ty≥buf
(()(
s
 + 1 -

1195 (
ty≥buf
 + 
ty≥off
)), 0);

1197 
	`£t_wösize
(0, 0, 
FALSE
);

1200 i‡(*
s
 =
NUL
)

1201 
keyÀn
 = 
K_NEEDMORET
;

1203 i‡(
keyÀn
 >= 0)

1209 
c
 = 
ty≥buf
[
ty≥off
] & 255;

1210 i‡(
adv™˚
)

1212 i‡(
ty≥m≠Àn
)

1213 
KeyTy≥d
 = 
FALSE
;

1216 
KeyTy≥d
 = 
TRUE
;

1218 
	`gŸch¨s
(
ty≥buf
 + 
ty≥off
, 1);

1220 
	`dñ_ty≥buf
(1, 0);

1225 i‡(
keyÀn
 > 0)

1227 #ifde‡
USE_GUI


1228 i‡(
ty≥buf
[
ty≥off
] =
K_SPECIAL
 &&

1229 
ty≥buf
[
ty≥off
 + 1] =
KS_MENU
)

1234 
	`u_sync
();

1235 
	`dñ_ty≥buf
(3, 0);

1236 
idx
 = 
	`gui_gë_míu_ödex
(
cuºít_míu
,

1237 
loˇl_Sèã
);

1238 i‡(
idx
 !
MENU_INDEX_INVALID
)

1240 
	`ös_ty≥buf
(
cuºít_míu
->
°rögs
[
idx
],

1241 
cuºít_míu
->
n‹em≠
[
idx
] ? -1 : 0,

1242 0, 
TRUE
);

1250 
keyÀn
 = 
K_NEEDMORET
;

1253 i‡(
keyÀn
 >0 && keyÀ¿<
ty≥Àn
)

1256 i‡(
keyÀn
 > 
ty≥m≠Àn
)

1257 
	`gŸch¨s
(
ty≥buf
 + 
ty≥off
 + 
ty≥m≠Àn
,

1258 
keyÀn
 - 
ty≥m≠Àn
);

1260 
	`dñ_ty≥buf
(
keyÀn
, 0);

1266 i‡(++
m≠dïth
 >
p_mmd
)

1268 
	`EMSG
("recursive mapping");

1269 i‡(
Sèã
 =
CMDLINE
)

1270 
	`ªdøwcmdlöe
();

1272 
	`£tcurs‹
();

1273 
	`Êush_buf„rs
(
FALSE
);

1274 
m≠dïth
 = 0;

1275 
c
 = -1;

1285 i‡(
	`ös_ty≥buf
(
mp
->
m_°r
, mp->
m_n‹em≠
 ? -1 :

1286 
	`STRNCMP
(
mp
->
m_°r
, mp->
m_keys
,

1287 (
size_t
)
keyÀn
) ? 0 : keylen,

1288 0, 
TRUE
Ë=
FAIL
)

1290 
c
 = -1;

1304 
c
 = 0;

1305 i‡(
adv™˚
 && 
ty≥Àn
 =1 && 
ty≥buf
[
ty≥off
] =
ESC
 &&

1306 !
no_m≠pög
 && 
ty≥m≠Àn
 =0 && (
Sèã
 & 
INSERT
) &&

1307 (
p_timeout
 || (
keyÀn
 =
K_NEEDMORET
 && 
p_âimeout
)) &&

1308 (
c
 = 
	`öch¨
(
ty≥buf
 + 
ty≥off
 + 
ty≥Àn
, 3, 0L)) == 0)

1310 i‡(
p_smd
)

1312 
	`dñmode
();

1313 
mode_dñëed
 = 
TRUE
;

1315 i‡(
curwö
->
w_curs‹
.
cﬁ
 != 0)

1318 i‡(
curwö
->
w_cﬁ
)

1320 i‡(
did_ai
)

1327 
cﬁƒ_t
 
cﬁ
, 
vcﬁ
;

1328 
ch¨_u
 *
±r
;

1330 
cﬁ
 = 
vcﬁ
 = 
curwö
->
w_cﬁ
 = 0;

1331 
±r
 = 
	`ml_gë_cuæöe
();

1332 
cﬁ
 < 
curwö
->
w_curs‹
.col)

1334 i‡(!
	`vim_iswhôe
(
±r
[
cﬁ
]))

1335 
curwö
->
w_cﬁ
 = 
vcﬁ
;

1336 
vcﬁ
 +
	`lbr_ch¨èbsize
(
±r
 + 
cﬁ
,

1337 (
cﬁƒ_t
)
vcﬁ
);

1338 ++
cﬁ
;

1340 i‡(
curwö
->
w_p_nu
)

1341 
curwö
->
w_cﬁ
 += 8;

1344 --
curwö
->
w_cﬁ
;

1346 i‡(
curwö
->
w_p_wøp
 && curwö->
w_row
)

1348 --
curwö
->
w_row
;

1349 
curwö
->
w_cﬁ
 = 
Cﬁumns
 - 1;

1352 
	`£tcurs‹
();

1353 
	`Êushbuf
();

1355 
ty≥Àn
 +
c
;

1357 i‡(
ty≥Àn
 >
ty≥m≠Àn
 + 
MAXMAPLEN
)

1359 
timedout
 = 
TRUE
;

1370 
i
 = 0;

1371 i‡(
ty≥Àn
 > 0 && (
Sèã
 & (
NORMAL
 | 
INSERT
)Ë&& 
adv™˚
)

1373 
	`push_showcmd
();

1374 
i
 < 
ty≥Àn
)

1375 ()
	`add_to_showcmd
(
ty≥buf
[
ty≥off
 + 
i
++], 
TRUE
);

1378 
c
 = 
	`öch¨
(
ty≥buf
 + 
ty≥off
 + 
ty≥Àn
,

1379 
ty≥m≠Àn
 + 
MAXMAPLEN
 - 
ty≥Àn
,

1380 !
adv™˚


1382 : ((
ty≥Àn
 =0 || !(
p_timeout
 || (
p_âimeout
 &&

1383 
keyÀn
 =
K_NEEDMORET
)))

1385 : ((
keyÀn
 =
K_NEEDMORET
 && 
p_âm
 >= 0)

1386 ? 
p_âm


1387 : 
p_tm
)));

1389 i‡(
i
)

1390 
	`p›_showcmd
();

1392 i‡(
c
 <
NUL
)

1394 i‡(!
adv™˚
)

1396 i‡(
ty≥Àn
)

1398 
timedout
 = 
TRUE
;

1404 
ty≥buf
[
ty≥off
 + 
ty≥Àn
] !
NUL
)

1405 
n‹em≠buf
[
ty≥off
 + 
ty≥Àn
++] = 
FALSE
;

1411 } 
c
 < 0 || (
adv™˚
 && c =
NUL
));

1418 i‡(
p_smd
 && (
Sèã
 & 
INSERT
))

1420 i‡(
c
 =
ESC
 && !
mode_dñëed
 && !
no_m≠pög
)

1421 
	`dñmode
();

1422 i‡(
c
 !
ESC
 && 
mode_dñëed
)

1423 
	`showmode
();

1426  
c
;

1427 
	}
}

1448 
	$öch¨
(
buf
, 
maxÀn
, 
waô_time
)

1449 
ch¨_u
 *
buf
;

1450 
maxÀn
;

1451 
waô_time
;

1453 
Àn
 = 0;

1454 
ªãsc
 = 
FALSE
;

1455 
c
;

1456 
i
;

1458 i‡(
waô_time
 == -1L || wait_time > 100L)

1460 
	`curs‹_⁄
();

1461 
	`Êushbuf
();

1468 i‡(
Sèã
 !
HITRETURN
)

1470 
did_outofmem_msg
 = 
FALSE
;

1471 
did_sw≠wrôe_msg
 = 
FALSE
;

1473 
undo_off
 = 
FALSE
;

1479 
c
 = -1;

1480 
s¸ùtö
[
curs¸ùt
] !
NULL
 && 
c
 < 0)

1482 i‡(
gŸ_öt
 || (
c
 = 
	`gëc
(
s¸ùtö
[
curs¸ùt
])) < 0)

1486 i‡(
gŸ_öt
)

1487 
ªãsc
 = 
TRUE
;

1488 
	`f˛o£
(
s¸ùtö
[
curs¸ùt
]);

1489 
s¸ùtö
[
curs¸ùt
] = 
NULL
;

1490 i‡(
curs¸ùt
 > 0)

1491 --
curs¸ùt
;

1495 
buf
[0] = 
c
;

1496 
Àn
 = 1;

1500 i‡(
c
 < 0)

1506 i‡(
gŸ_öt
)

1508 
	`mch_öch¨
(
buf
, 
maxÀn
, 0L))

1510  
ªãsc
;

1514 
Àn
 = 
	`mch_öch¨
(
buf
, 
maxÀn
 / 3, 
waô_time
);

1523 
i
 = 
Àn
; --ò>0; ++
buf
)

1525 i‡(
buf
[0] =
NUL
 || (buf[0] =
K_SPECIAL
 && 
c
 < 0))

1527 
	`vim_memmove
(
buf
 + 3, bu‡+ 1, (
size_t
)
i
);

1528 
buf
[2] = 
	`K_THIRD
(buf[0]);

1529 
buf
[1] = 
	`K_SECOND
(buf[0]);

1530 
buf
[0] = 
K_SPECIAL
;

1531 
buf
 += 2;

1532 
Àn
 += 2;

1535 *
buf
 = 
NUL
;

1536  
Àn
;

1537 
	}
}

1573 
	$do_m≠
(
m≠ty≥
, 
keys
, 
mode
)

1574 
m≠ty≥
;

1575 
ch¨_u
 *
keys
;

1576 
mode
;

1578 
m≠block
 *
mp
, *
m¥ev
;

1579 
ch¨_u
 *
¨g
;

1580 
ch¨_u
 *
p
;

1581 
n
;

1582 
Àn
 = 0;

1583 
ch¨_u
 *
√w°r
;

1584 
haßrg
;

1585 
haskey
;

1586 
did_ô
 = 
FALSE
;

1587 
abbªv
 = 0;

1588 
round
;

1589 
ch¨_u
 *
keys_buf
 = 
NULL
;

1590 
ch¨_u
 *
¨g_buf
 = 
NULL
;

1591 
ªtvÆ
 = 0;

1592 
do_back¶ash
;

1594 i‡(
mode
 & 
ABBREV
)

1596 
abbªv
 = 
ABBREV
;

1597 
mode
 &~
ABBREV
;

1604 
p
 = 
keys
;

1605 
do_back¶ash
 = (
	`vim_°rchr
(
p_˝o
, 
CPO_BSLASH
Ë=
NULL
);

1606 *
p
 && (
m≠ty≥
 =1 || !
	`vim_iswhôe
(*p)))

1608 i‡((
p
[0] =
	`Cål
('V'Ë|| (
do_back¶ash
 &&Ö[0] == '\\')) &&

1609 
p
[1] !
NUL
)

1610 ++
p
;

1611 ++
p
;

1613 i‡(*
p
 !
NUL
)

1614 *
p
++ = 
NUL
;

1615 
p
 = 
	`skùwhôe
(p);

1616 
¨g
 = 
p
;

1617 
haßrg
 = (*
¨g
 !
NUL
);

1618 
haskey
 = (*
keys
 !
NUL
);

1621 i‡(
m≠ty≥
 =1 && !
haskey
)

1623 
ªtvÆ
 = 1;

1624 
thìnd
;

1635 i‡(
haskey
)

1636 
keys
 = 
	`ª∂a˚_ãrmcodes
(keys, &
keys_buf
, 
TRUE
);

1637 i‡(
haßrg
)

1638 
¨g
 = 
	`ª∂a˚_ãrmcodes
◊rg, &
¨g_buf
, 
FALSE
);

1643 i‡(
haskey
)

1645 
Àn
 = 
	`STRLEN
(
keys
);

1646 i‡(
Àn
 > 
MAXMAPLEN
)

1648 
ªtvÆ
 = 1;

1649 
thìnd
;

1652 i‡(
abbªv
)

1661 i‡(
	`isw‹dch¨
(
keys
[
Àn
 - 1]))

1662 
n
 = 0;Ç < 
Àn
 - 2; ++n)

1663 i‡(
	`isw‹dch¨
(
keys
[
n
]Ë!isw‹dch¨(keys[
Àn
 - 2]))

1665 
ªtvÆ
 = 1;

1666 
thìnd
;

1668 
n
 = 0;Ç < 
Àn
; ++n)

1669 i‡(
	`vim_iswhôe
(
keys
[
n
]))

1671 
ªtvÆ
 = 1;

1672 
thìnd
;

1677 i‡(
haskey
 && 
haßrg
 && 
abbªv
)

1678 
no_abbr
 = 
FALSE
;

1681 i‡(!
haskey
 || (
m≠ty≥
 !1 && !
haßrg
))

1682 
	`msg_°¨t
();

1691 
round
 = 0; (round =0 || 
m≠ty≥
 == 1) &&Ñound <= 1 &&

1692 !
did_ô
 && !
gŸ_öt
; ++
round
)

1694 
mp
 = 
m≠li°
.
m_√xt
, 
m¥ev
 = &m≠li°; m∞&& !
gŸ_öt
;

1695 
m¥ev
 = 
mp
, m∞mp->
m_√xt
)

1698 i‡(!(
mp
->
m_mode
 & 
mode
Ë|| (mp->m_modê& 
ABBREV
Ë!
abbªv
)

1700 i‡(!
haskey
)

1702 
	`showm≠
(
mp
);

1703 
did_ô
 = 
TRUE
;

1707 i‡(
round
)

1709 
n
 = 
	`STRLEN
(
mp
->
m_°r
);

1710 
p
 = 
mp
->
m_°r
;

1714 
n
 = 
mp
->
m_keyÀn
;

1715 
p
 = 
mp
->
m_keys
;

1717 i‡(!
	`STRNCMP
(
p
, 
keys
, (
size_t
)(
n
 < 
Àn
 ?Ç :Üen)))

1719 i‡(
m≠ty≥
 == 1)

1721 i‡(
n
 !
Àn
)

1727 
mp
->
m_mode
 &(~
mode
 | 
ABBREV
);

1728 
did_ô
 = 
TRUE
;

1730 i‡(!
haßrg
)

1732 
	`showm≠
(
mp
);

1733 
did_ô
 = 
TRUE
;

1735 i‡(
n
 !
Àn
)

1737 i‡(
abbªv
)

1739 
ªtvÆ
 = 3;

1740 
thìnd
;

1744 
mp
->
m_mode
 &(~
mode
 | 
ABBREV
);

1745 i‡(!(
mp
->
m_mode
 & ~
ABBREV
Ë&& !
did_ô
)

1747 
√w°r
 = 
	`°rßve
(
¨g
);

1748 i‡(
√w°r
 =
NULL
)

1750 
ªtvÆ
 = 4;

1751 
thìnd
;

1753 
	`vim_‰ì
(
mp
->
m_°r
);

1754 
mp
->
m_°r
 = 
√w°r
;

1755 
mp
->
m_n‹em≠
 = 
m≠ty≥
;

1756 
mp
->
m_mode
 = 
mode
 + 
abbªv
;

1757 
did_ô
 = 
TRUE
;

1760 i‡(!(
mp
->
m_mode
 & ~
ABBREV
))

1762 
	`m≠_‰ì
(
m¥ev
);

1763 
mp
 = 
m¥ev
;

1770 i‡(
m≠ty≥
 == 1)

1772 i‡(!
did_ô
)

1773 
ªtvÆ
 = 2;

1774 
thìnd
;

1777 i‡(!
haskey
 || !
haßrg
)

1779 i‡(!
did_ô
)

1781 i‡(
abbªv
)

1782 
	`MSG
("Noábbreviation found");

1784 
	`MSG
("No mapping found");

1786 
thìnd
;

1789 i‡(
did_ô
)

1790 
thìnd
;

1795 
mp
 = (
m≠block
 *)
	`Æloc
(()(mapblock));

1796 i‡(
mp
 =
NULL
)

1798 
ªtvÆ
 = 4;

1799 
thìnd
;

1801 
mp
->
m_keys
 = 
	`°rßve
(
keys
);

1802 
mp
->
m_°r
 = 
	`°rßve
(
¨g
);

1803 i‡(
mp
->
m_keys
 =
NULL
 || mp->
m_°r
 == NULL)

1805 
	`vim_‰ì
(
mp
->
m_keys
);

1806 
	`vim_‰ì
(
mp
->
m_°r
);

1807 
	`vim_‰ì
(
mp
);

1808 
ªtvÆ
 = 4;

1809 
thìnd
;

1811 
mp
->
m_keyÀn
 = 
	`STRLEN
(mp->
m_keys
);

1812 
mp
->
m_n‹em≠
 = 
m≠ty≥
;

1813 
mp
->
m_mode
 = 
mode
 + 
abbªv
;

1816 
mp
->
m_√xt
 = 
m≠li°
.m_next;

1817 
m≠li°
.
m_√xt
 = 
mp
;

1819 
thìnd
:

1820 
	`vim_‰ì
(
keys_buf
);

1821 
	`vim_‰ì
(
¨g_buf
);

1822  
ªtvÆ
;

1823 
	}
}

1830 
	$m≠_‰ì
(
m¥ev
)

1831 
m≠block
 *
m¥ev
;

1833 
m≠block
 *
mp
;

1835 
mp
 = 
m¥ev
->
m_√xt
;

1836 
	`vim_‰ì
(
mp
->
m_keys
);

1837 
	`vim_‰ì
(
mp
->
m_°r
);

1838 
m¥ev
->
m_√xt
 = 
mp
->m_next;

1839 
	`vim_‰ì
(
mp
);

1840 
	}
}

1847 
	$m≠_˛ór
(
modec
, 
f‹˚
, 
abbr
)

1848 
modec
;

1849 
f‹˚
;

1850 
abbr
;

1852 
m≠block
 *
mp
;

1853 
mode
;

1855 i‡(
f‹˚
)

1856 
mode
 = 
INSERT
 + 
CMDLINE
;

1857 i‡(
modec
 == 'i')

1858 
mode
 = 
INSERT
;

1859 i‡(
modec
 == 'n')

1860 
mode
 = 
NORMAL
;

1861 i‡(
modec
 == 'c')

1862 
mode
 = 
CMDLINE
;

1863 i‡(
modec
 == 'v')

1864 
mode
 = 
VISUAL
;

1866 
mode
 = 
VISUAL
 + 
NORMAL
;

1868 
mp
 = &
m≠li°
; mp->
m_√xt
 !
NULL
; )

1870 i‡(
abbr
 !!(
mp
->
m_√xt
->
m_mode
 & 
ABBREV
Ë&& mp->m_√xt->m_modê& 
mode
)

1872 
mp
->
m_√xt
->
m_mode
 &~
mode
;

1873 i‡((
mp
->
m_√xt
->
m_mode
 & ~
ABBREV
) == 0)

1875 
	`m≠_‰ì
(
mp
);

1879 
mp
 = mp->
m_√xt
;

1881 
	}
}

1884 
	$showm≠
(
mp
)

1885 
m≠block
 *
mp
;

1887 
Àn
;

1889 i‡(
msg_didout
)

1890 
	`msg_outch¨
('\n');

1891 i‡((
mp
->
m_mode
 & (
INSERT
 + 
CMDLINE
)) == INSERT + CMDLINE)

1892 
	`MSG_OUTSTR
("! ");

1893 i‡(
mp
->
m_mode
 & 
INSERT
)

1894 
	`MSG_OUTSTR
("i ");

1895 i‡(
mp
->
m_mode
 & 
CMDLINE
)

1896 
	`MSG_OUTSTR
("c ");

1897 i‡(!(
mp
->
m_mode
 & 
VISUAL
))

1898 
	`MSG_OUTSTR
("n ");

1899 i‡(!(
mp
->
m_mode
 & 
NORMAL
))

1900 
	`MSG_OUTSTR
("v ");

1902 
	`MSG_OUTSTR
(" ");

1904 
Àn
 = 
	`msg_ouâøns_•ecül
(
mp
->
m_keys
, 
TRUE
);

1907 
	`msg_outch¨
(' ');

1908 ++
Àn
;

1909 } 
Àn
 < 12);

1910 i‡(
mp
->
m_n‹em≠
)

1911 
	`msg_outch¨
('*');

1913 
	`msg_outch¨
(' ');

1917 
	`msg_ouâøns_•ecül
(
mp
->
m_°r
, 
TRUE
);

1918 
	`Êushbuf
();

1919 
	}
}

1937 
	$check_abbr
(
c
, 
±r
, 
cﬁ
, 
möcﬁ
)

1938 
c
;

1939 
ch¨_u
 *
±r
;

1940 
cﬁ
;

1941 
möcﬁ
;

1943 
Àn
;

1944 
j
;

1945 
ch¨_u
 
tb
[4];

1946 
m≠block
 *
mp
;

1947 
is_id
 = 
TRUE
;

1948 
vim_abbr
;

1950 i‡(
no_abbr_˙t
)

1951  
FALSE
;

1959 i‡(
cﬁ
 == 0)

1960  
FALSE
;

1962 i‡(!
	`isw‹dch¨
(
±r
[
cﬁ
 - 1]))

1963 
vim_abbr
 = 
TRUE
;

1966 
vim_abbr
 = 
FALSE
;

1967 i‡(
cﬁ
 > 1)

1968 
is_id
 = 
	`isw‹dch¨
(
±r
[
cﬁ
 - 2]);

1970 
Àn
 = 
cﬁ
 - 1;Üí > 0 && !
	`vim_is•a˚
(
±r
[len - 1]) &&

1971 (
vim_abbr
 || 
is_id
 =
	`isw‹dch¨
(
±r
[
Àn
 - 1])); --len)

1974 i‡(
Àn
 < 
möcﬁ
)

1975 
Àn
 = 
möcﬁ
;

1976 i‡(
Àn
 < 
cﬁ
)

1978 
±r
 +
Àn
;

1979 
Àn
 = 
cﬁ
 -Üen;

1980 
mp
 = 
m≠li°
.
m_√xt
; mp; mp = mp->m_next)

1983 i‡((
mp
->
m_mode
 & 
ABBREV
) == ABBREV &&

1984 (
mp
->
m_mode
 & 
Sèã
) &&

1985 
mp
->
m_keyÀn
 =
Àn
 &&

1986 !
	`STRNCMP
(
mp
->
m_keys
, 
±r
, (
size_t
)
Àn
))

1989 i‡(
mp
)

2001 
j
 = 0;

2003 i‡(
	`IS_SPECIAL
(
c
Ë|| c =
K_SPECIAL
)

2005 
tb
[
j
++] = 
K_SPECIAL
;

2006 
tb
[
j
++] = 
	`K_SECOND
(
c
);

2007 
c
 = 
	`K_THIRD
(c);

2009 i‡(
c
 < 0x100 && (c < ' ' || c > '~'))

2010 
tb
[
j
++] = 
	`Cål
('V');

2011 
tb
[
j
++] = 
c
;

2012 
tb
[
j
] = 
NUL
;

2014 ()
	`ös_ty≥buf
(
tb
, 
TRUE
, 0, TRUE);

2016 ()
	`ös_ty≥buf
(
mp
->
m_°r
, mp->
m_n‹em≠
, 0, 
TRUE
);

2018 
no_abbr_˙t
 +
	`STRLEN
(
mp
->
m_°r
Ë+ 
j
 + 1;

2020 
tb
[0] = 
	`Cål
('H');

2021 
tb
[1] = 
NUL
;

2022 
Àn
--)

2023 ()
	`ös_ty≥buf
(
tb
, 
TRUE
, 0, TRUE);

2024  
TRUE
;

2027  
FALSE
;

2028 
	}
}

2035 
	$makem≠
(
fd
)

2036 
FILE
 *
fd
;

2038 
m≠block
 *
mp
;

2039 
ch¨_u
 
c1
;

2040 
ch¨_u
 *
p
;

2042 
mp
 = 
m≠li°
.
m_√xt
; mp; mp = mp->m_next)

2044 
c1
 = 
NUL
;

2045 
p
 = (
ch¨_u
 *)"map";

2046 
mp
->
m_mode
)

2048 
NORMAL
 + 
VISUAL
:

2050 
NORMAL
:

2051 
c1
 = 'n';

2053 
VISUAL
:

2054 
c1
 = 'v';

2056 
CMDLINE
 + 
INSERT
:

2057 
p
 = (
ch¨_u
 *)"map!";

2059 
CMDLINE
:

2060 
c1
 = 'c';

2062 
INSERT
:

2063 
c1
 = 'i';

2065 
INSERT
 + 
CMDLINE
 + 
ABBREV
:

2066 
p
 = (
ch¨_u
 *)"abbr";

2068 
CMDLINE
 + 
ABBREV
:

2069 
c1
 = 'c';

2070 
p
 = (
ch¨_u
 *)"abbr";

2072 
INSERT
 + 
ABBREV
:

2073 
c1
 = 'i';

2074 
p
 = (
ch¨_u
 *)"abbr";

2077 
	`EMSG
("makemap: Illegal mode");

2078  
FAIL
;

2080 i‡(
c1
 && 
	`putc
(c1, 
fd
) < 0)

2081  
FAIL
;

2082 i‡(
mp
->
m_n‹em≠
 && 
	`Ârötf
(
fd
, "nore") < 0)

2083  
FAIL
;

2084 i‡(
	`Ârötf
(
fd
, (*)
p
) < 0)

2085  
FAIL
;

2087 i‡–
	`putc
(' ', 
fd
Ë< 0 || 
	`puãsc°r
(fd, 
mp
->
m_keys
, 
FALSE
Ë=
FAIL
 ||

2088 
	`putc
(' ', 
fd
Ë< 0 || 
	`puãsc°r
(fd, 
mp
->
m_°r
, 
FALSE
Ë=
FAIL
 ||

2089 #ifde‡
USE_CRNL


2090 
	`putc
('\r', 
fd
) < 0 ||

2092 
	`putc
('\n', 
fd
) < 0)

2093  
FAIL
;

2095  
OK
;

2096 
	}
}

2104 
	$puãsc°r
(
fd
, 
°r
, 
£t
)

2105 
FILE
 *
fd
;

2106 
ch¨_u
 *
°r
;

2107 
£t
;

2109 
c
;

2110 
modifõrs
;

2112  ; *
°r
; ++str)

2114 
c
 = *
°r
;

2119 i‡(
c
 =
K_SPECIAL
 && !
£t
)

2121 
modifõrs
 = 0x0;

2122 i‡(
°r
[1] =
KS_MODIFIER
)

2124 
modifõrs
 = 
°r
[2];

2125 
°r
 += 3;

2126 
c
 = *
°r
;

2128 i‡(
c
 =
K_SPECIAL
)

2130 
c
 = 
	`TO_SPECIAL
(
°r
[1], str[2]);

2131 
°r
 += 2;

2133 i‡(
	`IS_SPECIAL
(
c
Ë|| 
modifõrs
)

2135 
	`Ârötf
(
fd
, (*)
	`gë_•ecül_key_«me
(
c
, 
modifõrs
));

2143 i‡(
c
 =
NL
)

2145 i‡(
£t
)

2146 
	`Ârötf
(
fd
, "\\\026\n");

2148 
	`Ârötf
(
fd
, "<NL>");

2157 i‡(
£t
 && (
	`vim_iswhôe
(
c
) || c == '"' || c == '\\'))

2159 i‡(
	`putc
('\\', 
fd
) < 0)

2160  
FAIL
;

2162 i‡(
c
 < ' ' || c > '~' || c == '|')

2164 i‡(
	`putc
(
	`Cål
('V'), 
fd
) < 0)

2165  
FAIL
;

2167 i‡(
	`putc
(
c
, 
fd
) < 0)

2168  
FAIL
;

2170  
OK
;

2171 
	}
}

2178 
	$check_m≠_keycodes
()

2180 
m≠block
 *
mp
;

2181 
ch¨_u
 *
p
;

2182 
i
;

2183 
ch¨_u
 
buf
[3];

2184 
ch¨_u
 *
ßve_«me
;

2186 
ßve_«me
 = 
sourcög_«me
;

2187 
sourcög_«me
 = (
ch¨_u
 *)"mappings";

2188 
mp
 = 
m≠li°
.
m_√xt
; m∞!
NULL
; mp = mp->m_next)

2190 
i
 = 0; i <= 1; ++i)

2192 i‡(
i
 == 0)

2193 
p
 = 
mp
->
m_keys
;

2195 
p
 = 
mp
->
m_°r
;

2196 *
p
)

2198 i‡(*
p
 =
K_SPECIAL
)

2200 ++
p
;

2201 i‡(*
p
 < 128)

2203 
buf
[0] = 
p
[0];

2204 
buf
[1] = 
p
[1];

2205 
buf
[2] = 
NUL
;

2206 ()
	`add_ãrmˇp_íåy
(
buf
, 
FALSE
);

2208 ++
p
;

2210 ++
p
;

2214 
sourcög_«me
 = 
ßve_«me
;

2215 
	}
}

	@src/globals.h

15 #i‚de‡
EXTERN


16 
	#EXTERN
 

	)

17 
	#INIT
(
x
)

	)

19 #i‚de‡
INIT


20 
	#INIT
(
x
Ë
	)
x

28 
EXTERN
 
Rows
;

29 
EXTERN
 
	gCﬁumns
;

39 
EXTERN
 
ch¨_u
 *
NextS¸ìn
 
INIT
(
NULL
);

40 
EXTERN
 
ch¨_u
 **
LöePoöãrs
 
INIT
(
NULL
);

42 
EXTERN
 
s¸ìn_Rows
 
INIT
(= 0);

43 
EXTERN
 
s¸ìn_Cﬁumns
 
INIT
(= 0);

49 
EXTERN
 
	gs¸ìn_cur_row
, 
	gs¸ìn_cur_cﬁ
;

55 
EXTERN
 
mod_mask
 
INIT
(= 0x0);

66 
EXTERN
 
	gcmdlöe_row
;

68 
EXTERN
 
ªdøw_cmdlöe
 
INIT
(
FALSE
);

69 
EXTERN
 
˛ór_cmdlöe
 
INIT
(
FALSE
);

70 
EXTERN
 
modifõd
 
INIT
(
FALSE
);

72 
EXTERN
 
s¸ìn_˛óªd
 
INIT
(
FALSE
);

80 
EXTERN
 
cﬁƒ_t
 
dﬁœr_vcﬁ
 
INIT
(= 0);

85 
EXTERN
 
ex∑nd_c⁄ãxt
 
INIT
(
CONTEXT_UNKNOWN
);

86 
EXTERN
 
ch¨_u
 *
ex∑nd_∑âîn
 
INIT
(
NULL
);

87 
EXTERN
 
ex∑nd_öãø˘ivñy
 
INIT
(
FALSE
);

93 
EXTERN
 
	gmsg_cﬁ
;

94 
EXTERN
 
	gmsg_row
;

95 
EXTERN
 
	gmsg_s¸ﬁÀd
;

97 
EXTERN
 
ch¨_u
 *
kìp_msg
 
INIT
(
NULL
);

98 
EXTERN
 
kìp_msg_highlight
 
INIT
(= 0);

99 #ifde‡
SLEEP_IN_EMSG


100 
EXTERN
 
√ed_¶ìp
 
INIT
(
FALSE
);

102 
EXTERN
 
√ed_fûeöfo
 
INIT
(
FALSE
);

103 
EXTERN
 
msg_s¸ﬁl
 
INIT
(
FALSE
);

104 
EXTERN
 
msg_didout
 
INIT
(
FALSE
);

105 
EXTERN
 
msg_did™y
 
INIT
(
FALSE
);

106 
EXTERN
 
emsg_off
 
INIT
(
FALSE
);

107 
EXTERN
 
	gdid_emsg
;

108 
EXTERN
 
emsg_⁄_di•œy
 
INIT
(
FALSE
);

109 
EXTERN
 
ch¨_u
 *
sourcög_«me
 
INIT
–
NULL
);

110 
EXTERN
 
löír_t
 
sourcög_ um
 
INIT
(= 0);

112 
EXTERN
 
msg_highlight
 
INIT
(
FALSE
);

113 
EXTERN
 
ch¨_u
 *
highlight
 
INIT
(
NULL
);

114 
EXTERN
 
ch¨_u
 *
unhighlight
 
INIT
(
NULL
);

115 
EXTERN
 
s¸ﬁl_ªgi⁄
 
INIT
(
FALSE
);

116 
EXTERN
 
highlight_m©ch
 
INIT
(
FALSE
);

117 
EXTERN
 
	g£¨ch_m©ch_Àn
;

118 
EXTERN
 
no_sm¨tˇ£
 
INIT
(
FALSE
);

119 
EXTERN
 
√ed_check_time°amps
 
INIT
(
FALSE
);

121 #ifde‡
AUTOCMD


122 
EXTERN
 
autocmd_busy
 
INIT
(
FALSE
);

125 #ifde‡
USE_MOUSE


129 
EXTERN
 
	gmou£_row
;

130 
EXTERN
 
	gmou£_cﬁ
;

131 
EXTERN
 
mou£_∑°_bŸtom
 
INIT
(
FALSE
);

132 
EXTERN
 
mou£_∑°_eﬁ
 
INIT
(
FALSE
);

135 #ifde‡
USE_GUI


139 
EXTERN
 
GuiMíu
 *
	gcuºít_míu
;

144 
EXTERN
 
	gcuºít_s¸ﬁlb¨
;

145 
EXTERN
 
l⁄g_u
 
	gs¸ﬁlb¨_vÆue
;

153 
EXTERN
 
WIN
 *
	gfú°wö
;

154 
EXTERN
 
WIN
 *
	gœ°wö
;

155 
EXTERN
 
WIN
 *
	gcurwö
;

161 
EXTERN
 
BUF
 *
fú°buf
 
INIT
(
NULL
);

162 
EXTERN
 
BUF
 *
œ°buf
 
INIT
(
NULL
);

163 
EXTERN
 
BUF
 *
curbuf
 
INIT
(
NULL
);

168 
EXTERN
 
ch¨_u
 **
	g¨g_fûes
;

169 
EXTERN
 
	g¨g_cou¡
;

170 
EXTERN
 
	g¨g_exp
;

171 
EXTERN
 
¨g_had_œ°
 
INIT
(
FALSE
);

173 
EXTERN
 
	gru_cﬁ
;

174 
EXTERN
 
	gsc_cﬁ
;

180 
EXTERN
 
°¨tög
 
INIT
(
TRUE
);

182 
EXTERN
 
exôög
 
INIT
(
FALSE
);

184 
EXTERN
 
fuŒ_s¸ìn
 
INIT
(
TRUE
);

188 
EXTERN
 
£cuª
 
INIT
(
FALSE
);

193 
EXTERN
 
found_vîsi⁄
 
INIT
(= 0);

196 
EXTERN
 
FPOS
 
	gVIsuÆ
;

197 
EXTERN
 
FPOS
 
	gVIsuÆ_ßve
;

198 
EXTERN
 
VIsuÆ_a˘ive
 
INIT
(
FALSE
);

200 
EXTERN
 
FPOS
 
	gVIsuÆ_íd
;

203 
EXTERN
 
VIsuÆ_mode
 
INIT
(= 'v');

205 
EXTERN
 
	gVIsuÆ_mode_ßve
;

207 
EXTERN
 
ªdo_VIsuÆ_busy
 
INIT
(
FALSE
);

210 #ifde‡
USE_MOUSE


215 
EXTERN
 
FPOS
 
	gwhîe_∑°e_°¨ãd
;

224 
EXTERN
 
did_ai
 
INIT
(
FALSE
);

230 
EXTERN
 
did_si
 
INIT
(
FALSE
);

236 
EXTERN
 
ˇn_si
 
INIT
(
FALSE
);

242 
EXTERN
 
ˇn_si_back
 
INIT
(
FALSE
);

244 
EXTERN
 
ﬁd_ödít
 
INIT
(= 0);

246 
EXTERN
 
Sèã
 
INIT
(
NORMAL
);

248 
EXTERN
 
no_m≠pög
 
INIT
(
FALSE
);

249 
EXTERN
 
Ælow_keys
 
INIT
(
FALSE
);

252 
EXTERN
 
ª°¨t_edô
 
INIT
(= 0);

254 
EXTERN
 
	g¨row_u£d
;

258 #ifde‡
INSERT_EXPAND


259 
EXTERN
 
ch¨_u
 *
edô_submode
 
INIT
(
NULL
);

260 
EXTERN
 
ch¨_u
 *
edô_submode_exåa
 
INIT
(
NULL
);

261 
EXTERN
 
	gedô_submode_highl
;

262 
EXTERN
 
˘æ_x_mode
 
INIT
(= 0);

265 
EXTERN
 
Rec‹dög
 
INIT
(
FALSE
);

267 
EXTERN
 
Exec_ªg
 
INIT
(
FALSE
);

269 
EXTERN
 
did_cd
 
INIT
(
FALSE
);

270 
EXTERN
 
no_abbr
 
INIT
(
TRUE
);

271 
EXTERN
 
fo_do_commíts
 
INIT
(
FALSE
);

274 #i‡
deföed
 
MSDOS
 || deföed 
WIN32


275 
EXTERN
 
bìp_cou¡
 
INIT
(= 0);

278 
EXTERN
 
ch¨_u
 *
	gIObuff
;

279 
EXTERN
 
ch¨_u
 *
	gNameBuff
;

281 
EXTERN
 
ch¨_u
 
	gmsg_buf
[
MSG_BUF_LEN
];

283 
EXTERN
 
RedøwögDißbÀd
 
INIT
(
FALSE
);

286 
EXTERN
 
ªad⁄lymode
 
INIT
(
FALSE
);

287 
EXTERN
 
ªcovîymode
 
INIT
(
FALSE
);

289 
EXTERN
 
ch¨_u
 *
ty≥buf
 
INIT
(
NULL
);

290 
EXTERN
 
	gty≥buÊí
;

291 
EXTERN
 
	gty≥off
;

292 
EXTERN
 
	gty≥Àn
;

293 
EXTERN
 
	gKeyTy≥d
;

294 
EXTERN
 
	gKeyStuf„d
;

296 
EXTERN
 
mu°_ªdøw
 
INIT
(= 0);

297 
EXTERN
 
skù_ªdøw
 
INIT
(
FALSE
);

298 
EXTERN
 
do_ªdøw
 
INIT
(
FALSE
);

300 
EXTERN
 
ch¨_u
 *
u£_vimöfo
 
INIT
(
NULL
);

302 
	#NSCRIPT
 15

	)

303 
EXTERN
 
FILE
 *
	gs¸ùtö
[
NSCRIPT
];

304 
EXTERN
 
curs¸ùt
 
INIT
(= 0);

305 
EXTERN
 
FILE
 *
s¸ùtout
 
INIT
(
NULL
);

307 
EXTERN
 
gŸ_öt
 
INIT
(
FALSE
);

309 
EXTERN
 
ãrm_c⁄sﬁe
 
INIT
(
FALSE
);

310 
EXTERN
 
ãrmˇp_a˘ive
 
INIT
(
FALSE
);

311 
EXTERN
 
b™gªdo
 
INIT
(
FALSE
);

312 
EXTERN
 
	g£¨chcmdÀn
;

313 
EXTERN
 
ªg_ic
 
INIT
(= 0);

314 
EXTERN
 
	gªg_magic
;

316 
EXTERN
 
did_outofmem_msg
 
INIT
(
FALSE
);

318 
EXTERN
 
did_sw≠wrôe_msg
 
INIT
(
FALSE
);

320 
EXTERN
 
undo_off
 
INIT
(
FALSE
);

321 
EXTERN
 
globÆ_busy
 
INIT
(= 0);

322 #ifde‡
SLEEP_IN_EMSG


323 
EXTERN
 
d⁄t_¶ìp
 
INIT
(
FALSE
);

326 
EXTERN
 
√ed_°¨t_ö£πmode
 
INIT
(
FALSE
);

328 
EXTERN
 
rc_did_emsg
 
INIT
(
FALSE
);

329 
EXTERN
 
no_waô_ªtu∫
 
INIT
(= 0);

330 
EXTERN
 
√ed_waô_ªtu∫
 
INIT
(= 0);

331 
EXTERN
 
d⁄t_waô_ªtu∫
 
INIT
(= 0);

332 
EXTERN
 
quô_m‹e
 
INIT
(
FALSE
);

333 
EXTERN
 
ch¨_u
 *
œ°_cmdlöe
 
INIT
(
NULL
);

334 
EXTERN
 
ch¨_u
 *
√w_œ°_cmdlöe
 
INIT
(
NULL
);

335 
EXTERN
 
ch¨_u
 *
autocmd_‚ame
 
INIT
(
NULL
);

337 
EXTERN
 
po°p⁄ed_•lô
 
INIT
(
FALSE
);

338 
EXTERN
 
ª∂a˚_off£t
 
INIT
(= 0);

340 
EXTERN
 
ch¨_u
 *
esˇ≥_ch¨s
 
INIT
(= (char_u *)" \t\\\"|");

343 
EXTERN
 
ch¨_u
 *
hñp_ßve_isk
 
INIT
(
NULL
);

344 
EXTERN
 
hñp_ßve_ts
 
INIT
(= 0);

345 
EXTERN
 
kìp_hñp_Êag
 
INIT
(
FALSE
);

352 
EXTERN
 
ch¨_u
 *
em±y_›ti⁄
 
INIT
(= (char_u *)"");

354 #ifde‡
DEBUG


355 
EXTERN
 
FILE
 *
debugÂ
 
INIT
(=
NULL
);

358 #ifde‡
HAVE_LANGMAP


359 
EXTERN
 
ch¨_u
 
	gœngm≠_m≠ch¨
[256];

362 
EXTERN
 
	gbªak©_Êags
[256];

364 *
Vîsi⁄
;

365 *
l⁄gVîsi⁄
;

371 #i‡
deföed
(
HAVE_CONFIG_H
Ë|| deföed(
OS2
)

372 
ch¨_u
 *
sys_vimrc_‚ame
;

373 
ch¨_u
 *
sys_gvimrc_‚ame
;

374 
ch¨_u
 *
hñp_‚ame
;

375 
ch¨_u
 *
Æl_cÊags
;

378 
EXTERN
 
ch¨_u
 
	gno_löes_msg
[] 
INIT
(="--NoÜines in buffer--");

384 
EXTERN
 
ch¨_u
 
	ge_abbr
[] 
INIT
(="No suchábbreviation");

385 
EXTERN
 
ch¨_u
 
	ge_ab‹t
[] 
INIT
(="Commandáborted");

386 
EXTERN
 
ch¨_u
 
	ge_ambm≠
[] 
INIT
(="Ambiguous mapping");

387 
EXTERN
 
ch¨_u
 
	ge_¨gªq
[] 
INIT
(="ArgumentÑequired");

388 
EXTERN
 
ch¨_u
 
	ge_back¶ash
[] 
INIT
(="\\ should be followed by /, ? or &");

389 
EXTERN
 
ch¨_u
 
	ge_curdú
[] 
INIT
(="CommandÇotállowed from from .exrc/.vimrc in current dir");

390 
EXTERN
 
ch¨_u
 
	ge_îr‹f
[] 
INIT
(="NoÉrrorfileÇame");

391 
EXTERN
 
ch¨_u
 
	ge_exi°s
[] 
INIT
(="FileÉxists (use !Åo override)");

392 
EXTERN
 
ch¨_u
 
	ge_Áûed
[] 
INIT
(="Command failed");

393 
EXTERN
 
ch¨_u
 
	ge_öã∫Æ
[] 
INIT
(="InternalÉrror");

394 
EXTERN
 
ch¨_u
 
	ge_öãº
[] 
INIT
(="Interrupted");

395 
EXTERN
 
ch¨_u
 
	ge_övaddr
[] 
INIT
(="Invalidáddress");

396 
EXTERN
 
ch¨_u
 
	ge_öv¨g
[] 
INIT
(="Invalidárgument");

397 
EXTERN
 
ch¨_u
 
	ge_övønge
[] 
INIT
(="InvalidÑange");

398 
EXTERN
 
ch¨_u
 
	ge_övcmd
[] 
INIT
(="Invalid command");

399 
EXTERN
 
ch¨_u
 
	ge_m¨kövÆ
[] 
INIT
(="Mark has invalidÜineÇumber");

400 
EXTERN
 
ch¨_u
 
	ge_m¨knŸ£t
[] 
INIT
(="MarkÇot set");

401 
EXTERN
 
ch¨_u
 
	ge_√°ög
[] 
INIT
(="ScriptsÇestedÅoo deep");

402 
EXTERN
 
ch¨_u
 
	ge_nﬂ…
[] 
INIT
(="Noálternate file");

403 
EXTERN
 
ch¨_u
 
	ge_nob™g
[] 
INIT
(="No !állowed");

404 
EXTERN
 
ch¨_u
 
	ge_nogvim
[] 
INIT
(="GUI cannot be used: NotÉnabledát compileÅime\n");

405 
EXTERN
 
ch¨_u
 
	ge_nohebªw
[] 
INIT
(="Hebrew cannot be used: NotÉnabledát compileÅime\n");

406 
EXTERN
 
ch¨_u
 
	ge_noö°ext
[] 
INIT
(="No insertedÅext yet");

407 
EXTERN
 
ch¨_u
 
	ge_nﬁa°cmd
[] 
INIT
(="NoÖrevious commandÜine");

408 
EXTERN
 
ch¨_u
 
	ge_nom≠
[] 
INIT
(="No such mapping");

409 
EXTERN
 
ch¨_u
 
	ge_nom©ch
[] 
INIT
(="No match");

410 
EXTERN
 
ch¨_u
 
	ge_nom‹e
[] 
INIT
(="No more filesÅoÉdit");

411 
EXTERN
 
ch¨_u
 
	ge_n⁄ame
[] 
INIT
(="No fileÇame");

412 
EXTERN
 
ch¨_u
 
	ge_n›ªsub
[] 
INIT
(="NoÖrevious substituteÑegularÉxpression");

413 
EXTERN
 
ch¨_u
 
	ge_n›ªv
[] 
INIT
(="NoÖrevious command");

414 
EXTERN
 
ch¨_u
 
	ge_n›ªvª
[] 
INIT
(="NoÖreviousÑegularÉxpression");

415 
EXTERN
 
ch¨_u
 
	ge_n‹™ge
[] 
INIT
(="NoÑangeállowed");

416 
EXTERN
 
ch¨_u
 
	ge_n‹oom
[] 
INIT
(="NotÉnoughÑoom");

417 
EXTERN
 
ch¨_u
 
	ge_nŸ¸óã
[] 
INIT
(="Can't create file %s");

418 
EXTERN
 
ch¨_u
 
	ge_nŸmp
[] 
INIT
(="Can't getÅemp fileÇame");

419 
EXTERN
 
ch¨_u
 
	ge_nŸ›í
[] 
INIT
(="Can't open file %s");

420 
EXTERN
 
ch¨_u
 
	ge_nŸªad
[] 
INIT
(="Can'tÑead file %s");

421 
EXTERN
 
ch¨_u
 
	ge_nowπmsg
[] 
INIT
(="No write sinceÜast change (use !Åo override)");

422 
EXTERN
 
ch¨_u
 
	ge_nuŒ
[] 
INIT
(="Nullárgument");

423 
EXTERN
 
ch¨_u
 
	ge_numbî
[] 
INIT
(="NumberÉxpected");

424 
EXTERN
 
ch¨_u
 
	ge_›íîrf
[] 
INIT
(="Can't openÉrrorfile %s");

425 
EXTERN
 
ch¨_u
 
	ge_outofmem
[] 
INIT
(="Out of memory!");

426 
EXTERN
 
ch¨_u
 
	ge_∑äŸf
[] 
INIT
(="PatternÇot found");

427 
EXTERN
 
ch¨_u
 
	ge_posôive
[] 
INIT
(="Argument must beÖositive");

428 
EXTERN
 
ch¨_u
 
	ge_quickfix
[] 
INIT
(="No Errors");

429 
EXTERN
 
ch¨_u
 
	ge_ª_damg
[] 
INIT
(="Damaged match string");

430 
EXTERN
 
ch¨_u
 
	ge_ª_c‹r
[] 
INIT
(="CorruptedÑegexpÖrogram");

431 
EXTERN
 
ch¨_u
 
	ge_ªad⁄ly
[] 
INIT
(="'readonly' option is set (use !Åo override)");

432 
EXTERN
 
ch¨_u
 
	ge_ªadîrf
[] 
INIT
(="Error whileÑeadingÉrrorfile");

433 
EXTERN
 
ch¨_u
 
	ge_s¸ﬁl
[] 
INIT
(="Invalid scroll size");

434 
EXTERN
 
ch¨_u
 
	ge_toocom∂
[] 
INIT
(="CommandÅoo complex");

435 
EXTERN
 
ch¨_u
 
	ge_toombø
[] 
INIT
(="Too many (");

436 
EXTERN
 
ch¨_u
 
	ge_toomkë
[] 
INIT
(="Too many )");

437 
EXTERN
 
ch¨_u
 
	ge_toomsbø
[] 
INIT
(="Too many [");

438 
EXTERN
 
ch¨_u
 
	ge_toﬁ⁄g
[] 
INIT
(="CommandÅooÜong");

439 
EXTERN
 
ch¨_u
 
	ge_toom™y
[] 
INIT
(="Too many fileÇames");

440 
EXTERN
 
ch¨_u
 
	ge_åaûög
[] 
INIT
(="Trailing characters");

441 
EXTERN
 
ch¨_u
 
	ge_um¨k
[] 
INIT
(="Unknown mark");

442 
EXTERN
 
ch¨_u
 
	ge_unknown
[] 
INIT
(="Unknown");

443 
EXTERN
 
ch¨_u
 
	ge_wrôe
[] 
INIT
(="Error while writing");

444 
EXTERN
 
ch¨_u
 
	ge_zîocou¡
[] 
INIT
(="Zero count");

	@src/gui.h

12 
	#D
(
x
)

	)

14 #ifde‡
USE_GUI_MOTIF


15 
	#USE_GUI_X11


	)

16 
	~<Xm/Xm.h
>

23 #ifde‡
USE_GUI_ATHENA


24 
	#USE_GUI_X11


	)

25 
	~<X11/I¡rösic.h
>

26 
	~<X11/SåögDefs.h
>

40 
	#TEXT_X
(
cﬁ
Ë((cﬁË* 
gui
.
ch¨_width
 + gui.
b‹dî_off£t
)

	)

41 
	#TEXT_Y
(
row
Ë(‘owË* 
gui
.
ch¨_height
 + gui.
ch¨_as˚¡
 \

42 + 
gui
.
b‹dî_off£t
)

	)

43 
	#FILL_X
(
cﬁ
Ë((cﬁË* 
gui
.
ch¨_width
 + gui.
b‹dî_off£t
)

	)

44 
	#FILL_Y
(
row
Ë(‘owË* 
gui
.
ch¨_height
 + gui.
b‹dî_off£t
)

	)

45 
	#X_2_COL
(
x
Ë(((xË- 
gui
.
b‹dî_off£t
Ë/ gui.
ch¨_width
)

	)

46 
	#Y_2_ROW
(
y
Ë(((yË- 
gui
.
b‹dî_off£t
Ë/ gui.
ch¨_height
)

	)

49 
	#MENU_NORMAL_MODE
 0x01

	)

50 
	#MENU_VISUAL_MODE
 0x02

	)

51 
	#MENU_INSERT_MODE
 0x04

	)

52 
	#MENU_CMDLINE_MODE
 0x08

	)

53 
	#MENU_ALL_MODES
 0x0f

	)

56 
	#MENU_INDEX_INVALID
 -1

	)

57 
	#MENU_INDEX_NORMAL
 0

	)

58 
	#MENU_INDEX_VISUAL
 1

	)

59 
	#MENU_INDEX_INSERT
 2

	)

60 
	#MENU_INDEX_CMDLINE
 3

	)

63 
	#SB_UPDATE_NOTHING
 0

	)

64 
	#SB_UPDATE_VALUE
 1

	)

65 
	#SB_UPDATE_HEIGHT
 2

	)

66 
	#SB_UPDATE_CREATE
 3

	)

69 
	#SB_NONE
 -1

	)

70 
	#SB_LEFT
 0

	)

71 
	#SB_RIGHT
 1

	)

72 
	#SB_BOTTOM
 2

	)

75 
	#SB_DEFAULT_WIDTH
 20

	)

78 
	#MENU_DEFAULT_HEIGHT
 32

	)

81 
	#HL_NORMAL
 0x00

	)

82 
	#HL_INVERSE
 0x01

	)

83 
	#HL_BOLD
 0x02

	)

84 
	#HL_ITAL
 0x04

	)

85 
	#HL_UNDERLINE
 0x08

	)

86 
	#HL_STANDOUT
 0x10

	)

87 
	#HL_SELECTED
 0x20

	)

88 
	#HL_ALL
 0x3f

	)

90 #ifde‡
USE_GUI_X11


93 
	#SELECT_CLEARED
 0

	)

94 
	#SELECT_IN_PROGRESS
 1

	)

95 
	#SELECT_DONE
 2

	)

97 
	#SELECT_MODE_CHAR
 0

	)

98 
	#SELECT_MODE_WORD
 1

	)

99 
	#SELECT_MODE_LINE
 2

	)

107 
	#INVALIDATE_CURSOR
(Ë(
gui
.
curs‹_row
 = -1)

	)

115 
	#IS_CURSOR_VALID
(Ë(
gui
.
curs‹_row
 >0)

	)

117 
	sGuiSñe˘i⁄


119 
	mow√d
;

120 
FPOS
 
	m°¨t
;

121 
FPOS
 
	míd
;

122 #ifde‡
USE_GUI_X11


123 
Atom
 
	m©om
;

124 
sh‹t_u
 
	m‹igö_row
;

125 
sh‹t_u
 
	m‹igö_°¨t_cﬁ
;

126 
sh‹t_u
 
	m‹igö_íd_cﬁ
;

127 
sh‹t_u
 
	mw‹d_°¨t_cﬁ
;

128 
sh‹t_u
 
	mw‹d_íd_cﬁ
;

129 
FPOS
 
	m¥ev
;

130 
sh‹t_u
 
	m°©e
;

131 
sh‹t_u
 
	mmode
;

133 } 
	tGuiSñe˘i⁄
;

135 
	sGuiMíu


137 
	mmodes
;

138 
ch¨_u
 *
	m«me
;

139 (*
	mcb
)();

140 
ch¨_u
 *
	m°rögs
[4];

141 
	mn‹em≠
[4];

142 
GuiMíu
 *
	mchûdªn
;

143 
GuiMíu
 *
	m√xt
;

144 #ifde‡
USE_GUI_X11


145 
Widgë
 
	mid
;

146 
Widgë
 
	msubmíu_id
;

148 } 
	tGuiMíu
;

150 
	sGuiS¸ﬁlb¨


152 
	mupd©e
[2];

154 
	mvÆue
;

155 
	msize
;

156 
	mmax
;

157 
	mt›
;

158 
	mheight
;

159 
	m°©us_height
;

160 #ifde‡
USE_GUI_X11


161 
Widgë
 
	mid
[2];

163 } 
	tGuiS¸ﬁlb¨
;

165 
	sGui


167 
	mö_focus
;

168 
	mö_u£
;

169 
	m°¨tög
;

170 
	mdyög
;

171 
	mdof‹k
;

172 
	mdøgged_sb
;

173 
wödow
 *
	mdøgged_wp
;

174 
	mcﬁ
;

175 
	mrow
;

176 
	mcurs‹_cﬁ
;

177 
	mcurs‹_row
;

178 
	mnum_cﬁs
;

179 
	mnum_rows
;

180 
	ms¸ﬁl_ªgi⁄_t›
;

181 
	ms¸ﬁl_ªgi⁄_bŸ
;

182 
l⁄g_u
 
	mhighlight_mask
;

183 
GuiSñe˘i⁄
 
	m£À˘i⁄
;

184 
GuiMíu
 *
	mroŸ_míu
;

185 
	mnum_s¸ﬁlb¨s
;

186 
	ms¸ﬁlb¨_width
;

187 
	mmíu_height
;

188 
	mmíu_is_a˘ive
;

189 
GuiS¸ﬁlb¨
 
	mcmdlöe_sb
;

191 
	mwhich_s¸ﬁlb¨s
[3];

192 
	m√w_sb
[3];

193 
	m¥ev_wøp
;

194 
	mch¨_width
;

195 
	mch¨_height
;

196 
	mch¨_as˚¡
;

197 
	mb‹dî_width
;

198 
	mb‹dî_off£t
;

199 #ifde‡
USE_GUI_X11


200 
Di•œy
 *
	mdpy
;

201 
Wödow
 
	mwid
;

202 
	mvisibûôy
;

203 
GC
 
	mãxt_gc
;

204 
GC
 
	mback_gc
;

205 
GC
 
	mövît_gc
;

206 
XF⁄tSåu˘
 *
	mn‹m_f⁄t
;

207 
XF⁄tSåu˘
 *
	mbﬁd_f⁄t
;

208 
XF⁄tSåu˘
 *
	môÆ_f⁄t
;

209 
XF⁄tSåu˘
 *
	mbﬁdôÆ_f⁄t
;

210 
Pixñ
 
	mback_pixñ
;

211 
Pixñ
 
	mn‹m_pixñ
;

212 
Pixñ
 
	mbﬁd_pixñ
;

213 
Pixñ
 
	môÆ_pixñ
;

214 
Pixñ
 
	mundîlöe_pixñ
;

215 
Pixñ
 
	mcurs‹_pixñ
;

216 
Pixñ
 
	mmíu_fg_pixñ
;

217 
Pixñ
 
	mmíu_bg_pixñ
;

218 
Pixñ
 
	ms¸ﬁl_fg_pixñ
;

219 
Pixñ
 
	ms¸ﬁl_bg_pixñ
;

222 
ch¨_u
 *
	mdÊt_f⁄t
;

223 
ch¨_u
 *
	mdÊt_bﬁd_‚
;

224 
ch¨_u
 *
	mdÊt_ôÆ_‚
;

225 
ch¨_u
 *
	mdÊt_bﬁdôÆ_‚
;

226 
ch¨_u
 *
	mgeom
;

227 
Boﬁ
 
	mªv_video
;

229 } 
	tGui
;

231 
Gui
 
gui
;

232 
f‹˚_míu_upd©e
;

	@src/gui_at_sb.h

59 #i‚de‡
_S¸ﬁlb¨_h


60 
	#_S¸ﬁlb¨_h


	)

68 
	~<X11/I¡rösicP.h
>

69 
	~<X11/Xaw/Sim∂eP.h
>

70 
	~<X11/Xmu/C⁄vîãrs.h
>

75 
	#XtCMöimumThumb
 "MöimumThumb"

	)

76 
	#XtCShown
 "Shown"

	)

77 
	#XtCT›OfThumb
 "T›OfThumb"

	)

78 
	#XtCMaxOfThumb
 "MaxOfThumb"

	)

79 
	#XtCShadowWidth
 "ShadowWidth"

	)

80 
	#XtCT›ShadowPixñ
 "T›ShadowPixñ"

	)

81 
	#XtCBŸtomShadowPixñ
 "BŸtomShadowPixñ"

	)

83 
	#XtNmöimumThumb
 "möimumThumb"

	)

84 
	#XtNt›OfThumb
 "t›OfThumb"

	)

85 
	#XtNmaxOfThumb
 "maxOfThumb"

	)

86 
	#XtNshadowWidth
 "shadowWidth"

	)

87 
	#XtNt›ShadowPixñ
 "t›ShadowPixñ"

	)

88 
	#XtNbŸtomShadowPixñ
 "bŸtomShadowPixñ"

	)

90 
_S¸ﬁlb¨Rec
 *
	tS¸ﬁlb¨Widgë
;

91 
_S¸ﬁlb¨CœssRec
 *
	tS¸ﬁlb¨WidgëCœss
;

93 
WidgëCœss
 
vim_s¸ﬁlb¨WidgëCœss
;

95 #i‡
NìdWidePrŸŸy≥s


96 
vim_XawS¸ﬁlb¨SëThumb
 
__ARGS
((
Widgë
, , , ));

98 
vim_XawS¸ﬁlb¨SëThumb
 
__ARGS
((
Widgë
, , , ));

104 
Pixñ
 
	mf‹eground
;

105 
XtOrõ¡©i⁄
 
	m‹õ¡©i⁄
;

106 
XtCÆlbackLi°
 
	ms¸ﬁlProc
;

107 
XtCÆlbackLi°
 
	mthumbProc
;

108 
XtCÆlbackLi°
 
	mjumpProc
;

109 
Pixm≠
 
	mthumb
;

110 
	mt›
;

111 
	mshown
;

112 
	mmax
;

113 
Dimísi⁄
 
	mÀngth
;

114 
Dimísi⁄
 
	mthick√ss
;

115 
Dimísi⁄
 
	mmö_thumb
;

118 
XtI¡îvÆId
 
	mtimî_id
;

119 
	ms¸ﬁl_mode
;

120 
	ms¸ﬁl_off
;

121 
GC
 
	mgc
;

122 
Posôi⁄
 
	mt›Loc
;

123 
Dimísi⁄
 
	mshownLígth
;

126 
Dimísi⁄
 
	mshadow_width
;

127 
Pixñ
 
	mt›_shadow_pixñ
;

128 
Pixñ
 
	mbŸ_shadow_pixñ
;

129 
	mt›_shadow_c⁄åa°
;

130 
	mbŸ_shadow_c⁄åa°
;

131 
GC
 
	mt›_shadow_GC
;

132 
GC
 
	mbŸ_shadow_GC
;

133 } 
	tS¸ﬁlb¨P¨t
;

135 
	#SMODE_NONE
 0

	)

136 
	#SMODE_CONT
 1

	)

137 
	#SMODE_PAGE_UP
 2

	)

138 
	#SMODE_PAGE_DOWN
 3

	)

139 
	#SMODE_LINE_UP
 4

	)

140 
	#SMODE_LINE_DOWN
 5

	)

142 
	#ONE_LINE_DATA
 1

	)

143 
	#ONE_PAGE_DATA
 10

	)

144 
	#END_PAGE_DATA
 9999

	)

146 
	s_S¸ﬁlb¨Rec
 {

147 
C‹eP¨t
 
	mc‹e
;

148 
Sim∂eP¨t
 
	msim∂e
;

149 
S¸ﬁlb¨P¨t
 
	ms¸ﬁlb¨
;

150 } 
	tS¸ﬁlb¨Rec
;

152 °ru˘ {
	mem±y
;} 
	tS¸ﬁlb¨CœssP¨t
;

154 
	s_S¸ﬁlb¨CœssRec
 {

155 
C‹eCœssP¨t
 
	mc‹e_˛ass
;

156 
Sim∂eCœssP¨t
 
	msim∂e_˛ass
;

157 
S¸ﬁlb¨CœssP¨t
 
	ms¸ﬁlb¨_˛ass
;

158 } 
	tS¸ﬁlb¨CœssRec
;

160 
S¸ﬁlb¨CœssRec
 
vim_s¸ﬁlb¨CœssRec
;

	@src/help.c

13 
	~"vim.h
"

14 
	~"globÆs.h
"

15 
	~"¥Ÿo.h
"

16 
	~"›ti⁄.h
"

19 
	$do_hñp
(
¨g
)

20 
ch¨_u
 *
¨g
;

22 
ch¨_u
 *
‚amï
;

23 
FILE
 *
hñpfd
;

24 
n
;

25 
WIN
 *
wp
;

26 
num_m©ches
;

27 
ch¨_u
 **
m©ches
;

28 
√ed_‰ì
 = 
FALSE
;

33 i‡(*
¨g
 !
NUL
)

35 
n
 = 
	`föd_hñp_ègs
(
¨g
, &
num_m©ches
, &
m©ches
);

36 i‡(
num_m©ches
 =0 || 
n
 =
FAIL
)

38 
	`EMSG2
("S‹ry,Çÿhñ∞f‹ %s", 
¨g
);

43 
¨g
 = 
	`°rßve
(
m©ches
[0]);

44 
√ed_‰ì
 = 
TRUE
;

45 
	`FªeWûd
(
num_m©ches
, 
m©ches
);

51 i‡(!
curwö
->
w_buf„r
->
b_hñp
)

53 
wp
 = 
fú°wö
; w∞!
NULL
; w∞wp->
w_√xt
)

54 i‡(
wp
->
w_buf„r
 !
NULL
 && wp->w_buf„r->
b_hñp
)

56 i‡(
wp
 !
NULL
 && wp->
w_buf„r
->
b_nwödows
 > 0)

57 
	`wö_íãr
(
wp
, 
TRUE
);

64 
‚amï
 = 
p_hf
;

65 i‡((
hñpfd
 = 
	`f›í
((*)
p_hf
, 
READBIN
)Ë=
NULL
)

67 #i‡
	`deföed
(
MSDOS
)

71 
‚amï
 = 
	`£¨ch∑th
("vim_help.txt");

72 i‡(
‚amï
 =
NULL
 ||

73 (
hñpfd
 = 
	`f›í
((*)
‚amï
, 
READBIN
)Ë=
NULL
)

75 
	`smsg
((
ch¨_u
 *)"S‹ry, hñ∞fûê\"%s\"ánd \"vim_hñp.txt\"ÇŸ found", 
p_hf
);

76 
îªt
;

79 
	`smsg
((
ch¨_u
 *)"S‹ry, hñ∞fûê\"%s\"ÇŸ found", 
p_hf
);

80 
îªt
;

83 
	`f˛o£
(
hñpfd
);

85 i‡(
	`wö_•lô
(0, 
FALSE
Ë=
FAIL
)

86 
îªt
;

88 i‡(
curwö
->
w_height
 < 
p_hh
)

89 
	`wö_£theight
(()
p_hh
);

91 #ifde‡
RIGHTLEFT


92 
curwö
->
w_p_æ
 = 0;

94 
curwö
->
w_p_nu
 = 0;

100 ()
	`do_ecmd
(0, 
‚amï
, 
NULL
, NULL, 
TRUE
, (
löír_t
)0, TRUE);

103 
	`vim_‰ì
(
hñp_ßve_isk
);

104 
hñp_ßve_isk
 = 
	`°rßve
(
curbuf
->
b_p_isk
);

105 
hñp_ßve_ts
 = 
curbuf
->
b_p_ts
;

108 
	`£t_°rög_›ti⁄
((
ch¨_u
 *)"isk", -1,

109 (
ch¨_u
 *)"!-~,^*,^|,^\"", 
TRUE
);

110 
curbuf
->
b_p_ts
 = 8;

111 
	`check_buf_›ti⁄s
(
curbuf
);

112 ()
	`öô_ch¨èb
();

116 
ª°¨t_edô
 = 0;

118 
	`°uffRódbuff
((
ch¨_u
 *)":ta ");

119 i‡(
¨g
 !
NULL
 && *¨g !
NUL
)

120 
	`°uffRódbuff
(
¨g
);

122 
	`°uffRódbuff
((
ch¨_u
 *)"vim_help.txt");

123 
	`°uffch¨Ródbuff
('\n');

125 
îªt
:

126 i‡(
√ed_‰ì
)

127 
	`vim_‰ì
(
¨g
);

128 
	}
}

141 
	$hñp_heuri°ic
(
m©ched_°rög
, 
off£t
)

142 
ch¨_u
 *
m©ched_°rög
;

143 
off£t
;

145 
num_Àâîs
;

146 
ch¨_u
 *
p
;

148 
num_Àâîs
 = 0;

149 
p
 = 
m©ched_°rög
; *p;Ö++)

150 i‡(
	`iß um
(*
p
))

151 
num_Àâîs
++;

161 i‡(
	`iß um
(
m©ched_°rög
[
off£t
]) && offset > 0 &&

162 
	`iß um
(
m©ched_°rög
[
off£t
 - 1]))

163 
off£t
 += 10000;

164 i‡(
off£t
 > 2)

165 
off£t
 *= 200;

166  ()(100 * 
num_Àâîs
 + 
	`STRLEN
(
m©ched_°rög
Ë+ 
off£t
);

167 
	}
}

169 
hñp_com∑ª
 
__ARGS
((c⁄° *
s1
, c⁄° *
s2
));

176 
	$hñp_com∑ª
(
s1
, 
s2
)

177 c⁄° *
s1
;

178 c⁄° *
s2
;

180 *
p1
;

181 *
p2
;

183 
p1
 = *(**)
s1
 + 
	`°æí
(*(**)s1) + 1;

184 
p2
 = *(**)
s2
 + 
	`°æí
(*(**)s2) + 1;

185  
	`°rcmp
(
p1
, 
p2
);

186 
	}
}

195 
	$föd_hñp_ègs
(
¨g
, 
num_m©ches
, 
m©ches
)

196 
ch¨_u
 *
¨g
;

197 *
num_m©ches
;

198 
ch¨_u
 ***
m©ches
;

200 
ch¨_u
 *
s
, *
d
;

201 
ªgexp
 *
¥og
;

202 
©ãm±
;

203 
ªtvÆ
 = 
FAIL
;

205 
ªg_magic
 = 
p_magic
;

206 
d
 = 
IObuff
;

220 i‡(
	`STRCMP
(
¨g
, "*") == 0 || STRCMP(arg, "[*") == 0 ||

221 
	`STRCMP
(
¨g
, "]*") == 0)

223 i‡(*
¨g
 != '*')

224 *
d
++ = *
¨g
;

225 
	`STRCPY
(
d
, "star");

226 
d
 += 4;

230 
s
 = 
¨g
; *s; ++s)

232 i‡(
d
 - 
IObuff
 > 
IOSIZE
 - 10)

234 *
s
)

236 '|': 
	`STRCPY
(
d
, "bar");

237 
d
 += 3;

239 '\"': 
	`STRCPY
(
d
, "quote");

240 
d
 += 5;

242 '*': *
d
++ = '.';

245 '?': i‡(
¨g
[1] =
NUL
 ||

246 
	`STRCMP
(
¨g
, ":?") == 0 ||

247 
	`STRCMP
(
¨g
, "?<CR>") == 0)

249 *
d
++ = '.';

253 '~': *
d
++ = '\\';

256 i‡(*
s
 < ' ' || (*s == '^' && s[1] && s[1] != '_'))

258 
	`STRCPY
(
d
, "CTRL-");

259 
d
 += 5;

260 i‡(*
s
 < ' ')

262 *
d
++ = *
s
 + '@';

265 ++
s
;

267 i‡(*
s
 == '^')

268 *
d
++ = '\\';

269 *
d
++ = *
s
;

270 i‡(*
s
 ='\'' && s > 
¨g
 && *arg == '\'')

274 *
d
 = 
NUL
;

276 
ªg_ic
 = 
FALSE
;

277 
¥og
 = 
	`vim_ªgcomp
(
IObuff
);

278 i‡(
¥og
 =
NULL
)

279  
FAIL
;

282 
©ãm±
 = 0;áâem± < 2; ++©ãm±, 
ªg_ic
 = 
TRUE
)

284 *
m©ches
 = (
ch¨_u
 **)"";

285 *
num_m©ches
 = 0;

286 
ªtvÆ
 = 
	`föd_ègs
(
NULL
, 
¥og
, 
num_m©ches
, 
m©ches
, 
TRUE
);

287 i‡(
ªtvÆ
 =
FAIL
 || *
num_m©ches
)

290 
	`vim_‰ì
(
¥og
);

292 #ifde‡
HAVE_QSORT


297 
	`qs‹t
((*)*
m©ches
, (
size_t
)*
num_m©ches
,

298 (
ch¨_u
 *), 
hñp_com∑ª
);

300  
OK
;

301 
	}
}

	@src/keymap.h

9 
	#K_CCIRCM
 0x1ê

	)

15 
	#K_NUL
 (0x˚Ë

	)

31 
	#K_SPECIAL
 (0x80)

	)

38 
	#IS_SPECIAL
(
c
Ë((cË>0x200)

	)

39 
	#IS_ABBR
(
c
Ë((cË>0x100 && (cË< 0x200)

	)

40 
	#ABBR_OFF
 0x100

	)

46 
	#KS_ZERO
 255

	)

52 
	#KS_SPECIAL
 254

	)

58 
	#KS_EXTRA
 253

	)

64 
	#KS_MODIFIER
 252

	)

70 
	#KS_MOUSE
 251

	)

71 
	#KS_MENU
 250

	)

72 
	#KS_SCROLLBAR
 249

	)

73 
	#KS_HORIZ_SCROLLBAR
 248

	)

78 
	#K_FILLER
 ('X')

	)

83 
	#TERMCAP2KEY
(
a
, 
b
Ë(◊Ë+ ((bË<< 8))

	)

84 
	#KEY2TERMCAP0
(
x
Ë((xË& 0xff)

	)

85 
	#KEY2TERMCAP1
(
x
Ë(((xË>> 8Ë& 0xff)

	)

90 
	#K_SECOND
(
c
Ë((cË=
K_SPECIAL
 ? 
KS_SPECIAL
 : (cË=
NUL
 ? 
KS_ZERO
 : 
	`KEY2TERMCAP0
(c))

	)

92 
	#K_THIRD
(
c
Ë(((cË=
K_SPECIAL
 || (cË=
NUL
Ë? 
K_FILLER
 : 
	`KEY2TERMCAP1
(c))

	)

97 
	#TO_SPECIAL
(
a
, 
b
Ë(◊Ë=
KS_SPECIAL
 ? 
K_SPECIAL
 : (aË=
KS_ZERO
 ? 
K_ZERO
 : 
	`TERMCAP2KEY
◊, b))

	)

104 
	#KE_NAME
 3

	)

106 
	#KE_S_UP
 4

	)

107 
	#KE_S_DOWN
 5

	)

109 
	#KE_S_F1
 6

	)

110 
	#KE_S_F2
 7

	)

111 
	#KE_S_F3
 8

	)

112 
	#KE_S_F4
 9

	)

113 
	#KE_S_F5
 10

	)

114 
	#KE_S_F6
 11

	)

115 
	#KE_S_F7
 12

	)

116 
	#KE_S_F8
 13

	)

117 
	#KE_S_F9
 14

	)

118 
	#KE_S_F10
 15

	)

120 
	#KE_S_F11
 16

	)

121 
	#KE_S_F12
 17

	)

122 
	#KE_S_F13
 18

	)

123 
	#KE_S_F14
 19

	)

124 
	#KE_S_F15
 20

	)

125 
	#KE_S_F16
 21

	)

126 
	#KE_S_F17
 22

	)

127 
	#KE_S_F18
 23

	)

128 
	#KE_S_F19
 24

	)

129 
	#KE_S_F20
 25

	)

131 
	#KE_S_F21
 26

	)

132 
	#KE_S_F22
 27

	)

133 
	#KE_S_F23
 28

	)

134 
	#KE_S_F24
 29

	)

135 
	#KE_S_F25
 30

	)

136 
	#KE_S_F26
 31

	)

137 
	#KE_S_F27
 32

	)

138 
	#KE_S_F28
 33

	)

139 
	#KE_S_F29
 34

	)

140 
	#KE_S_F30
 35

	)

142 
	#KE_S_F31
 36

	)

143 
	#KE_S_F32
 37

	)

144 
	#KE_S_F33
 38

	)

145 
	#KE_S_F34
 39

	)

146 
	#KE_S_F35
 40

	)

148 
	#KE_MOUSE
 41

	)

154 
	#KE_LEFTMOUSE
 42

	)

155 
	#KE_LEFTDRAG
 43

	)

156 
	#KE_LEFTRELEASE
 44

	)

157 
	#KE_MIDDLEMOUSE
 45

	)

158 
	#KE_MIDDLEDRAG
 46

	)

159 
	#KE_MIDDLERELEASE
 47

	)

160 
	#KE_RIGHTMOUSE
 48

	)

161 
	#KE_RIGHTDRAG
 49

	)

162 
	#KE_RIGHTRELEASE
 50

	)

164 
	#KE_IGNORE
 51

	)

166 
	#KE_TAB
 52

	)

167 
	#KE_S_TAB
 53

	)

172 
	#K_ZERO
 
	`TERMCAP2KEY
(
KS_ZERO
, 
K_FILLER
)

	)

174 
	#K_UP
 
	`TERMCAP2KEY
('k', 'u')

	)

175 
	#K_DOWN
 
	`TERMCAP2KEY
('k', 'd')

	)

176 
	#K_LEFT
 
	`TERMCAP2KEY
('k', 'l')

	)

177 
	#K_RIGHT
 
	`TERMCAP2KEY
('k', 'r')

	)

178 
	#K_S_UP
 
	`TERMCAP2KEY
(
KS_EXTRA
, 
KE_S_UP
)

	)

179 
	#K_S_DOWN
 
	`TERMCAP2KEY
(
KS_EXTRA
, 
KE_S_DOWN
)

	)

180 
	#K_S_LEFT
 
	`TERMCAP2KEY
('#', '4')

	)

181 
	#K_S_RIGHT
 
	`TERMCAP2KEY
('%', 'i')

	)

182 
	#K_TAB
 
	`TERMCAP2KEY
(
KS_EXTRA
, 
KE_TAB
)

	)

183 
	#K_S_TAB
 
	`TERMCAP2KEY
(
KS_EXTRA
, 
KE_S_TAB
)

	)

185 
	#K_F1
 
	`TERMCAP2KEY
('k', '1'Ë

	)

186 
	#K_F2
 
	`TERMCAP2KEY
('k', '2')

	)

187 
	#K_F3
 
	`TERMCAP2KEY
('k', '3')

	)

188 
	#K_F4
 
	`TERMCAP2KEY
('k', '4')

	)

189 
	#K_F5
 
	`TERMCAP2KEY
('k', '5')

	)

190 
	#K_F6
 
	`TERMCAP2KEY
('k', '6')

	)

191 
	#K_F7
 
	`TERMCAP2KEY
('k', '7')

	)

192 
	#K_F8
 
	`TERMCAP2KEY
('k', '8')

	)

193 
	#K_F9
 
	`TERMCAP2KEY
('k', '9')

	)

194 
	#K_F10
 
	`TERMCAP2KEY
('k', ';')

	)

196 
	#K_F11
 
	`TERMCAP2KEY
('F', '1')

	)

197 
	#K_F12
 
	`TERMCAP2KEY
('F', '2')

	)

198 
	#K_F13
 
	`TERMCAP2KEY
('F', '3')

	)

199 
	#K_F14
 
	`TERMCAP2KEY
('F', '4')

	)

200 
	#K_F15
 
	`TERMCAP2KEY
('F', '5')

	)

201 
	#K_F16
 
	`TERMCAP2KEY
('F', '6')

	)

202 
	#K_F17
 
	`TERMCAP2KEY
('F', '7')

	)

203 
	#K_F18
 
	`TERMCAP2KEY
('F', '8')

	)

204 
	#K_F19
 
	`TERMCAP2KEY
('F', '9')

	)

205 
	#K_F20
 
	`TERMCAP2KEY
('F', 'A')

	)

207 
	#K_F21
 
	`TERMCAP2KEY
('F', 'B')

	)

208 
	#K_F22
 
	`TERMCAP2KEY
('F', 'C')

	)

209 
	#K_F23
 
	`TERMCAP2KEY
('F', 'D')

	)

210 
	#K_F24
 
	`TERMCAP2KEY
('F', 'E')

	)

211 
	#K_F25
 
	`TERMCAP2KEY
('F', 'F')

	)

212 
	#K_F26
 
	`TERMCAP2KEY
('F', 'G')

	)

213 
	#K_F27
 
	`TERMCAP2KEY
('F', 'H')

	)

214 
	#K_F28
 
	`TERMCAP2KEY
('F', 'I')

	)

215 
	#K_F29
 
	`TERMCAP2KEY
('F', 'J')

	)

216 
	#K_F30
 
	`TERMCAP2KEY
('F', 'K')

	)

218 
	#K_F31
 
	`TERMCAP2KEY
('F', 'L')

	)

219 
	#K_F32
 
	`TERMCAP2KEY
('F', 'M')

	)

220 
	#K_F33
 
	`TERMCAP2KEY
('F', 'N')

	)

221 
	#K_F34
 
	`TERMCAP2KEY
('F', 'O')

	)

222 
	#K_F35
 
	`TERMCAP2KEY
('F', 'P')

	)

224 
	#K_S_F1
 
	`TERMCAP2KEY
(
KS_EXTRA
, 
KE_S_F1
Ë

	)

225 
	#K_S_F2
 
	`TERMCAP2KEY
(
KS_EXTRA
, 
KE_S_F2
)

	)

226 
	#K_S_F3
 
	`TERMCAP2KEY
(
KS_EXTRA
, 
KE_S_F3
)

	)

227 
	#K_S_F4
 
	`TERMCAP2KEY
(
KS_EXTRA
, 
KE_S_F4
)

	)

228 
	#K_S_F5
 
	`TERMCAP2KEY
(
KS_EXTRA
, 
KE_S_F5
)

	)

229 
	#K_S_F6
 
	`TERMCAP2KEY
(
KS_EXTRA
, 
KE_S_F6
)

	)

230 
	#K_S_F7
 
	`TERMCAP2KEY
(
KS_EXTRA
, 
KE_S_F7
)

	)

231 
	#K_S_F8
 
	`TERMCAP2KEY
(
KS_EXTRA
, 
KE_S_F8
)

	)

232 
	#K_S_F9
 
	`TERMCAP2KEY
(
KS_EXTRA
, 
KE_S_F9
)

	)

233 
	#K_S_F10
 
	`TERMCAP2KEY
(
KS_EXTRA
, 
KE_S_F10
)

	)

235 
	#K_S_F11
 
	`TERMCAP2KEY
(
KS_EXTRA
, 
KE_S_F11
)

	)

236 
	#K_S_F12
 
	`TERMCAP2KEY
(
KS_EXTRA
, 
KE_S_F12
)

	)

237 
	#K_S_F13
 
	`TERMCAP2KEY
(
KS_EXTRA
, 
KE_S_F13
)

	)

238 
	#K_S_F14
 
	`TERMCAP2KEY
(
KS_EXTRA
, 
KE_S_F14
)

	)

239 
	#K_S_F15
 
	`TERMCAP2KEY
(
KS_EXTRA
, 
KE_S_F15
)

	)

240 
	#K_S_F16
 
	`TERMCAP2KEY
(
KS_EXTRA
, 
KE_S_F16
)

	)

241 
	#K_S_F17
 
	`TERMCAP2KEY
(
KS_EXTRA
, 
KE_S_F17
)

	)

242 
	#K_S_F18
 
	`TERMCAP2KEY
(
KS_EXTRA
, 
KE_S_F18
)

	)

243 
	#K_S_F19
 
	`TERMCAP2KEY
(
KS_EXTRA
, 
KE_S_F19
)

	)

244 
	#K_S_F20
 
	`TERMCAP2KEY
(
KS_EXTRA
, 
KE_S_F20
)

	)

246 
	#K_S_F21
 
	`TERMCAP2KEY
(
KS_EXTRA
, 
KE_S_F21
)

	)

247 
	#K_S_F22
 
	`TERMCAP2KEY
(
KS_EXTRA
, 
KE_S_F22
)

	)

248 
	#K_S_F23
 
	`TERMCAP2KEY
(
KS_EXTRA
, 
KE_S_F23
)

	)

249 
	#K_S_F24
 
	`TERMCAP2KEY
(
KS_EXTRA
, 
KE_S_F24
)

	)

250 
	#K_S_F25
 
	`TERMCAP2KEY
(
KS_EXTRA
, 
KE_S_F25
)

	)

251 
	#K_S_F26
 
	`TERMCAP2KEY
(
KS_EXTRA
, 
KE_S_F26
)

	)

252 
	#K_S_F27
 
	`TERMCAP2KEY
(
KS_EXTRA
, 
KE_S_F27
)

	)

253 
	#K_S_F28
 
	`TERMCAP2KEY
(
KS_EXTRA
, 
KE_S_F28
)

	)

254 
	#K_S_F29
 
	`TERMCAP2KEY
(
KS_EXTRA
, 
KE_S_F29
)

	)

255 
	#K_S_F30
 
	`TERMCAP2KEY
(
KS_EXTRA
, 
KE_S_F30
)

	)

257 
	#K_S_F31
 
	`TERMCAP2KEY
(
KS_EXTRA
, 
KE_S_F31
)

	)

258 
	#K_S_F32
 
	`TERMCAP2KEY
(
KS_EXTRA
, 
KE_S_F32
)

	)

259 
	#K_S_F33
 
	`TERMCAP2KEY
(
KS_EXTRA
, 
KE_S_F33
)

	)

260 
	#K_S_F34
 
	`TERMCAP2KEY
(
KS_EXTRA
, 
KE_S_F34
)

	)

261 
	#K_S_F35
 
	`TERMCAP2KEY
(
KS_EXTRA
, 
KE_S_F35
)

	)

263 
	#K_HELP
 
	`TERMCAP2KEY
('%', '1')

	)

264 
	#K_UNDO
 
	`TERMCAP2KEY
('&', '8')

	)

266 
	#K_BS
 
	`TERMCAP2KEY
('k', 'b')

	)

268 
	#K_INS
 
	`TERMCAP2KEY
('k', 'I')

	)

269 
	#K_DEL
 
	`TERMCAP2KEY
('k', 'D')

	)

270 
	#K_HOME
 
	`TERMCAP2KEY
('k', 'h')

	)

271 
	#K_END
 
	`TERMCAP2KEY
('@', '7')

	)

272 
	#K_PAGEUP
 
	`TERMCAP2KEY
('k', 'P')

	)

273 
	#K_PAGEDOWN
 
	`TERMCAP2KEY
('k', 'N')

	)

275 
	#K_MOUSE
 
	`TERMCAP2KEY
(
KS_MOUSE
, 
K_FILLER
)

	)

276 
	#K_MENU
 
	`TERMCAP2KEY
(
KS_MENU
, 
K_FILLER
)

	)

277 
	#K_SCROLLBAR
 
	`TERMCAP2KEY
(
KS_SCROLLBAR
, 
K_FILLER
)

	)

278 
	#K_HORIZ_SCROLLBAR
 
	`TERMCAP2KEY
(
KS_HORIZ_SCROLLBAR
, 
K_FILLER
)

	)

284 
	#K_LEFTMOUSE
 
	`TERMCAP2KEY
(
KS_EXTRA
, 
KE_LEFTMOUSE
)

	)

285 
	#K_LEFTDRAG
 
	`TERMCAP2KEY
(
KS_EXTRA
, 
KE_LEFTDRAG
)

	)

286 
	#K_LEFTRELEASE
 
	`TERMCAP2KEY
(
KS_EXTRA
, 
KE_LEFTRELEASE
)

	)

287 
	#K_MIDDLEMOUSE
 
	`TERMCAP2KEY
(
KS_EXTRA
, 
KE_MIDDLEMOUSE
)

	)

288 
	#K_MIDDLEDRAG
 
	`TERMCAP2KEY
(
KS_EXTRA
, 
KE_MIDDLEDRAG
)

	)

289 
	#K_MIDDLERELEASE
 
	`TERMCAP2KEY
(
KS_EXTRA
, 
KE_MIDDLERELEASE
)

	)

290 
	#K_RIGHTMOUSE
 
	`TERMCAP2KEY
(
KS_EXTRA
, 
KE_RIGHTMOUSE
)

	)

291 
	#K_RIGHTDRAG
 
	`TERMCAP2KEY
(
KS_EXTRA
, 
KE_RIGHTDRAG
)

	)

292 
	#K_RIGHTRELEASE
 
	`TERMCAP2KEY
(
KS_EXTRA
, 
KE_RIGHTRELEASE
)

	)

294 
	#K_IGNORE
 
	`TERMCAP2KEY
(
KS_EXTRA
, 
KE_IGNORE
)

	)

297 
	#MOD_MASK_SHIFT
 0x02

	)

298 
	#MOD_MASK_CTRL
 0x04

	)

299 
	#MOD_MASK_ALT
 0x08

	)

300 
	#MOD_MASK_2CLICK
 0x10

	)

301 
	#MOD_MASK_3CLICK
 0x20

	)

302 
	#MOD_MASK_4CLICK
 0x40

	)

304 
	#MOD_MASK_MULTI_CLICK
 (
MOD_MASK_2CLICK
|
MOD_MASK_3CLICK
|
MOD_MASK_4CLICK
)

	)

310 
	#MAX_KEY_NAME_LEN
 23

	)

320 
	#MAX_KEY_CODE_LEN
 6

	)

	@src/linefunc.c

14 
	~"vim.h
"

15 
	~"globÆs.h
"

16 
	~"¥Ÿo.h
"

27 
	$cﬁadv™˚
(
wcﬁ
)

28 
cﬁƒ_t
 
wcﬁ
;

30 
idx
;

31 
ch¨_u
 *
±r
;

32 
cﬁƒ_t
 
cﬁ
;

34 
±r
 = 
	`ml_gë_cuæöe
();

37 
idx
 = -1;

38 
cﬁ
 = 0;

39 
cﬁ
 <
wcﬁ
 && *
±r
)

41 ++
idx
;

43 
cﬁ
 +
	`lbr_ch¨èbsize
(
±r
, col);

44 ++
±r
;

49 i‡((
Sèã
 & 
INSERT
Ë&& 
cﬁ
 <
wcﬁ
)

50 ++
idx
;

51 i‡(
idx
 < 0)

52 
curwö
->
w_curs‹
.
cﬁ
 = 0;

54 
curwö
->
w_curs‹
.
cﬁ
 = 
idx
;

55 i‡(
cﬁ
 <
wcﬁ
)

56  
FAIL
;

58  
OK
;

59 
	}
}

68 
	$öc_curs‹
()

70  
	`öc
(&
curwö
->
w_curs‹
);

71 
	}
}

74 
	$öc
(
Õ
)

75 
FPOS
 *
Õ
;

77 
ch¨_u
 *
p
 = 
	`ml_gë_pos
(
Õ
);

79 i‡(*
p
 !
NUL
)

81 
Õ
->
cﬁ
++;

82  ((
p
[1] !
NUL
) ? 0 : 1);

84 i‡(
Õ
->
 um
 !
curbuf
->
b_ml
.
ml_löe_cou¡
)

86 
Õ
->
cﬁ
 = 0;

87 
Õ
->
 um
++;

91 
	}
}

97 
	$ö˛
(
Õ
)

98 
FPOS
 *
Õ
;

100 
r
;

102 i‡((
r
 = 
	`öc
(
Õ
)Ë=1 &&Üp->
cﬁ
)

103 
r
 = 
	`öc
(
Õ
);

104  
r
;

105 
	}
}

114 
	$dec_curs‹
()

116  
	`dec
(&
curwö
->
w_curs‹
);

117 
	}
}

120 
	$dec
(
Õ
)

121 
FPOS
 *
Õ
;

123 i‡(
Õ
->
cﬁ
 > 0)

125 
Õ
->
cﬁ
--;

128 i‡(
Õ
->
 um
 > 1)

130 
Õ
->
 um
--;

131 
Õ
->
cﬁ
 = 
	`STRLEN
(
	`ml_gë
÷p->
 um
));

135 
	}
}

141 
	$de˛
(
Õ
)

142 
FPOS
 *
Õ
;

144 
r
;

146 i‡((
r
 = 
	`dec
(
Õ
)Ë=1 &&Üp->
cﬁ
)

147 
r
 = 
	`dec
(
Õ
);

148  
r
;

149 
	}
}

155 
	$adju°_curs‹
()

157 
cﬁƒ_t
 
Àn
;

159 i‡(
curwö
->
w_curs‹
.
 um
 == 0)

160 
curwö
->
w_curs‹
.
 um
 = 1;

161 i‡(
curwö
->
w_curs‹
.
 um
 > 
curbuf
->
b_ml
.
ml_löe_cou¡
)

162 
curwö
->
w_curs‹
.
 um
 = 
curbuf
->
b_ml
.
ml_löe_cou¡
;

164 
Àn
 = 
	`STRLEN
(
	`ml_gë_cuæöe
());

165 i‡(
Àn
 == 0)

166 
curwö
->
w_curs‹
.
cﬁ
 = 0;

167 i‡(
curwö
->
w_curs‹
.
cﬁ
 >
Àn
)

168 
curwö
->
w_curs‹
.
cﬁ
 = 
Àn
 - 1;

169 
	}
}

	@src/macros.h

16 
	#pch¨
(
Õ
, 
c
Ë(*(
	`ml_gë_buf
(
curbuf
, (Õ).
 um
, 
TRUE
Ë+ (Õ).
cﬁ
Ë(c))

	)

21 
	#…
(
a
, 
b
Ë((◊).
 um
 != (b).lnum) \

22 ? ((
a
).
 um
 < (
b
). umË: (◊).
cﬁ
 < (b).cﬁ))

	)

24 
	#…‹eq
(
a
, 
b
Ë((◊).
 um
 != (b).lnum) \

25 ? ((
a
).
 um
 < (
b
). umË: (◊).
cﬁ
 <(b).cﬁ))

	)

27 
	#equÆ
(
a
, 
b
Ë((◊).
 um
 =(b). umË&& (◊).
cﬁ
 =(b).cﬁ))

	)

32 
	#löìm±y
(
p
Ë(*
	`ml_gë
’Ë=
NUL
)

	)

37 
	#bu„m±y
(Ë(
curbuf
->
b_ml
.
ml_löe_cou¡
 =1 && *
	`ml_gë
((
löír_t
)1Ë=
NUL
)

	)

42 #ifde‡
BROKEN_TOUPPER


43 
	#TO_UPPER
(
c
Ë(
	`i¶owî
(cË? 
	`touµî
(cË: (c))

	)

44 
	#TO_LOWER
(
c
Ë(
	`isuµî
(cË? 
	`tﬁowî
(cË: (c))

	)

46 
	#TO_UPPER
 
touµî


	)

47 
	#TO_LOWER
 
tﬁowî


	)

50 #ifde‡
HAVE_LANGMAP


58 
	#LANGMAP_ADJUST
(
c
, 
c⁄dôi⁄
) do { \

59 i‡(*
p_œngm≠
 && (
c⁄dôi⁄
Ë&& !
KeyStuf„d
 && (
c
) < 256) \

60 
c
 = 
œngm≠_m≠ch¨
[c]; \

61 } 0)

	)

68 
	#isbªak
(
c
Ë(
bªak©_Êags
[(
ch¨_u
)(c)])

	)

	@src/main.c

9 
	#EXTERN


	)

10 
	~"vim.h
"

11 
	~"globÆs.h
"

12 
	~"¥Ÿo.h
"

13 
	~"›ti⁄.h
"

15 #ifde‡
SPAWNO


16 
	~<•awno.h
>

19 
ußge
 
__PARMS
((, 
ch¨_u
 *));

20 
	g°dout_nŸty
 = 
FALSE
;

26 
	#USAGE_UNKNOWN_OPTION
 0

	)

27 
	#USAGE_TOO_MANY_ARGS
 1

	)

28 
	#USAGE_ARG_MISSING
 2

	)

29 
	#USAGE_GARBAGE
 3

	)

32 
	$ußge
(
n
, 
°r
)

33 
n
;

34 
ch¨_u
 *
°r
;

36 
i
;

37 
ch¨_u
 *(
u£
[]) = {(char_u *)"[file ..]",

38 (
ch¨_u
 *)"-tÅag",

39 (
ch¨_u
 *)"-e [errorfile]"};

40 
ch¨_u
 *(
îr‹s
[]) = {(char_u *)"Unknown option",

41 (
ch¨_u
 *)"Too manyárguments",

42 (
ch¨_u
 *)"Argument missingáfter",

43 (
ch¨_u
 *)"Garbageáfter option",

46 #i‡
	`deföed
(
UNIX
Ë|| deföed(
__EMX__
)

47 
	`ª£t_sig«ls
();

50 
	`Ârötf
(
°dîr
, 
l⁄gVîsi⁄
);

51 
	`Ârötf
(
°dîr
, "\n");

52 
	`Ârötf
(
°dîr
, (*)
îr‹s
[
n
]);

53 i‡(
°r
 !
NULL
)

54 
	`Ârötf
(
°dîr
, ": \"%s\"", 
°r
);

55 
	`Ârötf
(
°dîr
, "\nusage:");

56 
i
 = 0; ; ++i)

58 
	`Ârötf
(
°dîr
, " vim [options] ");

59 
	`Ârötf
(
°dîr
, (*)
u£
[
i
]);

60 i‡(
i
 =((
u£
Ë/ (
ch¨_u
 *)) - 1)

62 
	`Ârötf
(
°dîr
, "\n or:");

65 
	`Ârötf
(
°dîr
, "\n\nOptions:\n");

66 #ifde‡
USE_GUI


67 
	`Ârötf
(
°dîr
, " -g\t\t\tRun using GUI\n");

68 
	`Ârötf
(
°dîr
, " -f\t\t\tForeground: Don't fork when starting GUI\n");

70 
	`Ârötf
(
°dîr
, " -R or -v\t\tReadonly mode (view mode)\n");

71 
	`Ârötf
(
°dîr
, " -b\t\t\tBinary mode\n");

72 
	`Ârötf
(
°dîr
, " -l\t\t\tLisp mode\n");

73 
	`Ârötf
(
°dîr
, " -n\t\t\tNo swap file, use memory only\n");

74 
	`Ârötf
(
°dîr
, " -r\t\t\tList swap files\n");

75 
	`Ârötf
(
°dîr
, " -r (with fileÇame)\tRecover crashed session\n");

76 
	`Ârötf
(
°dîr
, " -L\t\t\tSameás -r\n");

77 #ifde‡
AMIGA


78 
	`Ârötf
(
°dîr
, " -x\t\t\tDon't useÇewcliÅo open window\n");

79 
	`Ârötf
(
°dîr
, " -d <device>\t\tUse <device> for I/O\n");

81 #ifde‡
RIGHTLEFT


82 
	`Ârötf
(
°dîr
, " -H\t\t\tstart in Hebrew mode\n");

84 
	`Ârötf
(
°dîr
, " -T <terminal>\tSetÅerminalÅypeÅo <terminal>\n");

85 
	`Ârötf
(
°dîr
, " -o[N]\t\tOpen N windows (default: one forÉach file)\n");

86 
	`Ârötf
(
°dîr
, " +\t\t\tStartátÉnd of file\n");

87 
	`Ârötf
(
°dîr
, " +<lnum>\t\tStartátÜine <lnum>\n");

88 
	`Ârötf
(
°dîr
, " -c <command>\t\tExecute <command> first\n");

89 
	`Ârötf
(
°dîr
, " -s <scriptin>\tRead commands from script file <scriptin>\n");

90 
	`Ârötf
(
°dîr
, " -w <scriptout>\tAppend commandsÅo script file <scriptout>\n");

91 
	`Ârötf
(
°dîr
, " -W <scriptout>\tWrite commandsÅo script file <scriptout>\n");

92 
	`Ârötf
(
°dîr
, " -u <vimrc>\t\tUse <vimrc> instead ofány .vimrc\n");

93 
	`Ârötf
(
°dîr
, " -i <viminfo>\t\tUse <viminfo> instead of .viminfo\n");

95 #ifde‡
USE_GUI_X11


96 #ifde‡
USE_GUI_MOTIF


97 
	`Ârötf
(
°dîr
, "\nOptionsÑecognised by gvim (Motif version):\n");

99 #ifde‡
USE_GUI_ATHENA


100 
	`Ârötf
(
°dîr
, "\nOptionsÑecognised by gvim (Athena version):\n");

103 
	`Ârötf
(
°dîr
, " -display <display>\tRun vim on <display>\n");

104 
	`Ârötf
(
°dîr
, " -iconic\t\tStart vim iconified\n");

106 
	`Ârötf
(
°dîr
, " -name <name>\t\tUseÑesourceás if vim was <name>\n");

107 
	`Ârötf
(
°dîr
, "\t\t\t (Unimplemented)\n");

109 
	`Ârötf
(
°dîr
, " -background <color>\tUse <color> forÅhe background (also: -bg)\n");

110 
	`Ârötf
(
°dîr
, " -foreground <color>\tUse <color> forÇormalÅext (also: -fg)\n");

111 
	`Ârötf
(
°dîr
, " -bold <color>\tUse <color> for boldÅext\n");

112 
	`Ârötf
(
°dîr
, " -italic <color>\tUse <color> for italicÅext\n");

113 
	`Ârötf
(
°dîr
, " -underline <color>\tUse <color> for underlinedÅext (also: -ul)\n");

114 
	`Ârötf
(
°dîr
, " -cursor <color>\tUse <color> for cursor\n");

115 
	`Ârötf
(
°dîr
, " -font <font>\t\tUse <font> forÇormalÅext (also: -fn)\n");

116 
	`Ârötf
(
°dîr
, " -boldfont <font>\tUse <font> for boldÅext\n");

117 
	`Ârötf
(
°dîr
, " -italicfont <font>\tUse <font> for italicÅext\n");

118 
	`Ârötf
(
°dîr
, " -geometry <geom>\tUse <geom> for initial geometry (also: -geom)\n");

119 
	`Ârötf
(
°dîr
, " -borderwidth <width>\tUseá border width of <width> (also: -bw)\n");

120 
	`Ârötf
(
°dîr
, " -scrollbarwidth <width>\tUseá scrollbar width of <width> (also: -sw)\n");

121 
	`Ârötf
(
°dîr
, " -menuheight <height>\tUseá menu bar height of <height> (also: -mh)\n");

122 
	`Ârötf
(
°dîr
, " -reverse\t\tUseÑeverse video (also: -rv)\n");

123 
	`Ârötf
(
°dîr
, " +reverse\t\tDon't useÑeverse video (also: +rv)\n");

124 
	`Ârötf
(
°dîr
, " -xrm <resource>\tSetÅhe specifiedÑesource\n");

127 
	`mch_wödexô
(1);

128 
	}
}

130 #ifde‡
HAVE_LOCALE_H


131 
	~<loˇÀ.h
>

135 
	$maö
(
¨gc
, 
¨gv
)

136 
¨gc
;

137 **
¨gv
;

139 
ch¨_u
 *
öô°r
;

140 
ch¨_u
 *
ãrm
 = 
NULL
;

141 
ch¨_u
 *
‚ame
 = 
NULL
;

142 
ch¨_u
 *
comm™d
 = 
NULL
;

143 
ch¨_u
 *
èg«me
 = 
NULL
;

144 
ch¨_u
 *
u£_vimrc
 = 
NULL
;

145 
c
;

146 
doqf
 = 0;

147 
i
;

148 
bö_mode
 = 
FALSE
;

149 
wödow_cou¡
 = 1;

150 
¨g_idx
 = 0;

151 
check_vîsi⁄
 = 
FALSE
;

152 
¨gv_idx
;

154 #i‡
	`deföed
(
MSDOS
Ë|| deföed(
WIN32
Ë|| deföed(
OS2
)

155 
	söôm≠


157 
ch¨_u
 *
¨g
;

158 
mode
;

159 } 
öôm≠pögs
[] =

162 #ifde‡
MSDOS


163 {(
ch¨_u
 *)"\316w H", 
NORMAL
+
VISUAL
},

164 {(
ch¨_u
 *)"\316u L", 
NORMAL
+
VISUAL
},

165 {(
ch¨_u
 *)"\316\204 1G", 
NORMAL
+
VISUAL
},

166 {(
ch¨_u
 *)"\316v G", 
NORMAL
+
VISUAL
},

169 {(
ch¨_u
 *)"\316w 1G", 
NORMAL
+
VISUAL
},

170 {(
ch¨_u
 *)"\316u G$", 
NORMAL
+
VISUAL
},

171 {(
ch¨_u
 *)"\316\204 H", 
NORMAL
+
VISUAL
},

172 {(
ch¨_u
 *)"\316v L$", 
NORMAL
+
VISUAL
},

173 {(
ch¨_u
 *)"\316†B", 
NORMAL
+
VISUAL
},

174 {(
ch¨_u
 *)"\316àW", 
NORMAL
+
VISUAL
},

178 #ifde‡
MSDOS


179 {(
ch¨_u
 *)"\316w \017H", 
INSERT
},

180 {(
ch¨_u
 *)"\316u \017L", 
INSERT
},

181 {(
ch¨_u
 *)"\316\204 \017\061G", 
INSERT
},

182 {(
ch¨_u
 *)"\316v \017G", 
INSERT
},

185 {(
ch¨_u
 *)"\316w \017\061G", 
INSERT
},

186 {(
ch¨_u
 *)"\316u \017G\017$", 
INSERT
},

187 {(
ch¨_u
 *)"\316\204 \017H",
INSERT
},

188 {(
ch¨_u
 *)"\316v \017L\017$", 
INSERT
},

189 {(
ch¨_u
 *)"\316†\017B", 
INSERT
},

190 {(
ch¨_u
 *)"\316à\017W", 
INSERT
},

195 #ifde‡
__EMX__


196 
	`_wûdˇrd
(&
¨gc
, &
¨gv
);

199 #ifde‡
HAVE_LOCALE_H


200 
	`£éoˇÀ
(
LC_ALL
, "");

203 #ifde‡
USE_GUI


204 
	`gui_¥ï¨e
(&
¨gc
, 
¨gv
);

212 
°dout_nŸty
 = (
	`mch_check_wö
(
¨gc
, 
¨gv
Ë=
FAIL
);

217 i‡((
curwö
 = 
	`wö_Æloc
(
NULL
)) == NULL ||

218 (
curbuf
 = 
	`buÊi°_√w
(
NULL
, NULL, 1L, 
FALSE
)) == NULL)

219 
	`mch_wödexô
(0);

220 
curwö
->
w_buf„r
 = 
curbuf
;

221 
	`s¸ìn_°¨t
();

226 i‡((
IObuff
 = 
	`Æloc
(
IOSIZE
)Ë=
NULL
 ||

227 (
NameBuff
 = 
	`Æloc
(
MAXPATHL
)Ë=
NULL
)

228 
	`mch_wödexô
(0);

234 
	`öô_homedú
();

235 
	`£t_öô_1
();

240 i‡(
	`STRCMP
(
	`gëèû
((
ch¨_u
 *)
¨gv
[0]), (char_u *)"view") == 0)

242 
ªad⁄lymode
 = 
TRUE
;

243 
curbuf
->
b_p_ro
 = 
TRUE
;

244 i‡(
p_uc
)

245 
p_uc
 = 10000;

251 i‡(
	`STRCMP
(
	`gëèû
((
ch¨_u
 *)
¨gv
[0]), (char_u *)"gvim") == 0)

253 #ifde‡
USE_GUI


254 
gui
.
°¨tög
 = 
TRUE
;

256 
	`Ârötf
(
°dîr
, (*)
e_nogvim
);

257 
	`mch_wödexô
(2);

261 ++
¨gv
;

285 
¨gv_idx
 = 1;

287 
¨gc
 > 1 && ((
c
 = 
¨gv
[0][0]) == '+' || (c == '-' &&

288 
	`vim_°rchr
((
ch¨_u
 *)"bcdfgHilLnorRsTuvwWx",

289 
c
 = 
¨gv
[0][
¨gv_idx
]Ë!
NULL
)))

291 ++
¨gv_idx
;

292 
c
)

295 
¨gv_idx
 = -1;

296 i‡(
¨gv
[0][1] =
NUL
)

297 
comm™d
 = (
ch¨_u
 *)"$";

299 
comm™d
 = (
ch¨_u
 *)&(
¨gv
[0][1]);

303 
bö_mode
 = 
TRUE
;

306 #ifde‡
USE_GUI


308 
gui
.
dof‹k
 = 
FALSE
;

313 #ifde‡
USE_GUI


314 
gui
.
°¨tög
 = 
TRUE
;

316 
	`Ârötf
(
°dîr
, (*)
e_nogvim
);

317 
	`mch_wödexô
(2);

322 #ifde‡
RIGHTLEFT


323 
curwö
->
w_p_æ
 = 
p_hkm≠
 = 
TRUE
;

325 
	`Ârötf
(
°dîr
, (*)
e_nohebªw
);

326 
	`mch_wödexô
(2);

331 
curbuf
->
b_p_li•
 = 
TRUE
;

332 
p_sm
 = 
TRUE
;

336 
p_uc
 = 0;

340 
wödow_cou¡
 = 0;

341 i‡(
	`isdigô
(
¨gv
[0][
¨gv_idx
]))

343 
wödow_cou¡
 = 
	`©oi
(&(
¨gv
[0][
¨gv_idx
]));

344 
	`isdigô
(
¨gv
[0][
¨gv_idx
]))

345 ++
¨gv_idx
;

351 
ªcovîymode
 = 1;

356 
ªad⁄lymode
 = 
TRUE
;

357 
curbuf
->
b_p_ro
 = 
TRUE
;

358 i‡(
p_uc
)

359 
p_uc
 = 10000;

367 i‡(
	`isdigô
(
¨gv
[0][
¨gv_idx
]))

369 
¨gv_idx
 = -1;

378 i‡(
¨gv
[0][
¨gv_idx
] !
NUL
)

379 
	`ußge
(
USAGE_GARBAGE
, (
ch¨_u
 *)
¨gv
[0]);

381 --
¨gc
;

382 i‡(
¨gc
 < 2)

383 
	`ußge
(
USAGE_ARG_MISSING
, (
ch¨_u
 *)
¨gv
[0]);

384 ++
¨gv
;

385 
¨gv_idx
 = -1;

387 
c
)

390 
comm™d
 = (
ch¨_u
 *)
¨gv
[0];

396 
u£_vimöfo
 = (
ch¨_u
 *)
¨gv
[0];

400 i‡(
s¸ùtö
[0] !
NULL
)

402 
	`Ârötf
(
°dîr
,

404 
¨gv
[-1],árgv[0]);

405 
	`mch_wödexô
(2);

407 i‡((
s¸ùtö
[0] = 
	`f›í
(
¨gv
[0], 
READBIN
)Ë=
NULL
)

409 
	`Ârötf
(
°dîr
, "C™nŸ o≥¿\"%s\" f‹Ñódög\n", 
¨gv
[0]);

410 
	`mch_wödexô
(2);

419 
ãrm
 = (
ch¨_u
 *)
¨gv
[0];

423 
u£_vimrc
 = (
ch¨_u
 *)
¨gv
[0];

428 i‡(
s¸ùtout
 !
NULL
)

430 
	`Ârötf
(
°dîr
,

432 
¨gv
[-1],árgv[0]);

433 
	`mch_wödexô
(2);

435 i‡((
s¸ùtout
 = 
	`f›í
(
¨gv
[0],

436 
c
 ='w' ? 
APPENDBIN
 : 
WRITEBIN
)Ë=
NULL
)

438 
	`Ârötf
(
°dîr
, "ˇ¬Ÿ o≥¿\"%s\" f‹ ouçut\n", 
¨gv
[0]);

439 
	`mch_wödexô
(2);

449 i‡(
¨gv_idx
 <0 || 
¨gv
[0][¨gv_idx] =
NUL
)

451 --
¨gc
;

452 ++
¨gv
;

453 
¨gv_idx
 = 1;

458 
	`mch_wödöô
();

462 
	`£t_öô_2
();

464 
fú°wö
->
w_height
 = 
Rows
 - 1;

465 
cmdlöe_row
 = 
Rows
 - 1;

473 i‡(
¨gc
 > 1)

475 i‡(
¨gv
[0][0] ='-' && (¨gv[0][1] !'-' ||árgv[0][2] !
NUL
))

477 
¨gv
[0][1])

480 
¨gc
)

483 i‡(
¨gv
[0][2])

484 
p_ef
 = (
ch¨_u
 *)
¨gv
[0] + 2;

488 i‡(
¨gv
[0][2] !
NUL
)

489 
	`ußge
(
USAGE_GARBAGE
, (
ch¨_u
 *)
¨gv
[0]);

490 ++
¨gv
;

491 
p_ef
 = (
ch¨_u
 *)
¨gv
[0];

495 
	`ußge
(
USAGE_TOO_MANY_ARGS
, 
NULL
);

497 
doqf
 = 1;

501 
¨gc
)

504 i‡(
¨gv
[0][2])

506 
èg«me
 = (
ch¨_u
 *)
¨gv
[0] + 2;

509 
	`ußge
(
USAGE_ARG_MISSING
, (
ch¨_u
 *)
¨gv
[0]);

513 i‡(
¨gv
[0][2] !
NUL
)

514 
	`ußge
(
USAGE_GARBAGE
, (
ch¨_u
 *)
¨gv
[0]);

515 ++
¨gv
;

516 
èg«me
 = (
ch¨_u
 *)
¨gv
[0];

520 
	`ußge
(
USAGE_TOO_MANY_ARGS
, 
NULL
);

525 
	`ußge
(
USAGE_UNKNOWN_OPTION
, (
ch¨_u
 *)
¨gv
[0]);

534 i‡(
¨gc
 > 2 && 
	`STRCMP
(
¨gv
[0], "--") == 0)

536 ++
¨gv
;

537 --
¨gc
;

540 #i‡(!
	`deföed
(
UNIX
Ë&& !deföed(
__EMX__
)Ë|| deföed(
ARCHIE
)

541 i‡(
	`Ex∑ndWûdC¨ds
(
¨gc
 - 1, (
ch¨_u
 **)
¨gv
, &
¨g_cou¡
,

542 &
¨g_fûes
, 
TRUE
, TRUEË=
OK
 && 
¨g_cou¡
 != 0)

544 
‚ame
 = 
¨g_fûes
[0];

545 
¨g_exp
 = 
TRUE
;

548 
¨g_fûes
 = (
ch¨_u
 **)
¨gv
;

549 
¨g_cou¡
 = 
¨gc
 - 1;

550 
‚ame
 = (
ch¨_u
 *)
¨gv
[0];

552 i‡(
¨g_cou¡
 > 1)

554 
	`¥ötf
("%d fûe†tÿedô\n", 
¨g_cou¡
);

555 
	`s¸ìn_°¨t
();

560 
RedøwögDißbÀd
 = 
TRUE
;

565 i‡(
ªcovîymode
 && 
‚ame
 =
NULL
)

566 
fuŒ_s¸ìn
 = 
FALSE
;

568 #ifde‡
USE_GUI


575 i‡(
gui
.
°¨tög
)

576 
fuŒ_s¸ìn
 = 
FALSE
;

582 i‡(
fuŒ_s¸ìn
 && (
°dout_nŸty
 || 
	`mch_check_öput
(Ë=
FAIL
))

584 i‡(
°dout_nŸty
)

585 
	`Ârötf
(
°dîr
, "Vim: Warning: Output isÇotÅoáÅerminal\n");

586 i‡(
	`mch_check_öput
(Ë=
FAIL
)

587 
	`Ârötf
(
°dîr
, "Vim: Warning: Input isÇot fromáÅerminal\n");

588 
	`mch_dñay
(2000L, 
TRUE
);

589 
	`s¸ìn_°¨t
();

592 
curbuf
->
b_nwödows
 = 1;

593 
	`wö_öô
(
curwö
);

594 
	`öô_y™k
();

595 i‡(
fuŒ_s¸ìn
)

596 
	`ãrmˇpöô
(
ãrm
);

598 
	`s¸ìn˛ór
();

601 i‡(
fuŒ_s¸ìn
)

602 
	`msg_°¨t
();

603 
msg_s¸ﬁl
 = 
TRUE
;

604 
no_waô_ªtu∫
 = 
TRUE
;

606 #i‡
	`deföed
(
MSDOS
Ë|| deföed(
WIN32
Ë|| deföed(
OS2
)

611 
i
 = 0; i < (
öôm≠pögs
Ë/ (
öôm≠
); ++i)

613 
öô°r
 = 
	`°rßve
(
öôm≠pögs
[
i
].
¨g
);

614 i‡(
öô°r
 !
NULL
)

616 
	`do_m≠
(0, 
öô°r
, 
öôm≠pögs
[
i
].
mode
);

617 
	`vim_‰ì
(
öô°r
);

626 i‡(
u£_vimrc
 !
NULL
)

628 i‡(
	`STRCMP
(
u£_vimrc
, "NONE") != 0)

630 i‡(
	`do_sour˚
(
u£_vimrc
, 
FALSE
Ë=
OK
)

631 
check_vîsi⁄
 = 
TRUE
;

633 
	`EMSG2
("C™nŸÑód from \"%s\"", 
u£_vimrc
);

642 #i‡
	`deföed
(
HAVE_CONFIG_H
Ë|| deföed(
OS2
)

643 i‡(
	`do_sour˚
(
sys_vimrc_‚ame
, 
TRUE
Ë=
OK
)

644 
check_vîsi⁄
 = 
TRUE
;

655 i‡((
öô°r
 = 
	`vim_gëív
((
ch¨_u
 *)"VIMINIT")Ë!
NULL
 &&

656 *
öô°r
 !
NUL
)

658 
sourcög_«me
 = (
ch¨_u
 *)"VIMINIT";

659 
	`do_cmdlöe
(
öô°r
, 
TRUE
, TRUE);

660 
sourcög_«me
 = 
NULL
;

662 i‡(
	`do_sour˚
((
ch¨_u
 *)
USR_VIMRC_FILE
, 
TRUE
Ë=
FAIL
)

664 i‡((
öô°r
 = 
	`vim_gëív
((
ch¨_u
 *)"EXINIT")Ë!
NULL
)

666 
sourcög_«me
 = (
ch¨_u
 *)"EXINIT";

667 
	`do_cmdlöe
(
öô°r
, 
TRUE
, TRUE);

668 
sourcög_«me
 = 
NULL
;

671 ()
	`do_sour˚
((
ch¨_u
 *)
USR_EXRC_FILE
, 
FALSE
);

674 
check_vîsi⁄
 = 
TRUE
;

685 i‡(
p_exrc
)

687 #ifde‡
UNIX


689 
°©
 
s
;

692 i‡(
	`°©
(
VIMRC_FILE
, &
s
Ë|| s.
°_uid
 !
	`gëuid
())

693 
£cuª
 = 
p_£cuª
;

696 
£cuª
 = 
p_£cuª
;

699 
i
 = 
FAIL
;

700 i‡(
	`fuŒ∑thcmp
((
ch¨_u
 *)
USR_VIMRC_FILE
,

701 (
ch¨_u
 *)
VIMRC_FILE
Ë!
FPC_SAME


702 #i‡
	`deföed
(
HAVE_CONFIG_H
Ë|| deföed(
OS2
)

703 && 
	`fuŒ∑thcmp
(
sys_vimrc_‚ame
,

704 (
ch¨_u
 *)
VIMRC_FILE
Ë!
FPC_SAME


707 
i
 = 
	`do_sour˚
((
ch¨_u
 *)
VIMRC_FILE
, 
TRUE
);

708 #ifde‡
UNIX


709 i‡(
i
 =
FAIL
)

711 
°©
 
s
;

714 i‡(
	`°©
(
EXRC_FILE
, &
s
Ë|| s.
°_uid
 !
	`gëuid
())

715 
£cuª
 = 
p_£cuª
;

717 
£cuª
 = 0;

720 
check_vîsi⁄
 = 
TRUE
;

722 i‡(
i
 =
FAIL
 && 
	`fuŒ∑thcmp
((
ch¨_u
 *)
USR_EXRC_FILE
,

723 (
ch¨_u
 *)
EXRC_FILE
Ë!
FPC_SAME
)

724 ()
	`do_sour˚
((
ch¨_u
 *)
EXRC_FILE
, 
FALSE
);

733 i‡(
ªcovîymode
 && 
‚ame
 =
NULL
)

735 
	`ªcovî_«mes
(
NULL
, 
TRUE
, 0);

736 
	`mch_wödexô
(0);

743 
	`£t_öô_3
();

745 #ifde‡
USE_GUI


746 i‡(
gui
.
°¨tög
)

748 
	`gui_°¨t
();

749 
gui
.
°¨tög
 = 
FALSE
;

750 
fuŒ_s¸ìn
 = 
TRUE
;

758 i‡(
check_vîsi⁄
 && 
found_vîsi⁄
 == 0)

760 
	`MSG
("This is Vim version 4.0.");

761 
	`MSG
("No \":version 4.0\" command found inány .vimrc.");

762 
	`MSG
("Use \":help version\" for infoáboutÅhisÇew version.");

765 #ifde‡
VIMINFO


769 i‡(*
p_vimöfo
 !
NUL
)

770 
	`ªad_vimöfo
(
NULL
, 
TRUE
, 
FALSE
, FALSE);

773 #ifde‡
SPAWNO


774 
	`öô_SPAWNO
("", 
SWAP_ANY
);

777 i‡(
bö_mode
)

779 
	`£t_›ti⁄s_bö
(
curbuf
->
b_p_bö
, 1);

780 
curbuf
->
b_p_bö
 = 1;

785 i‡(
curbuf
->
b_fûíame
 =
NULL
)

787 ()
	`£t‚ame
(
‚ame
, 
NULL
, 
TRUE
);

788 ++
¨g_idx
;

791 i‡(
wödow_cou¡
 == 0)

792 
wödow_cou¡
 = 
¨g_cou¡
;

793 i‡(
wödow_cou¡
 > 1)

797 i‡(
fú°wö
->
w_√xt
 =
NULL
)

798 
wödow_cou¡
 = 
	`make_wödows
(window_count);

800 
wödow_cou¡
 = 
	`wö_cou¡
();

803 
wödow_cou¡
 = 1;

809 i‡(
doqf
 && 
	`qf_öô
(Ë=
FAIL
)

810 
	`mch_wödexô
(3);

817 
°¨tög
 = 
FALSE
;

818 
no_waô_ªtu∫
 = 
FALSE
;

819 
msg_s¸ﬁl
 = 
FALSE
;

820 #ifde‡
USE_GUI


826 i‡(
gui
.
ö_u£
)

827 
	`gui_mch_waô_f‹_ch¨s
(50);

838 
	`£âmode
(1);

839 i‡(
£cuª
 =2 || 
√ed_waô_ªtu∫
 || 
msg_did™y
)

840 
	`waô_ªtu∫
(
TRUE
);

842 
	`°¨âîmˇp
();

843 #ifde‡
USE_MOUSE


844 
	`£tmou£
();

846 i‡(
s¸ﬁl_ªgi⁄
)

847 
	`s¸ﬁl_ªgi⁄_ª£t
();

849 
£cuª
 = 0;

851 
	`s¸ﬁl_°¨t
();

852 
	`s¸ìn˛ór
();

854 
no_waô_ªtu∫
 = 
TRUE
;

856 i‡(
ªcovîymode
)

858 
msg_s¸ﬁl
 = 
TRUE
;

859 
	`ml_ªcovî
();

860 
msg_s¸ﬁl
 = 
FALSE
;

861 i‡(
curbuf
->
b_ml
.
ml_mÂ
 =
NULL
)

862 
	`gëout
(1);

863 #ifde‡
AUTOCMD


864 
	`≠∂y_autocmds
(
EVENT_BUFENTER
, 
NULL
, NULL);

866 
	`do_modñöes
();

870 i‡(
curbuf
->
b_ml
.
ml_mÂ
 =
NULL
)

871 ()
	`›í_buf„r
();

873 
	`£çcm¨k
();

878 i‡(
doqf
)

879 
	`qf_jump
(0, 0);

885 
i
 = 1; i < 
wödow_cou¡
; ++i)

887 i‡(
curwö
->
w_√xt
 =
NULL
)

889 
	`wö_íãr
(
curwö
->
w_√xt
, 
FALSE
);

893 i‡(
curbuf
 =
fú°wö
->
w_buf„r
 || curbuf->
b_fûíame
 =
NULL
)

895 
curwö
->
w_¨g_idx
 = 
¨g_idx
;

897 ()
	`do_ecmd
(0, 
¨g_idx
 < 
¨g_cou¡
 ? 
¨g_fûes
[¨g_idx] : 
NULL
,

898 
NULL
, NULL, 
TRUE
, (
löír_t
)1, 
FALSE
);

899 i‡(
¨g_idx
 =
¨g_cou¡
 - 1)

900 
¨g_had_œ°
 = 
TRUE
;

901 ++
¨g_idx
;

903 
	`mch_bªakcheck
();

904 i‡(
gŸ_öt
)

906 ()
	`vgëc
();

910 
	`wö_íãr
(
fú°wö
, 
FALSE
);

911 i‡(
wödow_cou¡
 > 1)

912 
	`wö_equÆ
(
curwö
, 
FALSE
);

918 
¨g_idx
 < 
¨g_cou¡
)

919 ()
	`buÊi°_add
(
¨g_fûes
[
¨g_idx
++]);

925 i‡(
èg«me
)

927 
	`STRCPY
(
IObuff
, "ta ");

928 
	`STRCAT
(
IObuff
, 
èg«me
);

929 
	`do_cmdlöe
(
IObuff
, 
TRUE
, TRUE);

932 i‡(
comm™d
)

938 
curwö
->
w_curs‹
.
 um
 = 0;

939 
sourcög_«me
 = (
ch¨_u
 *)"commandÜine";

940 
	`do_cmdlöe
(
comm™d
, 
TRUE
, TRUE);

941 
sourcög_«me
 = 
NULL
;

944 
RedøwögDißbÀd
 = 
FALSE
;

945 
	`ªdøw_œãr
(
NOT_VALID
);

946 
no_waô_ªtu∫
 = 
FALSE
;

949 i‡(
p_im
)

950 
√ed_°¨t_ö£πmode
 = 
TRUE
;

957 i‡(
	`°uff_em±y
())

959 i‡(
√ed_check_time°amps
)

960 
	`check_time°amps
();

961 i‡(
√ed_waô_ªtu∫
)

962 
	`waô_ªtu∫
(
FALSE
);

963 i‡(
√ed_°¨t_ö£πmode
)

965 
√ed_°¨t_ö£πmode
 = 
FALSE
;

966 
	`°uffRódbuff
((
ch¨_u
 *)"i");

969 
√ed_fûeöfo
 = 
FALSE
;

972 
d⁄t_waô_ªtu∫
 = 
FALSE
;

973 i‡(
gŸ_öt
)

975 ()
	`vgëc
();

976 
gŸ_öt
 = 
FALSE
;

978 
	`adju°_curs‹
();

979 
msg_s¸ﬁl
 = 
FALSE
;

980 
quô_m‹e
 = 
FALSE
;

981 
kìp_hñp_Êag
 = 
FALSE
;

987 i‡(
skù_ªdøw
)

988 
skù_ªdøw
 = 
FALSE
;

989 i‡(
do_ªdøw
 || 
	`°uff_em±y
())

991 
	`cursupd©e
();

993 #ifde‡
SLEEP_IN_EMSG


994 i‡(
√ed_¶ìp
)

996 
	`mch_dñay
(1000L, 
TRUE
);

997 
√ed_¶ìp
 = 
FALSE
;

1000 i‡(
VIsuÆ_a˘ive
)

1001 
	`upd©e_curbuf
(
INVERTED
);

1002 i‡(
mu°_ªdøw
)

1003 
	`upd©eS¸ìn
(
mu°_ªdøw
);

1004 i‡(
ªdøw_cmdlöe
)

1005 
	`showmode
();

1006 i‡(
kìp_msg
 !
NULL
)

1008 i‡(
kìp_msg_highlight
)

1010 ()
	`£t_highlight
(
kìp_msg_highlight
);

1011 
msg_highlight
 = 
TRUE
;

1013 
	`msg
(
kìp_msg
);

1015 i‡(
√ed_fûeöfo
)

1017 
	`fûeöfo
(
did_cd
, 
TRUE
, 
FALSE
);

1018 
√ed_fûeöfo
 = 
FALSE
;

1021 
emsg_⁄_di•œy
 = 
FALSE
;

1022 
msg_did™y
 = 
FALSE
;

1023 
do_ªdøw
 = 
FALSE
;

1024 
	`showruÀr
(
FALSE
);

1026 
	`£tcurs‹
();

1027 
	`curs‹_⁄
();

1033 
	`n‹mÆ
();

1036 
	}
}

1039 
	$gëout
(
r
)

1040 
r
;

1042 
exôög
 = 
TRUE
;

1045 #ifde‡
USE_GUI


1046 i‡(!
gui
.
ö_u£
)

1048 
	`wödgŸo
(()
Rows
 - 1, 0);

1050 #ifde‡
AUTOCMD


1051 
	`≠∂y_autocmds
(
EVENT_VIMLEAVE
, 
NULL
, NULL);

1054 #ifde‡
USE_GUI


1055 i‡(!
gui
.
ö_u£
)

1057 
	`wödgŸo
(()
Rows
 - 1, 0);

1060 #ifde‡
VIMINFO


1062 i‡(*
p_vimöfo
 !
NUL
)

1063 
	`wrôe_vimöfo
(
NULL
, 
FALSE
);

1066 
	`outch¨
('\r');

1067 
	`outch¨
('\n');

1068 
	`mch_wödexô
(
r
);

1069 
	}
}

	@src/mark.c

13 
	~"vim.h
"

14 
	~"globÆs.h
"

15 
	~"¥Ÿo.h
"

16 
	~"›ti⁄.h
"

29 
	#EXTRA_MARKS
 10

	)

30 
fûem¨k
 
	g«medfm
[
NMARKS
 + 
EXTRA_MARKS
];

31 
ch¨_u
 *
	g«medfm_«mes
[
NMARKS
 + 
EXTRA_MARKS
];

33 
show_⁄e_m¨k
 
__ARGS
((, 
ch¨_u
 *, 
FPOS
 *, char_u *));

34 
˛ónup_jum∂i°
 
__ARGS
(());

35 #ifde‡
VIMINFO


36 
ªmovabÀ
 
__ARGS
((
ch¨_u
 *
«me
));

45 
	$£tm¨k
(
c
)

46 
c
;

48 
i
;

50 i‡(
c
 > 'z')

52  
FAIL
;

53 i‡(
	`i¶owî
(
c
))

55 
i
 = 
c
 - 'a';

56 
curbuf
->
b_«medm
[
i
] = 
curwö
->
w_curs‹
;

57  
OK
;

59 i‡(
	`isuµî
(
c
))

61 
i
 = 
c
 - 'A';

62 
«medfm
[
i
].
m¨k
 = 
curwö
->
w_curs‹
;

63 
«medfm
[
i
].
‚um
 = 
curbuf
->
b_‚um
;

64  
OK
;

66  
FAIL
;

67 
	}
}

74 
	$£çcm¨k
()

76 
i
;

77 #ifde‡
ROTATE


78 
fûem¨k
 
ãmpm¨k
;

82 i‡(
globÆ_busy
)

85 
curwö
->
w_¥ev_pcm¨k
 = curwö->
w_pcm¨k
;

86 
curwö
->
w_pcm¨k
 = curwö->
w_curs‹
;

88 #ifde‡
ROTATE


94 i‡(
curwö
->
w_jum∂i°idx
 < curwö->
w_jum∂i°Àn
)

95 ++
curwö
->
w_jum∂i°idx
;

96 
curwö
->
w_jum∂i°idx
 < curwö->
w_jum∂i°Àn
)

98 
ãmpm¨k
 = 
curwö
->
w_jum∂i°
[curwö->
w_jum∂i°Àn
 - 1];

99 
i
 = 
curwö
->
w_jum∂i°Àn
 - 1; i > 0; --i)

100 
curwö
->
w_jum∂i°
[
i
] = curwin->w_jumplist[i - 1];

101 
curwö
->
w_jum∂i°
[0] = 
ãmpm¨k
;

102 ++
curwö
->
w_jum∂i°idx
;

107 i‡(++
curwö
->
w_jum∂i°Àn
 > 
JUMPLISTSIZE
)

109 
curwö
->
w_jum∂i°Àn
 = 
JUMPLISTSIZE
;

110 
i
 = 1; i < 
JUMPLISTSIZE
; ++i)

111 
curwö
->
w_jum∂i°
[
i
 - 1] = curwin->w_jumplist[i];

113 
curwö
->
w_jum∂i°idx
 = curwö->
w_jum∂i°Àn
 - 1;

115 #ifde‡
ARCHIE


119 
curwö
->
w_jum∂i°
[curwö->
w_jum∂i°idx
].
m¨k
.
±r
 = curwö->
w_pcm¨k
.ptr;

120 
curwö
->
w_jum∂i°
[curwö->
w_jum∂i°idx
].
m¨k
.
cﬁ
 = curwö->
w_pcm¨k
.col;

122 
curwö
->
w_jum∂i°
[curwö->
w_jum∂i°idx
].
m¨k
 = curwö->
w_pcm¨k
;

124 
curwö
->
w_jum∂i°
[curwö->
w_jum∂i°idx
].
‚um
 = 
curbuf
->
b_‚um
;

125 ++
curwö
->
w_jum∂i°idx
;

128 
	`˛ónup_jum∂i°
();

129 
	}
}

140 
	$checkpcm¨k
()

142 i‡(
curwö
->
w_¥ev_pcm¨k
.
 um
 != 0 &&

143 (
	`equÆ
(
curwö
->
w_pcm¨k
, curwö->
w_curs‹
) ||

144 
curwö
->
w_pcm¨k
.
 um
 == 0))

146 
curwö
->
w_pcm¨k
 = curwö->
w_¥ev_pcm¨k
;

147 
curwö
->
w_¥ev_pcm¨k
.
 um
 = 0;

149 
	}
}

154 
FPOS
 *

155 
	$movem¨k
(
cou¡
)

156 
cou¡
;

158 
FPOS
 *
pos
;

160 
	`˛ónup_jum∂i°
();

162 i‡(
curwö
->
w_jum∂i°Àn
 == 0)

163  (
FPOS
 *)
NULL
;

165 i‡(
curwö
->
w_jum∂i°idx
 + 
cou¡
 < 0 ||

166 
curwö
->
w_jum∂i°idx
 + 
cou¡
 >curwö->
w_jum∂i°Àn
)

167  (
FPOS
 *)
NULL
;

174 i‡(
curwö
->
w_jum∂i°idx
 =curwö->
w_jum∂i°Àn
)

176 
	`£çcm¨k
();

177 --
curwö
->
w_jum∂i°idx
;

178 i‡(
curwö
->
w_jum∂i°idx
 + 
cou¡
 < 0)

179  (
FPOS
 *)
NULL
;

182 
curwö
->
w_jum∂i°idx
 +
cou¡
;

184 i‡(
curwö
->
w_jum∂i°
[curwö->
w_jum∂i°idx
].
‚um
 !
curbuf
->
b_‚um
)

186 i‡(
	`buÊi°_gëfûe
(
curwö
->
w_jum∂i°
[curwö->
w_jum∂i°idx
].
‚um
,

187 
curwö
->
w_jum∂i°
[curwö->
w_jum∂i°idx
].
m¨k
.
 um
,

188 0Ë=
FAIL
)

189  (
FPOS
 *)
NULL
;

190 
curwö
->
w_curs‹
.
cﬁ
 =

191 
curwö
->
w_jum∂i°
[curwö->
w_jum∂i°idx
].
m¨k
.
cﬁ
;

192 
pos
 = (
FPOS
 *)-1;

195 
pos
 = &(
curwö
->
w_jum∂i°
[curwö->
w_jum∂i°idx
].
m¨k
);

196  
pos
;

197 
	}
}

206 
FPOS
 *

207 
	$gëm¨k
(
c
, 
ch™gefûe
)

208 
c
;

209 
ch™gefûe
;

211 
FPOS
 *
po•
;

212 
FPOS
 *
°¨ç
, *
ídp
;

213 
FPOS
 
pos_c›y
;

214 
Àn
;

215 
ch¨_u
 *
p
;

217 
po•
 = 
NULL
;

218 i‡(
c
 > '~')

220 i‡(
c
 == '\'' || c == '`')

222 
pos_c›y
 = 
curwö
->
w_pcm¨k
;

223 
po•
 = &
pos_c›y
;

225 i‡(
c
 == '"')

226 
po•
 = &(
curbuf
->
b_œ°_curs‹
);

227 i‡(
c
 == '[')

228 
po•
 = &(
curbuf
->
b_›_°¨t
);

229 i‡(
c
 == ']')

230 
po•
 = &(
curbuf
->
b_›_íd
);

231 i‡(
c
 == '<' || c == '>')

233 i‡(
VIsuÆ_a˘ive
)

234 
°¨ç
 = &
VIsuÆ_ßve
;

236 
°¨ç
 = &
VIsuÆ
;

237 
ídp
 = &
VIsuÆ_íd
;

238 i‡((
c
 ='<'Ë=
	`…
(*
°¨ç
, *
ídp
))

239 
po•
 = 
°¨ç
;

241 
po•
 = 
ídp
;

243 i‡(
	`i¶owî
(
c
))

244 
po•
 = &(
curbuf
->
b_«medm
[
c
 - 'a']);

245 i‡(
	`isuµî
(
c
Ë|| 
	`isdigô
(c))

247 i‡(
	`isdigô
(
c
))

248 
c
 = c - '0' + 
NMARKS
;

250 
c
 -= 'A';

251 
po•
 = &(
«medfm
[
c
].
m¨k
);

253 i‡(
«medfm
[
c
].
‚um
 =0 && 
«medfm_«mes
[c] !
NULL
)

260 
	`ex∑nd_ív
(
«medfm_«mes
[
c
], 
NameBuff
, 
MAXPATHL
);

261 
	`mch_dú«me
(
IObuff
, 
IOSIZE
);

262 
Àn
 = 
	`STRLEN
(
IObuff
);

263 i‡(
	`‚amícmp
(
IObuff
, 
NameBuff
, 
Àn
) == 0)

265 
p
 = 
NameBuff
 + 
Àn
;

266 i‡(
	`i•©h£p
(*
p
))

267 ++
p
;

270 
p
 = 
NULL
;

272 ()
	`buÊi°_√w
(
NameBuff
, 
p
, (
löír_t
)1, 
FALSE
);

275 i‡(
«medfm
[
c
].
‚um
 !
curbuf
->
b_‚um
)

277 i‡(
«medfm
[
c
].
m¨k
.
 um
 !0 && 
ch™gefûe
 &&Çamedfm[c].
‚um
)

279 i‡(
	`buÊi°_gëfûe
(
«medfm
[
c
].
‚um
,

280 
«medfm
[
c
].
m¨k
.
 um
, 
GETF_SETMARK
Ë=
OK
)

282 
curwö
->
w_curs‹
.
cﬁ
 = 
«medfm
[
c
].
m¨k
.col;

283  (
FPOS
 *)-1;

286 
po•
 = &
pos_c›y
;

288 
pos_c›y
.
 um
 = 0;

291  
po•
;

292 
	}
}

299 
	$fm¨ks_check_«mes
(
buf
)

300 
BUF
 *
buf
;

302 
ch¨_u
 *
«me
;

303 
i
;

305 i‡(
buf
->
b_fûíame
 =
NULL
)

308 
«me
 = 
	`home_ª∂a˚_ßve
(
buf
, buf->
b_fûíame
);

309 i‡(
«me
 =
NULL
)

312 
i
 = 0; i < 
NMARKS
 + 
EXTRA_MARKS
; ++i)

314 i‡(
«medfm
[
i
].
‚um
 =0 && 
«medfm_«mes
[i] !
NULL
 &&

315 
	`‚amecmp
(
«me
, 
«medfm_«mes
[
i
]) == 0)

317 
«medfm
[
i
].
‚um
 = 
buf
->
b_‚um
;

318 
	`vim_‰ì
(
«medfm_«mes
[
i
]);

319 
«medfm_«mes
[
i
] = 
NULL
;

322 
	`vim_‰ì
(
«me
);

323 
	}
}

330 
	$check_m¨k
(
pos
)

331 
FPOS
 *
pos
;

333 i‡(
pos
 =
NULL
)

335 
	`emsg
(
e_um¨k
);

336  
FAIL
;

338 i‡(
pos
->
 um
 == 0)

340 
	`emsg
(
e_m¨knŸ£t
);

341  
FAIL
;

343 i‡(
pos
->
 um
 > 
curbuf
->
b_ml
.
ml_löe_cou¡
)

345 
	`emsg
(
e_m¨kövÆ
);

346  
FAIL
;

348  
OK
;

349 
	}
}

357 
	$˛øŒm¨ks
(
buf
)

358 
BUF
 *
buf
;

360 
i
 = -1;

362 i‡(
i
 == -1)

363 
i
 = 0; i < 
NMARKS
 + 1; i++)

365 
«medfm
[
i
].
m¨k
.
 um
 = 0;

366 
«medfm_«mes
[
i
] = 
NULL
;

369 
i
 = 0; i < 
NMARKS
; i++)

370 
buf
->
b_«medm
[
i
].
 um
 = 0;

371 
buf
->
b_›_°¨t
.
 um
 = 0;

372 
buf
->
b_›_íd
.
 um
 = 0;

373 
	}
}

379 
ch¨_u
 *

380 
	$fm_gë«me
(
fm¨k
)

381 
fûem¨k
 *
fm¨k
;

383 i‡(
fm¨k
->
‚um
 !
curbuf
->
b_‚um
)

384  
	`buÊi°_ƒ2«me
(
fm¨k
->
‚um
, 
FALSE
, 
TRUE
);

385  (
ch¨_u
 *)"-current-";

386 
	}
}

392 
	$do_m¨ks
(
¨g
)

393 
ch¨_u
 *
¨g
;

395 
i
;

396 
ch¨_u
 *
«me
;

398 i‡(
¨g
 !
NULL
 && *¨g =
NUL
)

399 
¨g
 = 
NULL
;

401 
	`show_⁄e_m¨k
('\'', 
¨g
, &
curwö
->
w_pcm¨k
, 
NULL
);

402 
i
 = 0; i < 
NMARKS
; ++i)

403 
	`show_⁄e_m¨k
(
i
 + 'a', 
¨g
, &
curbuf
->
b_«medm
[i], 
NULL
);

404 
i
 = 0; i < 
NMARKS
 + 
EXTRA_MARKS
; ++i)

406 
«me
 = 
«medfm
[
i
].
‚um
 =0 ? 
«medfm_«mes
[i] :

407 
	`fm_gë«me
(&
«medfm
[
i
]);

408 i‡(
«me
 !
NULL
)

409 
	`show_⁄e_m¨k
(
i
 >
NMARKS
 ? i - NMARKS + '0' : i + 'A',

410 
¨g
, &
«medfm
[
i
].
m¨k
, 
«me
);

412 
	`show_⁄e_m¨k
('"', 
¨g
, &
curbuf
->
b_œ°_curs‹
, 
NULL
);

413 
	`show_⁄e_m¨k
('[', 
¨g
, &
curbuf
->
b_›_°¨t
, 
NULL
);

414 
	`show_⁄e_m¨k
(']', 
¨g
, &
curbuf
->
b_›_íd
, 
NULL
);

415 
	`show_⁄e_m¨k
('<', 
¨g
, &
VIsuÆ
, 
NULL
);

416 
	`show_⁄e_m¨k
('>', 
¨g
, &
VIsuÆ_íd
, 
NULL
);

417 
	`show_⁄e_m¨k
(-1, 
¨g
, 
NULL
, NULL);

418 
	}
}

421 
	$show_⁄e_m¨k
(
c
, 
¨g
, 
p
, 
«me
)

422 
c
;

423 
ch¨_u
 *
¨g
;

424 
FPOS
 *
p
;

425 
ch¨_u
 *
«me
;

427 
did_tôÀ
 = 
FALSE
;

429 i‡(
c
 == -1)

431 i‡(
did_tôÀ
)

432 
did_tôÀ
 = 
FALSE
;

435 i‡(
¨g
 =
NULL
)

436 
	`MSG
("No marks set");

438 
	`EMSG2
("Nÿm¨k†m©chög \"%s\"", 
¨g
);

442 i‡(!
gŸ_öt
 && (
¨g
 =
NULL
 || 
	`vim_°rchr
◊rg, 
c
) != NULL) &&

443 
p
->
 um
 != 0)

445 i‡(!
did_tôÀ
)

447 
	`£t_highlight
('t');

448 
	`°¨t_highlight
();

449 
	`MSG_OUTSTR
("\nmarkÜine col file");

450 
	`°›_highlight
();

451 
did_tôÀ
 = 
TRUE
;

453 
	`msg_outch¨
('\n');

454 i‡(!
gŸ_öt
)

456 
	`•rötf
((*)
IObuff
, " %¯%5ld %3d ", 
c
, 
p
->
 um
,Ö->
cﬁ
);

457 i‡(
«me
 !
NULL
)

458 
	`STRCAT
(
IObuff
, 
«me
);

459 
	`msg_ouâøns
(
IObuff
);

461 
	`Êushbuf
();

463 
	}
}

469 
	$do_jumps
()

471 
i
;

472 
ch¨_u
 *
«me
;

474 
	`˛ónup_jum∂i°
();

475 
	`£t_highlight
('t');

476 
	`°¨t_highlight
();

477 
	`MSG_OUTSTR
("\n jumpÜine file");

478 
	`°›_highlight
();

479 
i
 = 0; i < 
curwö
->
w_jum∂i°Àn
; ++i)

481 i‡(
curwö
->
w_jum∂i°
[
i
].
m¨k
.
 um
 != 0)

483 
«me
 = 
	`fm_gë«me
(&
curwö
->
w_jum∂i°
[
i
]);

484 i‡(
«me
 =
NULL
)

487 
	`msg_outch¨
('\n');

488 
	`•rötf
((*)
IObuff
, "%c %2d %5ld %s",

489 
i
 =
curwö
->
w_jum∂i°idx
 ? '>' : ' ',

490 
i
 + 1,

491 
curwö
->
w_jum∂i°
[
i
].
m¨k
.
 um
,

492 
«me
);

493 
	`msg_ouâøns
(
IObuff
);

495 
	`Êushbuf
();

497 i‡(
curwö
->
w_jum∂i°idx
 =curwö->
w_jum∂i°Àn
)

498 
	`MSG_OUTSTR
("\n>");

499 
	}
}

507 
	#⁄e_adju°
(
add
) \

509 
Õ
 = 
add
; \

510 i‡(*
Õ
 >
löe1
 && *Õ <
löe2
) \

512 i‡(
amou¡
 =
MAXLNUM
) \

513 *
Õ
 = 0; \

515 *
Õ
 +
amou¡
; \

517 i‡(
amou¡_a·î
 && *
Õ
 > 
löe2
) \

518 *
Õ
 +
amou¡_a·î
; \

519 }

	)

522 
	#⁄e_adju°_nodñ
(
add
) \

524 
Õ
 = 
add
; \

525 i‡(*
Õ
 >
löe1
 && *Õ <
löe2
) \

527 i‡(
amou¡
 =
MAXLNUM
) \

528 *
Õ
 = 
löe1
; \

530 *
Õ
 +
amou¡
; \

532 i‡(
amou¡_a·î
 && *
Õ
 > 
löe2
) \

533 *
Õ
 +
amou¡_a·î
; \

534 }

	)

537 
	$m¨k_adju°
(
löe1
, 
löe2
, 
amou¡
, 
amou¡_a·î
)

538 
löír_t
 
löe1
;

539 
löír_t
 
löe2
;

540 
amou¡
;

541 
amou¡_a·î
;

543 
i
;

544 
‚um
 = 
curbuf
->
b_‚um
;

545 
löír_t
 *
Õ
;

546 
WIN
 *
wö
;

548 i‡(
löe2
 < 
löe1
 && 
amou¡_a·î
 == 0L)

552 
i
 = 0; i < 
NMARKS
; i++)

554 
	`⁄e_adju°
(&(
curbuf
->
b_«medm
[
i
].
 um
));

555 i‡(
«medfm
[
i
].
‚um
 == fnum)

556 
	`⁄e_adju°
(&(
«medfm
[
i
].
m¨k
.
 um
));

558 
i
 = 
NMARKS
; i < NMARKS + 
EXTRA_MARKS
; i++)

560 i‡(
«medfm
[
i
].
‚um
 == fnum)

561 
	`⁄e_adju°
(&(
«medfm
[
i
].
m¨k
.
 um
));

565 
	`⁄e_adju°
(&(
curwö
->
w_pcm¨k
.
 um
));

568 
	`⁄e_adju°
(&(
curwö
->
w_¥ev_pcm¨k
.
 um
));

571 
	`⁄e_adju°_nodñ
(&(
VIsuÆ
.
 um
));

572 
	`⁄e_adju°_nodñ
(&(
VIsuÆ_íd
.
 um
));

575 
i
 = 0; i < 
curwö
->
w_èg°ackÀn
; i++)

576 i‡(
curwö
->
w_èg°ack
[
i
].
fm¨k
.
‚um
 == fnum)

577 
	`⁄e_adju°_nodñ
(&(
curwö
->
w_èg°ack
[
i
].
fm¨k
.
m¨k
.
 um
));

580 
	`qf_m¨k_adju°
(
löe1
, 
löe2
, 
amou¡
, 
amou¡_a·î
);

583 
wö
 = 
fú°wö
; wö !
NULL
; wö = wö->
w_√xt
)

589 
i
 = 0; i < 
wö
->
w_jum∂i°Àn
; ++i)

590 i‡(
wö
->
w_jum∂i°
[
i
].
‚um
 == fnum)

591 
	`⁄e_adju°_nodñ
(&(
wö
->
w_jum∂i°
[
i
].
m¨k
.
 um
));

596 i‡(
wö
 !
curwö
 && wö->
w_buf„r
 =
curbuf
)

598 i‡(
wö
->
w_t›löe
 >
löe1
 && wö->w_t›löê<
löe2
)

600 i‡(
amou¡
 =
MAXLNUM
)

602 i‡(
löe1
 <= 1)

603 
wö
->
w_t›löe
 = 1;

605 
wö
->
w_t›löe
 = 
löe1
 - 1;

608 
wö
->
w_t›löe
 +
amou¡
;

610 i‡(
amou¡_a·î
 && 
wö
->
w_t›löe
 > 
löe2
)

611 
wö
->
w_t›löe
 +
amou¡_a·î
;

612 i‡(
wö
->
w_curs‹
.
 um
 >
löe1
 && wö->w_curs‹. um <
löe2
)

614 i‡(
amou¡
 =
MAXLNUM
)

616 i‡(
löe1
 <= 1)

617 
wö
->
w_curs‹
.
 um
 = 1;

619 
wö
->
w_curs‹
.
 um
 = 
löe1
 - 1;

620 
wö
->
w_curs‹
.
cﬁ
 = 0;

623 
wö
->
w_curs‹
.
 um
 +
amou¡
;

625 i‡(
amou¡_a·î
 && 
wö
->
w_curs‹
.
 um
 > 
löe2
)

626 
wö
->
w_curs‹
.
 um
 +
amou¡_a·î
;

629 
	}
}

636 
	$˛ónup_jum∂i°
()

638 
i
;

639 
‰om
, 
to
;

641 
to
 = 0;

642 
‰om
 = 0; from < 
curwö
->
w_jum∂i°Àn
; ++from)

644 i‡(
curwö
->
w_jum∂i°idx
 =
‰om
)

645 
curwö
->
w_jum∂i°idx
 = 
to
;

646 
i
 = 
‰om
 + 1; i < 
curwö
->
w_jum∂i°Àn
; ++i)

647 i‡(
curwö
->
w_jum∂i°
[
i
].
‚um
 =curwö->w_jum∂i°[
‰om
].fnum &&

648 
curwö
->
w_jum∂i°
[
i
].
m¨k
.
 um
 ==

649 
curwö
->
w_jum∂i°
[
‰om
].
m¨k
.
 um
)

651 i‡(
i
 >
curwö
->
w_jum∂i°Àn
)

652 
curwö
->
w_jum∂i°
[
to
++] = curwö->w_jum∂i°[
‰om
];

654 i‡(
curwö
->
w_jum∂i°idx
 =curwö->
w_jum∂i°Àn
)

655 
curwö
->
w_jum∂i°idx
 = 
to
;

656 
curwö
->
w_jum∂i°Àn
 = 
to
;

657 
	}
}

660 
	$£t_œ°_curs‹
(
wö
)

661 
WIN
 *
wö
;

663 
wö
->
w_buf„r
->
b_œ°_curs‹
 = wö->
w_curs‹
;

664 
	}
}

666 #ifde‡
VIMINFO


668 
	$ªad_vimöfo_fûem¨k
(
löe
, 
Â
, 
f‹˚
)

669 
ch¨_u
 *
löe
;

670 
FILE
 *
Â
;

671 
f‹˚
;

673 
idx
;

674 
ch¨_u
 *
°r
;

677 
°r
 = 
löe
 + 1;

678 i‡(*
°r
 > 127 || (!
	`isdigô
(*°rË&& !
	`isuµî
(*str)))

679 
	`EMSG2
("vimöfo: IŒegÆ fûêm¨kÇamêöÜöê%s", 
löe
);

682 i‡(
	`isdigô
(*
°r
))

683 
idx
 = *
°r
 - '0' + 
NMARKS
;

685 
idx
 = *
°r
 - 'A';

686 i‡(
«medfm
[
idx
].
m¨k
.
 um
 =0 || 
f‹˚
)

688 
°r
 = 
	`skùwhôe
(str + 1);

689 
«medfm
[
idx
].
m¨k
.
 um
 = 
	`gëdigôs
(&
°r
);

690 
°r
 = 
	`skùwhôe
(str);

691 
«medfm
[
idx
].
m¨k
.
cﬁ
 = 
	`gëdigôs
(&
°r
);

692 
°r
 = 
	`skùwhôe
(str);

693 
	`vimöfo_ªad°rög
(
löe
);

694 
«medfm_«mes
[
idx
] = 
	`°rßve
(
°r
);

697  
	`vim_fgës
(
löe
, 
LSIZE
, 
Â
);

698 
	}
}

701 
	$wrôe_vimöfo_fûem¨ks
(
Â
)

702 
FILE
 *
Â
;

704 
i
;

705 
ch¨_u
 *
«me
;

707 i‡(
	`gë_vimöfo_∑ømëî
('\'') == 0)

710 
	`Ârötf
(
Â
, "\n# File marks:\n");

718 i‡(
curbuf
->
b_fûíame
 !
NULL
 && !
	`ªmovabÀ
(curbuf->b_filename))

720 
«me
 = 
	`buÊi°_ƒ2«me
(
curbuf
->
b_‚um
, 
TRUE
, 
FALSE
);

721 
i
 = 
NMARKS
; i < NMARKS + 
EXTRA_MARKS
 - 1; ++i)

722 i‡(
«medfm
[
i
].
m¨k
.
 um
 =
curwö
->
w_curs‹
.lnum &&

723 (
«medfm_«mes
[
i
] =
NULL
 ?

724 
«medfm
[
i
].
‚um
 =
curbuf
->
b_‚um
 :

725 
	`STRCMP
(
«me
, 
«medfm_«mes
[
i
]) == 0))

728 
	`vim_‰ì
(
«medfm_«mes
[
i
]);

729  ; 
i
 > 
NMARKS
; --i)

731 
«medfm
[
i
] =Çamedfm[i - 1];

732 
«medfm_«mes
[
i
] =Çamedfm_names[i - 1];

734 
«medfm
[
NMARKS
].
m¨k
 = 
curwö
->
w_curs‹
;

735 
«medfm
[
NMARKS
].
‚um
 = 
curbuf
->
b_‚um
;

736 
«medfm_«mes
[
NMARKS
] = 
NULL
;

739 
i
 = 0; i < 
NMARKS
 + 
EXTRA_MARKS
; i++)

741 i‡(
«medfm
[
i
].
m¨k
.
 um
 == 0)

744 i‡(
«medfm
[
i
].
‚um
)

745 
«me
 = 
	`buÊi°_ƒ2«me
(
«medfm
[
i
].
‚um
, 
TRUE
, 
FALSE
);

747 
«me
 = 
«medfm_«mes
[
i
];

748 i‡(
«me
 =
NULL
)

751 
	`Ârötf
(
Â
, "'%c %ld %ld %s\n",

752 
i
 < 
NMARKS
 ? i + 'A' : i - NMARKS + '0',

753 ()
«medfm
[
i
].
m¨k
.
 um
,

754 ()
«medfm
[
i
].
m¨k
.
cﬁ
,

755 
«me
);

757 
	}
}

763 
	$ªmovabÀ
(
«me
)

764 
ch¨_u
 *
«me
;

766 
ch¨_u
 *
p
;

767 
ch¨_u
 
∑π
[51];

768 
ªtvÆ
 = 
FALSE
;

770 
«me
 = 
	`home_ª∂a˚_ßve
(
NULL
,Çame);

771 i‡(
«me
 !
NULL
)

773 
p
 = 
p_vimöfo
; *p; )

775 
	`c›y_›ti⁄_∑π
(&
p
, 
∑π
, 51, ", ");

776 i‡(
∑π
[0] ='r' && 
	`vim_°∫icmp
’¨à+ 1, 
«me
,

777 (
size_t
)
	`STRLEN
(
∑π
 + 1)) == 0)

779 
ªtvÆ
 = 
TRUE
;

783 
	`vim_‰ì
(
«me
);

785  
ªtvÆ
;

786 
	}
}

793 
	$wrôe_vimöfo_m¨ks
(
Â_out
)

794 
FILE
 *
Â_out
;

796 
cou¡
;

797 
BUF
 *
buf
;

798 
WIN
 *
wö
;

799 
is_m¨k_£t
;

800 
i
;

805 
wö
 = 
fú°wö
; wö !
NULL
; wö = wö->
w_√xt
)

806 
	`£t_œ°_curs‹
(
wö
);

808 
	`Ârötf
(
Â_out
, "\n# History of marks within files (newestÅo oldest):\n");

809 
cou¡
 = 0;

810 
buf
 = 
fú°buf
; bu‡!
NULL
; bu‡buf->
b_√xt
)

816 i‡(
buf
->
b_m¨ks_ªad
)

818 i‡(
buf
->
b_œ°_curs‹
.
 um
 != 0)

819 
is_m¨k_£t
 = 
TRUE
;

822 
is_m¨k_£t
 = 
FALSE
;

823 
i
 = 0; i < 
NMARKS
; i++)

824 i‡(
buf
->
b_«medm
[
i
].
 um
 != 0)

826 
is_m¨k_£t
 = 
TRUE
;

830 i‡(
is_m¨k_£t
 && 
buf
->
b_fûíame
 !
NULL
 &&

831 
buf
->
b_fûíame
[0] !
NUL
 && !
	`ªmovabÀ
(buf->b_filename))

833 
	`home_ª∂a˚
(
NULL
, 
buf
->
b_fûíame
, 
IObuff
, 
IOSIZE
);

834 
	`Ârötf
(
Â_out
, "\n> %s\n", (*)
IObuff
);

835 i‡(
buf
->
b_œ°_curs‹
.
 um
 != 0)

836 
	`Ârötf
(
Â_out
, "\t\"\t%ld\t%d\n",

837 
buf
->
b_œ°_curs‹
.
 um
, buf->b_œ°_curs‹.
cﬁ
);

838 
i
 = 0; i < 
NMARKS
; i++)

839 i‡(
buf
->
b_«medm
[
i
].
 um
 != 0)

840 
	`Ârötf
(
Â_out
, "\t%c\t%ld\t%d\n", 'a' + 
i
,

841 
buf
->
b_«medm
[
i
].
 um
, buf->b_«medm[i].
cﬁ
);

842 
cou¡
++;

847  
cou¡
;

848 
	}
}

856 
	$c›y_vimöfo_m¨ks
(
löe
, 
Â_ö
, 
Â_out
, 
cou¡
, 
eof
)

857 
ch¨_u
 *
löe
;

858 
FILE
 *
Â_ö
;

859 
FILE
 *
Â_out
;

860 
cou¡
;

861 
eof
;

863 
BUF
 *
buf
;

864 
num_m¨ked_fûes
;

865 
ch¨_u
 
ßve_ch¨
;

866 
lﬂd_m¨ks
;

867 
c›y_m¨ks_out
;

868 
ch¨_u
 *
°r
;

869 
i
;

870 
ch¨_u
 *
p
;

872 
num_m¨ked_fûes
 = 
	`gë_vimöfo_∑ømëî
('\'');

873 !
eof
 && (
cou¡
 < 
num_m¨ked_fûes
 || 
Â_out
 =
NULL
))

875 i‡(
löe
[0] != '>')

877 i‡(
löe
[0] != '\n' &&Üine[0] != '\r' &&Üine[0] != '#')

878 
	`EMSG2
("vimöfo: IŒegÆ sèπög ch¨ i¿löê%s", 
löe
);

879 
eof
 = 
	`vim_fgës
(
löe
, 
LSIZE
, 
Â_ö
);

887 
°r
 = 
	`skùwhôe
(
löe
 + 1);

888 
p
 = 
°r
 + 
	`STRLEN
(str);

889 
p
 !
°r
 && (*∞=
NUL
 || 
	`vim_is•a˚
(*p)))

890 
p
--;

891 i‡(*
p
)

892 
p
++;

893 
ßve_ch¨
 = *
p
;

894 *
p
 = 
NUL
;

900 
lﬂd_m¨ks
 = 
c›y_m¨ks_out
 = 
FALSE
;

901 i‡(
Â_out
 =
NULL
)

903 i‡(
curbuf
->
b_fûíame
 !
NULL
 &&

904 
	`fuŒ∑thcmp
(
°r
, 
curbuf
->
b_fûíame
Ë=
FPC_SAME
)

905 
lﬂd_m¨ks
 = 
TRUE
;

910 
buf
 = 
fú°buf
; bu‡!
NULL
; bu‡buf->
b_√xt
)

911 i‡(
buf
->
b_fûíame
 !
NULL
 &&

912 
	`fuŒ∑thcmp
(
°r
, 
buf
->
b_fûíame
Ë=
FPC_SAME
)

918 i‡(
buf
 =
NULL
 || !buf->
b_m¨ks_ªad
)

920 
c›y_m¨ks_out
 = 
TRUE
;

921 *
p
 = 
ßve_ch¨
;

922 
	`Âuts
("\n", 
Â_out
);

923 
	`Âuts
((*)
löe
, 
Â_out
);

924 
cou¡
++;

927 !(
eof
 = 
	`vim_fgës
(
löe
, 
LSIZE
, 
Â_ö
)Ë&&Üöe[0] =
TAB
)

929 i‡(
lﬂd_m¨ks
)

931 i‡(
löe
[1] == '"')

932 
	`ssˇnf
((*)
löe
 + 2, "%ld %d",

933 &
curbuf
->
b_œ°_curs‹
.
 um
,

934 &
curbuf
->
b_œ°_curs‹
.
cﬁ
);

935 i‡((
i
 = 
löe
[1] - 'a'Ë>0 && i < 
NMARKS
)

936 
	`ssˇnf
((*)
löe
 + 2, "%ld %d",

937 &
curbuf
->
b_«medm
[
i
].
 um
,

938 &
curbuf
->
b_«medm
[
i
].
cﬁ
);

940 i‡(
c›y_m¨ks_out
)

941 
	`Âuts
((*)
löe
, 
Â_out
);

943 i‡(
lﬂd_m¨ks
)

946 
	}
}

	@src/memfile.c

10 
	#CHECK
(
c
, 
s
Ëi‡(cË
	`¥ötf
(s)

	)

37 #i‡
deföed
 
MSDOS
 || deföed 
WIN32


38 
	~<io.h
>

41 
	~"vim.h
"

42 
	~"globÆs.h
"

43 
	~"¥Ÿo.h
"

44 
	~"›ti⁄.h
"

45 #ifde‡
HAVE_FCNTL_H


46 
	~<f˙é.h
>

52 #ifde‡
HAVE_SYS_STATFS_H


53 
	~<sys/°©fs.h
>

54 
	#STATFS
 
°©fs


	)

55 
	#F_BSIZE
 
f_bsize


	)

57 
	#STATFS
 
°©


	)

58 
	#F_BSIZE
 
°_blksize


	)

59 
	#f°©fs
(
fd
, 
buf
, 
Àn
, 
nul
Ë
	`f°©
((fd), (buf))

	)

65 #ifde‡
AMIGA


66 #i‚de‡
NO_ARP


67 
dos2
;

69 #ifde‡
SASC


70 
	~<¥Ÿo/dos.h
>

71 
	~<ios1.h
>

75 
	#MEMFILE_PAGE_SIZE
 4096

	)

77 
	gtŸÆ_mem_u£d
 = 0;

79 
mf_ös_hash
 
__ARGS
((
MEMFILE
 *, 
BHDR
 *));

80 
mf_ªm_hash
 
__ARGS
((
MEMFILE
 *, 
BHDR
 *));

81 
BHDR
 *
mf_föd_hash
 
__ARGS
((
MEMFILE
 *, 
blockƒ_t
));

82 
mf_ös_u£d
 
__ARGS
((
MEMFILE
 *, 
BHDR
 *));

83 
mf_ªm_u£d
 
__ARGS
((
MEMFILE
 *, 
BHDR
 *));

84 
BHDR
 *
mf_ªÀa£
 
__ARGS
((
MEMFILE
 *, ));

85 
BHDR
 *
mf_Æloc_bhdr
 
__ARGS
((
MEMFILE
 *, ));

86 
mf_‰ì_bhdr
 
__ARGS
((
BHDR
 *));

87 
mf_ös_‰ì
 
__ARGS
((
MEMFILE
 *, 
BHDR
 *));

88 
BHDR
 *
mf_ªm_‰ì
 
__ARGS
((
MEMFILE
 *));

89 
mf_ªad
 
__ARGS
((
MEMFILE
 *, 
BHDR
 *));

90 
mf_wrôe
 
__ARGS
((
MEMFILE
 *, 
BHDR
 *));

91 
mf_å™s_add
 
__ARGS
((
MEMFILE
 *, 
BHDR
 *));

92 
mf_do_›í
 
__ARGS
((
MEMFILE
 *, 
ch¨_u
 *, ));

122 
MEMFILE
 *

123 
	$mf_›í
(
‚ame
, 
åunc_fûe
)

124 
ch¨_u
 *
‚ame
;

125 
åunc_fûe
;

127 
MEMFILE
 *
mÂ
;

128 
i
;

129 
size
;

130 #ifde‡
UNIX


131 
STATFS
 
°f
;

134 i‡((
mÂ
 = (
MEMFILE
 *)
	`Æloc
(()(MEMFILE))Ë=
NULL
)

135  
NULL
;

137 i‡(
‚ame
 =
NULL
)

139 
mÂ
->
mf_‚ame
 = 
NULL
;

140 
mÂ
->
mf_x‚ame
 = 
NULL
;

141 
mÂ
->
mf_fd
 = -1;

145 
	`mf_do_›í
(
mÂ
, 
‚ame
, 
åunc_fûe
);

148 i‡(
mÂ
->
mf_fd
 < 0)

150 
	`vim_‰ì
(
mÂ
);

151  
NULL
;

155 
mÂ
->
mf_‰ì_fú°
 = 
NULL
;

156 
mÂ
->
mf_u£d_fú°
 = 
NULL
;

157 
mÂ
->
mf_u£d_œ°
 = 
NULL
;

158 
mÂ
->
mf_dúty
 = 
FALSE
;

159 
mÂ
->
mf_u£d_cou¡
 = 0;

160 
i
 = 0; i < 
MEMHASHSIZE
; ++i)

162 
mÂ
->
mf_hash
[
i
] = 
NULL
;

163 
mÂ
->
mf_å™s
[
i
] = 
NULL
;

165 
mÂ
->
mf_∑ge_size
 = 
MEMFILE_PAGE_SIZE
;

167 #ifde‡
UNIX


175 i‡(
mÂ
->
mf_fd
 >= 0 &&

176 
	`f°©fs
(
mÂ
->
mf_fd
, &
°f
, (
°©fs
), 0) == 0 &&

177 
°f
.
F_BSIZE
 >= 1048 && stf.F_BSIZE <= 50000)

178 
mÂ
->
mf_∑ge_size
 = 
°f
.
F_BSIZE
;

181 i‡(
mÂ
->
mf_fd
 < 0 || 
åunc_fûe
 ||

182 (
size
 = 
	`l£ek
(
mÂ
->
mf_fd
, 0L, 
SEEK_END
)) <= 0)

183 
mÂ
->
mf_blockƒ_max
 = 0;

185 
mÂ
->
mf_blockƒ_max
 = 
size
 / mÂ->
mf_∑ge_size
;

186 
mÂ
->
mf_blockƒ_mö
 = -1;

187 
mÂ
->
mf_√g_cou¡
 = 0;

188 
mÂ
->
mf_öfûe_cou¡
 = mÂ->
mf_blockƒ_max
;

189 i‡(
mÂ
->
mf_fd
 < 0)

190 
mÂ
->
mf_u£d_cou¡_max
 = 0;

192 
mÂ
->
mf_u£d_cou¡_max
 = 
p_mm
 * 1024 / mÂ->
mf_∑ge_size
;

194  
mÂ
;

195 
	}
}

208 
	$mf_›í_fûe
(
mÂ
, 
‚ame
)

209 
MEMFILE
 *
mÂ
;

210 
ch¨_u
 *
‚ame
;

212 
	`mf_do_›í
(
mÂ
, 
‚ame
, 
TRUE
);

214 i‡(
mÂ
->
mf_fd
 < 0)

215  
FAIL
;

217 
mÂ
->
mf_dúty
 = 
TRUE
;

218  
OK
;

219 
	}
}

225 
	$mf_˛o£
(
mÂ
, 
dñ_fûe
)

226 
MEMFILE
 *
mÂ
;

227 
dñ_fûe
;

229 
BHDR
 *
hp
, *
√xç
;

230 
NR_TRANS
 *
ç
, *
ç√xt
;

231 
i
;

233 i‡(
mÂ
 =
NULL
)

235 i‡(
mÂ
->
mf_fd
 >= 0)

237 i‡(
	`˛o£
(
mÂ
->
mf_fd
) < 0)

238 
	`EMSG
("CloseÉrror on swap file");

240 i‡(
dñ_fûe
 && 
mÂ
->
mf_‚ame
 !
NULL
)

241 
	`vim_ªmove
(
mÂ
->
mf_‚ame
);

243 
hp
 = 
mÂ
->
mf_u£d_fú°
; h∞!
NULL
; h∞
√xç
)

245 
tŸÆ_mem_u£d
 -
hp
->
bh_∑ge_cou¡
 * 
mÂ
->
mf_∑ge_size
;

246 
√xç
 = 
hp
->
bh_√xt
;

247 
	`mf_‰ì_bhdr
(
hp
);

249 
mÂ
->
mf_‰ì_fú°
 !
NULL
)

250 
	`vim_‰ì
(
	`mf_ªm_‰ì
(
mÂ
));

251 
i
 = 0; i < 
MEMHASHSIZE
; ++i)

252 
ç
 = 
mÂ
->
mf_å™s
[
i
];Å∞!
NULL
;Å∞
ç√xt
)

254 
ç√xt
 = 
ç
->
¡_√xt
;

255 
	`vim_‰ì
(
ç
);

257 
	`vim_‰ì
(
mÂ
->
mf_‚ame
);

258 
	`vim_‰ì
(
mÂ
->
mf_x‚ame
);

259 
	`vim_‰ì
(
mÂ
);

260 
	}
}

267 
BHDR
 *

268 
	$mf_√w
(
mÂ
, 
√g©ive
, 
∑ge_cou¡
)

269 
MEMFILE
 *
mÂ
;

270 
√g©ive
;

271 
∑ge_cou¡
;

273 
BHDR
 *
hp
;

274 
BHDR
 *
‰ìp
;

275 
ch¨_u
 *
p
;

281 
hp
 = 
	`mf_ªÀa£
(
mÂ
, 
∑ge_cou¡
);

289 
‰ìp
 = 
mÂ
->
mf_‰ì_fú°
;

290 i‡(!
√g©ive
 && 
‰ìp
 !
NULL
 && fªï->
bh_∑ge_cou¡
 >
∑ge_cou¡
)

302 i‡(
‰ìp
->
bh_∑ge_cou¡
 > 
∑ge_cou¡
)

304 i‡(
hp
 =
NULL
 && (h∞
	`mf_Æloc_bhdr
(
mÂ
, 
∑ge_cou¡
)) == NULL)

305  
NULL
;

306 
hp
->
bh_bnum
 = 
‰ìp
->bh_bnum;

307 
‰ìp
->
bh_bnum
 +
∑ge_cou¡
;

308 
‰ìp
->
bh_∑ge_cou¡
 -
∑ge_cou¡
;

310 i‡(
hp
 =
NULL
)

312 i‡((
p
 = (
ch¨_u
 *)
	`Æloc
(
mÂ
->
mf_∑ge_size
 * 
∑ge_cou¡
)Ë=
NULL
)

313  
NULL
;

314 
hp
 = 
	`mf_ªm_‰ì
(
mÂ
);

315 
hp
->
bh_d©a
 = 
p
;

319 
‰ìp
 = 
	`mf_ªm_‰ì
(
mÂ
);

320 
hp
->
bh_bnum
 = 
‰ìp
->bh_bnum;

321 
	`vim_‰ì
(
‰ìp
);

326 i‡(
hp
 =
NULL
 && (h∞
	`mf_Æloc_bhdr
(
mÂ
, 
∑ge_cou¡
)) == NULL)

327  
NULL
;

328 i‡(
√g©ive
)

330 
hp
->
bh_bnum
 = 
mÂ
->
mf_blockƒ_mö
--;

331 
mÂ
->
mf_√g_cou¡
++;

335 
hp
->
bh_bnum
 = 
mÂ
->
mf_blockƒ_max
;

336 
mÂ
->
mf_blockƒ_max
 +
∑ge_cou¡
;

339 
hp
->
bh_Êags
 = 
BH_LOCKED
 | 
BH_DIRTY
;

340 
mÂ
->
mf_dúty
 = 
TRUE
;

341 
hp
->
bh_∑ge_cou¡
 = 
∑ge_cou¡
;

342 
	`mf_ös_u£d
(
mÂ
, 
hp
);

343 
	`mf_ös_hash
(
mÂ
, 
hp
);

345  
hp
;

346 
	}
}

353 
BHDR
 *

354 
	$mf_gë
(
mÂ
, 
ƒ
, 
∑ge_cou¡
)

355 
MEMFILE
 *
mÂ
;

356 
blockƒ_t
 
ƒ
;

357 
∑ge_cou¡
;

359 
BHDR
 *
hp
;

361 i‡(
ƒ
 >
mÂ
->
mf_blockƒ_max
 ||Ç∏<mÂ->
mf_blockƒ_mö
)

362  
NULL
;

367 
hp
 = 
	`mf_föd_hash
(
mÂ
, 
ƒ
);

368 i‡(
hp
 =
NULL
)

370 i‡(
ƒ
 < 0 ||Ç∏>
mÂ
->
mf_öfûe_cou¡
)

371  
NULL
;

380 
hp
 = 
	`mf_ªÀa£
(
mÂ
, 
∑ge_cou¡
);

381 i‡(
hp
 =
NULL
 && (h∞
	`mf_Æloc_bhdr
(
mÂ
, 
∑ge_cou¡
)) == NULL)

382  
NULL
;

384 
hp
->
bh_bnum
 = 
ƒ
;

385 
hp
->
bh_Êags
 = 0;

386 
hp
->
bh_∑ge_cou¡
 = 
∑ge_cou¡
;

387 i‡(
	`mf_ªad
(
mÂ
, 
hp
Ë=
FAIL
)

389 
	`mf_‰ì_bhdr
(
hp
);

390  
NULL
;

395 
	`mf_ªm_u£d
(
mÂ
, 
hp
);

396 
	`mf_ªm_hash
(
mÂ
, 
hp
);

399 
hp
->
bh_Êags
 |
BH_LOCKED
;

400 
	`mf_ös_u£d
(
mÂ
, 
hp
);

401 
	`mf_ös_hash
(
mÂ
, 
hp
);

403  
hp
;

404 
	}
}

415 
	$mf_put
(
mÂ
, 
hp
, 
dúty
, 
öfûe
)

416 
MEMFILE
 *
mÂ
;

417 
BHDR
 *
hp
;

418 
dúty
;

419 
öfûe
;

421 
Êags
;

423 
Êags
 = 
hp
->
bh_Êags
;

424 
	`CHECK
((
Êags
 & 
BH_LOCKED
) == 0, "block wasÇotÜocked");

425 
Êags
 &~
BH_LOCKED
;

426 i‡(
dúty
)

428 
Êags
 |
BH_DIRTY
;

429 
mÂ
->
mf_dúty
 = 
TRUE
;

431 
hp
->
bh_Êags
 = 
Êags
;

432 i‡(
öfûe
)

433 
	`mf_å™s_add
(
mÂ
, 
hp
);

434 
	}
}

440 
	$mf_‰ì
(
mÂ
, 
hp
)

441 
MEMFILE
 *
mÂ
;

442 
BHDR
 *
hp
;

444 
	`vim_‰ì
(
hp
->
bh_d©a
);

445 
	`mf_ªm_hash
(
mÂ
, 
hp
);

446 
	`mf_ªm_u£d
(
mÂ
, 
hp
);

447 i‡(
hp
->
bh_bnum
 < 0)

449 
	`vim_‰ì
(
hp
);

450 
mÂ
->
mf_√g_cou¡
--;

453 
	`mf_ös_‰ì
(
mÂ
, 
hp
);

454 
	}
}

468 
	$mf_sync
(
mÂ
, 
Æl
, 
check_ch¨
, 
do_fsync
)

469 
MEMFILE
 *
mÂ
;

470 
Æl
;

471 
check_ch¨
;

472 
do_fsync
;

474 
°©us
;

475 
BHDR
 *
hp
;

476 #ifde‡
SYNC_DUP_CLOSE


477 
fd
;

480 i‡(
mÂ
->
mf_fd
 < 0)

482 
mÂ
->
mf_dúty
 = 
FALSE
;

483  
FAIL
;

492 
°©us
 = 
OK
;

493 
hp
 = 
mÂ
->
mf_u£d_œ°
; h∞!
NULL
; h∞hp->
bh_¥ev
)

494 i‡((
Æl
 || 
hp
->
bh_bnum
 >0Ë&& (hp->
bh_Êags
 & 
BH_DIRTY
) &&

495 (
°©us
 =
OK
 || (
hp
->
bh_bnum
 >= 0 &&

496 
hp
->
bh_bnum
 < 
mÂ
->
mf_öfûe_cou¡
)))

498 i‡(
	`mf_wrôe
(
mÂ
, 
hp
Ë=
FAIL
)

500 i‡(
°©us
 =
FAIL
)

502 
°©us
 = 
FAIL
;

504 i‡(
check_ch¨
 && 
	`mch_ch¨_avaû
())

512 i‡(
hp
 =
NULL
 || 
°©us
 =
FAIL
)

513 
mÂ
->
mf_dúty
 = 
FALSE
;

515 i‡(
do_fsync
 && *
p_sws
 !
NUL
)

517 #i‡
	`deföed
(
UNIX
)

518 #ifde‡
HAVE_FSYNC


528 #i‡
	`deföed
(
__EMX__
)

529 
îr‹
 "Dont use fsync with EMX! ReadÉmxdoc.doc orÉmxfix01.doc for info."

531 i‡(
	`STRCMP
(
p_sws
, "fsync") == 0)

533 i‡(
	`fsync
(
mÂ
->
mf_fd
))

534 
°©us
 = 
FAIL
;

538 
	`sync
();

540 #ifde‡
DJGPP


541 i‡(
	`_dos_commô
(
mÂ
->
mf_fd
))

542 
°©us
 = 
FAIL
;

544 #ifde‡
SYNC_DUP_CLOSE


549 i‡((
fd
 = 
	`dup
(
mÂ
->
mf_fd
)) >= 0)

550 
	`˛o£
(
fd
);

553 #ifde‡
AMIGA


559 #i‚de‡
NO_ARP


560 i‡(
dos2
)

562 #ifde‡
SASC


564 
UFB
 *
Â
 = 
	`chkufb
(
mÂ
->
mf_fd
);

566 i‡(
Â
 !
NULL
)

567 
	`Flush
(
Â
->
ufbfh
);

570 #ifde‡
_DCC


572 
BPTR
 
fh
 = (BPTR)
	`fdtofh
(
mÂ
->
mf_fd
);

574 i‡(
fh
 != 0)

575 
	`Flush
(
fh
);

578 
	`Flush
(
_devèb
[
mÂ
->
mf_fd
].
fd
);

584  
°©us
;

585 
	}
}

591 
	$mf_ös_hash
(
mÂ
, 
hp
)

592 
MEMFILE
 *
mÂ
;

593 
BHDR
 *
hp
;

595 
BHDR
 *
hhp
;

596 
hash
;

598 
hash
 = 
	`MEMHASH
(
hp
->
bh_bnum
);

599 
hhp
 = 
mÂ
->
mf_hash
[
hash
];

600 
hp
->
bh_hash_√xt
 = 
hhp
;

601 
hp
->
bh_hash_¥ev
 = 
NULL
;

602 i‡(
hhp
 !
NULL
)

603 
hhp
->
bh_hash_¥ev
 = 
hp
;

604 
mÂ
->
mf_hash
[
hash
] = 
hp
;

605 
	}
}

611 
	$mf_ªm_hash
(
mÂ
, 
hp
)

612 
MEMFILE
 *
mÂ
;

613 
BHDR
 *
hp
;

615 i‡(
hp
->
bh_hash_¥ev
 =
NULL
)

616 
mÂ
->
mf_hash
[
	`MEMHASH
(
hp
->
bh_bnum
)] = hp->
bh_hash_√xt
;

618 
hp
->
bh_hash_¥ev
->
bh_hash_√xt
 = hp->bh_hash_next;

620 i‡(
hp
->
bh_hash_√xt
)

621 
hp
->
bh_hash_√xt
->
bh_hash_¥ev
 = hp->bh_hash_prev;

622 
	}
}

627 
BHDR
 *

628 
	$mf_föd_hash
(
mÂ
, 
ƒ
)

629 
MEMFILE
 *
mÂ
;

630 
blockƒ_t
 
ƒ
;

632 
BHDR
 *
hp
;

634 
hp
 = 
mÂ
->
mf_hash
[
	`MEMHASH
(
ƒ
)]; h∞!
NULL
; h∞hp->
bh_hash_√xt
)

635 i‡(
hp
->
bh_bnum
 =
ƒ
)

637  
hp
;

638 
	}
}

644 
	$mf_ös_u£d
(
mÂ
, 
hp
)

645 
MEMFILE
 *
mÂ
;

646 
BHDR
 *
hp
;

648 
hp
->
bh_√xt
 = 
mÂ
->
mf_u£d_fú°
;

649 
mÂ
->
mf_u£d_fú°
 = 
hp
;

650 
hp
->
bh_¥ev
 = 
NULL
;

651 i‡(
hp
->
bh_√xt
 =
NULL
)

652 
mÂ
->
mf_u£d_œ°
 = 
hp
;

654 
hp
->
bh_√xt
->
bh_¥ev
 = hp;

655 
mÂ
->
mf_u£d_cou¡
 +
hp
->
bh_∑ge_cou¡
;

656 
tŸÆ_mem_u£d
 +
hp
->
bh_∑ge_cou¡
 * 
mÂ
->
mf_∑ge_size
;

657 
	}
}

663 
	$mf_ªm_u£d
(
mÂ
, 
hp
)

664 
MEMFILE
 *
mÂ
;

665 
BHDR
 *
hp
;

667 i‡(
hp
->
bh_√xt
 =
NULL
)

668 
mÂ
->
mf_u£d_œ°
 = 
hp
->
bh_¥ev
;

670 
hp
->
bh_√xt
->
bh_¥ev
 = hp->bh_prev;

671 i‡(
hp
->
bh_¥ev
 =
NULL
)

672 
mÂ
->
mf_u£d_fú°
 = 
hp
->
bh_√xt
;

674 
hp
->
bh_¥ev
->
bh_√xt
 = hp->bh_next;

675 
mÂ
->
mf_u£d_cou¡
 -
hp
->
bh_∑ge_cou¡
;

676 
tŸÆ_mem_u£d
 -
hp
->
bh_∑ge_cou¡
 * 
mÂ
->
mf_∑ge_size
;

677 
	}
}

686 
BHDR
 *

687 
	$mf_ªÀa£
(
mÂ
, 
∑ge_cou¡
)

688 
MEMFILE
 *
mÂ
;

689 
∑ge_cou¡
;

691 
BHDR
 *
hp
;

702 i‡(
mÂ
->
mf_fd
 < 0 || ((mÂ->
mf_u£d_cou¡
 < mÂ->
mf_u£d_cou¡_max
 ||

703 
mÂ
->
mf_u£d_cou¡_max
 == 0) &&

704 (
tŸÆ_mem_u£d
 >> 10Ë< 
p_mmt
))

705  
NULL
;

707 
hp
 = 
mÂ
->
mf_u£d_œ°
; h∞!
NULL
; h∞hp->
bh_¥ev
)

708 i‡(!(
hp
->
bh_Êags
 & 
BH_LOCKED
))

710 i‡(
hp
 =
NULL
)

711  
NULL
;

717 i‡((
hp
->
bh_Êags
 & 
BH_DIRTY
Ë&& 
	`mf_wrôe
(
mÂ
, hpË=
FAIL
)

718  
NULL
;

720 
	`mf_ªm_u£d
(
mÂ
, 
hp
);

721 
	`mf_ªm_hash
(
mÂ
, 
hp
);

726 i‡(
hp
->
bh_∑ge_cou¡
 !
∑ge_cou¡
)

728 
	`vim_‰ì
(
hp
->
bh_d©a
);

729 i‡((
hp
->
bh_d©a
 = 
	`Æloc
(
mÂ
->
mf_∑ge_size
 * 
∑ge_cou¡
)Ë=
NULL
)

731 
	`vim_‰ì
(
hp
);

732  
NULL
;

734 
hp
->
bh_∑ge_cou¡
 = 
∑ge_cou¡
;

736  
hp
;

737 
	}
}

746 
	$mf_ªÀa£_Æl
()

748 
BUF
 *
buf
;

749 
MEMFILE
 *
mÂ
;

750 
BHDR
 *
hp
;

751 
ªtvÆ
 = 
FALSE
;

753 
buf
 = 
fú°buf
; bu‡!
NULL
; bu‡buf->
b_√xt
)

755 
mÂ
 = 
buf
->
b_ml
.
ml_mÂ
;

756 i‡(
mÂ
 !
NULL
 && mÂ->
mf_fd
 >= 0)

757 
hp
 = 
mÂ
->
mf_u£d_œ°
; h∞!
NULL
; )

759 i‡(!(
hp
->
bh_Êags
 & 
BH_LOCKED
) &&

760 (!(
hp
->
bh_Êags
 & 
BH_DIRTY
Ë|| 
	`mf_wrôe
(
mÂ
, hpË!
FAIL
))

762 
	`mf_ªm_u£d
(
mÂ
, 
hp
);

763 
	`mf_ªm_hash
(
mÂ
, 
hp
);

764 
	`mf_‰ì_bhdr
(
hp
);

765 
hp
 = 
mÂ
->
mf_u£d_œ°
;

766 
ªtvÆ
 = 
TRUE
;

769 
hp
 = hp->
bh_¥ev
;

772  
ªtvÆ
;

773 
	}
}

778 
BHDR
 *

779 
	$mf_Æloc_bhdr
(
mÂ
, 
∑ge_cou¡
)

780 
MEMFILE
 *
mÂ
;

781 
∑ge_cou¡
;

783 
BHDR
 *
hp
;

785 i‡((
hp
 = (
BHDR
 *)
	`Æloc
(()(BHDR))Ë!
NULL
)

787 i‡((
hp
->
bh_d©a
 = (
ch¨_u
 *)
	`Æloc
(
mÂ
->
mf_∑ge_size
 * 
∑ge_cou¡
))

788 =
NULL
)

790 
	`vim_‰ì
(
hp
);

791  
NULL
;

793 
hp
->
bh_∑ge_cou¡
 = 
∑ge_cou¡
;

795  
hp
;

796 
	}
}

802 
	$mf_‰ì_bhdr
(
hp
)

803 
BHDR
 *
hp
;

805 
	`vim_‰ì
(
hp
->
bh_d©a
);

806 
	`vim_‰ì
(
hp
);

807 
	}
}

813 
	$mf_ös_‰ì
(
mÂ
, 
hp
)

814 
MEMFILE
 *
mÂ
;

815 
BHDR
 *
hp
;

817 
hp
->
bh_√xt
 = 
mÂ
->
mf_‰ì_fú°
;

818 
mÂ
->
mf_‰ì_fú°
 = 
hp
;

819 
	}
}

825 
BHDR
 *

826 
	$mf_ªm_‰ì
(
mÂ
)

827 
MEMFILE
 *
mÂ
;

829 
BHDR
 *
hp
;

831 
hp
 = 
mÂ
->
mf_‰ì_fú°
;

832 
mÂ
->
mf_‰ì_fú°
 = 
hp
->
bh_√xt
;

833  
hp
;

834 
	}
}

842 
	$mf_ªad
(
mÂ
, 
hp
)

843 
MEMFILE
 *
mÂ
;

844 
BHDR
 *
hp
;

846 
l⁄g_u
 
off£t
;

847 
∑ge_size
;

848 
size
;

850 i‡(
mÂ
->
mf_fd
 < 0)

851  
FAIL
;

853 
∑ge_size
 = 
mÂ
->
mf_∑ge_size
;

854 
off£t
 = 
∑ge_size
 * 
hp
->
bh_bnum
;

855 
size
 = 
∑ge_size
 * 
hp
->
bh_∑ge_cou¡
;

856 i‡((
l⁄g_u
)
	`l£ek
(
mÂ
->
mf_fd
, 
off£t
, 
SEEK_SET
) != offset)

858 
	`EMSG
("SeekÉrror in swap fileÑead");

859  
FAIL
;

861 i‡(()
	`ªad
(
mÂ
->
mf_fd
, (*)
hp
->
bh_d©a
, (
size_t
)
size
) != size)

863 
	`EMSG
("ReadÉrror in swap file");

864  
FAIL
;

866  
OK
;

867 
	}
}

875 
	$mf_wrôe
(
mÂ
, 
hp
)

876 
MEMFILE
 *
mÂ
;

877 
BHDR
 *
hp
;

879 
l⁄g_u
 
off£t
;

880 
blockƒ_t
 
ƒ
;

881 
BHDR
 *
hp2
;

882 
∑ge_size
;

883 
∑ge_cou¡
;

884 
size
;

886 i‡(
mÂ
->
mf_fd
 < 0)

887  
FAIL
;

889 i‡(
hp
->
bh_bnum
 < 0)

890 i‡(
	`mf_å™s_add
(
mÂ
, 
hp
Ë=
FAIL
)

891  
FAIL
;

893 
∑ge_size
 = 
mÂ
->
mf_∑ge_size
;

903 
ƒ
 = 
hp
->
bh_bnum
;

904 i‡(
ƒ
 > 
mÂ
->
mf_öfûe_cou¡
)

906 
ƒ
 = 
mÂ
->
mf_öfûe_cou¡
;

907 
hp2
 = 
	`mf_föd_hash
(
mÂ
, 
ƒ
);

910 
hp2
 = 
hp
;

912 
off£t
 = 
∑ge_size
 * 
ƒ
;

913 i‡((
l⁄g_u
)
	`l£ek
(
mÂ
->
mf_fd
, 
off£t
, 
SEEK_SET
) != offset)

915 
	`EMSG
("SeekÉrror in swap file write");

916  
FAIL
;

918 i‡(
hp2
 =
NULL
)

919 
∑ge_cou¡
 = 1;

921 
∑ge_cou¡
 = 
hp2
->
bh_∑ge_cou¡
;

922 
size
 = 
∑ge_size
 * 
∑ge_cou¡
;

923 i‡(()
	`wrôe
(
mÂ
->
mf_fd
,

924 (*)(
hp2
 =
NULL
 ? 
hp
 : hp2)->
bh_d©a
, (
size_t
)
size
) != size)

932 i‡(!
did_sw≠wrôe_msg
)

933 
	`EMSG
("WriteÉrror in swap file");

934 
did_sw≠wrôe_msg
 = 
TRUE
;

935  
FAIL
;

937 
did_sw≠wrôe_msg
 = 
FALSE
;

938 i‡(
hp2
 !
NULL
)

939 
hp2
->
bh_Êags
 &~
BH_DIRTY
;

941 i‡(
ƒ
 + (
blockƒ_t
)
∑ge_cou¡
 > 
mÂ
->
mf_öfûe_cou¡
)

942 
mÂ
->
mf_öfûe_cou¡
 = 
ƒ
 + 
∑ge_cou¡
;

943 i‡(
ƒ
 =
hp
->
bh_bnum
)

946  
OK
;

947 
	}
}

955 
	$mf_å™s_add
(
mÂ
, 
hp
)

956 
MEMFILE
 *
mÂ
;

957 
BHDR
 *
hp
;

959 
BHDR
 *
‰ìp
;

960 
blockƒ_t
 
√w_bnum
;

961 
hash
;

962 
NR_TRANS
 *
≈
;

963 
∑ge_cou¡
;

965 i‡(
hp
->
bh_bnum
 >= 0)

966  
OK
;

968 i‡((
≈
 = (
NR_TRANS
 *)
	`Æloc
(()(NR_TRANS))Ë=
NULL
)

969  
FAIL
;

976 
‰ìp
 = 
mÂ
->
mf_‰ì_fú°
;

977 
∑ge_cou¡
 = 
hp
->
bh_∑ge_cou¡
;

978 i‡(
‰ìp
 !
NULL
 && fªï->
bh_∑ge_cou¡
 >
∑ge_cou¡
)

980 
√w_bnum
 = 
‰ìp
->
bh_bnum
;

985 i‡(
‰ìp
->
bh_∑ge_cou¡
 > 
∑ge_cou¡
)

987 
‰ìp
->
bh_bnum
 +
∑ge_cou¡
;

988 
‰ìp
->
bh_∑ge_cou¡
 -
∑ge_cou¡
;

992 
‰ìp
 = 
	`mf_ªm_‰ì
(
mÂ
);

993 
	`vim_‰ì
(
‰ìp
);

998 
√w_bnum
 = 
mÂ
->
mf_blockƒ_max
;

999 
mÂ
->
mf_blockƒ_max
 +
∑ge_cou¡
;

1002 
≈
->
¡_ﬁd_bnum
 = 
hp
->
bh_bnum
;

1003 
≈
->
¡_√w_bnum
 = 
√w_bnum
;

1005 
	`mf_ªm_hash
(
mÂ
, 
hp
);

1006 
hp
->
bh_bnum
 = 
√w_bnum
;

1007 
	`mf_ös_hash
(
mÂ
, 
hp
);

1009 
hash
 = 
	`MEMHASH
(
≈
->
¡_ﬁd_bnum
);

1010 
≈
->
¡_√xt
 = 
mÂ
->
mf_å™s
[
hash
];

1011 
mÂ
->
mf_å™s
[
hash
] = 
≈
;

1012 i‡(
≈
->
¡_√xt
 !
NULL
)

1013 
≈
->
¡_√xt
->
¡_¥ev
 =Çp;

1014 
≈
->
¡_¥ev
 = 
NULL
;

1016  
OK
;

1017 
	}
}

1024 
blockƒ_t


1025 
	$mf_å™s_dñ
(
mÂ
, 
ﬁd_ƒ
)

1026 
MEMFILE
 *
mÂ
;

1027 
blockƒ_t
 
ﬁd_ƒ
;

1029 
hash
;

1030 
NR_TRANS
 *
≈
;

1031 
blockƒ_t
 
√w_bnum
;

1033 
hash
 = 
	`MEMHASH
(
ﬁd_ƒ
);

1034 
≈
 = 
mÂ
->
mf_å™s
[
hash
];Ç∞!
NULL
;Ç∞≈->
¡_√xt
)

1035 i‡(
≈
->
¡_ﬁd_bnum
 =
ﬁd_ƒ
)

1037 i‡(
≈
 =
NULL
)

1038  
ﬁd_ƒ
;

1040 
mÂ
->
mf_√g_cou¡
--;

1041 
√w_bnum
 = 
≈
->
¡_√w_bnum
;

1042 i‡(
≈
->
¡_¥ev
 !
NULL
)

1043 
≈
->
¡_¥ev
->
¡_√xt
 =Çp->nt_next;

1045 
mÂ
->
mf_å™s
[
hash
] = 
≈
->
¡_√xt
;

1046 i‡(
≈
->
¡_√xt
 !
NULL
)

1047 
≈
->
¡_√xt
->
¡_¥ev
 =Çp->nt_prev;

1048 
	`vim_‰ì
(
≈
);

1050  
√w_bnum
;

1051 
	}
}

1059 
	$mf_£t_x‚ame
(
mÂ
)

1060 
MEMFILE
 *
mÂ
;

1062 
mÂ
->
mf_x‚ame
 = 
NULL
;

1063 i‡(!
did_cd
)

1064 
mÂ
->
mf_x‚ame
 = 
	`FuŒName_ßve
(mÂ->
mf_‚ame
);

1065 
	}
}

1072 
	$mf_fuŒ«me
(
mÂ
)

1073 
MEMFILE
 *
mÂ
;

1075 i‡(
mÂ
 !
NULL
 && mÂ->
mf_‚ame
 !NULL && mÂ->
mf_x‚ame
 != NULL)

1077 
	`vim_‰ì
(
mÂ
->
mf_‚ame
);

1078 
mÂ
->
mf_‚ame
 = mÂ->
mf_x‚ame
;

1079 
mÂ
->
mf_x‚ame
 = 
NULL
;

1081 
	}
}

1087 
	$mf_√ed_å™s
(
mÂ
)

1088 
MEMFILE
 *
mÂ
;

1090  (
mÂ
->
mf_‚ame
 !
NULL
 && mÂ->
mf_√g_cou¡
 > 0);

1091 
	}
}

1098 
	$mf_°©i°ics
()

1100 
MEMFILE
 *
mÂ
;

1101 
BHDR
 *
hp
;

1102 
u£d
 = 0;

1103 
locked
 = 0;

1104 
dúty
 = 0;

1105 
n‰ì
 = 0;

1106 
√g©ive
 = 0;

1108 
mÂ
 = 
curbuf
->
b_ml
.
ml_mÂ
;

1109 i‡(
mÂ
 =
NULL
)

1110 
	`MSG
("No memfile");

1113 
hp
 = 
mÂ
->
mf_u£d_fú°
; h∞!
NULL
; h∞hp->
bh_√xt
)

1115 ++
u£d
;

1116 i‡(
hp
->
bh_Êags
 & 
BH_LOCKED
)

1117 ++
locked
;

1118 i‡(
hp
->
bh_Êags
 & 
BH_DIRTY
)

1119 ++
dúty
;

1120 i‡(
hp
->
bh_bnum
 < 0)

1121 ++
√g©ive
;

1123 
hp
 = 
mÂ
->
mf_‰ì_fú°
; h∞!
NULL
; h∞hp->
bh_√xt
)

1124 ++
n‰ì
;

1125 
	`•rötf
((*)
IObuff
, "%d used (%dÜocked, %d dirty, %d (%d)Çegative), %d free",

1126 
u£d
, 
locked
, 
dúty
, 
√g©ive
, ()
mÂ
->
mf_√g_cou¡
, 
n‰ì
);

1127 
	`msg
(
IObuff
);

1128 
	`•rötf
((*)
IObuff
, "TŸÆ mem u£d i†%ld byãs", 
tŸÆ_mem_u£d
);

1129 
	`msg
(
IObuff
);

1131 
	}
}

1138 
	$mf_do_›í
(
mÂ
, 
‚ame
, 
åunc_fûe
)

1139 
MEMFILE
 *
mÂ
;

1140 
ch¨_u
 *
‚ame
;

1141 
åunc_fûe
;

1143 
mÂ
->
mf_‚ame
 = 
‚ame
;

1149 
	`mf_£t_x‚ame
(
mÂ
);

1154 
mÂ
->
mf_fd
 = 
	`›í
((*)
‚ame
,

1155 (
åunc_fûe
 ? (
O_CREAT
 | 
O_RDWR
 | 
O_TRUNC
Ë: (
O_RDONLY
)Ë| 
O_EXTRA


1157 #ifde‡
AMIGA


1160 #ifde‡
UNIX


1161 , (
mode_t
)0600);

1163 #i‡
	`deföed
(
MSDOS
Ë|| deföed(
WIN32
Ë|| deföed(
__EMX__
)

1164 , 
S_IREAD
 | 
S_IWRITE
);

1166 #ifde‡
VMS


1173 i‡(
mÂ
->
mf_fd
 < 0)

1175 
	`vim_‰ì
(
mÂ
->
mf_x‚ame
);

1176 
mÂ
->
mf_‚ame
 = 
NULL
;

1177 
mÂ
->
mf_x‚ame
 = 
NULL
;

1179 
	}
}

	@src/memline.c

11 
	#CHECK
(
c
, 
s
)

	)

66 #i‡
deföed
 
MSDOS
 || deföed 
WIN32


67 
	~<io.h
>

70 
	~"vim.h
"

71 
	~"globÆs.h
"

72 
	~"¥Ÿo.h
"

73 
	~"›ti⁄.h
"

74 #ifde‡
HAVE_FCNTL_H


75 
	~<f˙é.h
>

77 #i‚de‡
UNIX


78 
	~<time.h
>

81 #ifde‡
SASC


82 
	~<¥Ÿo/dos.h
>

85 
block0
 
	tZERO_BL
;

86 
poöãr_block
 
	tPTR_BL
;

87 
d©a_block
 
	tDATA_BL
;

88 
poöãr_íåy
 
	tPTR_EN
;

90 
	#DATA_ID
 (('d' << 8Ë+ 'a'Ë

	)

91 
	#PTR_ID
 (('p' << 8Ë+ 't'Ë

	)

92 
	#BLOCK0_ID0
 'b'

	)

93 
	#BLOCK0_ID1
 '0'

	)

98 
	spoöãr_íåy


100 
blockƒ_t
 
	m≥_bnum
;

101 
löír_t
 
	m≥_löe_cou¡
;

102 
löír_t
 
	m≥_ﬁd_ um
;

103 
	m≥_∑ge_cou¡
;

109 
	spoöãr_block


111 
sh‹t_u
 
	mpb_id
;

112 
sh‹t_u
 
	mpb_cou¡
;

113 
sh‹t_u
 
	mpb_cou¡_max
;

114 
PTR_EN
 
	mpb_poöãr
[1];

125 
	sd©a_block


127 
sh‹t_u
 
	mdb_id
;

128 
	mdb_‰ì
;

129 
	mdb_txt_°¨t
;

130 
	mdb_txt_íd
;

131 
löír_t
 
	mdb_löe_cou¡
;

132 
	mdb_ödex
[1];

146 
	#DB_MARKED
 (()1 << (((Ë* 8Ë- 1))

	)

147 
	#DB_INDEX_MASK
 (~
DB_MARKED
)

	)

149 
	#INDEX_SIZE
 (()Ë

	)

150 
	#HEADER_SIZE
 ((
DATA_BL
Ë- 
INDEX_SIZE
Ë

	)

152 
	#B0_FNAME_SIZE
 900

	)

153 
	#B0_UNAME_SIZE
 40

	)

154 
	#B0_HNAME_SIZE
 40

	)

160 
	#B0_MAGIC_LONG
 0x30313233

	)

161 
	#B0_MAGIC_INT
 0x20212223

	)

162 
	#B0_MAGIC_SHORT
 0x10111213

	)

163 
	#B0_MAGIC_CHAR
 0x55

	)

178 
	sblock0


180 
ch¨_u
 
	mb0_id
[2];

181 
ch¨_u
 
	mb0_vîsi⁄
[10];

182 
ch¨_u
 
	mb0_∑ge_size
[4];

183 
ch¨_u
 
	mb0_mtime
[4];

184 
ch¨_u
 
	mb0_öo
[4];

185 
ch¨_u
 
	mb0_pid
[4];

186 
ch¨_u
 
	mb0_u«me
[
B0_UNAME_SIZE
];

187 
ch¨_u
 
	mb0_h«me
[
B0_HNAME_SIZE
];

188 
ch¨_u
 
	mb0_‚ame
[
B0_FNAME_SIZE
];

189 
	mb0_magic_l⁄g
;

190 
	mb0_magic_öt
;

191 
	mb0_magic_sh‹t
;

192 
ch¨_u
 
	mb0_magic_ch¨
;

195 
	#STACK_INCR
 5

	)

203 
löír_t
 
	glowe°_m¨ked
 = 0;

208 
	#ML_DELETE
 0x11

	)

209 
	#ML_INSERT
 0x12

	)

210 
	#ML_FIND
 0x13

	)

211 
	#ML_FLUSH
 0x02

	)

212 
	#ML_SIMPLE
(
x
Ë(x & 0x10Ë

	)

214 
ml_›í_fûe
 
__ARGS
((
BUF
 *));

215 
£t_b0_‚ame
 
__ARGS
((
ZERO_BL
 *, 
BUF
 *
buf
));

216 
sw≠fûe_öfo
 
__ARGS
((
ch¨_u
 *));

217 
gë_«mes
 
__ARGS
((
ch¨_u
 **, char_u *));

218 
ml_≠≥nd_öt
 
__ARGS
((
BUF
 *, 
löír_t
, 
ch¨_u
 *, 
cﬁƒ_t
, ));

219 
ml_dñëe_öt
 
__ARGS
((
BUF
 *, 
löír_t
, ));

220 
ch¨_u
 *
födsw≠«me
 
__ARGS
((
BUF
 *, char_u **, char_u *));

221 
ml_Êush_löe
 
__ARGS
((
BUF
 *));

222 
BHDR
 *
ml_√w_d©a
 
__ARGS
((
MEMFILE
 *, , ));

223 
BHDR
 *
ml_√w_±r
 
__ARGS
((
MEMFILE
 *));

224 
BHDR
 *
ml_föd_löe
 
__ARGS
((
BUF
 *, 
löír_t
, ));

225 
ml_add_°ack
 
__ARGS
((
BUF
 *));

226 
ch¨_u
 *
makesw≠«me
 
__ARGS
((
BUF
 *, char_u *));

227 
ml_löódd
 
__ARGS
((
BUF
 *, ));

228 
b0_magic_wr⁄g
 
__ARGS
((
ZERO_BL
 *));

229 #ifde‡
CHECK_INODE


230 
‚amecmp_öo
 
__ARGS
((
ch¨_u
 *, char_u *, ));

232 
l⁄g_to_ch¨
 
__ARGS
((, 
ch¨_u
 *));

233 
ch¨_to_l⁄g
 
__ARGS
((
ch¨_u
 *));

241 
	$ml_›í
()

243 
MEMFILE
 *
mÂ
;

244 
ch¨_u
 *
‚ame
;

245 
BHDR
 *
hp
 = 
NULL
;

246 
ZERO_BL
 *
b0p
;

247 
PTR_BL
 *
µ
;

248 
DATA_BL
 *
dp
;

249 
ch¨_u
 *
dúp
;

254 
curbuf
->
b_ml
.
ml_°ack_size
 = 0;

255 
curbuf
->
b_ml
.
ml_°ack
 = 
NULL
;

256 
curbuf
->
b_ml
.
ml_°ack_t›
 = 0;

257 
curbuf
->
b_ml
.
ml_locked
 = 
NULL
;

258 
curbuf
->
b_ml
.
ml_löe_ um
 = 0;

267 #i‡
	`deföed
(
UNIX
Ë|| deföed(
__EMX__
)

269 i‡(
p_uc
 =0 || 
curbuf
->
b_hñp
)

271 i‡(
p_uc
 == 0)

273 
dúp
 = (
ch¨_u
 *)"";

275 
dúp
 = 
p_dú
;

286 i‡(*
dúp
 =
NUL
)

287 
‚ame
 = 
NULL
;

290 
‚ame
 = 
	`födsw≠«me
(
curbuf
, &
dúp
, 
NULL
);

291 i‡(
‚ame
 =
NULL
)

294 
mÂ
 = 
	`mf_›í
(
‚ame
, 
TRUE
);

296 i‡(
mÂ
 !
NULL
 || (
‚ame
 =NULL && *
dúp
 =
NUL
))

298 
	`vim_‰ì
(
‚ame
);

301 i‡(
mÂ
 =
NULL
)

302 
îr‹
;

303 
curbuf
->
b_ml
.
ml_mÂ
 = 
mÂ
;

304 
curbuf
->
b_ml
.
ml_Êags
 = 
ML_EMPTY
;

305 
curbuf
->
b_ml
.
ml_löe_cou¡
 = 1;

307 i‡(!(
p_uc
 =0 || 
curbuf
->
b_hñp
Ë&& 
mÂ
->
mf_‚ame
 =
NULL
)

309 
√ed_waô_ªtu∫
 = 
TRUE
;

310 ++
no_waô_ªtu∫
;

311 ()
	`EMSG
("UnableÅo open swap file,Ñecovery impossible");

312 --
no_waô_ªtu∫
;

314 #i‡
	`deföed
(
MSDOS
Ë|| deföed(
WIN32
)

319 
	`mf_fuŒ«me
(
mÂ
);

325 i‡((
hp
 = 
	`mf_√w
(
mÂ
, 
FALSE
, 1)Ë=
NULL
)

326 
îr‹
;

327 i‡(
hp
->
bh_bnum
 != 0)

329 
	`EMSG
("didn't get blockÇr 0?");

330 
îr‹
;

332 
b0p
 = (
ZERO_BL
 *)(
hp
->
bh_d©a
);

334 ()
	`vim_mem£t
(
b0p
, 0, (
ZERO_BL
));

336 
b0p
->
b0_id
[0] = 
BLOCK0_ID0
;

337 
b0p
->
b0_id
[1] = 
BLOCK0_ID1
;

338 
b0p
->
b0_magic_l⁄g
 = ()
B0_MAGIC_LONG
;

339 
b0p
->
b0_magic_öt
 = ()
B0_MAGIC_INT
;

340 
b0p
->
b0_magic_sh‹t
 = ()
B0_MAGIC_SHORT
;

341 
b0p
->
b0_magic_ch¨
 = 
B0_MAGIC_CHAR
;

343 
	`STRNCPY
(
b0p
->
b0_vîsi⁄
, 
Vîsi⁄
, 10);

344 
	`£t_b0_‚ame
(
b0p
, 
curbuf
);

345 
	`l⁄g_to_ch¨
(()
mÂ
->
mf_∑ge_size
, 
b0p
->
b0_∑ge_size
);

346 ()
	`mch_gë_u£r_«me
(
b0p
->
b0_u«me
, 
B0_UNAME_SIZE
);

347 
b0p
->
b0_u«me
[
B0_UNAME_SIZE
 - 1] = 
NUL
;

348 
	`mch_gë_ho°_«me
(
b0p
->
b0_h«me
, 
B0_HNAME_SIZE
);

349 
b0p
->
b0_h«me
[
B0_HNAME_SIZE
 - 1] = 
NUL
;

350 
	`l⁄g_to_ch¨
(
	`mch_gë_pid
(), 
b0p
->
b0_pid
);

356 
	`mf_put
(
mÂ
, 
hp
, 
TRUE
, 
FALSE
);

357 i‡(!
curbuf
->
b_hñp
)

358 
	`mf_sync
(
mÂ
, 
FALSE
, FALSE, FALSE);

363 i‡((
hp
 = 
	`ml_√w_±r
(
mÂ
)Ë=
NULL
)

364 
îr‹
;

365 i‡(
hp
->
bh_bnum
 != 1)

367 
	`EMSG
("didn't get blockÇr 1?");

368 
îr‹
;

370 
µ
 = (
PTR_BL
 *)(
hp
->
bh_d©a
);

371 
µ
->
pb_cou¡
 = 1;

372 
µ
->
pb_poöãr
[0].
≥_bnum
 = 2;

373 
µ
->
pb_poöãr
[0].
≥_∑ge_cou¡
 = 1;

374 
µ
->
pb_poöãr
[0].
≥_ﬁd_ um
 = 1;

375 
µ
->
pb_poöãr
[0].
≥_löe_cou¡
 = 1;

376 
	`mf_put
(
mÂ
, 
hp
, 
TRUE
, 
FALSE
);

381 i‡((
hp
 = 
	`ml_√w_d©a
(
mÂ
, 
FALSE
, 1)Ë=
NULL
)

382 
îr‹
;

383 i‡(
hp
->
bh_bnum
 != 2)

385 
	`EMSG
("didn't get blockÇr 2?");

386 
îr‹
;

389 
dp
 = (
DATA_BL
 *)(
hp
->
bh_d©a
);

390 
dp
->
db_ödex
[0] = --dp->
db_txt_°¨t
;

391 
dp
->
db_‰ì
 -1 + 
INDEX_SIZE
;

392 
dp
->
db_löe_cou¡
 = 1;

393 *((
ch¨_u
 *)
dp
 + dp->
db_txt_°¨t
Ë
NUL
;

395  
OK
;

397 
îr‹
:

398 i‡(
mÂ
 !
NULL
)

400 i‡(
hp
)

401 
	`mf_put
(
mÂ
, 
hp
, 
FALSE
, FALSE);

402 
	`mf_˛o£
(
mÂ
, 
TRUE
);

405 
	`vim_‰ì
(
‚ame
);

406 
curbuf
->
b_ml
.
ml_mÂ
 = 
NULL
;

407  
FAIL
;

408 
	}
}

415 
	$ml_£äame
()

417 
suc˚ss
 = 
FALSE
;

418 
MEMFILE
 *
mÂ
;

419 
ch¨_u
 *
‚ame
;

420 
ch¨_u
 *
dúp
;

426 i‡(
p_uc
 == 0)

429 
mÂ
 = 
curbuf
->
b_ml
.
ml_mÂ
;

430 i‡(
mÂ
->
mf_fd
 < 0)

432 
	`ml_›í_fûe
(
curbuf
);

439 
dúp
 = 
p_dú
;

442 i‡(*
dúp
 =
NUL
)

444 
‚ame
 = 
	`födsw≠«me
(
curbuf
, &
dúp
, 
mÂ
->
mf_‚ame
);

445 i‡(
‚ame
 =
NULL
)

448 #i‡
	`deföed
(
MSDOS
Ë|| deföed(
WIN32
)

453 i‡(!
did_cd
)

455 
ch¨_u
 *
p
;

457 
p
 = 
	`FuŒName_ßve
(
‚ame
);

458 
	`vim_‰ì
(
‚ame
);

459 
‚ame
 = 
p
;

460 i‡(
‚ame
 =
NULL
)

465 i‡(
	`‚amecmp
(
‚ame
, 
mÂ
->
mf_‚ame
) == 0)

467 
	`vim_‰ì
(
‚ame
);

468 
suc˚ss
 = 
TRUE
;

472 i‡(
mÂ
->
mf_fd
 >= 0)

474 
	`˛o£
(
mÂ
->
mf_fd
);

475 
mÂ
->
mf_fd
 = -1;

479 i‡(
	`vim_ª«me
(
mÂ
->
mf_‚ame
, 
‚ame
) == 0)

481 
suc˚ss
 = 
TRUE
;

482 
	`vim_‰ì
(
mÂ
->
mf_‚ame
);

483 
mÂ
->
mf_‚ame
 = 
‚ame
;

484 
	`vim_‰ì
(
mÂ
->
mf_x‚ame
);

485 
	`mf_£t_x‚ame
(
mÂ
);

488 
	`vim_‰ì
(
‚ame
);

491 i‡(
mÂ
->
mf_fd
 == -1)

493 
mÂ
->
mf_fd
 = 
	`›í
((*)mÂ->
mf_‚ame
, 
O_RDWR
 | 
O_EXTRA
);

494 i‡(
mÂ
->
mf_fd
 < 0)

497 
	`EMSG
("Oops,ÜostÅhe swap file!!!");

501 i‡(!
suc˚ss
)

502 
	`EMSG
("CouldÇotÑename swap file");

503 
	}
}

510 
	$ml_›í_fûes
()

512 
BUF
 *
buf
;

514 
buf
 = 
fú°buf
; bu‡!
NULL
; bu‡buf->
b_√xt
)

515 
	`ml_›í_fûe
(
buf
);

516 
	}
}

522 
	$ml_›í_fûe
(
buf
)

523 
BUF
 *
buf
;

525 
MEMFILE
 *
mÂ
;

526 
ch¨_u
 *
‚ame
;

527 
ch¨_u
 *
dúp
;

529 
mÂ
 = 
buf
->
b_ml
.
ml_mÂ
;

530 i‡(
mÂ
 =
NULL
 || mÂ->
mf_fd
 >= 0)

533 
dúp
 = 
p_dú
;

539 i‡(*
dúp
 =
NUL
)

541 
‚ame
 = 
	`födsw≠«me
(
buf
, &
dúp
, 
NULL
);

542 i‡(
‚ame
 =
NULL
)

544 i‡(
	`mf_›í_fûe
(
mÂ
, 
‚ame
Ë=
OK
)

546 
	`vim_‰ì
(
‚ame
);

549 i‡(
mÂ
->
mf_‚ame
 =
NULL
)

551 
√ed_waô_ªtu∫
 = 
TRUE
;

552 ++
no_waô_ªtu∫
;

553 ()
	`EMSG2
("UnableÅo open swap file for \"%s\",Ñecovery impossible",

554 
buf
->
b_xfûíame
 =
NULL
 ? (
ch¨_u
 *)"No File"

555 : 
buf
->
b_xfûíame
);

556 --
no_waô_ªtu∫
;

558 #i‡
	`deföed
(
MSDOS
Ë|| deföed(
WIN32
)

564 
	`mf_fuŒ«me
(
mÂ
);

566 
	}
}

573 
	$ml_˛o£
(
buf
, 
dñ_fûe
)

574 
BUF
 *
buf
;

575 
dñ_fûe
;

577 i‡(
buf
->
b_ml
.
ml_mÂ
 =
NULL
)

579 
	`mf_˛o£
(
buf
->
b_ml
.
ml_mÂ
, 
dñ_fûe
);

580 i‡(
buf
->
b_ml
.
ml_löe_ um
 !0 && (buf->b_ml.
ml_Êags
 & 
ML_LINE_DIRTY
))

581 
	`vim_‰ì
(
buf
->
b_ml
.
ml_löe_±r
);

582 
	`vim_‰ì
(
buf
->
b_ml
.
ml_°ack
);

583 
buf
->
b_ml
.
ml_mÂ
 = 
NULL
;

584 
	}
}

592 
	$ml_˛o£_Æl
(
dñ_fûe
)

593 
dñ_fûe
;

595 
BUF
 *
buf
;

597 
buf
 = 
fú°buf
; bu‡!
NULL
; bu‡buf->
b_√xt
)

598 
	`ml_˛o£
(
buf
, 
dñ_fûe
);

599 
	}
}

606 
	$ml_˛o£_nŸmod
()

608 
BUF
 *
buf
;

610 
buf
 = 
fú°buf
; bu‡!
NULL
; bu‡buf->
b_√xt
)

611 i‡(!
buf
->
b_ch™ged
)

612 
	`ml_˛o£
(
buf
, 
TRUE
);

613 
	}
}

620 
	$ml_time°amp
(
buf
)

621 
BUF
 *
buf
;

623 
MEMFILE
 *
mÂ
;

624 
BHDR
 *
hp
;

625 
ZERO_BL
 *
b0p
;

627 
mÂ
 = 
buf
->
b_ml
.
ml_mÂ
;

629 i‡(
mÂ
 =
NULL
 || (
hp
 = 
	`mf_gë
(mÂ, (
blockƒ_t
)0, 1)) == NULL)

631 
b0p
 = (
ZERO_BL
 *)(
hp
->
bh_d©a
);

632 i‡(
b0p
->
b0_id
[0] !
BLOCK0_ID0
 || b0p->b0_id[1] !
BLOCK0_ID1
)

633 
	`EMSG
("ml_timestamp: Didn't get block 0??");

635 
	`£t_b0_‚ame
(
b0p
, 
buf
);

636 
	`mf_put
(
mÂ
, 
hp
, 
TRUE
, 
FALSE
);

637 
	}
}

645 
	$£t_b0_‚ame
(
b0p
, 
buf
)

646 
ZERO_BL
 *
b0p
;

647 
BUF
 *
buf
;

649 
°©
 
°
;

650 
size_t
 
Êí
, 
uÀn
;

651 
ch¨_u
 
u«me
[
B0_UNAME_SIZE
];

653 i‡(
buf
->
b_fûíame
 =
NULL
)

654 
b0p
->
b0_‚ame
[0] = 
NUL
;

664 
	`home_ª∂a˚
(
NULL
, 
buf
->
b_fûíame
, 
b0p
->
b0_‚ame
, 
B0_FNAME_SIZE
);

665 i‡(
b0p
->
b0_‚ame
[0] == '~')

667 
Êí
 = 
	`STRLEN
(
b0p
->
b0_‚ame
);

669 i‡(
	`mch_gë_u£r_«me
(
u«me
, 
B0_UNAME_SIZE
Ë=
FAIL
 ||

670 (
uÀn
 = 
	`STRLEN
(
u«me
)Ë+ 
Êí
 > 
B0_FNAME_SIZE
 - 1)

671 
	`STRNCPY
(
b0p
->
b0_‚ame
, 
buf
->
b_fûíame
, 
B0_FNAME_SIZE
);

674 
	`vim_memmove
(
b0p
->
b0_‚ame
 + 
uÀn
 + 1, b0p->b0_‚amê+ 1, 
Êí
);

675 
	`vim_memmove
(
b0p
->
b0_‚ame
 + 1, 
u«me
, 
uÀn
);

678 i‡(
	`°©
((*)
buf
->
b_fûíame
, &
°
) >= 0)

680 
	`l⁄g_to_ch¨
(()
°
.
°_mtime
, 
b0p
->
b0_mtime
);

681 #ifde‡
CHECK_INODE


682 
	`l⁄g_to_ch¨
(()
°
.
°_öo
, 
b0p
->
b0_öo
);

684 
buf
->
b_mtime
 = 
°
.
°_mtime
;

685 
buf
->
b_mtime_ªad
 = 
°
.
°_mtime
;

689 
	`l⁄g_to_ch¨
(0L, 
b0p
->
b0_mtime
);

690 #ifde‡
CHECK_INODE


691 
	`l⁄g_to_ch¨
(0L, 
b0p
->
b0_öo
);

693 
buf
->
b_mtime
 = 0;

694 
buf
->
b_mtime_ªad
 = 0;

697 
	}
}

703 
	$ml_ªcovî
()

705 
BUF
 *
buf
 = 
NULL
;

706 
MEMFILE
 *
mÂ
 = 
NULL
;

707 
ch¨_u
 *
‚ame
;

708 
BHDR
 *
hp
 = 
NULL
;

709 
ZERO_BL
 *
b0p
;

710 
PTR_BL
 *
µ
;

711 
DATA_BL
 *
dp
;

712 
IPTR
 *
ù
;

713 
blockƒ_t
 
bnum
;

714 
∑ge_cou¡
;

715 
°©
 
‹g_°©
, 
swp_°©
;

716 
Àn
;

717 
dúe˘ly
;

718 
löír_t
 
 um
;

719 
ch¨_u
 *
p
;

720 
i
;

721 
îr‹
;

722 
ˇ¬Ÿ_›í
;

723 
löír_t
 
löe_cou¡
;

724 
has_îr‹
;

725 
idx
;

726 
t›
;

727 
txt_°¨t
;

728 
size
;

729 
ˇŒed_‰om_maö
;

730 
£rious_îr‹
 = 
TRUE
;

731 
mtime
;

733 
ˇŒed_‰om_maö
 = (
curbuf
->
b_ml
.
ml_mÂ
 =
NULL
);

738 
‚ame
 = 
curbuf
->
b_xfûíame
;

739 i‡(
‚ame
 =
NULL
)

740 
‚ame
 = (
ch¨_u
 *)"";

741 
Àn
 = 
	`STRLEN
(
‚ame
);

742 i‡(
Àn
 >4 && 
	`vim_°∫icmp
(
‚ame
 +Üen - 4,

743 (
ch¨_u
 *)".sw", (
size_t
)3) == 0)

745 
dúe˘ly
 = 
TRUE
;

746 
‚ame
 = 
	`°rßve
(fname);

750 
dúe˘ly
 = 
FALSE
;

753 
Àn
 = 
	`ªcovî_«mes
(&
‚ame
, 
FALSE
, 0);

754 i‡(
Àn
 == 0)

756 
	`EMSG2
("Nÿsw≠ fûêfound f‹ %s", 
‚ame
);

757 
‚ame
 = 
NULL
;

758 
thìnd
;

760 i‡(
Àn
 == 1)

761 
i
 = 1;

765 ()
	`ªcovî_«mes
(&
‚ame
, 
TRUE
, 0);

766 
	`msg_outch¨
('\n');

767 
	`MSG_OUTSTR
("EnterÇumber of swap fileÅo use (0Åo quit): ");

768 
i
 = 
	`gë_numbî
();

769 i‡(
i
 < 1 || i > 
Àn
)

771 
‚ame
 = 
NULL
;

772 
thìnd
;

776 ()
	`ªcovî_«mes
(&
‚ame
, 
FALSE
, 
i
);

778 i‡(
‚ame
 =
NULL
)

779 
thìnd
;

782 i‡(
ˇŒed_‰om_maö
 && 
	`ml_›í
(Ë=
FAIL
)

783 
	`gëout
(1);

788 
buf
 = (
BUF
 *)
	`Æloc
(()(BUF));

789 i‡(
buf
 =
NULL
)

790 
thìnd
;

795 
buf
->
b_ml
.
ml_°ack_size
 = 0;

796 
buf
->
b_ml
.
ml_°ack
 = 
NULL
;

797 
buf
->
b_ml
.
ml_°ack_t›
 = 0;

798 
buf
->
b_ml
.
ml_löe_ um
 = 0;

799 
buf
->
b_ml
.
ml_locked
 = 
NULL
;

800 
buf
->
b_ml
.
ml_Êags
 = 0;

805 
mÂ
 = 
	`mf_›í
(
‚ame
, 
FALSE
);

806 i‡(
mÂ
 =
NULL
 || mÂ->
mf_fd
 < 0)

808 
	`EMSG2
("C™nŸ o≥¿%s", 
‚ame
);

809 
thìnd
;

811 
buf
->
b_ml
.
ml_mÂ
 = 
mÂ
;

812 #i‡
	`deföed
(
MSDOS
Ë|| deföed(
WIN32
)

818 
	`mf_fuŒ«me
(
mÂ
);

824 i‡((
hp
 = 
	`mf_gë
(
mÂ
, (
blockƒ_t
)0, 1)Ë=
NULL
)

826 
	`msg_°¨t
();

827 
	`MSG_OUTSTR
("UnableÅoÑead block 0 from ");

828 
	`msg_ouâøns
(
mÂ
->
mf_‚ame
);

829 
	`MSG_OUTSTR
("\nMaybeÇo changes were made or Vim didÇot updateÅhe swap file");

830 
	`msg_íd
();

831 
thìnd
;

833 
b0p
 = (
ZERO_BL
 *)(
hp
->
bh_d©a
);

834 i‡(
b0p
->
b0_id
[0] !
BLOCK0_ID0
 || b0p->b0_id[1] !
BLOCK0_ID1
)

836 
	`EMSG2
("%†i†nŸá sw≠ fûe", 
mÂ
->
mf_‚ame
);

837 
thìnd
;

839 i‡(
	`b0_magic_wr⁄g
(
b0p
))

841 
	`msg_°¨t
();

842 
	`MSG_OUTSTR
("The file ");

843 
	`msg_ouâøns
(
mÂ
->
mf_‚ame
);

844 #i‡
	`deföed
(
MSDOS
Ë|| deföed(
WIN32
)

845 i‡(
	`STRNCMP
(
b0p
->
b0_h«me
, "PC ", 3) == 0)

846 
	`MSG_OUTSTR
(" cannot be used withÅhis version of Vim.\n");

849 
	`MSG_OUTSTR
(" cannot be used onÅhis computer.\n");

850 
	`MSG_OUTSTR
("The file was created on ");

852 
b0p
->
b0_‚ame
[0] = 
NUL
;

853 
	`MSG_OUTSTR
(
b0p
->
b0_h«me
);

854 
	`MSG_OUTSTR
(",\norÅhe file has been damaged.");

855 
	`msg_íd
();

856 
thìnd
;

862 i‡(
mÂ
->
mf_∑ge_size
 !()
	`ch¨_to_l⁄g
(
b0p
->
b0_∑ge_size
))

864 
mÂ
->
mf_∑ge_size
 = ()
	`ch¨_to_l⁄g
(
b0p
->
b0_∑ge_size
);

865 i‡((
size
 = 
	`l£ek
(
mÂ
->
mf_fd
, 0L, 
SEEK_END
)) <= 0)

866 
mÂ
->
mf_blockƒ_max
 = 0;

868 
mÂ
->
mf_blockƒ_max
 = 
size
 / mÂ->
mf_∑ge_size
;

869 
mÂ
->
mf_öfûe_cou¡
 = mÂ->
mf_blockƒ_max
;

875 i‡(
dúe˘ly
)

877 
	`ex∑nd_ív
(
b0p
->
b0_‚ame
, 
NameBuff
, 
MAXPATHL
);

878 i‡(
	`£t‚ame
(
NameBuff
, 
NULL
, 
TRUE
Ë=
FAIL
)

879 
thìnd
;

882 
	`home_ª∂a˚
(
NULL
, 
mÂ
->
mf_‚ame
, 
NameBuff
, 
MAXPATHL
);

883 
	`smsg
((
ch¨_u
 *)"Usög sw≠ fûê\"%s\"", 
NameBuff
);

885 i‡(
curbuf
->
b_fûíame
 =
NULL
)

886 
	`STRCPY
(
NameBuff
, "No File");

888 
	`home_ª∂a˚
(
NULL
, 
curbuf
->
b_fûíame
, 
NameBuff
, 
MAXPATHL
);

889 
	`smsg
((
ch¨_u
 *)"OrigöÆ fûê\"%s\"", 
NameBuff
);

890 
	`msg_outch¨
((
ch¨_u
)'\n');

895 
mtime
 = 
	`ch¨_to_l⁄g
(
b0p
->
b0_mtime
);

896 i‡(
curbuf
->
b_fûíame
 !
NULL
 &&

897 
	`°©
((*)
curbuf
->
b_fûíame
, &
‹g_°©
) != -1 &&

898 ((
	`°©
((*)
mÂ
->
mf_‚ame
, &
swp_°©
) != -1 &&

899 
‹g_°©
.
°_mtime
 > 
swp_°©
.st_mtime) ||

900 
‹g_°©
.
°_mtime
 !
mtime
))

902 
	`EMSG
("Warning: Original file may have been changed");

904 
	`Êushbuf
();

905 
	`mf_put
(
mÂ
, 
hp
, 
FALSE
, FALSE);

906 
hp
 = 
NULL
;

912 !(
curbuf
->
b_ml
.
ml_Êags
 & 
ML_EMPTY
))

913 
	`ml_dñëe
((
löír_t
)1, 
FALSE
);

915 
bnum
 = 1;

916 
∑ge_cou¡
 = 1;

917 
 um
 = 0;

918 
löe_cou¡
 = 0;

919 
idx
 = 0;

920 
îr‹
 = 0;

921 
buf
->
b_ml
.
ml_°ack_t›
 = 0;

922 
buf
->
b_ml
.
ml_°ack
 = 
NULL
;

923 
buf
->
b_ml
.
ml_°ack_size
 = 0;

925 i‡(
curbuf
->
b_fûíame
 =
NULL
)

926 
ˇ¬Ÿ_›í
 = 
TRUE
;

928 
ˇ¬Ÿ_›í
 = 
FALSE
;

930 
£rious_îr‹
 = 
FALSE
;

931  ; !
gŸ_öt
; 
	`löe_bªakcheck
())

933 i‡(
hp
 !
NULL
)

934 
	`mf_put
(
mÂ
, 
hp
, 
FALSE
, FALSE);

939 i‡((
hp
 = 
	`mf_gë
(
mÂ
, (
blockƒ_t
)
bnum
, 
∑ge_cou¡
)Ë=
NULL
)

941 i‡(
bnum
 == 1)

943 
	`EMSG2
("U«bÀÅÿªad block 1 from %s", 
mÂ
->
mf_‚ame
);

944 
thìnd
;

946 ++
îr‹
;

947 
	`ml_≠≥nd
(
 um
++, (
ch¨_u
 *)"???MANY LINES MISSING", (
cﬁƒ_t
)0, 
TRUE
);

951 
µ
 = (
PTR_BL
 *)(
hp
->
bh_d©a
);

952 i‡(
µ
->
pb_id
 =
PTR_ID
)

955 i‡(
idx
 =0 && 
löe_cou¡
 != 0)

957 
i
 = 0; i < ()
µ
->
pb_cou¡
; ++i)

958 
löe_cou¡
 -
µ
->
pb_poöãr
[
i
].
≥_löe_cou¡
;

959 i‡(
löe_cou¡
 != 0)

961 ++
îr‹
;

962 
	`ml_≠≥nd
(
 um
++, (
ch¨_u
 *)"???LINE COUNT WRONG", (
cﬁƒ_t
)0, 
TRUE
);

966 i‡(
µ
->
pb_cou¡
 == 0)

968 
	`ml_≠≥nd
(
 um
++, (
ch¨_u
 *)"???EMPTY BLOCK", (
cﬁƒ_t
)0, 
TRUE
);

969 ++
îr‹
;

971 i‡(
idx
 < ()
µ
->
pb_cou¡
)

973 i‡(
µ
->
pb_poöãr
[
idx
].
≥_bnum
 < 0)

980 i‡(!
ˇ¬Ÿ_›í
)

982 
löe_cou¡
 = 
µ
->
pb_poöãr
[
idx
].
≥_löe_cou¡
;

983 i‡(
	`ªadfûe
(
curbuf
->
b_fûíame
, 
NULL
, 
 um
, 
FALSE
,

984 
µ
->
pb_poöãr
[
idx
].
≥_ﬁd_ um
 - 1,

985 
löe_cou¡
, 
FALSE
Ë=
FAIL
)

986 
ˇ¬Ÿ_›í
 = 
TRUE
;

988 
 um
 +
löe_cou¡
;

990 i‡(
ˇ¬Ÿ_›í
)

992 ++
îr‹
;

993 
	`ml_≠≥nd
(
 um
++, (
ch¨_u
 *)"???LINES MISSING", (
cﬁƒ_t
)0, 
TRUE
);

995 ++
idx
;

1002 i‡((
t›
 = 
	`ml_add_°ack
(
buf
)) < 0)

1004 ++
îr‹
;

1007 
ù
 = &(
buf
->
b_ml
.
ml_°ack
[
t›
]);

1008 
ù
->
ù_bnum
 = 
bnum
;

1009 
ù
->
ù_ödex
 = 
idx
;

1011 
bnum
 = 
µ
->
pb_poöãr
[
idx
].
≥_bnum
;

1012 
löe_cou¡
 = 
µ
->
pb_poöãr
[
idx
].
≥_löe_cou¡
;

1013 
∑ge_cou¡
 = 
µ
->
pb_poöãr
[
idx
].
≥_∑ge_cou¡
;

1019 
dp
 = (
DATA_BL
 *)(
hp
->
bh_d©a
);

1020 i‡(
dp
->
db_id
 !
DATA_ID
)

1022 i‡(
bnum
 == 1)

1024 
	`EMSG2
("Block 1 ID wrong (%sÇotá .swp file?)",

1025 
mÂ
->
mf_‚ame
);

1026 
thìnd
;

1028 ++
îr‹
;

1029 
	`ml_≠≥nd
(
 um
++, (
ch¨_u
 *)"???BLOCK MISSING", (
cﬁƒ_t
)0, 
TRUE
);

1037 
has_îr‹
 = 
FALSE
;

1042 i‡(
∑ge_cou¡
 * 
mÂ
->
mf_∑ge_size
 !
dp
->
db_txt_íd
)

1044 
	`ml_≠≥nd
(
 um
++, (
ch¨_u
 *)"??? from hîêu¡û ???ENDÜöe†may bêmes£d up", (
cﬁƒ_t
)0, 
TRUE
);

1045 ++
îr‹
;

1046 
has_îr‹
 = 
TRUE
;

1047 
dp
->
db_txt_íd
 = 
∑ge_cou¡
 * 
mÂ
->
mf_∑ge_size
;

1051 *((
ch¨_u
 *)
dp
 + dp->
db_txt_íd
 - 1Ë
NUL
;

1057 i‡(
löe_cou¡
 !
dp
->
db_löe_cou¡
)

1059 
	`ml_≠≥nd
(
 um
++, (
ch¨_u
 *)"??? from hîêu¡û ???ENDÜöe†may havêbì¿ö£πed/dñëed", (
cﬁƒ_t
)0, 
TRUE
);

1060 ++
îr‹
;

1061 
has_îr‹
 = 
TRUE
;

1064 
i
 = 0; i < 
dp
->
db_löe_cou¡
; ++i)

1066 
txt_°¨t
 = (
dp
->
db_ödex
[
i
] & 
DB_INDEX_MASK
);

1067 i‡(
txt_°¨t
 <
HEADER_SIZE
 ||Åxt_°¨à>()
dp
->
db_txt_íd
)

1069 
p
 = (
ch¨_u
 *)"???";

1070 ++
îr‹
;

1073 
p
 = (
ch¨_u
 *)
dp
 + 
txt_°¨t
;

1074 
	`ml_≠≥nd
(
 um
++, 
p
, (
cﬁƒ_t
)0, 
TRUE
);

1076 i‡(
has_îr‹
)

1077 
	`ml_≠≥nd
(
 um
++, (
ch¨_u
 *)"???END", (
cﬁƒ_t
)0, 
TRUE
);

1082 i‡(
buf
->
b_ml
.
ml_°ack_t›
 == 0)

1088 
ù
 = &(
buf
->
b_ml
.
ml_°ack
[--(buf->b_ml.
ml_°ack_t›
)]);

1089 
bnum
 = 
ù
->
ù_bnum
;

1090 
idx
 = 
ù
->
ù_ödex
 + 1;

1091 
∑ge_cou¡
 = 1;

1098 
	`ml_dñëe
(
curbuf
->
b_ml
.
ml_löe_cou¡
, 
FALSE
);

1100 
ªcovîymode
 = 
FALSE
;

1101 i‡(
gŸ_öt
)

1102 
	`EMSG
("Recovery Interrupted");

1103 i‡(
îr‹
)

1104 
	`EMSG
("Errors detected whileÑecovering;Üook forÜines starting with ???");

1107 
	`MSG
("Recovery completed. You should check ifÉverything is OK.");

1108 
	`MSG_OUTSTR
("\n(You might wantÅo write outÅhis file underánotherÇame\n");

1109 
	`MSG_OUTSTR
("andÑun diff withÅhe original fileÅo check for changes)\n");

1110 
	`MSG_OUTSTR
("DeleteÅhe .swp fileáfterwards.\n\n");

1111 
cmdlöe_row
 = 
msg_row
;

1114 
thìnd
:

1115 i‡(
mÂ
 !
NULL
)

1117 i‡(
hp
 !
NULL
)

1118 
	`mf_put
(
mÂ
, 
hp
, 
FALSE
, FALSE);

1119 
	`mf_˛o£
(
mÂ
, 
FALSE
);

1122 
	`vim_‰ì
(
‚ame
);

1123 
	`vim_‰ì
(
buf
);

1124 i‡(
£rious_îr‹
 && 
ˇŒed_‰om_maö
)

1125 
	`ml_˛o£
(
curbuf
, 
TRUE
);

1127 
	}
}

1140 
	$ªcovî_«mes
(
‚ame
, 
li°
, 
ƒ
)

1141 
ch¨_u
 **
‚ame
;

1142 
li°
;

1143 
ƒ
;

1145 
num_«mes
;

1146 
ch¨_u
 *(
«mes
[6]);

1147 
ch¨_u
 *
èû
;

1148 
ch¨_u
 *
p
;

1149 
num_fûes
;

1150 
fûe_cou¡
 = 0;

1151 
ch¨_u
 **
fûes
;

1152 
i
;

1153 
ch¨_u
 *
dúp
;

1154 
ch¨_u
 *
dú_«me
;

1156 i‡(
li°
)

1159 
	`msg
((
ch¨_u
 *)"Swap files found:");

1160 
	`msg_outch¨
('\n');

1162 
ex∑nd_öãø˘ivñy
 = 
TRUE
;

1166 
dúp
 = 
p_dú
;

1167 *
dúp
)

1170 
dú_«me
 = 
dúp
;

1171 *
dúp
 && *dirp != ',')

1172 ++
dúp
;

1173 
dú_«me
 = 
	`°∫ßve
(dú_«me, ()(
dúp
 - dir_name));

1174 i‡(
dú_«me
 =
NULL
)

1176 i‡(*
dú_«me
 == '.')

1178 i‡(
‚ame
 =
NULL
 || *fname == NULL)

1180 
«mes
[0] = 
	`°rßve
((
ch¨_u
 *)"*.sw?");

1181 #ifde‡
UNIX


1183 
«mes
[1] = 
	`°rßve
((
ch¨_u
 *)".*.sw?");

1184 
«mes
[2] = 
	`°rßve
((
ch¨_u
 *)".sw?");

1185 
num_«mes
 = 3;

1187 
num_«mes
 = 1;

1191 
num_«mes
 = 
	`gë_«mes
(
«mes
, *
‚ame
);

1195 i‡(
‚ame
 =
NULL
 || *fname == NULL)

1197 
«mes
[0] = 
	`c⁄ˇt_‚ames
(
dú_«me
, (
ch¨_u
 *)"*.sw?", 
TRUE
);

1198 #ifde‡
UNIX


1200 
«mes
[1] = 
	`c⁄ˇt_‚ames
(
dú_«me
, (
ch¨_u
 *)".*.sw?", 
TRUE
);

1201 
«mes
[2] = 
	`c⁄ˇt_‚ames
(
dú_«me
, (
ch¨_u
 *)".sw?", 
TRUE
);

1202 
num_«mes
 = 3;

1204 
num_«mes
 = 1;

1209 
èû
 = 
	`gëèû
(*
‚ame
);

1210 
èû
 = 
	`c⁄ˇt_‚ames
(
dú_«me
,Åaû, 
TRUE
);

1211 i‡(
èû
 =
NULL
)

1212 
num_«mes
 = 0;

1215 
num_«mes
 = 
	`gë_«mes
(
«mes
, 
èû
);

1216 
	`vim_‰ì
(
èû
);

1222 
i
 = 0; i < 
num_«mes
; ++i)

1224 i‡(
«mes
[
i
] =
NULL
)

1226 
i
 = 0; i < 
num_«mes
; ++i)

1227 
	`vim_‰ì
(
«mes
[
i
]);

1228 
num_«mes
 = 0;

1231 i‡(
num_«mes
 == 0)

1232 
num_fûes
 = 0;

1233 i‡(
	`Ex∑ndWûdC¨ds
(
num_«mes
, 
«mes
,

1234 &
num_fûes
, &
fûes
, 
TRUE
, 
FALSE
Ë=
FAIL
)

1236 
	`MSG_OUTSTR
(
fûes
);

1237 
num_fûes
 = 0;

1242 i‡(
curbuf
->
b_ml
.
ml_mÂ
 !
NULL
 &&

1243 (
p
 = 
curbuf
->
b_ml
.
ml_mÂ
->
mf_‚ame
Ë!
NULL
)

1245 
i
 = 0; i < 
num_fûes
; ++i)

1246 i‡(
	`fuŒ∑thcmp
(
p
, 
fûes
[
i
]Ë=
FPC_SAME
)

1248 
	`vim_‰ì
(
fûes
[
i
]);

1249 --
num_fûes
;

1250  ; 
i
 < 
num_fûes
; ++i)

1251 
fûes
[
i
] = files[i + 1];

1255 i‡(
ƒ
)

1257 
fûe_cou¡
 +
num_fûes
;

1258 i‡(
ƒ
 <
fûe_cou¡
)

1260 *
‚ame
 = 
	`°rßve
(
fûes
[
ƒ
 - 1 + 
num_fûes
 - 
fûe_cou¡
]);

1261 
dúp
 = (
ch¨_u
 *)"";

1264 i‡(
li°
)

1266 i‡(*
dú_«me
 == '.')

1268 i‡(
‚ame
 =
NULL
 || *fname == NULL)

1269 
	`MSG_OUTSTR
(" In current directory:\n");

1271 
	`MSG_OUTSTR
(" Using specifiedÇame:\n");

1275 
	`MSG_OUTSTR
(" In directory ");

1276 
	`msg_home_ª∂a˚
(
dú_«me
);

1277 
	`MSG_OUTSTR
(":\n");

1280 i‡(
num_fûes
)

1282 
i
 = 0; i < 
num_fûes
; ++i)

1285 
	`msg_ouäum
(()++
fûe_cou¡
);

1286 
	`MSG_OUTSTR
(". ");

1287 
	`msg_out°r
(
	`gëèû
(
fûes
[
i
]));

1288 
	`msg_outch¨
('\n');

1289 
	`sw≠fûe_öfo
(
fûes
[
i
]);

1293 
	`MSG_OUTSTR
(" --Çone --\n");

1294 
	`Êushbuf
();

1297 
fûe_cou¡
 +
num_fûes
;

1299 
i
 = 0; i < 
num_«mes
; ++i)

1300 
	`vim_‰ì
(
«mes
[
i
]);

1301 
	`FªeWûd
(
num_fûes
, 
fûes
);

1304 
	`vim_‰ì
(
dú_«me
);

1305 i‡(*
dúp
 == ',')

1306 ++
dúp
;

1307 
dúp
 = 
	`skùwhôe
(dirp);

1309 
ex∑nd_öãø˘ivñy
 = 
FALSE
;

1310  
fûe_cou¡
;

1311 
	}
}

1317 
	$sw≠fûe_öfo
(
‚ame
)

1318 
ch¨_u
 *
‚ame
;

1320 
°©
 
°
;

1321 
fd
;

1322 
block0
 
b0
;

1323 
time_t
 
x
;

1326 i‡(
	`°©
((*)
‚ame
, &
°
) != -1)

1328 
	`MSG_OUTSTR
(" dated: ");

1329 
x
 = 
°
.
°_mtime
;

1330 
	`MSG_OUTSTR
(
	`˘ime
(&
x
));

1336 
fd
 = 
	`›í
((*)
‚ame
, 
O_RDONLY
 | 
O_EXTRA
);

1337 i‡(
fd
 >= 0)

1339 i‡(
	`ªad
(
fd
, (*)&
b0
, (b0)) == (b0))

1341 i‡(
b0
.
b0_id
[0] !
BLOCK0_ID0
 ||

1342 
b0
.
b0_id
[1] !
BLOCK0_ID1
)

1343 
	`MSG_OUTSTR
(" [isÇotá swap file]");

1346 
	`MSG_OUTSTR
(" fileÇame: ");

1347 
	`msg_out°r
(
b0
.
b0_‚ame
);

1349 i‡(*(
b0
.
b0_h«me
Ë!
NUL
)

1351 
	`MSG_OUTSTR
("\n hostÇame: ");

1352 
	`msg_out°r
(
b0
.
b0_h«me
);

1355 i‡(*(
b0
.
b0_u«me
Ë!
NUL
)

1357 
	`MSG_OUTSTR
("\n userÇame: ");

1358 
	`msg_out°r
(
b0
.
b0_u«me
);

1361 i‡(
	`ch¨_to_l⁄g
(
b0
.
b0_pid
) != 0L)

1363 
	`MSG_OUTSTR
("\nÖrocess ID: ");

1364 
	`msg_ouäum
(
	`ch¨_to_l⁄g
(
b0
.
b0_pid
));

1365 #i‡
	`deföed
(
UNIX
Ë|| deföed(
__EMX__
)

1367 i‡(
	`kûl
(
	`ch¨_to_l⁄g
(
b0
.
b0_pid
), 0) == 0)

1368 
	`MSG_OUTSTR
(" (stillÑunning)");

1372 i‡(
	`b0_magic_wr⁄g
(&
b0
))

1374 #i‡
	`deföed
(
MSDOS
Ë|| deföed(
WIN32
)

1375 i‡(
	`STRNCMP
(
b0
.
b0_h«me
, "PC ", 3) == 0)

1376 
	`MSG_OUTSTR
("\n [not usable withÅhis version of Vim]");

1379 
	`MSG_OUTSTR
("\n [not usable onÅhis computer]");

1385 
	`MSG_OUTSTR
(" [cannot beÑead]");

1386 
	`˛o£
(
fd
);

1389 
	`MSG_OUTSTR
(" [cannot be opened]");

1390 
	`msg_outch¨
('\n');

1391 
	}
}

1394 
	$gë_«mes
(
«mes
, 
‚ame
)

1395 
ch¨_u
 **
«mes
;

1396 
ch¨_u
 *
‚ame
;

1398 
num_«mes
;

1400 #ifde‡
SHORT_FNAME


1404 
«mes
[0] = 
	`mod«me
(
‚ame
, (
ch¨_u
 *)".sw?");

1405 
num_«mes
 = 1;

1407 #ifde‡
WIN32


1411 
num_«mes
 = 1;

1412 
«mes
[0] = 
	`c⁄ˇt_‚ames
(
‚ame
, (
ch¨_u
 *)".sw?", 
FALSE
);

1419 
i
;

1421 
«mes
[0] = 
	`c⁄ˇt_‚ames
(
‚ame
, (
ch¨_u
 *)".sw?", 
FALSE
);

1422 
i
 = 
curbuf
->
b_sh‹äame
;

1423 
curbuf
->
b_sh‹äame
 = 
TRUE
;

1424 
«mes
[1] = 
	`mod«me
(
‚ame
, (
ch¨_u
 *)".sw?");

1425 
curbuf
->
b_sh‹äame
 = 
i
;

1426 i‡(
	`STRCMP
(
«mes
[0],Çames[1]) == 0)

1428 
	`vim_‰ì
(
«mes
[1]);

1429 
num_«mes
 = 1;

1432 
num_«mes
 = 2;

1435  
num_«mes
;

1436 
	}
}

1446 
	$ml_sync_Æl
(
check_fûe
, 
check_ch¨
)

1447 
check_fûe
;

1448 
check_ch¨
;

1450 
BUF
 *
buf
;

1451 
°©
 
°
;

1453 
buf
 = 
fú°buf
; bu‡!
NULL
; bu‡buf->
b_√xt
)

1455 i‡(
buf
->
b_ml
.
ml_mÂ
 =
NULL
 || buf->b_ml.ml_mÂ->
mf_‚ame
 == NULL)

1458 
	`ml_Êush_löe
(
buf
);

1460 ()
	`ml_föd_löe
(
buf
, (
löír_t
)0, 
ML_FLUSH
);

1461 i‡(
buf
->
b_ch™ged
 && 
check_fûe
 && 
	`mf_√ed_å™s
(buf->
b_ml
.
ml_mÂ
) &&

1462 
buf
->
b_fûíame
 !
NULL
)

1468 i‡(
	`°©
((*)
buf
->
b_fûíame
, &
°
) == -1 ||

1469 
°
.
°_mtime
 !
buf
->
b_mtime_ªad
)

1471 
	`ml_¥e£rve
(
buf
, 
FALSE
);

1472 
√ed_check_time°amps
 = 
TRUE
;

1475 i‡(
buf
->
b_ml
.
ml_mÂ
->
mf_dúty
)

1477 
	`mf_sync
(
buf
->
b_ml
.
ml_mÂ
, 
FALSE
, 
check_ch¨
, buf->
b_ch™ged
);

1478 i‡(
check_ch¨
 && 
	`mch_ch¨_avaû
())

1482 
	}
}

1495 
	$ml_¥e£rve
(
buf
, 
mesßge
)

1496 
BUF
 *
buf
;

1497 
mesßge
;

1499 
BHDR
 *
hp
;

1500 
löír_t
 
 um
;

1501 
MEMFILE
 *
mÂ
 = 
buf
->
b_ml
.
ml_mÂ
;

1502 
°©us
;

1504 i‡(
mÂ
 =
NULL
 || mÂ->
mf_‚ame
 == NULL)

1506 i‡(
mesßge
)

1507 
	`EMSG
("CannotÖreserve,Åhere isÇo swap file");

1511 
	`ml_Êush_löe
(
buf
);

1512 ()
	`ml_föd_löe
(
buf
, (
löír_t
)0, 
ML_FLUSH
);

1513 
°©us
 = 
	`mf_sync
(
mÂ
, 
TRUE
, 
FALSE
, TRUE);

1516 
buf
->
b_ml
.
ml_°ack_t›
 = 0;

1530 i‡(
	`mf_√ed_å™s
(
mÂ
))

1532 
 um
 = 1;

1533 
	`mf_√ed_å™s
(
mÂ
Ë&& 
 um
 <
buf
->
b_ml
.
ml_löe_cou¡
)

1535 
hp
 = 
	`ml_föd_löe
(
buf
, 
 um
, 
ML_FIND
);

1536 i‡(
hp
 =
NULL
)

1538 
°©us
 = 
FAIL
;

1539 
thìnd
;

1541 
	`CHECK
(
buf
->
b_ml
.
ml_locked_low
 !
 um
, "low !=Ünum");

1542 
 um
 = 
buf
->
b_ml
.
ml_locked_high
 + 1;

1544 ()
	`ml_föd_löe
(
buf
, (
löír_t
)0, 
ML_FLUSH
);

1545 i‡(
	`mf_sync
(
mÂ
, 
TRUE
, 
FALSE
, TRUEË=
FAIL
)

1546 
°©us
 = 
FAIL
;

1547 
buf
->
b_ml
.
ml_°ack_t›
 = 0;

1549 
thìnd
:

1550 i‡(
mesßge
)

1552 i‡(
°©us
 =
OK
)

1553 
	`MSG
("FileÖreserved");

1555 
	`EMSG
("Preserve failed");

1557 
	}
}

1565 
ch¨_u
 *

1566 
	$ml_gë
(
 um
)

1567 
löír_t
 
 um
;

1569  
	`ml_gë_buf
(
curbuf
, 
 um
, 
FALSE
);

1570 
	}
}

1575 
ch¨_u
 *

1576 
	$ml_gë_pos
(
pos
)

1577 
FPOS
 *
pos
;

1579  (
	`ml_gë_buf
(
curbuf
, 
pos
->
 um
, 
FALSE
Ë+Öos->
cﬁ
);

1580 
	}
}

1585 
ch¨_u
 *

1586 
	$ml_gë_cuæöe
()

1588  
	`ml_gë_buf
(
curbuf
, 
curwö
->
w_curs‹
.
 um
, 
FALSE
);

1589 
	}
}

1594 
ch¨_u
 *

1595 
	$ml_gë_curs‹
()

1597  (
	`ml_gë_buf
(
curbuf
, 
curwö
->
w_curs‹
.
 um
, 
FALSE
) +

1598 
curwö
->
w_curs‹
.
cﬁ
);

1599 
	}
}

1607 
ch¨_u
 *

1608 
	$ml_gë_buf
(
buf
, 
 um
, 
wûl_ch™ge
)

1609 
BUF
 *
buf
;

1610 
löír_t
 
 um
;

1611 
wûl_ch™ge
;

1613 
BHDR
 *
hp
;

1614 
DATA_BL
 *
dp
;

1615 
ch¨_u
 *
±r
;

1617 i‡(
 um
 > 
buf
->
b_ml
.
ml_löe_cou¡
)

1619 
	`emsg2
((
ch¨_u
 *)"ml_gë: invÆidÜnum: %ld", (ch¨_u *)
 um
);

1620 
îr‹ªt
:

1621 
	`STRCPY
(
IObuff
, "???");

1622  
IObuff
;

1624 i‡(
 um
 <= 0)

1625 
 um
 = 1;

1627 i‡(
buf
->
b_ml
.
ml_mÂ
 =
NULL
)

1628  (
ch¨_u
 *)"";

1634 i‡(
buf
->
b_ml
.
ml_löe_ um
 !
 um
)

1636 
	`ml_Êush_löe
(
buf
);

1643 i‡((
hp
 = 
	`ml_föd_löe
(
buf
, 
 um
, 
ML_FIND
)Ë=
NULL
)

1645 
	`emsg2
((
ch¨_u
 *)"ml_gë: c™nŸ födÜöê%ld", (ch¨_u *)
 um
);

1646 
îr‹ªt
;

1649 
dp
 = (
DATA_BL
 *)(
hp
->
bh_d©a
);

1651 
±r
 = (
ch¨_u
 *)
dp
 + ((dp->
db_ödex
[
 um
 - 
buf
->
b_ml
.
ml_locked_low
]Ë& 
DB_INDEX_MASK
);

1652 
buf
->
b_ml
.
ml_löe_±r
 = 
±r
;

1653 
buf
->
b_ml
.
ml_löe_ um
 = 
 um
;

1654 
buf
->
b_ml
.
ml_Êags
 &~
ML_LINE_DIRTY
;

1656 i‡(
wûl_ch™ge
)

1657 
buf
->
b_ml
.
ml_Êags
 |(
ML_LOCKED_DIRTY
 | 
ML_LOCKED_POS
);

1659  
buf
->
b_ml
.
ml_löe_±r
;

1660 
	}
}

1667 
	$ml_löe_Ælo˚d
()

1669  (
curbuf
->
b_ml
.
ml_Êags
 & 
ML_LINE_DIRTY
);

1670 
	}
}

1681 
	$ml_≠≥nd
(
 um
, 
löe
, 
Àn
, 
√wfûe
)

1682 
löír_t
 
 um
;

1683 
ch¨_u
 *
löe
;

1684 
cﬁƒ_t
 
Àn
;

1685 
√wfûe
;

1687 i‡(
curbuf
->
b_ml
.
ml_löe_ um
 != 0)

1688 
	`ml_Êush_löe
(
curbuf
);

1689  
	`ml_≠≥nd_öt
(
curbuf
, 
 um
, 
löe
, 
Àn
, 
√wfûe
);

1690 
	}
}

1693 
	$ml_≠≥nd_öt
(
buf
, 
 um
, 
löe
, 
Àn
, 
√wfûe
)

1694 
BUF
 *
buf
;

1695 
löír_t
 
 um
;

1696 
ch¨_u
 *
löe
;

1697 
cﬁƒ_t
 
Àn
;

1698 
√wfûe
;

1700 
i
;

1701 
löe_cou¡
;

1702 
off£t
;

1703 
‰om
, 
to
;

1704 
•a˚_√eded
;

1705 
∑ge_size
;

1706 
∑ge_cou¡
;

1707 
db_idx
;

1708 
BHDR
 *
hp
;

1709 
MEMFILE
 *
mÂ
;

1710 
DATA_BL
 *
dp
;

1711 
PTR_BL
 *
µ
;

1712 
IPTR
 *
ù
;

1715 i‡(
 um
 > 
buf
->
b_ml
.
ml_löe_cou¡
 || buf->b_ml.
ml_mÂ
 =
NULL
)

1716  
FAIL
;

1718 i‡(
lowe°_m¨ked
 &&Üowe°_m¨ked > 
 um
)

1719 
lowe°_m¨ked
 = 
 um
 + 1;

1721 i‡(
Àn
 == 0)

1722 
Àn
 = 
	`STRLEN
(
löe
) + 1;

1723 
•a˚_√eded
 = 
Àn
 + 
INDEX_SIZE
;

1725 
mÂ
 = 
buf
->
b_ml
.
ml_mÂ
;

1726 
∑ge_size
 = 
mÂ
->
mf_∑ge_size
;

1733 i‡((
hp
 = 
	`ml_föd_löe
(
buf
, 
 um
 =0 ? (
löír_t
)1 :Ünum,

1734 
ML_INSERT
)Ë=
NULL
)

1735  
FAIL
;

1737 
buf
->
b_ml
.
ml_Êags
 &~
ML_EMPTY
;

1739 i‡(
 um
 == 0)

1740 
db_idx
 = -1;

1742 
db_idx
 = 
 um
 - 
buf
->
b_ml
.
ml_locked_low
;

1744 
löe_cou¡
 = 
buf
->
b_ml
.
ml_locked_high
 - buf->b_ml.
ml_locked_low
;

1746 
dp
 = (
DATA_BL
 *)(
hp
->
bh_d©a
);

1755 i‡(()
dp
->
db_‰ì
 < 
•a˚_√eded
 && 
db_idx
 =
löe_cou¡
 - 1 &&

1756 
 um
 < 
buf
->
b_ml
.
ml_löe_cou¡
)

1763 --(
buf
->
b_ml
.
ml_locked_löódd
);

1764 --(
buf
->
b_ml
.
ml_locked_high
);

1765 i‡((
hp
 = 
	`ml_föd_löe
(
buf
, 
 um
 + 1, 
ML_INSERT
)Ë=
NULL
)

1766  
FAIL
;

1768 
db_idx
 = -1;

1770 
löe_cou¡
 = 
buf
->
b_ml
.
ml_locked_high
 - buf->b_ml.
ml_locked_low
;

1771 
	`CHECK
(
buf
->
b_ml
.
ml_locked_low
 !
 um
 + 1, "locked_low !=Ünum + 1");

1773 
dp
 = (
DATA_BL
 *)(
hp
->
bh_d©a
);

1776 ++
buf
->
b_ml
.
ml_löe_cou¡
;

1778 i‡(()
dp
->
db_‰ì
 >
•a˚_√eded
)

1783 
dp
->
db_txt_°¨t
 -
Àn
;

1784 
dp
->
db_‰ì
 -
•a˚_√eded
;

1785 ++(
dp
->
db_löe_cou¡
);

1791 i‡(
löe_cou¡
 > 
db_idx
 + 1)

1797 i‡(
db_idx
 < 0)

1798 
off£t
 = 
dp
->
db_txt_íd
;

1800 
off£t
 = ((
dp
->
db_ödex
[
db_idx
]Ë& 
DB_INDEX_MASK
);

1801 
	`vim_memmove
((*)
dp
 + dp->
db_txt_°¨t
,

1802 (*)
dp
 + dp->
db_txt_°¨t
 + 
Àn
,

1803 (
size_t
)(
off£t
 - (
dp
->
db_txt_°¨t
 + 
Àn
)));

1804 
i
 = 
löe_cou¡
 - 1; i > 
db_idx
; --i)

1805 
dp
->
db_ödex
[
i
 + 1] = dp->db_ödex[i] - 
Àn
;

1806 
dp
->
db_ödex
[
db_idx
 + 1] = 
off£t
 - 
Àn
;

1809 
dp
->
db_ödex
[
db_idx
 + 1] = dp->
db_txt_°¨t
;

1814 
	`vim_memmove
((*)
dp
 + dp->
db_ödex
[
db_idx
 + 1], 
löe
, (
size_t
)
Àn
);

1819 
buf
->
b_ml
.
ml_Êags
 |
ML_LOCKED_DIRTY
;

1820 i‡(!
√wfûe
)

1821 
buf
->
b_ml
.
ml_Êags
 |
ML_LOCKED_POS
;

1834 
löe_cou¡_À·
, 
löe_cou¡_right
;

1835 
∑ge_cou¡_À·
, 
∑ge_cou¡_right
;

1836 
BHDR
 *
hp_À·
;

1837 
BHDR
 *
hp_right
;

1838 
BHDR
 *
hp_√w
;

1839 
löes_moved
;

1840 
d©a_moved
 = 0;

1841 
tŸÆ_moved
 = 0;

1842 
DATA_BL
 *
dp_right
, *
dp_À·
;

1843 
°ack_idx
;

1844 
ö_À·
;

1845 
löódd
;

1846 
blockƒ_t
 
bnum_À·
, 
bnum_right
;

1847 
löír_t
 
 um_À·
, 
 um_right
;

1848 
pb_idx
;

1849 
PTR_BL
 *
µ_√w
;

1859 i‡(
db_idx
 < 0)

1861 
löes_moved
 = 0;

1862 
ö_À·
 = 
TRUE
;

1867 
löes_moved
 = 
löe_cou¡
 - 
db_idx
 - 1;

1868 i‡(
löes_moved
 == 0)

1869 
ö_À·
 = 
FALSE
;

1873 
d©a_moved
 = ((
dp
->
db_ödex
[
db_idx
]Ë& 
DB_INDEX_MASK
) -

1874 
dp
->
db_txt_°¨t
;

1875 
tŸÆ_moved
 = 
d©a_moved
 + 
löes_moved
 * 
INDEX_SIZE
;

1876 i‡(()
dp
->
db_‰ì
 + 
tŸÆ_moved
 >
•a˚_√eded
)

1878 
ö_À·
 = 
TRUE
;

1879 
•a˚_√eded
 = 
tŸÆ_moved
;

1883 
ö_À·
 = 
FALSE
;

1884 
•a˚_√eded
 +
tŸÆ_moved
;

1889 
∑ge_cou¡
 = ((
•a˚_√eded
 + 
HEADER_SIZE
Ë+ 
∑ge_size
 - 1) /Öage_size;

1890 i‡((
hp_√w
 = 
	`ml_√w_d©a
(
mÂ
, 
√wfûe
, 
∑ge_cou¡
)Ë=
NULL
)

1893 --(
buf
->
b_ml
.
ml_locked_löódd
);

1894 --(
buf
->
b_ml
.
ml_locked_high
);

1895  
FAIL
;

1897 i‡(
db_idx
 < 0)

1899 
hp_À·
 = 
hp_√w
;

1900 
hp_right
 = 
hp
;

1901 
löe_cou¡_À·
 = 0;

1902 
löe_cou¡_right
 = 
löe_cou¡
;

1906 
hp_À·
 = 
hp
;

1907 
hp_right
 = 
hp_√w
;

1908 
löe_cou¡_À·
 = 
löe_cou¡
;

1909 
löe_cou¡_right
 = 0;

1911 
dp_right
 = (
DATA_BL
 *)(
hp_right
->
bh_d©a
);

1912 
dp_À·
 = (
DATA_BL
 *)(
hp_À·
->
bh_d©a
);

1913 
bnum_À·
 = 
hp_À·
->
bh_bnum
;

1914 
bnum_right
 = 
hp_right
->
bh_bnum
;

1915 
∑ge_cou¡_À·
 = 
hp_À·
->
bh_∑ge_cou¡
;

1916 
∑ge_cou¡_right
 = 
hp_right
->
bh_∑ge_cou¡
;

1921 i‡(!
ö_À·
)

1923 
dp_right
->
db_txt_°¨t
 -
Àn
;

1924 
dp_right
->
db_‰ì
 -
Àn
 + 
INDEX_SIZE
;

1925 
dp_right
->
db_ödex
[0] = dp_right->
db_txt_°¨t
;

1926 
	`vim_memmove
((*)
dp_right
 + dp_right->
db_txt_°¨t
,

1927 
löe
, (
size_t
)
Àn
);

1928 ++
löe_cou¡_right
;

1933 i‡(
löes_moved
)

1937 
dp_right
->
db_txt_°¨t
 -
d©a_moved
;

1938 
dp_right
->
db_‰ì
 -
tŸÆ_moved
;

1939 
	`vim_memmove
((*)
dp_right
 + dp_right->
db_txt_°¨t
,

1940 (*)
dp_À·
 + dp_À·->
db_txt_°¨t
,

1941 (
size_t
)
d©a_moved
);

1942 
off£t
 = 
dp_right
->
db_txt_°¨t
 - 
dp_À·
->db_txt_start;

1943 
dp_À·
->
db_txt_°¨t
 +
d©a_moved
;

1944 
dp_À·
->
db_‰ì
 +
tŸÆ_moved
;

1949 
to
 = 
löe_cou¡_right
, 
‰om
 = 
db_idx
 + 1;

1950 
‰om
 < 
löe_cou¡_À·
; ++‰om, ++
to
)

1951 
dp_right
->
db_ödex
[
to
] = 
dp
->db_ödex[
‰om
] + 
off£t
;

1952 
löe_cou¡_right
 +
löes_moved
;

1953 
löe_cou¡_À·
 -
löes_moved
;

1959 i‡(
ö_À·
)

1961 
dp_À·
->
db_txt_°¨t
 -
Àn
;

1962 
dp_À·
->
db_‰ì
 -
Àn
 + 
INDEX_SIZE
;

1963 
dp_À·
->
db_ödex
[
löe_cou¡_À·
] = dp_À·->
db_txt_°¨t
;

1964 
	`vim_memmove
((*)
dp_À·
 + dp_À·->
db_txt_°¨t
,

1965 
löe
, (
size_t
)
Àn
);

1966 ++
löe_cou¡_À·
;

1969 i‡(
db_idx
 < 0)

1971 
 um_À·
 = 
 um
 + 1;

1972 
 um_right
 = 0;

1976 
 um_À·
 = 0;

1977 i‡(
ö_À·
)

1978 
 um_right
 = 
 um
 + 2;

1980 
 um_right
 = 
 um
 + 1;

1982 
dp_À·
->
db_löe_cou¡
 = 
löe_cou¡_À·
;

1983 
dp_right
->
db_löe_cou¡
 = 
löe_cou¡_right
;

1991 i‡(
löes_moved
 || 
ö_À·
)

1992 
buf
->
b_ml
.
ml_Êags
 |
ML_LOCKED_DIRTY
;

1993 i‡(!
√wfûe
 && 
db_idx
 >0 && 
ö_À·
)

1994 
buf
->
b_ml
.
ml_Êags
 |
ML_LOCKED_POS
;

1995 
	`mf_put
(
mÂ
, 
hp_√w
, 
TRUE
, 
FALSE
);

2002 
löódd
 = 
buf
->
b_ml
.
ml_locked_löódd
;

2003 
buf
->
b_ml
.
ml_locked_löódd
 = 0;

2004 
	`ml_föd_löe
(
buf
, (
löír_t
)0, 
ML_FLUSH
);

2009 
°ack_idx
 = 
buf
->
b_ml
.
ml_°ack_t›
 - 1; stack_idx >= 0; --stack_idx)

2011 
ù
 = &(
buf
->
b_ml
.
ml_°ack
[
°ack_idx
]);

2012 
pb_idx
 = 
ù
->
ù_ödex
;

2013 i‡((
hp
 = 
	`mf_gë
(
mÂ
, 
ù
->
ù_bnum
, 1)Ë=
NULL
)

2014  
FAIL
;

2015 
µ
 = (
PTR_BL
 *)(
hp
->
bh_d©a
);

2016 i‡(
µ
->
pb_id
 !
PTR_ID
)

2018 
	`EMSG
("pointer block id wrong 3");

2019 
	`mf_put
(
mÂ
, 
hp
, 
FALSE
, FALSE);

2020  
FAIL
;

2026 i‡(
µ
->
pb_cou¡
 <Öp->
pb_cou¡_max
)

2028 i‡(
pb_idx
 + 1 < ()
µ
->
pb_cou¡
)

2029 
	`vim_memmove
(&
µ
->
pb_poöãr
[
pb_idx
 + 2],

2030 &
µ
->
pb_poöãr
[
pb_idx
 + 1],

2031 (
size_t
)(
µ
->
pb_cou¡
 - 
pb_idx
 - 1Ë* (
PTR_EN
));

2032 ++
µ
->
pb_cou¡
;

2033 
µ
->
pb_poöãr
[
pb_idx
].
≥_löe_cou¡
 = 
löe_cou¡_À·
;

2034 
µ
->
pb_poöãr
[
pb_idx
].
≥_bnum
 = 
bnum_À·
;

2035 
µ
->
pb_poöãr
[
pb_idx
].
≥_∑ge_cou¡
 = 
∑ge_cou¡_À·
;

2036 
µ
->
pb_poöãr
[
pb_idx
 + 1].
≥_löe_cou¡
 = 
löe_cou¡_right
;

2037 
µ
->
pb_poöãr
[
pb_idx
 + 1].
≥_bnum
 = 
bnum_right
;

2038 
µ
->
pb_poöãr
[
pb_idx
 + 1].
≥_∑ge_cou¡
 = 
∑ge_cou¡_right
;

2040 i‡(
 um_À·
 != 0)

2041 
µ
->
pb_poöãr
[
pb_idx
].
≥_ﬁd_ um
 = 
 um_À·
;

2042 i‡(
 um_right
 != 0)

2043 
µ
->
pb_poöãr
[
pb_idx
 + 1].
≥_ﬁd_ um
 = 
 um_right
;

2045 
	`mf_put
(
mÂ
, 
hp
, 
TRUE
, 
FALSE
);

2046 
buf
->
b_ml
.
ml_°ack_t›
 = 
°ack_idx
 + 1;

2048 i‡(
löódd
)

2050 --(
buf
->
b_ml
.
ml_°ack_t›
);

2052 
	`ml_löódd
(
buf
, 
löódd
);

2054 
buf
->
b_ml
.
ml_°ack
[buf->b_ml.
ml_°ack_t›
].
ù_high
 +=

2055 
löódd
;

2056 ++(
buf
->
b_ml
.
ml_°ack_t›
);

2059  
OK
;

2071 
hp_√w
 = 
	`ml_√w_±r
(
mÂ
);

2072 i‡(
hp_√w
 =
NULL
)

2073  
FAIL
;

2074 
µ_√w
 = (
PTR_BL
 *)(
hp_√w
->
bh_d©a
);

2076 i‡(
hp
->
bh_bnum
 != 1)

2085 
	`vim_memmove
(
µ_√w
, 
µ
, (
size_t
)
∑ge_size
);

2086 
µ
->
pb_cou¡
 = 1;

2087 
µ
->
pb_poöãr
[0].
≥_bnum
 = 
hp_√w
->
bh_bnum
;

2088 
µ
->
pb_poöãr
[0].
≥_löe_cou¡
 = 
buf
->
b_ml
.
ml_löe_cou¡
;

2089 
µ
->
pb_poöãr
[0].
≥_ﬁd_ um
 = 1;

2090 
µ
->
pb_poöãr
[0].
≥_∑ge_cou¡
 = 1;

2091 
	`mf_put
(
mÂ
, 
hp
, 
TRUE
, 
FALSE
);

2092 
hp
 = 
hp_√w
;

2093 
µ
 = 
µ_√w
;

2094 
	`CHECK
(
°ack_idx
 != 0, "stack_idx should be 0");

2095 
ù
->
ù_ödex
 = 0;

2096 ++
°ack_idx
;

2102 
tŸÆ_moved
 = 
µ
->
pb_cou¡
 - 
pb_idx
 - 1;

2103 i‡(
tŸÆ_moved
)

2105 
	`vim_memmove
(&
µ_√w
->
pb_poöãr
[0],

2106 &
µ
->
pb_poöãr
[
pb_idx
 + 1],

2107 (
size_t
)(
tŸÆ_moved
Ë* (
PTR_EN
));

2108 
µ_√w
->
pb_cou¡
 = 
tŸÆ_moved
;

2109 
µ
->
pb_cou¡
 -
tŸÆ_moved
 - 1;

2110 
µ
->
pb_poöãr
[
pb_idx
 + 1].
≥_bnum
 = 
bnum_right
;

2111 
µ
->
pb_poöãr
[
pb_idx
 + 1].
≥_löe_cou¡
 = 
löe_cou¡_right
;

2112 
µ
->
pb_poöãr
[
pb_idx
 + 1].
≥_∑ge_cou¡
 = 
∑ge_cou¡_right
;

2113 i‡(
 um_right
)

2114 
µ
->
pb_poöãr
[
pb_idx
 + 1].
≥_ﬁd_ um
 = 
 um_right
;

2118 
µ_√w
->
pb_cou¡
 = 1;

2119 
µ_√w
->
pb_poöãr
[0].
≥_bnum
 = 
bnum_right
;

2120 
µ_√w
->
pb_poöãr
[0].
≥_löe_cou¡
 = 
löe_cou¡_right
;

2121 
µ_√w
->
pb_poöãr
[0].
≥_∑ge_cou¡
 = 
∑ge_cou¡_right
;

2122 
µ_√w
->
pb_poöãr
[0].
≥_ﬁd_ um
 = 
 um_right
;

2124 
µ
->
pb_poöãr
[
pb_idx
].
≥_bnum
 = 
bnum_À·
;

2125 
µ
->
pb_poöãr
[
pb_idx
].
≥_löe_cou¡
 = 
löe_cou¡_À·
;

2126 
µ
->
pb_poöãr
[
pb_idx
].
≥_∑ge_cou¡
 = 
∑ge_cou¡_À·
;

2127 i‡(
 um_À·
)

2128 
µ
->
pb_poöãr
[
pb_idx
].
≥_ﬁd_ um
 = 
 um_À·
;

2129 
 um_À·
 = 0;

2130 
 um_right
 = 0;

2135 
löe_cou¡_right
 = 0;

2136 
i
 = 0; i < ()
µ_√w
->
pb_cou¡
; ++i)

2137 
löe_cou¡_right
 +
µ_√w
->
pb_poöãr
[
i
].
≥_löe_cou¡
;

2138 
löe_cou¡_À·
 = 0;

2139 
i
 = 0; i < ()
µ
->
pb_cou¡
; ++i)

2140 
löe_cou¡_À·
 +
µ
->
pb_poöãr
[
i
].
≥_löe_cou¡
;

2142 
bnum_À·
 = 
hp
->
bh_bnum
;

2143 
bnum_right
 = 
hp_√w
->
bh_bnum
;

2144 
∑ge_cou¡_À·
 = 1;

2145 
∑ge_cou¡_right
 = 1;

2146 
	`mf_put
(
mÂ
, 
hp
, 
TRUE
, 
FALSE
);

2147 
	`mf_put
(
mÂ
, 
hp_√w
, 
TRUE
, 
FALSE
);

2150 
	`EMSG
("UpdatedÅoo many blocks?");

2151 
buf
->
b_ml
.
ml_°ack_t›
 = 0;

2153  
OK
;

2154 
	}
}

2165 
	$ml_ª∂a˚
(
 um
, 
löe
, 
c›y
)

2166 
löír_t
 
 um
;

2167 
ch¨_u
 *
löe
;

2168 
c›y
;

2170 i‡(
löe
 =
NULL
)

2171  
FAIL
;

2173 i‡(
curbuf
->
b_ml
.
ml_löe_ um
 !
 um
)

2174 
	`ml_Êush_löe
(
curbuf
);

2175 i‡(
curbuf
->
b_ml
.
ml_Êags
 & 
ML_LINE_DIRTY
)

2176 
	`vim_‰ì
(
curbuf
->
b_ml
.
ml_löe_±r
);

2177 i‡(
c›y
 && (
löe
 = 
	`°rßve
÷öe)Ë=
NULL
)

2178  
FAIL
;

2179 
curbuf
->
b_ml
.
ml_löe_±r
 = 
löe
;

2180 
curbuf
->
b_ml
.
ml_löe_ um
 = 
 um
;

2181 
curbuf
->
b_ml
.
ml_Êags
 = (curbuf->b_ml.ml_Êag†| 
ML_LINE_DIRTY
Ë& ~
ML_EMPTY
;

2183  
OK
;

2184 
	}
}

2192 
	$ml_dñëe
(
 um
, 
mesßge
)

2193 
löír_t
 
 um
;

2194 
mesßge
;

2196 
	`ml_Êush_löe
(
curbuf
);

2197  
	`ml_dñëe_öt
(
curbuf
, 
 um
, 
mesßge
);

2198 
	}
}

2201 
	$ml_dñëe_öt
(
buf
, 
 um
, 
mesßge
)

2202 
BUF
 *
buf
;

2203 
löír_t
 
 um
;

2204 
mesßge
;

2206 
BHDR
 *
hp
;

2207 
MEMFILE
 *
mÂ
;

2208 
DATA_BL
 *
dp
;

2209 
PTR_BL
 *
µ
;

2210 
IPTR
 *
ù
;

2211 
cou¡
;

2212 
idx
;

2213 
°ack_idx
;

2214 
ãxt_°¨t
;

2215 
löe_°¨t
;

2216 
löe_size
;

2217 
i
;

2219 i‡(
 um
 < 1 ||Ünum > 
buf
->
b_ml
.
ml_löe_cou¡
)

2220  
FAIL
;

2222 i‡(
lowe°_m¨ked
 &&Üowe°_m¨ked > 
 um
)

2223 
lowe°_m¨ked
--;

2228 i‡(
buf
->
b_ml
.
ml_löe_cou¡
 == 1)

2230 i‡(
mesßge
)

2231 
kìp_msg
 = 
no_löes_msg
;

2232 
i
 = 
	`ml_ª∂a˚
((
löír_t
)1, (
ch¨_u
 *)"", 
TRUE
);

2233 
buf
->
b_ml
.
ml_Êags
 |
ML_EMPTY
;

2234  
i
;

2242 
mÂ
 = 
buf
->
b_ml
.
ml_mÂ
;

2243 i‡(
mÂ
 =
NULL
)

2244  
FAIL
;

2246 i‡((
hp
 = 
	`ml_föd_löe
(
buf
, 
 um
, 
ML_DELETE
)Ë=
NULL
)

2247  
FAIL
;

2249 
dp
 = (
DATA_BL
 *)(
hp
->
bh_d©a
);

2251 
cou¡
 = ()(
buf
->
b_ml
.
ml_locked_high
Ë- ()(buf->b_ml.
ml_locked_low
) + 2;

2252 
idx
 = 
 um
 - 
buf
->
b_ml
.
ml_locked_low
;

2254 --
buf
->
b_ml
.
ml_löe_cou¡
;

2264 i‡(
cou¡
 == 1)

2266 
	`mf_‰ì
(
mÂ
, 
hp
);

2267 
buf
->
b_ml
.
ml_locked
 = 
NULL
;

2269 
°ack_idx
 = 
buf
->
b_ml
.
ml_°ack_t›
 - 1; stack_idx >= 0; --stack_idx)

2271 
buf
->
b_ml
.
ml_°ack_t›
 = 0;

2272 
ù
 = &(
buf
->
b_ml
.
ml_°ack
[
°ack_idx
]);

2273 
idx
 = 
ù
->
ù_ödex
;

2274 i‡((
hp
 = 
	`mf_gë
(
mÂ
, 
ù
->
ù_bnum
, 1)Ë=
NULL
)

2275  
FAIL
;

2276 
µ
 = (
PTR_BL
 *)(
hp
->
bh_d©a
);

2277 i‡(
µ
->
pb_id
 !
PTR_ID
)

2279 
	`EMSG
("pointer block id wrong 4");

2280 
	`mf_put
(
mÂ
, 
hp
, 
FALSE
, FALSE);

2281  
FAIL
;

2283 
cou¡
 = --(
µ
->
pb_cou¡
);

2284 i‡(
cou¡
 == 0)

2285 
	`mf_‰ì
(
mÂ
, 
hp
);

2288 i‡(
cou¡
 !
idx
)

2289 
	`vim_memmove
(&
µ
->
pb_poöãr
[
idx
], &pp->pb_pointer[idx + 1],

2290 (
size_t
)(
cou¡
 - 
idx
Ë* (
PTR_EN
));

2291 
	`mf_put
(
mÂ
, 
hp
, 
TRUE
, 
FALSE
);

2293 
buf
->
b_ml
.
ml_°ack_t›
 = 
°ack_idx
;

2295 i‡(
buf
->
b_ml
.
ml_locked_löódd
)

2297 
	`ml_löódd
(
buf
, buf->
b_ml
.
ml_locked_löódd
);

2298 
buf
->
b_ml
.
ml_°ack
[buf->b_ml.
ml_°ack_t›
].
ù_high
 +=

2299 
buf
->
b_ml
.
ml_locked_löódd
;

2301 ++(
buf
->
b_ml
.
ml_°ack_t›
);

2303  
OK
;

2306 
	`CHECK
(1, "deleted block 1?");

2308  
OK
;

2314 
ãxt_°¨t
 = 
dp
->
db_txt_°¨t
;

2315 
löe_°¨t
 = ((
dp
->
db_ödex
[
idx
]Ë& 
DB_INDEX_MASK
);

2316 i‡(
idx
 == 0)

2317 
löe_size
 = 
dp
->
db_txt_íd
 - 
löe_°¨t
;

2319 
löe_size
 = ((
dp
->
db_ödex
[
idx
 - 1]Ë& 
DB_INDEX_MASK
Ë- 
löe_°¨t
;

2320 
	`vim_memmove
((*)
dp
 + 
ãxt_°¨t
 + 
löe_size
, (*)dp +Åext_start,

2321 (
size_t
)(
löe_°¨t
 - 
ãxt_°¨t
));

2327 
i
 = 
idx
; i < 
cou¡
 - 1; ++i)

2328 
dp
->
db_ödex
[
i
] = dp->db_ödex[ò+ 1] + 
löe_size
;

2330 
dp
->
db_‰ì
 +
löe_size
 + 
INDEX_SIZE
;

2331 
dp
->
db_txt_°¨t
 +
löe_size
;

2332 --(
dp
->
db_löe_cou¡
);

2337 
buf
->
b_ml
.
ml_Êags
 |(
ML_LOCKED_DIRTY
 | 
ML_LOCKED_POS
);

2339  
OK
;

2340 
	}
}

2346 
	$ml_£tm¨ked
(
 um
)

2347 
löír_t
 
 um
;

2349 
BHDR
 *
hp
;

2350 
DATA_BL
 *
dp
;

2352 i‡(
 um
 < 1 ||Ünum > 
curbuf
->
b_ml
.
ml_löe_cou¡
 ||

2353 
curbuf
->
b_ml
.
ml_mÂ
 =
NULL
)

2356 i‡(
lowe°_m¨ked
 =0 ||Üowe°_m¨ked > 
 um
)

2357 
lowe°_m¨ked
 = 
 um
;

2364 i‡((
hp
 = 
	`ml_föd_löe
(
curbuf
, 
 um
, 
ML_FIND
)Ë=
NULL
)

2367 
dp
 = (
DATA_BL
 *)(
hp
->
bh_d©a
);

2368 
dp
->
db_ödex
[
 um
 - 
curbuf
->
b_ml
.
ml_locked_low
] |
DB_MARKED
;

2369 
curbuf
->
b_ml
.
ml_Êags
 |
ML_LOCKED_DIRTY
;

2370 
	}
}

2375 
löír_t


2376 
	$ml_fú°m¨ked
()

2378 
BHDR
 *
hp
;

2379 
DATA_BL
 *
dp
;

2380 
löír_t
 
 um
;

2381 
i
;

2383 i‡(
curbuf
->
b_ml
.
ml_mÂ
 =
NULL
)

2384  (
löír_t
) 0;

2390 
 um
 = 
lowe°_m¨ked
;Ünum <
curbuf
->
b_ml
.
ml_löe_cou¡
; )

2397 i‡((
hp
 = 
	`ml_föd_löe
(
curbuf
, 
 um
, 
ML_FIND
)Ë=
NULL
)

2398  (
löír_t
)0;

2400 
dp
 = (
DATA_BL
 *)(
hp
->
bh_d©a
);

2402 
i
 = 
 um
 - 
curbuf
->
b_ml
.
ml_locked_low
;

2403 
 um
 <
curbuf
->
b_ml
.
ml_locked_high
; ++
i
, ++lnum)

2404 i‡((
dp
->
db_ödex
[
i
]Ë& 
DB_MARKED
)

2406 (
dp
->
db_ödex
[
i
]Ë&
DB_INDEX_MASK
;

2407 
curbuf
->
b_ml
.
ml_Êags
 |
ML_LOCKED_DIRTY
;

2408 
lowe°_m¨ked
 = 
 um
 + 1;

2409  
 um
;

2413  (
löír_t
) 0;

2414 
	}
}

2420 
	$ml_has_m¨k
(
 um
)

2421 
löír_t
 
 um
;

2423 
BHDR
 *
hp
;

2424 
DATA_BL
 *
dp
;

2426 i‡(
curbuf
->
b_ml
.
ml_mÂ
 =
NULL
 ||

2427 (
hp
 = 
	`ml_föd_löe
(
curbuf
, 
 um
, 
ML_FIND
)Ë=
NULL
)

2428  
FALSE
;

2430 
dp
 = (
DATA_BL
 *)(
hp
->
bh_d©a
);

2431  ()((
dp
->
db_ödex
[
 um
 - 
curbuf
->
b_ml
.
ml_locked_low
]Ë& 
DB_MARKED
);

2432 
	}
}

2438 
	$ml_˛órm¨ked
()

2440 
BHDR
 *
hp
;

2441 
DATA_BL
 *
dp
;

2442 
löír_t
 
 um
;

2443 
i
;

2445 i‡(
curbuf
->
b_ml
.
ml_mÂ
 =
NULL
)

2451 
 um
 = 
lowe°_m¨ked
;Ünum <
curbuf
->
b_ml
.
ml_löe_cou¡
; )

2458 i‡((
hp
 = 
	`ml_föd_löe
(
curbuf
, 
 um
, 
ML_FIND
)Ë=
NULL
)

2461 
dp
 = (
DATA_BL
 *)(
hp
->
bh_d©a
);

2463 
i
 = 
 um
 - 
curbuf
->
b_ml
.
ml_locked_low
;

2464 
 um
 <
curbuf
->
b_ml
.
ml_locked_high
; ++
i
, ++lnum)

2465 i‡((
dp
->
db_ödex
[
i
]Ë& 
DB_MARKED
)

2467 (
dp
->
db_ödex
[
i
]Ë&
DB_INDEX_MASK
;

2468 
curbuf
->
b_ml
.
ml_Êags
 |
ML_LOCKED_DIRTY
;

2472 
lowe°_m¨ked
 = 0;

2474 
	}
}

2480 
	$ml_Êush_löe
(
buf
)

2481 
BUF
 *
buf
;

2483 
BHDR
 *
hp
;

2484 
DATA_BL
 *
dp
;

2485 
löír_t
 
 um
;

2486 
ch¨_u
 *
√w_löe
;

2487 
ch¨_u
 *
ﬁd_löe
;

2488 
cﬁƒ_t
 
√w_Àn
;

2489 
ﬁd_Àn
;

2490 
exåa
;

2491 
idx
;

2492 
°¨t
;

2493 
cou¡
;

2494 
i
;

2496 i‡(
buf
->
b_ml
.
ml_löe_ um
 == 0 ||

2497 
buf
->
b_ml
.
ml_mÂ
 =
NULL
)

2500 i‡(
buf
->
b_ml
.
ml_Êags
 & 
ML_LINE_DIRTY
)

2502 
 um
 = 
buf
->
b_ml
.
ml_löe_ um
;

2503 
√w_löe
 = 
buf
->
b_ml
.
ml_löe_±r
;

2505 
hp
 = 
	`ml_föd_löe
(
buf
, 
 um
, 
ML_FIND
);

2506 i‡(
hp
 =
NULL
)

2507 
	`EMSG2
("C™nŸ födÜöê%ld", (
ch¨_u
 *)
 um
);

2510 
dp
 = (
DATA_BL
 *)(
hp
->
bh_d©a
);

2511 
idx
 = 
 um
 - 
buf
->
b_ml
.
ml_locked_low
;

2512 
°¨t
 = ((
dp
->
db_ödex
[
idx
]Ë& 
DB_INDEX_MASK
);

2513 
ﬁd_löe
 = (
ch¨_u
 *)
dp
 + 
°¨t
;

2514 i‡(
idx
 == 0)

2515 
ﬁd_Àn
 = 
dp
->
db_txt_íd
 - 
°¨t
;

2517 
ﬁd_Àn
 = (
dp
->
db_ödex
[
idx
 - 1] & 
DB_INDEX_MASK
Ë- 
°¨t
;

2518 
√w_Àn
 = 
	`STRLEN
(
√w_löe
) + 1;

2519 
exåa
 = 
√w_Àn
 - 
ﬁd_Àn
;

2524 i‡(()
dp
->
db_‰ì
 >
exåa
)

2527 
cou¡
 = 
buf
->
b_ml
.
ml_locked_high
 - buf->b_ml.
ml_locked_low
 + 1;

2528 i‡(
exåa
 !0 && 
idx
 < 
cou¡
 - 1)

2531 
	`vim_memmove
((*)
dp
 + dp->
db_txt_°¨t
 - 
exåa
,

2532 (*)
dp
 + dp->
db_txt_°¨t
,

2533 (
size_t
)(
°¨t
 - 
dp
->
db_txt_°¨t
));

2536 
i
 = 
idx
 + 1; i < 
cou¡
; ++i)

2537 
dp
->
db_ödex
[
i
] -
exåa
;

2539 
dp
->
db_ödex
[
idx
] -
exåa
;

2542 
dp
->
db_‰ì
 -
exåa
;

2543 
dp
->
db_txt_°¨t
 -
exåa
;

2546 
	`vim_memmove
(
ﬁd_löe
 - 
exåa
, 
√w_löe
, (
size_t
)
√w_Àn
);

2547 
buf
->
b_ml
.
ml_Êags
 |(
ML_LOCKED_DIRTY
 | 
ML_LOCKED_POS
);

2555 ()
	`ml_dñëe_öt
(
buf
, 
 um
, 
FALSE
);

2556 ()
	`ml_≠≥nd_öt
(
buf
, 
 um
 - 1, 
√w_löe
, 
√w_Àn
, 
FALSE
);

2559 
	`vim_‰ì
(
√w_löe
);

2562 
buf
->
b_ml
.
ml_löe_ um
 = 0;

2563 
	}
}

2568 
BHDR
 *

2569 
	$ml_√w_d©a
(
mÂ
, 
√g©ive
, 
∑ge_cou¡
)

2570 
MEMFILE
 *
mÂ
;

2571 
√g©ive
;

2572 
∑ge_cou¡
;

2574 
BHDR
 *
hp
;

2575 
DATA_BL
 *
dp
;

2577 i‡((
hp
 = 
	`mf_√w
(
mÂ
, 
√g©ive
, 
∑ge_cou¡
)Ë=
NULL
)

2578  
NULL
;

2580 
dp
 = (
DATA_BL
 *)(
hp
->
bh_d©a
);

2581 
dp
->
db_id
 = 
DATA_ID
;

2582 
dp
->
db_txt_°¨t
 = dp->
db_txt_íd
 = 
∑ge_cou¡
 * 
mÂ
->
mf_∑ge_size
;

2583 
dp
->
db_‰ì
 = dp->
db_txt_°¨t
 - 
HEADER_SIZE
;

2584 
dp
->
db_löe_cou¡
 = 0;

2586  
hp
;

2587 
	}
}

2592 
BHDR
 *

2593 
	$ml_√w_±r
(
mÂ
)

2594 
MEMFILE
 *
mÂ
;

2596 
BHDR
 *
hp
;

2597 
PTR_BL
 *
µ
;

2599 i‡((
hp
 = 
	`mf_√w
(
mÂ
, 
FALSE
, 1)Ë=
NULL
)

2600  
NULL
;

2602 
µ
 = (
PTR_BL
 *)(
hp
->
bh_d©a
);

2603 
µ
->
pb_id
 = 
PTR_ID
;

2604 
µ
->
pb_cou¡
 = 0;

2605 
µ
->
pb_cou¡_max
 = (
mÂ
->
mf_∑ge_size
 - (
PTR_BL
)Ë/ (
PTR_EN
) + 1;

2607  
hp
;

2608 
	}
}

2625 
BHDR
 *

2626 
	$ml_föd_löe
(
buf
, 
 um
, 
a˘i⁄
)

2627 
BUF
 *
buf
;

2628 
löír_t
 
 um
;

2629 
a˘i⁄
;

2631 
DATA_BL
 *
dp
;

2632 
PTR_BL
 *
µ
;

2633 
IPTR
 *
ù
;

2634 
BHDR
 *
hp
;

2635 
MEMFILE
 *
mÂ
;

2636 
löír_t
 
t
;

2637 
blockƒ_t
 
bnum
, 
bnum2
;

2638 
dúty
;

2639 
löír_t
 
low
, 
high
;

2640 
t›
;

2641 
∑ge_cou¡
;

2642 
idx
;

2644 
mÂ
 = 
buf
->
b_ml
.
ml_mÂ
;

2652 i‡(
buf
->
b_ml
.
ml_locked
)

2654 i‡(
	`ML_SIMPLE
(
a˘i⁄
Ë&& 
buf
->
b_ml
.
ml_locked_low
 <
 um
 &&

2655 
buf
->
b_ml
.
ml_locked_high
 >
 um
)

2658 i‡(
a˘i⁄
 =
ML_INSERT
)

2660 ++(
buf
->
b_ml
.
ml_locked_löódd
);

2661 ++(
buf
->
b_ml
.
ml_locked_high
);

2663 i‡(
a˘i⁄
 =
ML_DELETE
)

2665 --(
buf
->
b_ml
.
ml_locked_löódd
);

2666 --(
buf
->
b_ml
.
ml_locked_high
);

2668  (
buf
->
b_ml
.
ml_locked
);

2671 
	`mf_put
(
mÂ
, 
buf
->
b_ml
.
ml_locked
, buf->b_ml.
ml_Êags
 & 
ML_LOCKED_DIRTY
,

2672 
buf
->
b_ml
.
ml_Êags
 & 
ML_LOCKED_POS
);

2673 
buf
->
b_ml
.
ml_locked
 = 
NULL
;

2679 i‡(
buf
->
b_ml
.
ml_locked_löódd
)

2680 
	`ml_löódd
(
buf
, buf->
b_ml
.
ml_locked_löódd
);

2683 i‡(
a˘i⁄
 =
ML_FLUSH
)

2684  
NULL
;

2686 
bnum
 = 1;

2687 
∑ge_cou¡
 = 1;

2688 
low
 = 1;

2689 
high
 = 
buf
->
b_ml
.
ml_löe_cou¡
;

2691 i‡(
a˘i⁄
 =
ML_FIND
)

2693 
t›
 = 
buf
->
b_ml
.
ml_°ack_t›
 - 1;Åop >= 0; --top)

2695 
ù
 = &(
buf
->
b_ml
.
ml_°ack
[
t›
]);

2696 i‡(
ù
->
ù_low
 <
 um
 && ip->
ù_high
 >=Ünum)

2698 
bnum
 = 
ù
->
ù_bnum
;

2699 
low
 = 
ù
->
ù_low
;

2700 
high
 = 
ù
->
ù_high
;

2701 
buf
->
b_ml
.
ml_°ack_t›
 = 
t›
;

2705 i‡(
t›
 < 0)

2706 
buf
->
b_ml
.
ml_°ack_t›
 = 0;

2709 
buf
->
b_ml
.
ml_°ack_t›
 = 0;

2716 i‡((
hp
 = 
	`mf_gë
(
mÂ
, 
bnum
, 
∑ge_cou¡
)Ë=
NULL
)

2717 
îr‹_noblock
;

2722 i‡(
a˘i⁄
 =
ML_INSERT
)

2723 ++
high
;

2724 i‡(
a˘i⁄
 =
ML_DELETE
)

2725 --
high
;

2727 
dp
 = (
DATA_BL
 *)(
hp
->
bh_d©a
);

2728 i‡(
dp
->
db_id
 =
DATA_ID
)

2730 
buf
->
b_ml
.
ml_locked
 = 
hp
;

2731 
buf
->
b_ml
.
ml_locked_low
 = 
low
;

2732 
buf
->
b_ml
.
ml_locked_high
 = 
high
;

2733 
buf
->
b_ml
.
ml_locked_löódd
 = 0;

2734 
buf
->
b_ml
.
ml_Êags
 &~(
ML_LOCKED_DIRTY
 | 
ML_LOCKED_POS
);

2735  
hp
;

2738 
µ
 = (
PTR_BL
 *)(
dp
);

2739 i‡(
µ
->
pb_id
 !
PTR_ID
)

2741 
	`EMSG
("pointer block id wrong");

2742 
îr‹_block
;

2745 i‡((
t›
 = 
	`ml_add_°ack
(
buf
)) < 0)

2746 
îr‹_block
;

2747 
ù
 = &(
buf
->
b_ml
.
ml_°ack
[
t›
]);

2748 
ù
->
ù_bnum
 = 
bnum
;

2749 
ù
->
ù_low
 = 
low
;

2750 
ù
->
ù_high
 = 
high
;

2751 
ù
->
ù_ödex
 = -1;

2753 
dúty
 = 
FALSE
;

2754 
idx
 = 0; idx < ()
µ
->
pb_cou¡
; ++idx)

2756 
t
 = 
µ
->
pb_poöãr
[
idx
].
≥_löe_cou¡
;

2757 
	`CHECK
(
t
 == 0, "pe_line_count is zero");

2758 i‡((
low
 +
t
Ë> 
 um
)

2760 
ù
->
ù_ödex
 = 
idx
;

2761 
bnum
 = 
µ
->
pb_poöãr
[
idx
].
≥_bnum
;

2762 
∑ge_cou¡
 = 
µ
->
pb_poöãr
[
idx
].
≥_∑ge_cou¡
;

2763 
high
 = 
low
 - 1;

2764 
low
 -
t
;

2769 i‡(
bnum
 < 0)

2771 
bnum2
 = 
	`mf_å™s_dñ
(
mÂ
, 
bnum
);

2772 i‡(
bnum
 !
bnum2
)

2774 
bnum
 = 
bnum2
;

2775 
µ
->
pb_poöãr
[
idx
].
≥_bnum
 = 
bnum
;

2776 
dúty
 = 
TRUE
;

2783 i‡(
idx
 >()
µ
->
pb_cou¡
)

2785 i‡(
 um
 > 
buf
->
b_ml
.
ml_löe_cou¡
)

2786 
	`emsg2
((
ch¨_u
 *)"löênumbî ouào‡ønge: %ldÖa°Åhêíd", (ch¨_u *)(
 um
 - 
buf
->
b_ml
.
ml_löe_cou¡
));

2789 
	`emsg2
((
ch¨_u
 *)"löêcou¡ wr⁄g i¿block %ld", (ch¨_u *)(
bnum
));

2790 
îr‹_block
;

2792 i‡(
a˘i⁄
 =
ML_DELETE
)

2794 
µ
->
pb_poöãr
[
idx
].
≥_löe_cou¡
--;

2795 
dúty
 = 
TRUE
;

2797 i‡(
a˘i⁄
 =
ML_INSERT
)

2799 
µ
->
pb_poöãr
[
idx
].
≥_löe_cou¡
++;

2800 
dúty
 = 
TRUE
;

2802 
	`mf_put
(
mÂ
, 
hp
, 
dúty
, 
FALSE
);

2805 
îr‹_block
:

2806 
	`mf_put
(
mÂ
, 
hp
, 
FALSE
, FALSE);

2807 
îr‹_noblock
:

2813 i‡(
a˘i⁄
 =
ML_DELETE
)

2814 
	`ml_löódd
(
buf
, 1);

2815 i‡(
a˘i⁄
 =
ML_INSERT
)

2816 
	`ml_löódd
(
buf
, -1);

2817 
buf
->
b_ml
.
ml_°ack_t›
 = 0;

2818  
NULL
;

2819 
	}
}

2827 
	$ml_add_°ack
(
buf
)

2828 
BUF
 *
buf
;

2830 
t›
;

2831 
IPTR
 *
√w°ack
;

2833 
t›
 = 
buf
->
b_ml
.
ml_°ack_t›
;

2836 i‡(
t›
 =
buf
->
b_ml
.
ml_°ack_size
)

2838 
	`CHECK
(
t›
 > 0, "Stack size increases");

2840 
√w°ack
 = (
IPTR
 *)
	`Æloc
(()(IPTR) *

2841 (
buf
->
b_ml
.
ml_°ack_size
 + 
STACK_INCR
));

2842 i‡(
√w°ack
 =
NULL
)

2844 
	`vim_memmove
(
√w°ack
, 
buf
->
b_ml
.
ml_°ack
, (
size_t
)
t›
 * (
IPTR
));

2845 
	`vim_‰ì
(
buf
->
b_ml
.
ml_°ack
);

2846 
buf
->
b_ml
.
ml_°ack
 = 
√w°ack
;

2847 
buf
->
b_ml
.
ml_°ack_size
 +
STACK_INCR
;

2850 
buf
->
b_ml
.
ml_°ack_t›
++;

2851  
t›
;

2852 
	}
}

2865 
	$ml_löódd
(
buf
, 
cou¡
)

2866 
BUF
 *
buf
;

2867 
cou¡
;

2869 
idx
;

2870 
IPTR
 *
ù
;

2871 
PTR_BL
 *
µ
;

2872 
MEMFILE
 *
mÂ
 = 
buf
->
b_ml
.
ml_mÂ
;

2873 
BHDR
 *
hp
;

2875 
idx
 = 
buf
->
b_ml
.
ml_°ack_t›
 - 1; idx >= 0; --idx)

2877 
ù
 = &(
buf
->
b_ml
.
ml_°ack
[
idx
]);

2878 i‡((
hp
 = 
	`mf_gë
(
mÂ
, 
ù
->
ù_bnum
, 1)Ë=
NULL
)

2880 
µ
 = (
PTR_BL
 *)(
hp
->
bh_d©a
);

2881 i‡(
µ
->
pb_id
 !
PTR_ID
)

2883 
	`mf_put
(
mÂ
, 
hp
, 
FALSE
, FALSE);

2884 
	`EMSG
("pointer block id wrong 2");

2887 
µ
->
pb_poöãr
[
ù
->
ù_ödex
].
≥_löe_cou¡
 +
cou¡
;

2888 
ù
->
ù_high
 +
cou¡
;

2889 
	`mf_put
(
mÂ
, 
hp
, 
TRUE
, 
FALSE
);

2891 
	}
}

2896 
ch¨_u
 *

2897 
	$makesw≠«me
(
buf
, 
dú_«me
)

2898 
BUF
 *
buf
;

2899 
ch¨_u
 *
dú_«me
;

2901 
ch¨_u
 *
r
, *
s
, *
‚ame
;

2903 #ifde‡
VMS


2904 
r
 = 
	`mod«me
(
buf
->
b_xfûíame
, (
ch¨_u
 *)"_swp");

2906 
r
 = 
	`mod«me
(
buf
->
b_xfûíame
, (
ch¨_u
 *)".swp");

2913 i‡(*
dú_«me
 ='.' || 
r
 =
NULL
)

2914  
r
;

2916 
‚ame
 = 
	`gëèû
(
r
);

2917 
s
 = 
	`c⁄ˇt_‚ames
(
dú_«me
, 
‚ame
, 
TRUE
);

2918 
	`vim_‰ì
(
r
);

2919  
s
;

2920 
	}
}

2930 
ch¨_u
 *

2931 
	$födsw≠«me
(
buf
, 
dúp
, 
ﬁd_‚ame
)

2932 
BUF
 *
buf
;

2933 
ch¨_u
 **
dúp
;

2934 
ch¨_u
 *
ﬁd_‚ame
;

2936 
ch¨_u
 *
‚ame
;

2937 
n
;

2938 
time_t
 
x
;

2939 
ch¨_u
 *
dú_«me
;

2941 #ifde‡
AMIGA


2942 
BPTR
 
fh
;

2945 #i‚de‡
SHORT_FNAME


2946 
r
;

2947 
FILE
 *
dummyfd
 = 
NULL
;

2955 i‡(!(
buf
->
b_p_¢
 || buf->
b_sh‹äame
Ë&& buf->
b_xfûíame
 &&

2956 
	`gë≥rm
(
buf
->
b_xfûíame
) < 0)

2957 
dummyfd
 = 
	`f›í
((*)
buf
->
b_xfûíame
, "w");

2964 
dú_«me
 = 
	`Æloc
(()
	`STRLEN
(*
dúp
) + 1);

2965 i‡(
dú_«me
 !
NULL
)

2966 ()
	`c›y_›ti⁄_∑π
(
dúp
, 
dú_«me
, 31000, ",");

2971 i‡(
dú_«me
 =
NULL
)

2972 
‚ame
 = 
NULL
;

2974 
‚ame
 = 
	`makesw≠«me
(
buf
, 
dú_«me
);

2978 i‡(
‚ame
 =
NULL
)

2980 i‡((
n
 = 
	`STRLEN
(
‚ame
)) == 0)

2982 
	`vim_‰ì
(
‚ame
);

2983 
‚ame
 = 
NULL
;

2986 #i‡(
	`deföed
(
UNIX
Ë|| deföed(
OS2
)Ë&& !deföed(
ARCHIE
Ë&& !deföed(
SHORT_FNAME
)

2992 i‡(
‚ame
[
n
 - 1] ='p' && !(
buf
->
b_p_¢
 || buf->
b_sh‹äame
))

2994 
ch¨_u
 *
èû
;

2995 
ch¨_u
 *
‚ame2
;

2996 
°©
 
s1
, 
s2
;

2997 
f1
, 
f2
;

2998 
¸óãd1
 = 
FALSE
, 
¸óãd2
 = FALSE;

2999 
ßme
 = 
FALSE
;

3005 
èû
 = 
	`gëèû
(
buf
->
b_xfûíame
);

3006 i‡(
	`vim_°rchr
(
èû
, '.'Ë!
NULL
 || 
	`STRLEN
—aûË> (
size_t
)8)

3008 
‚ame2
 = 
	`Æloc
(
n
 + 1);

3009 i‡(
‚ame2
 !
NULL
)

3011 
	`STRCPY
(
‚ame2
, 
‚ame
);

3012 i‡(
	`vim_°rchr
(
èû
, '.'Ë!
NULL
)

3013 
‚ame2
[
n
 - 1] = 'x';

3015 
‚ame2
[
n
 - 5] += 1;

3019 
f1
 = 
	`›í
((*)
‚ame
, 
O_RDONLY
 | 
O_EXTRA
);

3020 i‡(
f1
 < 0)

3022 
f1
 = 
	`›í
((*)
‚ame
, 
O_RDWR
|
O_CREAT
|
O_EXCL
|
O_EXTRA


3023 #ifde‡
AMIGA


3026 #ifde‡
UNIX


3027 , (
mode_t
)0600);

3029 #i‡
	`deföed
(
MSDOS
Ë|| deföed(
WIN32
Ë|| deföed(
OS2
)

3030 , 
S_IREAD
 | 
S_IWRITE
);

3032 #i‡
	`deföed
(
OS2
)

3033 i‡(
f1
 < 0 && 
î∫o
 =
ENOENT
)

3034 
ßme
 = 
TRUE
;

3036 
¸óãd1
 = 
TRUE
;

3038 i‡(
f1
 >= 0)

3040 
f2
 = 
	`›í
((*)
‚ame2
, 
O_RDONLY
 | 
O_EXTRA
);

3041 i‡(
f2
 < 0)

3043 
f2
 = 
	`›í
((*)
‚ame2
,

3044 
O_RDWR
|
O_CREAT
|
O_EXCL
|
O_EXTRA


3045 #ifde‡
AMIGA


3048 #ifde‡
UNIX


3049 , (
mode_t
)0600);

3051 #i‡
	`deföed
(
MSDOS
Ë|| deföed(
WIN32
Ë|| deföed(
OS2
)

3052 , 
S_IREAD
 | 
S_IWRITE
);

3054 
¸óãd2
 = 
TRUE
;

3056 i‡(
f2
 >= 0)

3062 i‡(
	`f°©
(
f1
, &
s1
) != -1 &&

3063 
	`f°©
(
f2
, &
s2
) != -1 &&

3064 
s1
.
°_dev
 =
s2
.st_dev &&

3065 
s1
.
°_öo
 =
s2
.st_ino)

3066 
ßme
 = 
TRUE
;

3067 
	`˛o£
(
f2
);

3068 i‡(
¸óãd2
)

3069 
	`vim_ªmove
(
‚ame2
);

3071 
	`˛o£
(
f1
);

3072 i‡(
¸óãd1
)

3073 
	`vim_ªmove
(
‚ame
);

3075 
	`vim_‰ì
(
‚ame2
);

3076 i‡(
ßme
)

3078 
buf
->
b_sh‹äame
 = 
TRUE
;

3079 
	`vim_‰ì
(
‚ame
);

3080 
‚ame
 = 
	`makesw≠«me
(
buf
, 
dú_«me
);

3090 i‡(
	`gë≥rm
(
‚ame
) < 0)

3092 #ifde‡
AMIGA


3093 
fh
 = 
	`O≥n
((
UBYTE
 *)
‚ame
, ()
MODE_NEWFILE
);

3099 i‡(
fh
 !(
BPTR
)
NULL
)

3101 
	`Clo£
(
fh
);

3104 i‡(
	`IoEº
(Ë!
ERROR_OBJECT_IN_USE
 &&

3105 
	`IoEº
(Ë!
ERROR_OBJECT_EXISTS
)

3112 i‡(
ﬁd_‚ame
 !
NULL
 && 
	`‚amecmp
(
‚ame
, old_fname) == 0)

3118 i‡(
‚ame
[
n
 - 1] == 'p')

3120 #i‚de‡
SHORT_FNAME


3129 i‡(!(
buf
->
b_p_¢
 || buf->
b_sh‹äame
))

3131 
‚ame
[
n
 - 1] = 'x';

3132 
r
 = 
	`gë≥rm
(
‚ame
);

3133 
‚ame
[
n
 - 1] = 'p';

3134 i‡(
r
 >= 0)

3136 
buf
->
b_sh‹äame
 = 
TRUE
;

3137 
	`vim_‰ì
(
‚ame
);

3138 
‚ame
 = 
	`makesw≠«me
(
buf
, 
dú_«me
);

3149 i‡(!
ªcovîymode
 && 
buf
->
b_xfûíame
 !
NULL
 && !buf->
b_hñp
)

3151 
fd
;

3152 
block0
 
b0
;

3153 
dif„r
 = 
FALSE
;

3159 
fd
 = 
	`›í
((*)
‚ame
, 
O_RDONLY
 | 
O_EXTRA
);

3160 i‡(
fd
 >= 0)

3162 i‡(
	`ªad
(
fd
, (*)&
b0
, (b0)) == (b0))

3168 
	`ex∑nd_ív
(
b0
.
b0_‚ame
, 
NameBuff
, 
MAXPATHL
);

3169 #ifde‡
CHECK_INODE


3170 i‡(
	`‚amecmp_öo
(
buf
->
b_fûíame
, 
NameBuff
,

3171 
	`ch¨_to_l⁄g
(
b0
.
b0_öo
)))

3172 
dif„r
 = 
TRUE
;

3174 i‡(
	`‚amecmp
(
NameBuff
, 
buf
->
b_fûíame
) != 0)

3175 
dif„r
 = 
TRUE
;

3178 
	`˛o£
(
fd
);

3180 i‡(
dif„r
 =
FALSE
)

3182 
°©
 
°
;

3184 ++
no_waô_ªtu∫
;

3185 #ifde‡
SLEEP_IN_EMSG


3186 ++
d⁄t_¶ìp
;

3188 ()
	`EMSG
("ATTENTION");

3189 #ifde‡
SLEEP_IN_EMSG


3190 --
d⁄t_¶ìp
;

3192 
	`MSG_OUTSTR
("\nFoundá swap file byÅheÇame \"");

3193 
	`msg_home_ª∂a˚
(
‚ame
);

3194 
	`MSG_OUTSTR
("\"\n");

3195 
	`sw≠fûe_öfo
(
‚ame
);

3196 
	`MSG_OUTSTR
("While opening file \"");

3197 
	`msg_ouâøns
(
buf
->
b_xfûíame
);

3198 
	`MSG_OUTSTR
("\"\n");

3199 i‡(
	`°©
((*)
buf
->
b_xfûíame
, &
°
) != -1)

3201 
	`MSG_OUTSTR
(" dated: ");

3202 
x
 = 
°
.
°_mtime
;

3203 
	`MSG_OUTSTR
(
	`˘ime
(&
x
));

3205 
	`MSG_OUTSTR
("\n(1) AnotherÖrogram may beÉditingÅhe same file.\n");

3206 
	`MSG_OUTSTR
(" IfÅhis isÅhe case, quitÅhisÉdit sessionÅoávoid having\n");

3207 
	`MSG_OUTSTR
("Åwo different instances ofÅhe same file when making changes.\n");

3208 
	`MSG_OUTSTR
("\n(2) AnÉdit session forÅhis file crashed.\n");

3209 
	`MSG_OUTSTR
(" IfÅhis isÅhe case, use \":recover\" or \"vim -r ");

3210 
	`msg_ouâøns
(
buf
->
b_xfûíame
);

3211 
	`MSG_OUTSTR
("\"\nÅoÑecoverÅhe changes (see \":helpÑecovery)\".\n");

3212 
	`MSG_OUTSTR
(" If you didÅhisálready, deleteÅhe swap file \"");

3213 
	`msg_ouâøns
(
‚ame
);

3214 
	`MSG_OUTSTR
("\"\nÅoávoidÅhis message.\n\n");

3215 
cmdlöe_row
 = 
msg_row
;

3216 --
no_waô_ªtu∫
;

3217 
√ed_waô_ªtu∫
 = 
TRUE
;

3222 i‡(
‚ame
[
n
 - 1] == 'a')

3224 
	`vim_‰ì
(
‚ame
);

3225 
‚ame
 = 
NULL
;

3228 --
‚ame
[
n
 - 1];

3231 
	`vim_‰ì
(
dú_«me
);

3232 #i‚de‡
SHORT_FNAME


3233 i‡(
dummyfd
)

3235 
	`f˛o£
(
dummyfd
);

3236 
	`vim_ªmove
(
buf
->
b_xfûíame
);

3239  
‚ame
;

3240 
	}
}

3243 
	$b0_magic_wr⁄g
(
b0p
)

3244 
ZERO_BL
 *
b0p
;

3246  (
b0p
->
b0_magic_l⁄g
 !()
B0_MAGIC_LONG
 ||

3247 
b0p
->
b0_magic_öt
 !()
B0_MAGIC_INT
 ||

3248 
b0p
->
b0_magic_sh‹t
 !()
B0_MAGIC_SHORT
 ||

3249 
b0p
->
b0_magic_ch¨
 !
B0_MAGIC_CHAR
);

3250 
	}
}

3252 #ifde‡
CHECK_INODE


3299 
	$‚amecmp_öo
(
‚ame_c
, 
‚ame_s
, 
öo_block0
)

3300 
ch¨_u
 *
‚ame_c
;

3301 
ch¨_u
 *
‚ame_s
;

3302 
öo_block0
;

3304 
°©
 
°
;

3305 
öo_c
 = 0;

3306 
öo_s
;

3307 
ch¨_u
 
buf_c
[
MAXPATHL
];

3308 
ch¨_u
 
buf_s
[
MAXPATHL
];

3309 
ªtvÆ_c
;

3310 
ªtvÆ_s
;

3313 i‡(
	`°©
((*)
‚ame_c
, &
°
) == 0)

3314 
öo_c
 = 
°
.
°_öo
;

3321 i‡(
	`°©
((*)
‚ame_s
, &
°
) == 0)

3322 
öo_s
 = 
°
.
°_öo
;

3324 
öo_s
 = 
öo_block0
;

3326 i‡(
öo_c
 && 
öo_s
)

3327  (
öo_c
 !
öo_s
);

3333 
ªtvÆ_c
 = 
	`FuŒName
(
‚ame_c
, 
buf_c
, 
MAXPATHL
, 
TRUE
);

3334 
ªtvÆ_s
 = 
	`FuŒName
(
‚ame_s
, 
buf_s
, 
MAXPATHL
, 
TRUE
);

3335 i‡(
ªtvÆ_c
 =
OK
 && 
ªtvÆ_s
 == OK)

3336  (
	`STRCMP
(
buf_c
, 
buf_s
) != 0);

3342 i‡(
öo_s
 =0 && 
öo_c
 =0 && 
ªtvÆ_c
 =
FAIL
 && 
ªtvÆ_s
 == FAIL)

3343  
FALSE
;

3344  
TRUE
;

3345 
	}
}

3353 
	$l⁄g_to_ch¨
(
n
, 
s
)

3354 
n
;

3355 
ch¨_u
 *
s
;

3357 
s
[0] = (
n
 & 0xff);

3358 
n
 >>= 8;

3359 
s
[1] = (
n
 & 0xff);

3360 
n
 >>= 8;

3361 
s
[2] = (
n
 & 0xff);

3362 
n
 >>= 8;

3363 
s
[3] = (
n
 & 0xff);

3364 
	}
}

3367 
	$ch¨_to_l⁄g
(
s
)

3368 
ch¨_u
 *
s
;

3370 
ªtvÆ
;

3372 
ªtvÆ
 = 
s
[3];

3373 
ªtvÆ
 <<= 8;

3374 
ªtvÆ
 +
s
[2];

3375 
ªtvÆ
 <<= 8;

3376 
ªtvÆ
 +
s
[1];

3377 
ªtvÆ
 <<= 8;

3378 
ªtvÆ
 +
s
[0];

3380  
ªtvÆ
;

3381 
	}
}

	@src/message.c

13 
	~"vim.h
"

14 
	~"globÆs.h
"

15 
	#MESSAGE


	)

16 
	~"¥Ÿo.h
"

17 
	~"›ti⁄.h
"

19 
msg_s¸ìn_outch¨
 
__ARGS
((
c
));

20 
msg_check_s¸ìn
 
__ARGS
(());

22 
	glöes_À·
 = -1;

30 
	$msg
(
s
)

31 
ch¨_u
 *
s
;

33 
	`msg_°¨t
();

34 i‡(
msg_highlight
)

35 
	`°¨t_highlight
();

36 
	`msg_ouâøns
(
s
);

37 i‡(
msg_highlight
)

39 
	`°›_highlight
();

40 
msg_highlight
 = 
FALSE
;

42 
	`msg_˛r_eos
();

43  
	`msg_íd
();

44 
	}
}

49 #i‚de‡
PROTO


50 
smsg
 
__ARGS
((
ch¨_u
 *, , , ,

55 
	$smsg
(
s
, 
a1
, 
a2
, 
a3
, 
a4
, 
a5
, 
a6
, 
a7
, 
a8
, 
a9
, 
a10
)

56 
ch¨_u
 *
s
;

57 
a1
, 
a2
, 
a3
, 
a4
, 
a5
, 
a6
, 
a7
, 
a8
, 
a9
, 
a10
;

59 
	`•rötf
((*)
IObuff
, (*)
s
, 
a1
, 
a2
, 
a3
, 
a4
, 
a5
, 
a6
, 
a7
, 
a8
, 
a9
, 
a10
);

60  
	`msg
(
IObuff
);

61 
	}
}

73 
	$emsg
(
s
)

74 
ch¨_u
 *
s
;

76 
ch¨_u
 *
Buf
;

77 #ifde‡
SLEEP_IN_EMSG


78 
ªtvÆ
;

80 
œ°_ um
 = 0;

81 
ch¨_u
 *
œ°_sourcög_«me
 = 
NULL
;

83 i‡(
emsg_off
)

84  
TRUE
;

86 i‡(
globÆ_busy
)

87 ++
globÆ_busy
;

89 i‡(
p_eb
)

90 
	`bìp_Êush
();

92 
	`Êush_buf„rs
(
FALSE
);

93 
did_emsg
 = 
TRUE
;

94 ++
msg_s¸ﬁl
;

95 ()
	`£t_highlight
('e');

96 
msg_highlight
 = 
TRUE
;

97 i‡(
msg_s¸ﬁÀd
)

98 
√ed_waô_ªtu∫
 = 
TRUE
;

106 i‡(
sourcög_«me
 !
NULL
 &&

107 (
sourcög_«me
 !
œ°_sourcög_«me
 || 
sourcög_ um
 !
œ°_ um
)

108 && (
Buf
 = 
	`Æloc
(
MAXPATHL
 + 30)Ë!
NULL
)

110 ++
no_waô_ªtu∫
;

111 i‡(
sourcög_«me
 !
œ°_sourcög_«me
)

113 
	`•rötf
((*)
Buf
, "Error detected whileÖrocessing %s:",

114 
sourcög_«me
);

115 
	`msg
(
Buf
);

116 
msg_highlight
 = 
TRUE
;

120 i‡(
sourcög_ um
 != 0)

122 ()
	`£t_highlight
('n');

123 
	`•rötf
((*)
Buf
, "löê%4ld:", 
sourcög_ um
);

124 
	`msg
(
Buf
);

125 ()
	`£t_highlight
('e');

126 
msg_highlight
 = 
TRUE
;

128 --
no_waô_ªtu∫
;

129 
œ°_ um
 = 
sourcög_ um
;

130 
	`vim_‰ì
(
Buf
);

132 
œ°_sourcög_«me
 = 
sourcög_«me
;

134 #ifde‡
SLEEP_IN_EMSG


140 
ªtvÆ
 = 
	`msg
(
s
);

141 i‡(
ªtvÆ
)

143 i‡(
d⁄t_¶ìp
 || 
√ed_waô_ªtu∫
)

144 
√ed_¶ìp
 = 
TRUE
;

146 
	`mch_dñay
(1000L, 
TRUE
);

149  
ªtvÆ
;

151 
emsg_⁄_di•œy
 = 
TRUE
;

152  
	`msg
(
s
);

154 
	}
}

157 
	$emsg2
(
s
, 
a1
)

158 
ch¨_u
 *
s
, *
a1
;

160 
	`•rötf
((*)
IObuff
, (*)
s
, (*)
a1
);

161  
	`emsg
(
IObuff
);

162 
	}
}

165 
	$emsgn
(
s
, 
n
)

166 
ch¨_u
 *
s
;

167 
n
;

169 
	`•rötf
((*)
IObuff
, (*)
s
, 
n
);

170  
	`emsg
(
IObuff
);

171 
	}
}

178 
	$msg_åunc
(
s
)

179 
ch¨_u
 *
s
;

181 
n
;

183 i‡(
	`sh‹tmess
(
SHM_TRUNC
Ë&& (
n
 = ()
	`STRLEN
(
s
) -

184 ()(
Rows
 - 
cmdlöe_row
 - 1Ë* 
Cﬁumns
 - 
sc_cﬁ
 + 1) > 0)

186 
s
[
n
] = '<';

187  
	`msg
(
s
 + 
n
);

190  
	`msg
(
s
);

191 
	}
}

200 
	$waô_ªtu∫
(
ªdøw
)

201 
ªdøw
;

203 
c
;

204 
ﬁdSèã
;

205 
tmpSèã
;

207 i‡(
ªdøw
 =
TRUE
)

208 
mu°_ªdøw
 = 
CLEAR
;

214 i‡(
no_waô_ªtu∫
)

216 
√ed_waô_ªtu∫
 = 
TRUE
;

217 
cmdlöe_row
 = 
msg_row
;

220 
ﬁdSèã
 = 
Sèã
;

221 i‡(
quô_m‹e
)

223 
c
 = 
CR
;

224 
quô_m‹e
 = 
FALSE
;

225 
gŸ_öt
 = 
FALSE
;

229 
Sèã
 = 
HITRETURN
;

230 #ifde‡
USE_MOUSE


231 
	`£tmou£
();

233 i‡(
msg_didout
)

234 
	`msg_outch¨
('\n');

235 i‡(
gŸ_öt
)

236 
	`MSG_OUTSTR
("Interrupt: ");

238 ()
	`£t_highlight
('r');

239 
	`°¨t_highlight
();

240 #ifde‡
ORG_HITRETURN


241 
	`MSG_OUTSTR
("Press RETURNÅo continue");

242 
	`°›_highlight
();

244 
c
 = 
	`vgëc
();

245 } 
	`vim_°rchr
((
ch¨_u
 *)"\r\n: ", 
c
Ë=
NULL
);

246 i‡(
c
 == ':')

247 
	`°uffch¨Ródbuff
(
c
);

249 
	`MSG_OUTSTR
("Press RETURN orÉnter commandÅo continue");

250 
	`°›_highlight
();

253 
c
 = 
	`vgëc
();

254 
gŸ_öt
 = 
FALSE
;

255 } 
c
 =
	`Cål
('C')

256 #ifde‡
USE_GUI


257 || 
c
 =
K_SCROLLBAR
 || c =
K_HORIZ_SCROLLBAR


259 #ifde‡
USE_MOUSE


260 || 
c
 =
K_LEFTDRAG
 || c =
K_LEFTRELEASE


261 || 
c
 =
K_MIDDLEDRAG
 || c =
K_MIDDLERELEASE


262 || 
c
 =
K_RIGHTDRAG
 || c =
K_RIGHTRELEASE


263 || 
c
 =
K_IGNORE
 ||

264 (!
	`mou£_has
(
MOUSE_RETURN
) &&

265 (
c
 =
K_LEFTMOUSE
 ||

266 
c
 =
K_MIDDLEMOUSE
 ||

267 
c
 =
K_RIGHTMOUSE
))

270 
	`mch_bªakcheck
();

271 #ifde‡
USE_MOUSE


275 i‡(
c
 =
K_LEFTMOUSE
 || c =
K_MIDDLEMOUSE
 || c =
K_RIGHTMOUSE
)

276 
	`jump_to_mou£
(
MOUSE_SETPOS
);

279 i‡(
	`vim_°rchr
((
ch¨_u
 *)"\r\¿", 
c
Ë=
NULL
)

281 
	`°uffch¨Ródbuff
(
c
);

282 
do_ªdøw
 = 
TRUE
;

292 i‡(
c
 == ':' || c == '?' || c == '/')

294 
cmdlöe_row
 = 
msg_row
;

295 
skù_ªdøw
 = 
TRUE
;

296 
do_ªdøw
 = 
FALSE
;

303 
tmpSèã
 = 
Sèã
;

304 
Sèã
 = 
ﬁdSèã
;

305 #ifde‡
USE_MOUSE


306 
	`£tmou£
();

308 
	`msg_check
();

310 
√ed_waô_ªtu∫
 = 
FALSE
;

311 
emsg_⁄_di•œy
 = 
FALSE
;

312 #ifde‡
SLEEP_IN_EMSG


313 
√ed_¶ìp
 = 
FALSE
;

315 
msg_did™y
 = 
FALSE
;

316 
löes_À·
 = -1;

317 i‡(
kìp_msg
 !
NULL
 && 
	`löëabsize
(keep_msg) >=

318 (
Rows
 - 
cmdlöe_row
 - 1Ë* 
Cﬁumns
 + 
sc_cﬁ
)

319 
kìp_msg
 = 
NULL
;

321 i‡(
tmpSèã
 =
SETWSIZE
)

322 
	`£t_wösize
(0, 0, 
FALSE
);

323 i‡(!
skù_ªdøw
 && (
ªdøw
 =
TRUE
 || (
msg_s¸ﬁÀd
 &&Ñedraw != -1)))

325 
	`°¨âîmˇp
();

326 
	`upd©eS¸ìn
(
VALID
);

329 
d⁄t_waô_ªtu∫
 = 
TRUE
;

330 
	}
}

336 
	$msg_°¨t
()

338 
kìp_msg
 = 
NULL
;

339 
kìp_msg_highlight
 = 0;

340 i‡(!
msg_s¸ﬁl
 && 
fuŒ_s¸ìn
)

341 
	`msg_pos
(
cmdlöe_row
, 0);

342 i‡(
msg_didout
)

344 
	`msg_outch¨
('\n');

345 
cmdlöe_row
 = 
msg_row
;

347 i‡(!
msg_did™y
)

348 
löes_À·
 = 
cmdlöe_row
;

349 
msg_didout
 = 
FALSE
;

350 
	`curs‹_off
();

351 
	}
}

358 
	$msg_pos
(
row
, 
cﬁ
)

359 
row
, 
cﬁ
;

361 i‡(
row
 >= 0)

362 
msg_row
 = 
row
;

363 i‡(
cﬁ
 >= 0)

364 
msg_cﬁ
 = 
cﬁ
;

365 
	}
}

368 
	$msg_outch¨
(
c
)

369 
c
;

371 
ch¨_u
 
buf
[4];

373 i‡(
	`IS_SPECIAL
(
c
))

375 
buf
[0] = 
K_SPECIAL
;

376 
buf
[1] = 
	`K_SECOND
(
c
);

377 
buf
[2] = 
	`K_THIRD
(
c
);

378 
buf
[3] = 
NUL
;

382 
buf
[0] = 
c
;

383 
buf
[1] = 
NUL
;

385 
	`msg_out°r
(
buf
);

386 
	}
}

389 
	$msg_ouäum
(
n
)

390 
n
;

392 
ch¨_u
 
buf
[20];

394 
	`•rötf
((*)
buf
, "%ld", 
n
);

395 
	`msg_out°r
(
buf
);

396 
	}
}

399 
	$msg_home_ª∂a˚
(
‚ame
)

400 
ch¨_u
 *
‚ame
;

402 
ch¨_u
 *
«me
;

404 
«me
 = 
	`home_ª∂a˚_ßve
(
NULL
, 
‚ame
);

405 i‡(
«me
 !
NULL
)

406 
	`msg_ouâøns
(
«me
);

407 
	`vim_‰ì
(
«me
);

408 
	}
}

416 
	$msg_ouâøns
(
°r
)

417 
ch¨_u
 *
°r
;

419  
	`msg_ouâøns_Àn
(
°r
, ()
	`STRLEN
(str));

420 
	}
}

423 
	$msg_ouâøns_Àn
(
°r
, 
Àn
)

424 
ch¨_u
 *
°r
;

425 
Àn
;

427 
ªtvÆ
 = 0;

429 --
Àn
 >= 0)

431 
	`msg_out°r
(
	`å™sch¨
(*
°r
));

432 
ªtvÆ
 +
	`ch¨size
(*
°r
);

433 ++
°r
;

435  
ªtvÆ
;

436 
	}
}

452 
	$msg_ouâøns_•ecül
(
°r
, 
Æl
)

453 
ch¨_u
 *
°r
;

454 
Æl
;

456 
ªtvÆ
 = 0;

457 
ch¨_u
 *
°rög
;

458 
c
;

459 
modifõrs
;

461 
	`£t_highlight
('8');

462 ; *
°r
; ++str)

464 
c
 = *
°r
;

465 i‡(
c
 =
K_SPECIAL
 && 
°r
[1] !
NUL
 && str[2] != NUL)

467 
modifõrs
 = 0x0;

468 i‡(
°r
[1] =
KS_MODIFIER
)

470 
modifõrs
 = 
°r
[2];

471 
°r
 += 3;

472 
c
 = *
°r
;

474 i‡(
c
 =
K_SPECIAL
)

476 
c
 = 
	`TO_SPECIAL
(
°r
[1], str[2]);

477 
°r
 += 2;

478 i‡(
c
 =
K_ZERO
)

479 
c
 = 
NUL
;

481 i‡(
	`IS_SPECIAL
(
c
Ë|| 
modifõrs
)

483 
°rög
 = 
	`gë_•ecül_key_«me
(
c
, 
modifõrs
);

484 
	`°¨t_highlight
();

485 
	`msg_out°r
(
°rög
);

486 
ªtvÆ
 +
	`STRLEN
(
°rög
);

487 
	`°›_highlight
();

488 
	`Êushbuf
();

492 i‡((
c
 & 0x80Ë&& 
Æl
)

494 
	`°¨t_highlight
();

495 
	`MSG_OUTSTR
("<M-");

496 
	`msg_out°r
(
	`å™sch¨
(
c
 & 0x7f));

497 
ªtvÆ
 +2 + 
	`ch¨size
(
c
 & 0x7f);

498 
	`MSG_OUTSTR
(">");

499 
	`°›_highlight
();

503 
	`msg_out°r
(
	`å™sch¨
(
c
));

504 
ªtvÆ
 +
	`ch¨size
(
c
);

507  
ªtvÆ
;

508 
	}
}

514 
	$msg_¥t_löe
(
s
)

515 
ch¨_u
 *
s
;

517 
si
 = 0;

518 
c
;

519 
cﬁ
 = 0;

521 
n_exåa
 = 0;

522 
n_•a˚s
 = 0;

523 
ch¨_u
 *
p
 = 
NULL
;

524 
n
;

528 i‡(
n_exåa
)

530 --
n_exåa
;

531 
c
 = *
p
++;

533 i‡(
n_•a˚s
)

535 --
n_•a˚s
;

536 
c
 = ' ';

540 
c
 = 
s
[
si
++];

541 i‡(
c
 =
TAB
 && !
curwö
->
w_p_li°
)

544 
n_•a˚s
 = 
curbuf
->
b_p_ts
 - 
cﬁ
 % curbuf->b_p_ts - 1;

545 
c
 = ' ';

547 i‡(
c
 =
NUL
 && 
curwö
->
w_p_li°
)

549 
p
 = (
ch¨_u
 *)"";

550 
n_exåa
 = 1;

551 
c
 = '$';

553 i‡(
c
 !
NUL
 && (
n
 = 
	`ch¨size
(c)) > 1)

555 
n_exåa
 = 
n
 - 1;

556 
p
 = 
	`å™sch¨
(
c
);

557 
c
 = *
p
++;

561 i‡(
c
 =
NUL
)

564 
	`msg_outch¨
(
c
);

565 
cﬁ
++;

567 
	}
}

574 
	$msg_out°r
(
s
)

575 
ch¨_u
 *
s
;

577 
ﬁdSèã
;

578 
ch¨_u
 
buf
[20];

586 i‡(!
	`msg_check_s¸ìn
()

587 #ifde‡
WIN32


588 || !
ãrmˇp_a˘ive


592 #ifde‡
WIN32


593 
	`mch_£âmode
(0);

595 
	`Ârötf
(
°dîr
, (*)
s
);

596 
msg_didout
 = 
TRUE
;

597 #ifde‡
WIN32


598 
	`mch_£âmode
(1);

603 
msg_did™y
 = 
TRUE
;

604 *
s
)

613 i‡(
msg_row
 >
Rows
 - 1 && (*
s
 ='\n' || 
msg_cﬁ
 >
Cﬁumns
 - 1 ||

614 (*
s
 =
TAB
 && 
msg_cﬁ
 >((
Cﬁumns
 - 1) & ~7))))

616 
	`s¸ìn_dñ_löes
(0, 0, 1, ()
Rows
);

617 
msg_row
 = 
Rows
 - 2;

618 i‡(
msg_cﬁ
 >
Cﬁumns
)

619 
msg_cﬁ
 = 
Cﬁumns
 - 1;

620 ++
msg_s¸ﬁÀd
;

621 
√ed_waô_ªtu∫
 = 
TRUE
;

622 i‡(
cmdlöe_row
 > 0)

623 --
cmdlöe_row
;

627 i‡(
p_m‹e
 && --
löes_À·
 =0 && 
Sèã
 !
HITRETURN
)

629 
ﬁdSèã
 = 
Sèã
;

630 
Sèã
 = 
ASKMORE
;

631 #ifde‡
USE_MOUSE


632 
	`£tmou£
();

634 
	`msg_m‹emsg
(
FALSE
);

643 
	`Êushbuf
();

644 ()
	`mch_öch¨
(
buf
, 20, -1L);

645 
buf
[0])

647 
CR
:

648 
NL
:

649 
löes_À·
 = 1;

652 
	`°uffch¨Ródbuff
(':');

653 
cmdlöe_row
 = 
Rows
 - 1;

654 
skù_ªdøw
 = 
TRUE
;

655 
d⁄t_waô_ªtu∫
 = 
TRUE
;

658 
	`Cål
('C'):

659 
gŸ_öt
 = 
TRUE
;

660 
quô_m‹e
 = 
TRUE
;

663 
löes_À·
 = 
Rows
 / 2;

666 
löes_À·
 = 
Rows
 - 1;

669 
	`msg_m‹emsg
(
TRUE
);

675 
	`s¸ìn_fûl
(()
Rows
 - 1, ()Rows,

676 0, ()
Cﬁumns
, ' ', ' ');

677 
Sèã
 = 
ﬁdSèã
;

678 #ifde‡
USE_MOUSE


679 
	`£tmou£
();

681 i‡(
quô_m‹e
)

683 
msg_row
 = 
Rows
 - 1;

684 
msg_cﬁ
 = 0;

689 i‡(*
s
 == '\n')

691 
msg_didout
 = 
FALSE
;

692 
msg_cﬁ
 = 0;

693 i‡(++
msg_row
 >
Rows
)

694 
msg_row
 = 
Rows
 - 1;

696 i‡(*
s
 == '\r')

698 
msg_cﬁ
 = 0;

700 i‡(*
s
 == '\b')

702 i‡(
msg_cﬁ
)

703 --
msg_cﬁ
;

705 i‡(*
s
 =
TAB
)

708 
	`msg_s¸ìn_outch¨
(' ');

709 
msg_cﬁ
 & 7);

712 
	`msg_s¸ìn_outch¨
(*
s
);

713 ++
s
;

715 
	}
}

718 
	$msg_s¸ìn_outch¨
(
c
)

719 
c
;

721 
msg_didout
 = 
TRUE
;

722 
	`s¸ìn_outch¨
(
c
, 
msg_row
, 
msg_cﬁ
);

723 i‡(++
msg_cﬁ
 >
Cﬁumns
)

725 
msg_cﬁ
 = 0;

726 ++
msg_row
;

728 
	}
}

731 
	$msg_m‹emsg
(
fuŒ
)

732 
fuŒ
;

739 
	`ªmembî_highlight
();

740 
	`£t_highlight
('m');

741 
	`°¨t_highlight
();

742 
	`s¸ìn_msg
((
ch¨_u
 *)"-- M‹ê--", ()
Rows
 - 1, 0);

743 i‡(
fuŒ
)

744 
	`s¸ìn_msg
((
ch¨_u
 *)" (RET:Üine, SPACE:Öage, d: halfÖage, q: quit)",

745 ()
Rows
 - 1, 10);

746 
	`°›_highlight
();

747 
	`ªcovî_ﬁd_highlight
();

748 
	}
}

755 
	$msg_check_s¸ìn
()

757 i‡(!
fuŒ_s¸ìn
 || !
	`s¸ìn_vÆid
(
FALSE
))

758  
FALSE
;

760 i‡(
msg_row
 >
Rows
)

761 
msg_row
 = 
Rows
 - 1;

762 i‡(
msg_cﬁ
 >
Cﬁumns
)

763 
msg_cﬁ
 = 
Cﬁumns
 - 1;

764  
TRUE
;

765 
	}
}

773 
	$msg_˛r_eos
()

775 i‡(!
	`msg_check_s¸ìn
()

776 #ifde‡
WIN32


777 || !
ãrmˇp_a˘ive


781 
	`s¸ìn_fûl
(
msg_row
, msg_row + 1, 
msg_cﬁ
, ()
Cﬁumns
, ' ', ' ');

782 
	`s¸ìn_fûl
(
msg_row
 + 1, ()
Rows
, 0, ()
Cﬁumns
, ' ', ' ');

783 
	}
}

791 
	$msg_íd
()

799 i‡(!
exôög
 && 
	`msg_check
(Ë&& 
Sèã
 !
CMDLINE
)

801 
	`waô_ªtu∫
(
FALSE
);

802  
FALSE
;

804 
	`Êushbuf
();

805  
TRUE
;

806 
	}
}

813 
	$msg_check
()

815 i‡(
msg_s¸ﬁÀd
 || (
msg_row
 =
Rows
 - 1 && 
msg_cﬁ
 >
sc_cﬁ
))

817 
	`ªdøw_œãr
(
NOT_VALID
);

818 
ªdøw_cmdlöe
 = 
TRUE
;

819  
TRUE
;

821  
FALSE
;

822 
	}
}

	@src/misccmds.c

13 
	~"vim.h
"

14 
	~"globÆs.h
"

15 
	~"¥Ÿo.h
"

16 
	~"›ti⁄.h
"

17 #ifde‡
HAVE_FCNTL_H


18 
	~<f˙é.h
>

21 
gë_ödít_°r
 
__ARGS
((
ch¨_u
 *
±r
));

22 
check_°©us
 
__ARGS
((
BUF
 *));

28 
	$gë_ödít
()

30  
	`gë_ödít_°r
(
	`ml_gë_cuæöe
());

31 
	}
}

37 
	$gë_ödít_ um
(
 um
)

38 
löír_t
 
 um
;

40  
	`gë_ödít_°r
(
	`ml_gë
(
 um
));

41 
	}
}

47 
	$gë_ödít_°r
(
±r
)

48 
ch¨_u
 *
±r
;

50 
cou¡
 = 0;

52  ; *
±r
; ++ptr)

54 i‡(*
±r
 =
TAB
)

55 
cou¡
 +()
curbuf
->
b_p_ts
 - (count % ()curbuf->b_p_ts);

56 i‡(*
±r
 == ' ')

57 ++
cou¡
;

61  (
cou¡
);

62 
	}
}

69 
	$£t_ödít
(
size
, 
dñ_fú°
)

70 
size
;

71 
dñ_fú°
;

73 
ﬁd°©e
 = 
Sèã
;

74 
c
;

76 
Sèã
 = 
INSERT
;

77 
curwö
->
w_curs‹
.
cﬁ
 = 0;

78 i‡(
dñ_fú°
)

81 (
c
 = 
	`gch¨_curs‹
()), 
	`vim_iswhôe
(c))

82 ()
	`dñch¨
(
FALSE
);

84 i‡(!
curbuf
->
b_p_ë
)

85 
size
 >()
curbuf
->
b_p_ts
)

87 
	`ös_ch¨
(
TAB
);

88 
size
 -()
curbuf
->
b_p_ts
;

90 
size
)

92 
	`ös_ch¨
(' ');

93 --
size
;

95 
Sèã
 = 
ﬁd°©e
;

96 
	}
}

98 #i‡
deföed
(
CINDENT
Ë|| deföed(
SMARTINDENT
)

100 
is_cöw‹d
 
__ARGS
((
ch¨_u
 *
löe
));

106 
	$is_cöw‹d
(
löe
)

107 
ch¨_u
 *
löe
;

109 
ch¨_u
 *
cöw
;

110 
ch¨_u
 *
cöw_buf
;

111 
cöw_Àn
;

112 
ªtvÆ
 = 
FALSE
;

113 
Àn
;

115 
cöw_Àn
 = 
	`STRLEN
(
curbuf
->
b_p_cöw
) + 1;

116 
cöw_buf
 = 
	`Æloc
(()
cöw_Àn
);

117 i‡(
cöw_buf
 !
NULL
)

119 
löe
 = 
	`skùwhôe
(line);

120 
cöw
 = 
curbuf
->
b_p_cöw
; *cinw; )

122 
Àn
 = 
	`c›y_›ti⁄_∑π
(&
cöw
, 
cöw_buf
, 
cöw_Àn
, ",");

123 i‡(
	`STRNCMP
(
löe
, 
cöw_buf
, 
Àn
) == 0 &&

124 (!
	`isw‹dch¨
(
löe
[
Àn
]) || !iswordchar(line[len - 1])))

126 
ªtvÆ
 = 
TRUE
;

130 
	`vim_‰ì
(
cöw_buf
);

132  
ªtvÆ
;

133 
	}
}

146 
	$O≥ncmd
(
dú
, 
ªdøw
, 
dñ_•a˚s
)

147 
dú
;

148 
ªdøw
;

149 
dñ_•a˚s
;

151 
ch¨_u
 *
ßved_löe
;

152 
ch¨_u
 *
p_exåa
 = 
NULL
;

153 
exåa_Àn
 = 0;

154 
FPOS
 
ﬁd_curs‹
;

155 
√wcﬁ
 = 0;

156 
√wödít
 = 0;

157 
n
;

158 
åunc_löe
 = 
FALSE
;

159 
ªtvÆ
 = 
FALSE
;

160 
Àad_Àn
;

161 
ch¨_u
 *
Àad_Êags
;

162 
ch¨_u
 *
Àadî
 = 
NULL
;

163 
ch¨_u
 *
Æloˇãd
 = 
NULL
;

164 
ch¨_u
 *
p
;

165 
ßved_ch¨
 = 
NUL
;

166 
FPOS
 *
pos
;

167 
ﬁd_∂öes
 = 0;

168 
√w_∂öes
 = 0;

169 #ifde‡
SMARTINDENT


170 
no_si
 = 
FALSE
;

171 
fú°_ch¨
 = 
NUL
;

177 
ßved_löe
 = 
	`°rßve
(
	`ml_gë_cuæöe
());

178 i‡(
ßved_löe
 =
NULL
)

179  
FALSE
;

181 i‡(
Sèã
 =
INSERT
 || Sèã =
REPLACE
)

183 
p_exåa
 = 
ßved_löe
 + 
curwö
->
w_curs‹
.
cﬁ
;

184 #ifde‡
SMARTINDENT


185 i‡(
curbuf
->
b_p_si
)

187 
p
 = 
	`skùwhôe
(
p_exåa
);

188 
fú°_ch¨
 = *
p
;

191 
exåa_Àn
 = 
	`STRLEN
(
p_exåa
);

192 
ßved_ch¨
 = *
p_exåa
;

193 *
p_exåa
 = 
NUL
;

196 
	`u_˛óæöe
();

197 #ifde‡
SMARTINDENT


198 
did_si
 = 
FALSE
;

205 i‡(
curbuf
->
b_p_ai


206 #ifde‡
SMARTINDENT


207 || 
curbuf
->
b_p_si


214 
√wödít
 = 
	`gë_ödít
();

215 i‡(
√wödít
 == 0)

216 
√wödít
 = 
ﬁd_ödít
;

217 
ﬁd_ödít
 = 0;

223 i‡(
dú
 =
FORWARD
 && 
did_ai
)

224 
åunc_löe
 = 
TRUE
;

226 #ifde‡
SMARTINDENT


234 i‡(
curbuf
->
b_p_si
 && *
ßved_löe
 !
NUL
 &&

235 (
p_exåa
 =
NULL
 || 
fú°_ch¨
 != '{'))

237 
ch¨_u
 *
±r
;

238 
ch¨_u
 
œ°_ch¨
;

240 
ﬁd_curs‹
 = 
curwö
->
w_curs‹
;

241 
±r
 = 
ßved_löe
;

242 
Àad_Àn
 = 
	`gë_Àadî_Àn
(
±r
, 
NULL
);

243 i‡(
dú
 =
FORWARD
)

249 i‡(
Àad_Àn
 =0 && 
±r
[0] == '#')

251 
±r
[0] ='#' && 
curwö
->
w_curs‹
.
 um
 > 1)

252 
±r
 = 
	`ml_gë
(--
curwö
->
w_curs‹
.
 um
);

253 
√wödít
 = 
	`gë_ödít
();

255 
Àad_Àn
 = 
	`gë_Àadî_Àn
(
±r
, 
NULL
);

256 i‡(
Àad_Àn
 > 0)

266 
p
 = 
	`skùwhôe
(
±r
);

267 i‡(
p
[0] == '/' &&Ö[1] == '*')

268 
p
++;

269 i‡(
p
[0] == '*')

271 
p
++; *p;Ö++)

273 i‡(
p
[0] == '/' &&Ö[-1] == '*')

280 
curwö
->
w_curs‹
.
cﬁ
 = 
p
 - 
±r
;

281 i‡((
pos
 = 
	`födm©ch
(
NUL
)Ë!
NULL
)

283 
curwö
->
w_curs‹
.
 um
 = 
pos
->lnum;

284 
√wödít
 = 
	`gë_ödít
();

293 
p
 = 
±r
 + 
	`STRLEN
(ptr) - 1;

294 
p
 > 
±r
 && 
	`vim_iswhôe
(*p))

295 --
p
;

296 
œ°_ch¨
 = *
p
;

301 i‡(
œ°_ch¨
 == '{' ||Üast_char == ';')

303 i‡(
p
 > 
±r
)

304 --
p
;

305 
p
 > 
±r
 && 
	`vim_iswhôe
(*p))

306 --
p
;

316 i‡(*
p
 == ')')

318 
curwö
->
w_curs‹
.
cﬁ
 = 
p
 - 
±r
;

319 i‡((
pos
 = 
	`födm©ch
('(')Ë!
NULL
)

321 
curwö
->
w_curs‹
.
 um
 = 
pos
->lnum;

322 
√wödít
 = 
	`gë_ödít
();

323 
±r
 = 
	`ml_gë_cuæöe
();

330 i‡(
œ°_ch¨
 == '{')

332 
did_si
 = 
TRUE
;

333 
no_si
 = 
TRUE
;

340 i‡(
œ°_ch¨
 != ';' &&Üast_char != '}' &&

341 
	`is_cöw‹d
(
±r
))

342 
did_si
 = 
TRUE
;

351 i‡(
Àad_Àn
 =0 && 
±r
[0] == '#')

353 
was_back¶ashed
 = 
FALSE
;

355 (
±r
[0] ='#' || 
was_back¶ashed
) &&

356 
curwö
->
w_curs‹
.
 um
 < 
curbuf
->
b_ml
.
ml_löe_cou¡
)

358 i‡(*
±r
 &&Öå[
	`STRLEN
(ptr) - 1] == '\\')

359 
was_back¶ashed
 = 
TRUE
;

361 
was_back¶ashed
 = 
FALSE
;

362 
±r
 = 
	`ml_gë
(++
curwö
->
w_curs‹
.
 um
);

364 i‡(
was_back¶ashed
)

365 
√wödít
 = 0;

367 
√wödít
 = 
	`gë_ödít
();

369 
p
 = 
	`skùwhôe
(
±r
);

370 i‡(*
p
 == '}')

371 
did_si
 = 
TRUE
;

373 
ˇn_si_back
 = 
TRUE
;

375 
curwö
->
w_curs‹
 = 
ﬁd_curs‹
;

377 i‡(
curbuf
->
b_p_si
)

378 
ˇn_si
 = 
TRUE
;

381 
did_ai
 = 
TRUE
;

388 
Àad_Àn
 = 
	`gë_Àadî_Àn
(
ßved_löe
, &
Àad_Êags
);

389 i‡(
Àad_Àn
 > 0)

391 
ch¨_u
 *
Àad_ª∂
 = 
NULL
;

392 
Àad_ª∂_Àn
 = 0;

393 
ch¨_u
 
Àad_middÀ
[
COM_MAX_LEN
];

394 
ch¨_u
 
Àad_íd
[
COM_MAX_LEN
];

395 
ch¨_u
 *
commít_íd
 = 
NULL
;

396 
exåa_•a˚
 = 
FALSE
;

397 
cuºít_Êag
;

403 
p
 = 
Àad_Êags
; *p && *p != ':'; ++p)

405 i‡(*
p
 =
COM_START
 || *∞=
COM_MIDDLE
)

407 
cuºít_Êag
 = *
p
;

408 i‡(*
p
 =
COM_START
)

413 i‡(
dú
 =
BACKWARD
)

415 
Àad_Àn
 = 0;

420 ()
	`c›y_›ti⁄_∑π
(&
p
, 
Àad_middÀ
, 
COM_MAX_LEN
, ",");

426 *
p
 &&Ö[-1] != ':')

427 ++
p
;

428 ()
	`c›y_›ti⁄_∑π
(&
p
, 
Àad_middÀ
, 
COM_MAX_LEN
, ",");

429 *
p
 &&Ö[-1] != ':')

430 ++
p
;

431 ()
	`c›y_›ti⁄_∑π
(&
p
, 
Àad_íd
, 
COM_MAX_LEN
, ",");

437 i‡(
dú
 =
FORWARD
)

439 
n
 = 
	`STRLEN
(
Àad_íd
);

440 
p
 = 
ßved_löe
 + 
Àad_Àn
; *p; ++p)

441 i‡(
	`STRNCMP
(
p
, 
Àad_íd
, 
n
) == 0)

443 
commít_íd
 = 
p
;

444 
Àad_Àn
 = 0;

452 i‡(
Àad_Àn
)

454 i‡(
cuºít_Êag
 =
COM_START
)

456 
Àad_ª∂
 = 
Àad_middÀ
;

457 
Àad_ª∂_Àn
 = 
	`STRLEN
(
Àad_middÀ
);

465 i‡(!
	`vim_iswhôe
(
ßved_löe
[
Àad_Àn
 - 1]) &&

466 ((
p_exåa
 !
NULL
 &&

467 ()
curwö
->
w_curs‹
.
cﬁ
 =
Àad_Àn
) ||

468 (
p_exåa
 =
NULL
 && 
ßved_löe
[
Àad_Àn
] =
NUL
)))

469 
exåa_•a˚
 = 
TRUE
;

473 i‡(*
p
 =
COM_END
)

480 i‡(
dú
 =
FORWARD
)

482 
commít_íd
 = 
	`skùwhôe
(
ßved_löe
);

483 
Àad_Àn
 = 0;

491 
p
 > 
curbuf
->
b_p_com
 && *p != ',')

492 --
p
;

493 
Àad_ª∂
 = 
p
;Üód_ª∂ > 
curbuf
->
b_p_com
 &&

494 
Àad_ª∂
[-1] != ':'; --lead_repl)

496 
Àad_ª∂_Àn
 = 
p
 - 
Àad_ª∂
;

499 i‡(*
p
 =
COM_FIRST
)

505 i‡(
dú
 =
BACKWARD
)

506 
Àad_Àn
 = 0;

509 
Àad_ª∂
 = (
ch¨_u
 *)"";

510 
Àad_ª∂_Àn
 = 0;

515 i‡(
Àad_Àn
)

518 
Àadî
 = 
	`Æloc
(
Àad_Àn
 + 
Àad_ª∂_Àn
 + 
exåa_•a˚
 +

519 
exåa_Àn
 + 1);

520 
Æloˇãd
 = 
Àadî
;

522 i‡(
Àadî
 =
NULL
)

523 
Àad_Àn
 = 0;

526 
	`STRNCPY
(
Àadî
, 
ßved_löe
, 
Àad_Àn
);

527 
Àadî
[
Àad_Àn
] = 
NUL
;

532 i‡(
Àad_ª∂
 !
NULL
)

534 
p
 = 
Àad_Êags
; *p && *p != ':'; ++p)

535 i‡(*
p
 =
COM_RIGHT
 || *∞=
COM_LEFT
)

537 i‡(*
p
 =
COM_RIGHT
)

540 
p
 = 
Àadî
 + 
Àad_Àn
 - 1;Ö >Üeader &&

541 
	`vim_iswhôe
(*
p
); --p)

544 ++
p
;

545 i‡(
p
 < 
Àadî
 + 
Àad_ª∂_Àn
)

546 
p
 = 
Àadî
;

548 
p
 -
Àad_ª∂_Àn
;

549 
	`vim_memmove
(
p
, 
Àad_ª∂
, (
size_t
)
Àad_ª∂_Àn
);

550 i‡(
p
 + 
Àad_ª∂_Àn
 > 
Àadî
 + 
Àad_Àn
)

551 
p
[
Àad_ª∂_Àn
] = 
NUL
;

554 --
p
 >
Àadî
)

555 i‡(!
	`vim_iswhôe
(*
p
))

556 *
p
 = ' ';

560 
p
 = 
	`skùwhôe
(
Àadî
);

561 
	`vim_memmove
(
p
, 
Àad_ª∂
, (
size_t
)
Àad_ª∂_Àn
);

564 
p
 +
Àad_ª∂_Àn
;Ö < 
Àadî
 + 
Àad_Àn
; ++p)

565 i‡(!
	`vim_iswhôe
(*
p
))

566 *
p
 = ' ';

567 *
p
 = 
NUL
;

571 i‡(
curbuf
->
b_p_ai


572 #ifde‡
SMARTINDENT


573 || 
curbuf
->
b_p_si


576 
√wödít
 = 
	`gë_ödít_°r
(
Àadî
);

579 
Àad_Àn
 = 
	`STRLEN
(
Àadî
);

580 i‡(
exåa_•a˚
)

582 
Àadî
[
Àad_Àn
++] = ' ';

583 
Àadî
[
Àad_Àn
] = 
NUL
;

586 
√wcﬁ
 = 
Àad_Àn
;

592 i‡(
√wödít


593 #ifde‡
SMARTINDENT


594 || 
did_si


598 
Àad_Àn
 && 
	`vim_iswhôe
(*
Àadî
))

600 --
Àad_Àn
;

601 --
√wcﬁ
;

602 ++
Àadî
;

607 #ifde‡
SMARTINDENT


608 
did_si
 = 
ˇn_si
 = 
FALSE
;

611 i‡(
commít_íd
 !
NULL
)

619 i‡(
commít_íd
[0] == '*' && comment_end[1] == '/' &&

620 (
curbuf
->
b_p_ai


621 #ifde‡
SMARTINDENT


622 || 
curbuf
->
b_p_si


626 
ﬁd_curs‹
 = 
curwö
->
w_curs‹
;

627 
curwö
->
w_curs‹
.
cﬁ
 = 
commít_íd
 - 
ßved_löe
;

628 i‡((
pos
 = 
	`födm©ch
(
NUL
)Ë!
NULL
)

630 
curwö
->
w_curs‹
.
 um
 = 
pos
->lnum;

631 
√wödít
 = 
	`gë_ödít
();

633 
curwö
->
w_curs‹
 = 
ﬁd_curs‹
;

639 i‡(
p_exåa
 !
NULL
)

641 *
p_exåa
 = 
ßved_ch¨
;

650 i‡(
Sèã
 =
REPLACE
)

651 
	`ª∂a˚_push
(
NUL
);

652 i‡(
curbuf
->
b_p_ai
 || 
dñ_•a˚s
)

654 *
p_exåa
 == ' ' || *p_extra == '\t')

656 i‡(
Sèã
 =
REPLACE
)

657 
	`ª∂a˚_push
(*
p_exåa
);

658 ++
p_exåa
;

661 i‡(*
p_exåa
 !
NUL
)

662 
did_ai
 = 
FALSE
;

665 i‡(
p_exåa
 =
NULL
)

666 
p_exåa
 = (
ch¨_u
 *)"";

669 i‡(
Àad_Àn
)

671 
	`STRCAT
(
Àadî
, 
p_exåa
);

672 
p_exåa
 = 
Àadî
;

675 
ﬁd_curs‹
 = 
curwö
->
w_curs‹
;

676 i‡(
dú
 =
BACKWARD
)

677 --
curwö
->
w_curs‹
.
 um
;

678 i‡(
	`ml_≠≥nd
(
curwö
->
w_curs‹
.
 um
, 
p_exåa
, (
cﬁƒ_t
)0, 
FALSE
Ë=
FAIL
)

679 
thìnd
;

680 
	`m¨k_adju°
(
curwö
->
w_curs‹
.
 um
 + 1, 
MAXLNUM
, 1L, 0L);

681 i‡(
√wödít


682 #ifde‡
SMARTINDENT


683 || 
did_si


687 ++
curwö
->
w_curs‹
.
 um
;

688 #ifde‡
SMARTINDENT


689 i‡(
did_si
)

691 i‡(
p_§
)

692 
√wödít
 -√wödíà% ()
curbuf
->
b_p_sw
;

693 
√wödít
 +()
curbuf
->
b_p_sw
;

696 
	`£t_ödít
(
√wödít
, 
FALSE
);

701 i‡(
Sèã
 =
REPLACE
)

702 
n
 = 0;Ç < ()
curwö
->
w_curs‹
.
cﬁ
; ++n)

703 
	`ª∂a˚_push
(
NUL
);

704 
√wcﬁ
 +
curwö
->
w_curs‹
.
cﬁ
;

705 #ifde‡
SMARTINDENT


706 i‡(
no_si
)

707 
did_si
 = 
FALSE
;

714 i‡(
Sèã
 =
REPLACE
)

715 
Àad_Àn
-- > 0)

716 
	`ª∂a˚_push
(
NUL
);

718 
curwö
->
w_curs‹
 = 
ﬁd_curs‹
;

720 i‡(
dú
 =
FORWARD
)

722 i‡(
ªdøw
)

724 
ﬁd_∂öes
 = 
	`∂öes
(
curwö
->
w_curs‹
.
 um
);

725 
√w_∂öes
 = 
ﬁd_∂öes
;

727 i‡(
åunc_löe
 || 
Sèã
 =
INSERT
 || Sèã =
REPLACE
)

729 i‡(
åunc_löe
)

732 
n
 = 
	`STRLEN
(
ßved_löe
);Ç > 0 &&

733 
	`vim_iswhôe
(
ßved_löe
[
n
 - 1]); --n)

735 
ßved_löe
[
n
] = 
NUL
;

738 *(
ßved_löe
 + 
curwö
->
w_curs‹
.
cﬁ
Ë
NUL
;

739 
	`ml_ª∂a˚
(
curwö
->
w_curs‹
.
 um
, 
ßved_löe
, 
FALSE
);

740 
ßved_löe
 = 
NULL
;

741 
√w_∂öes
 = 
	`∂öes
(
curwö
->
w_curs‹
.
 um
);

749 
curwö
->
w_curs‹
.
cﬁ
 = 0;

751 i‡(
ªdøw
)

757 ++
RedøwögDißbÀd
;

758 
	`cursupd©e
();

759 --
RedøwögDißbÀd
;

768 
n
 = 
curwö
->
w_row
 + 
√w_∂öes
;

769 i‡(
n
 =
curwö
->
w_wöpos
 + curwö->
w_height
)

770 
	`s¸ﬁlup
(1L);

772 
	`wö_ös_löes
(
curwö
, 
n
,

773 
	`∂öes
(
curwö
->
w_curs‹
.
 um
 + 1Ë+ 
√w_∂öes
 - 
ﬁd_∂öes
,

774 
TRUE
, TRUE);

781 
curwö
->
w_curs‹
.
 um
 = 
ﬁd_curs‹
.lnum + 1;

783 i‡(
ªdøw
)

784 
	`wö_ös_löes
(
curwö
, curwö->
w_row
, 1, 
TRUE
, TRUE);

786 
curwö
->
w_curs‹
.
cﬁ
 = 
√wcﬁ
;

788 #ifde‡
LISPINDENT


792 i‡(
Àadî
 =
NULL
 && 
curbuf
->
b_p_li•
 && curbuf->
b_p_ai
)

793 
	`fixthi¶öe
(
gë_li•_ödít
);

795 #ifde‡
CINDENT


799 i‡(
Àadî
 =
NULL
 && 
curbuf
->
b_p_cö
 &&

800 
	`ö_cökeys
(
dú
 =
FORWARD
 ? 
KEY_OPEN_FORW
 :

801 
KEY_OPEN_BACK
, ' ', 
	`löewhôe
(
curwö
->
w_curs‹
.
 um
)))

802 
	`fixthi¶öe
(
gë_c_ödít
);

805 i‡(
ªdøw
)

807 
	`upd©eS¸ìn
(
VALID_TO_CURSCHAR
);

808 
	`cursupd©e
();

810 
CHANGED
;

812 
ªtvÆ
 = 
TRUE
;

813 
thìnd
:

814 
	`vim_‰ì
(
ßved_löe
);

815 
	`vim_‰ì
(
Æloˇãd
);

816  
ªtvÆ
;

817 
	}
}

827 
	$gë_Àadî_Àn
(
löe
, 
Êags
)

828 
ch¨_u
 *
löe
;

829 
ch¨_u
 **
Êags
;

831 
i
, 
j
;

832 
gŸ_com
 = 
FALSE
;

833 
found_⁄e
;

834 
ch¨_u
 
∑π_buf
[
COM_MAX_LEN
];

835 
ch¨_u
 *
°rög
;

836 
ch¨_u
 *
li°
;

838 i‡(!
fo_do_commíts
)

841 
i
 = 0;

842 
	`vim_iswhôe
(
löe
[
i
]))

843 ++
i
;

848 
löe
[
i
])

853 
found_⁄e
 = 
FALSE
;

854 
li°
 = 
curbuf
->
b_p_com
; *list; )

860 i‡(!
gŸ_com
 && 
Êags
 !
NULL
)

861 *
Êags
 = 
li°
;

862 ()
	`c›y_›ti⁄_∑π
(&
li°
, 
∑π_buf
, 
COM_MAX_LEN
, ",");

863 
°rög
 = 
	`vim_°rchr
(
∑π_buf
, ':');

864 i‡(
°rög
 =
NULL
)

866 *
°rög
++ = 
NUL
;

872 i‡(
gŸ_com
 && 
	`vim_°rchr
(
∑π_buf
, 
COM_NEST
Ë=
NULL
)

878 
j
 = 0; 
°rög
[j] !
NUL
 && såög[j] =
löe
[
i
 + j]; ++j)

880 i‡(
°rög
[
j
] !
NUL
)

887 i‡(
	`vim_°rchr
(
∑π_buf
, 
COM_BLANK
Ë!
NULL
 &&

888 !
	`vim_iswhôe
(
löe
[
i
 + 
j
]Ë&&Üöe[ò+ j] !
NUL
)

894 
i
 +
j
;

895 
gŸ_com
 = 
TRUE
;

896 
found_⁄e
 = 
TRUE
;

903 i‡(!
found_⁄e
)

909 
	`vim_iswhôe
(
löe
[
i
]))

910 ++
i
;

915 i‡(
	`vim_°rchr
(
∑π_buf
, 
COM_NEST
Ë=
NULL
)

918  (
gŸ_com
 ? 
i
 : 0);

919 
	}
}

925 
	$∂öes
(
p
)

926 
löír_t
 
p
;

928  
	`∂öes_wö
(
curwö
, 
p
);

929 
	}
}

932 
	$∂öes_wö
(
wp
, 
p
)

933 
WIN
 *
wp
;

934 
löír_t
 
p
;

936 
cﬁ
;

937 
ch¨_u
 *
s
;

938 
löes
;

940 i‡(!
wp
->
w_p_wøp
)

943 
s
 = 
	`ml_gë_buf
(
wp
->
w_buf„r
, 
p
, 
FALSE
);

944 i‡(*
s
 =
NUL
)

947 
cﬁ
 = 
	`löëabsize
(
s
);

953 i‡(
wp
->
w_p_li°
)

954 
cﬁ
 += 1;

959 i‡(
wp
->
w_p_nu
)

960 
cﬁ
 += 8;

962 
löes
 = (
cﬁ
 + (
Cﬁumns
 - 1)) / Columns;

963 i‡(
löes
 <
wp
->
w_height
)

964  
löes
;

965  ()(
wp
->
w_height
);

966 
	}
}

972 
	$∂öes_m
(
fú°
, 
œ°
)

973 
löír_t
 
fú°
, 
œ°
;

975  
	`∂öes_m_wö
(
curwö
, 
fú°
, 
œ°
);

976 
	}
}

979 
	$∂öes_m_wö
(
wp
, 
fú°
, 
œ°
)

980 
WIN
 *
wp
;

981 
löír_t
 
fú°
, 
œ°
;

983 
cou¡
 = 0;

985 
fú°
 <
œ°
)

986 
cou¡
 +
	`∂öes_wö
(
wp
, 
fú°
++);

987  (
cou¡
);

988 
	}
}

995 
	$ös_ch¨
(
c
)

996 
c
;

998 
ch¨_u
 *
p
;

999 
ch¨_u
 *
√wp
;

1000 
ch¨_u
 *
ﬁdp
;

1001 
ﬁdÀn
;

1002 
exåa
;

1003 
cﬁƒ_t
 
cﬁ
 = 
curwö
->
w_curs‹
.col;

1004 
löír_t
 
 um
 = 
curwö
->
w_curs‹
.lnum;

1006 
ﬁdp
 = 
	`ml_gë
(
 um
);

1007 
ﬁdÀn
 = 
	`STRLEN
(
ﬁdp
) + 1;

1009 i‡(
Sèã
 !
REPLACE
 || *(
ﬁdp
 + 
cﬁ
Ë=
NUL
)

1010 
exåa
 = 1;

1012 
exåa
 = 0;

1020 i‡(
Sèã
 =
REPLACE
)

1021 
	`ª∂a˚_push
(!
exåa
 ? *(
ﬁdp
 + 
cﬁ
) : 0);

1022 
√wp
 = 
	`Æloc_check
(()(
ﬁdÀn
 + 
exåa
));

1023 i‡(
√wp
 =
NULL
)

1025 
	`vim_memmove
(
√wp
, 
ﬁdp
, (
size_t
)
cﬁ
);

1026 
p
 = 
√wp
 + 
cﬁ
;

1027 
	`vim_memmove
(
p
 + 
exåa
, 
ﬁdp
 + 
cﬁ
, (
size_t
)(
ﬁdÀn
 - col));

1028 *
p
 = 
c
;

1029 
	`ml_ª∂a˚
(
 um
, 
√wp
, 
FALSE
);

1037 #ifde‡
RIGHTLEFT


1038 i‡(
p_sm
 && (
Sèã
 & 
INSERT
) &&

1039 ((!
curwö
->
w_p_æ
 && (
c
 == ')' || c == '}' || c == ']')) ||

1040 (
curwö
->
w_p_æ
 && (
c
 == '(' || c == '{' || c == '['))))

1042 i‡(
p_sm
 && (
Sèã
 & 
INSERT
Ë&& (
c
 == ')' || c == '}' || c == ']'))

1044 
	`showm©ch
();

1046 #ifde‡
RIGHTLEFT


1047 i‡(!
p_ri
 || 
Sèã
 =
REPLACE
)

1049 ++
curwö
->
w_curs‹
.
cﬁ
;

1050 
CHANGED
;

1051 
	}
}

1058 
	$ös_°r
(
s
)

1059 
ch¨_u
 *
s
;

1061 
ch¨_u
 *
ﬁdp
, *
√wp
;

1062 
√wÀn
 = 
	`STRLEN
(
s
);

1063 
ﬁdÀn
;

1064 
cﬁƒ_t
 
cﬁ
 = 
curwö
->
w_curs‹
.col;

1065 
löír_t
 
 um
 = 
curwö
->
w_curs‹
.lnum;

1067 
ﬁdp
 = 
	`ml_gë
(
 um
);

1068 
ﬁdÀn
 = 
	`STRLEN
(
ﬁdp
);

1070 
√wp
 = 
	`Æloc_check
(()(
ﬁdÀn
 + 
√wÀn
 + 1));

1071 i‡(
√wp
 =
NULL
)

1073 
	`vim_memmove
(
√wp
, 
ﬁdp
, (
size_t
)
cﬁ
);

1074 
	`vim_memmove
(
√wp
 + 
cﬁ
, 
s
, (
size_t
)
√wÀn
);

1075 
	`vim_memmove
(
√wp
 + 
cﬁ
 + 
√wÀn
, 
ﬁdp
 + cﬁ, (
size_t
)(
ﬁdÀn
 - col + 1));

1076 
	`ml_ª∂a˚
(
 um
, 
√wp
, 
FALSE
);

1077 
curwö
->
w_curs‹
.
cﬁ
 +
√wÀn
;

1078 
CHANGED
;

1079 
	}
}

1087 
	$dñch¨
(
fixpos
)

1088 
fixpos
;

1090 
ch¨_u
 *
ﬁdp
, *
√wp
;

1091 
cﬁƒ_t
 
ﬁdÀn
;

1092 
löír_t
 
 um
 = 
curwö
->
w_curs‹
.lnum;

1093 
cﬁƒ_t
 
cﬁ
 = 
curwö
->
w_curs‹
.col;

1094 
was_Ælo˚d
;

1096 
ﬁdp
 = 
	`ml_gë
(
 um
);

1097 
ﬁdÀn
 = 
	`STRLEN
(
ﬁdp
);

1099 i‡(
cﬁ
 >
ﬁdÀn
)

1100  
FAIL
;

1106 
was_Ælo˚d
 = 
	`ml_löe_Ælo˚d
();

1107 i‡(
was_Ælo˚d
)

1108 
√wp
 = 
ﬁdp
;

1111 
√wp
 = 
	`Æloc
(()
ﬁdÀn
);

1112 i‡(
√wp
 =
NULL
)

1113  
FAIL
;

1114 
	`vim_memmove
(
√wp
, 
ﬁdp
, (
size_t
)
cﬁ
);

1116 
	`vim_memmove
(
√wp
 + 
cﬁ
, 
ﬁdp
 + cﬁ + 1, (
size_t
)(
ﬁdÀn
 - col));

1117 i‡(!
was_Ælo˚d
)

1118 
	`ml_ª∂a˚
(
 um
, 
√wp
, 
FALSE
);

1124 i‡(
fixpos
 && 
curwö
->
w_curs‹
.
cﬁ
 > 0 && cﬁ =
ﬁdÀn
 - 1)

1125 --
curwö
->
w_curs‹
.
cﬁ
;

1127 
CHANGED
;

1128  
OK
;

1129 
	}
}

1137 
	$åunˇã_löe
(
fixpos
)

1138 
fixpos
;

1140 
ch¨_u
 *
√wp
;

1141 
löír_t
 
 um
 = 
curwö
->
w_curs‹
.lnum;

1142 
cﬁƒ_t
 
cﬁ
 = 
curwö
->
w_curs‹
.col;

1144 i‡(
cﬁ
 == 0)

1145 
√wp
 = 
	`°rßve
((
ch¨_u
 *)"");

1147 
√wp
 = 
	`°∫ßve
(
	`ml_gë
(
 um
), 
cﬁ
);

1149 i‡(
√wp
 =
NULL
)

1150  
FAIL
;

1152 
	`ml_ª∂a˚
(
 um
, 
√wp
, 
FALSE
);

1157 i‡(
fixpos
 && 
curwö
->
w_curs‹
.
cﬁ
 > 0)

1158 --
curwö
->
w_curs‹
.
cﬁ
;

1160 
CHANGED
;

1161  
OK
;

1162 
	}
}

1165 
	$dñlöes
(
∆öes
, 
dowödow
, 
undo
)

1166 
∆öes
;

1167 
dowödow
;

1168 
undo
;

1170 
num_∂öes
 = 0;

1172 i‡(
∆öes
 <= 0)

1178 i‡(
RedøwögDißbÀd
)

1179 
dowödow
 = 
FALSE
;

1180 i‡(
∆öes
 > (
curwö
->
w_height
 - curwö->
w_row
Ë&& 
dowödow
)

1182 
dowödow
 = 
FALSE
;

1184 
	`wö_dñ_löes
(
curwö
, curwö->
w_row
, curwö->
w_height
, 
TRUE
, TRUE);

1187 i‡(
undo
 && 
	`u_ßvedñ
(
curwö
->
w_curs‹
.
 um
, 
∆öes
Ë=
FAIL
)

1191 
	`m¨k_adju°
(
curwö
->
w_curs‹
.
 um
, curwö->w_curs‹. um + 
∆öes
 - 1,

1192 
MAXLNUM
, -
∆öes
);

1194 
∆öes
-- > 0)

1196 i‡(
curbuf
->
b_ml
.
ml_Êags
 & 
ML_EMPTY
)

1203 i‡(
dowödow
)

1204 
num_∂öes
 +
	`∂öes
(
curwö
->
w_curs‹
.
 um
);

1206 
	`ml_dñëe
(
curwö
->
w_curs‹
.
 um
, 
TRUE
);

1208 
CHANGED
;

1211 i‡(
curwö
->
w_curs‹
.
 um
 > 
curbuf
->
b_ml
.
ml_löe_cou¡
)

1213 
curwö
->
w_curs‹
.
 um
 = 
curbuf
->
b_ml
.
ml_löe_cou¡
;

1217 
curwö
->
w_curs‹
.
cﬁ
 = 0;

1221 i‡(
dowödow
 && 
num_∂öes
 > 0)

1222 
	`wö_dñ_löes
(
curwö
, curwö->
w_row
, 
num_∂öes
, 
TRUE
, TRUE);

1223 
	}
}

1226 
	$gch¨
(
pos
)

1227 
FPOS
 *
pos
;

1229  ()(*(
	`ml_gë_pos
(
pos
)));

1230 
	}
}

1233 
	$gch¨_curs‹
()

1235  ()(*(
	`ml_gë_curs‹
()));

1236 
	}
}

1243 
	$pch¨_curs‹
(
c
)

1244 
c
;

1246 *(
	`ml_gë_buf
(
curbuf
, 
curwö
->
w_curs‹
.
 um
, 
TRUE
) +

1247 
curwö
->
w_curs‹
.
cﬁ
Ë
c
;

1248 
	}
}

1254 
	$gŸo_ídofbuf
(
pos
)

1255 
FPOS
 *
pos
;

1257 
ch¨_u
 *
p
;

1259 
pos
->
 um
 = 
curbuf
->
b_ml
.
ml_löe_cou¡
;

1260 
pos
->
cﬁ
 = 0;

1261 
p
 = 
	`ml_gë
(
pos
->
 um
);

1262 *
p
++)

1263 ++
pos
->
cﬁ
;

1264 
	}
}

1273 
	$öödít
(
exåa
)

1274 
exåa
;

1276 
ch¨_u
 *
±r
;

1277 
cﬁƒ_t
 
cﬁ
;

1279 
cﬁ
 = 0, 
±r
 = 
	`ml_gë_cuæöe
(); 
	`vim_iswhôe
(*ptr); ++col)

1280 ++
±r
;

1281 i‡(
cﬁ
 >
curwö
->
w_curs‹
.cﬁ + 
exåa
)

1282  
TRUE
;

1284  
FALSE
;

1285 
	}
}

1290 
ch¨_u
 *

1291 
	$skùwhôe
(
p
)

1292 
ch¨_u
 *
p
;

1294 
	`vim_iswhôe
(*
p
))

1295 ++
p
;

1296  
p
;

1297 
	}
}

1302 
ch¨_u
 *

1303 
	$skùdigôs
(
p
)

1304 
ch¨_u
 *
p
;

1306 
	`isdigô
(*
p
))

1307 ++
p
;

1308  
p
;

1309 
	}
}

1314 
ch¨_u
 *

1315 
	$skùtowhôe
(
p
)

1316 
ch¨_u
 *
p
;

1318 *
p
 !' ' && *∞!'\t' && *∞!
NUL
)

1319 ++
p
;

1320  
p
;

1321 
	}
}

1326 
ch¨_u
 *

1327 
	$skùtowhôe_esc
(
p
)

1328 
ch¨_u
 *
p
;

1330 *
p
 !' ' && *∞!'\t' && *∞!
NUL
)

1332 i‡((*
p
 ='\\' || *∞=
	`Cål
('V')Ë&& *’ + 1Ë!
NUL
)

1333 ++
p
;

1334 ++
p
;

1336  
p
;

1337 
	}
}

1346 
	$gëdigôs
(
µ
)

1347 
ch¨_u
 **
µ
;

1349 
ch¨_u
 *
p
;

1350 
ªtvÆ
;

1352 
p
 = *
µ
;

1353 
ªtvÆ
 = 
	`©ﬁ
((*)
p
);

1354 
p
 = 
	`skùdigôs
(p);

1355 *
µ
 = 
p
;

1356  
ªtvÆ
;

1357 
	}
}

1362 
ch¨_u
 *

1363 
	$skù_to_›ti⁄_∑π
(
p
)

1364 
ch¨_u
 *
p
;

1366 i‡(*
p
 == ',')

1367 ++
p
;

1368 *
p
 == ' ')

1369 ++
p
;

1370  
p
;

1371 
	}
}

1374 
	$∂uøl
(
n
)

1375 
n
;

1377 
buf
[2] = "s";

1379 i‡(
n
 == 1)

1380  &(
buf
[1]);

1381  &(
buf
[0]);

1382 
	}
}

1388 
	$£t_Ch™ged
()

1390 i‡(!
curbuf
->
b_ch™ged
)

1392 
	`ch™ge_w¨nög
();

1393 
curbuf
->
b_ch™ged
 = 
TRUE
;

1394 
	`check_°©us
(
curbuf
);

1396 
modifõd
 = 
TRUE
;

1397 
	}
}

1403 
	$un£t_Ch™ged
(
buf
)

1404 
BUF
 *
buf
;

1406 i‡(
buf
->
b_ch™ged
)

1408 
buf
->
b_ch™ged
 = 0;

1409 
	`check_°©us
(
buf
);

1411 
	}
}

1418 
	$check_°©us
(
buf
)

1419 
BUF
 *
buf
;

1421 
WIN
 *
wp
;

1422 
i
;

1424 
i
 = 0;

1425 
wp
 = 
fú°wö
; w∞!
NULL
; w∞wp->
w_√xt
)

1426 i‡(
wp
->
w_buf„r
 =
buf
 && wp->
w_°©us_height
)

1428 
wp
->
w_ªdr_°©us
 = 
TRUE
;

1429 ++
i
;

1431 i‡(
i
)

1432 
	`ªdøw_œãr
(
NOT_VALID
);

1433 
	}
}

1443 
	$ch™ge_w¨nög
()

1445 i‡(
curbuf
->
b_did_w¨n
 =
FALSE
 && curbuf->
b_ch™ged
 == 0 &&

1446 #ifde‡
AUTOCMD


1447 !
autocmd_busy
 &&

1449 
curbuf
->
b_p_ro
)

1451 
curbuf
->
b_did_w¨n
 = 
TRUE
;

1452 
	`MSG
("Warning: ChangingáÑeadonly file");

1453 
	`mch_dñay
(1000L, 
TRUE
);

1455 
	}
}

1467 
	$ask_ye¢o
(
°r
, 
dúe˘
)

1468 
ch¨_u
 *
°r
;

1469 
dúe˘
;

1471 
r
 = ' ';

1472 
ch¨_u
 
buf
[20];

1473 
Àn
 = 0;

1474 
idx
 = 0;

1476 i‡(
exôög
)

1477 
	`£âmode
(1);

1478 
r
 != 'y' &&Ñ != 'n')

1480 ()
	`£t_highlight
('r');

1481 
msg_highlight
 = 
TRUE
;

1482 
	`smsg
((
ch¨_u
 *)"%†(y/n)?", 
°r
);

1483 i‡(
dúe˘
)

1485 
	`Êushbuf
();

1486 i‡(
idx
 >
Àn
)

1488 
Àn
 = 
	`mch_öch¨
(
buf
, 20, -1L);

1489 
idx
 = 0;

1491 
r
 = 
buf
[
idx
++];

1494 
r
 = 
	`vgëc
();

1495 i‡(
r
 =
	`Cål
('C'Ë||Ñ =
ESC
)

1496 
r
 = 'n';

1497 
	`msg_outch¨
(
r
);

1498 
	`Êushbuf
();

1500  
r
;

1501 
	}
}

1507 
	$gë_numbî
()

1509 
n
 = 0;

1510 
c
;

1514 
	`wödgŸo
(
msg_row
, 
msg_cﬁ
);

1515 
c
 = 
	`vgëc
();

1516 i‡(
	`isdigô
(
c
))

1518 
n
 =Ç * 10 + 
c
 - '0';

1519 
	`msg_outch¨
(
c
);

1521 i‡(
c
 =
K_DEL
 || c =
K_BS
 || c =
	`Cål
('H'))

1523 
n
 /= 10;

1524 
	`MSG_OUTSTR
("\b \b");

1526 i‡(
c
 =
CR
 || c =
NL
 || c =
	`Cål
('C'))

1529  
n
;

1530 
	}
}

1533 
	$msgm‹e
(
n
)

1534 
n
;

1536 
≤
;

1538 i‡(
globÆ_busy
 ||

1539 
kìp_msg
)

1542 i‡(
n
 > 0)

1543 
≤
 = 
n
;

1545 
≤
 = -
n
;

1547 i‡(
≤
 > 
p_ªp‹t
)

1549 
	`•rötf
((*)
msg_buf
, "%ld %sÜine%s %s",

1550 
≤
, 
n
 > 0 ? "m‹e" : "„wî", 
	`∂uøl
(pn),

1551 
gŸ_öt
 ? "(Interrupted)" : "");

1552 i‡(
	`msg
(
msg_buf
))

1553 
kìp_msg
 = 
msg_buf
;

1555 
	}
}

1561 
	$bìp_Êush
()

1563 
	`Êush_buf„rs
(
FALSE
);

1564 
	`vim_bìp
();

1565 
	}
}

1571 
	$vim_bìp
()

1573 i‡(
p_vb
)

1575 #ifde‡
DJGPP


1576 
	`S¸ìnVisuÆBñl
();

1578 
	`out°r
(
T_VB
);

1583 #i‡
deföed
 
MSDOS
 || deföed 
WIN32


1589 i‡(
bìp_cou¡
 == 0 || beep_count == 10)

1591 
	`outch¨
('\007');

1592 
bìp_cou¡
 = 1;

1595 ++
bìp_cou¡
;

1597 
	`outch¨
('\007');

1600 
	}
}

1610 
ch¨_u
 *
	ghomedú
 = 
NULL
;

1613 
	$öô_homedú
()

1615 
ch¨_u
 *
v¨
;

1617 
v¨
 = 
	`vim_gëív
((
ch¨_u
 *)"HOME");

1618 i‡(
v¨
 !
NULL
)

1620 i‡(
	`mch_dú«me
(
NameBuff
, 
MAXPATHL
Ë=
OK
)

1622 i‡(!
	`vim_chdú
((*)
v¨
Ë&& 
	`mch_dú«me
(
IObuff
, 
IOSIZE
Ë=
OK
)

1623 
v¨
 = 
IObuff
;

1624 
	`vim_chdú
((*)
NameBuff
);

1626 
homedú
 = 
	`°rßve
(
v¨
);

1628 
	}
}

1638 
	$ex∑nd_ív
(
§c
, 
d°
, 
d°Àn
)

1639 
ch¨_u
 *
§c
;

1640 
ch¨_u
 *
d°
;

1641 
d°Àn
;

1643 
ch¨_u
 *
èû
;

1644 
c
;

1645 
ch¨_u
 *
v¨
;

1646 
c›y_ch¨
;

1647 #i‡
	`deföed
(
UNIX
Ë|| deföed(
OS2
)

1648 
mu°‰ì
;

1649 
©_°¨t
 = 
TRUE
;

1652 
§c
 = 
	`skùwhôe
(src);

1653 --
d°Àn
;

1654 *
§c
 && 
d°Àn
 > 0)

1656 
c›y_ch¨
 = 
TRUE
;

1657 i‡(*
§c
 == '$'

1658 #i‡
	`deföed
(
UNIX
Ë|| deföed(
OS2
)

1659 || (*
§c
 ='~' && 
©_°¨t
)

1663 #i‡
	`deföed
(
UNIX
Ë|| deföed(
OS2
)

1664 
mu°‰ì
 = 
FALSE
;

1670 i‡(*
§c
 == '$')

1673 
èû
 = 
§c
 + 1;

1674 
v¨
 = 
d°
;

1675 
c
 = 
d°Àn
 - 1;

1676 
c
-- > 0 && *
èû
 && 
	`isidch¨
(*tail))

1677 #ifde‡
OS2


1679 *
v¨
++ = 
	`touµî
(*
èû
);

1680 
èû
++;

1683 *
v¨
++ = *
èû
++;

1685 *
v¨
 = 
NUL
;

1686 
v¨
 = 
	`vim_gëív
(
d°
);

1687 #i‡
	`deföed
(
UNIX
Ë|| deföed(
OS2
)

1690 i‡(
§c
[1] =
NUL
 ||

1691 
	`vim_°rchr
((
ch¨_u
 *)"/ ,\t\n", 
§c
[1]Ë!
NULL
)

1693 
v¨
 = 
homedú
;

1694 
èû
 = 
§c
 + 1;

1697 #ifde‡
OS2


1700 
v¨
 = 
NULL
;

1707 
èû
 = 
§c
;

1708 
v¨
 = 
d°
;

1709 
c
 = 
d°Àn
 - 1;

1710 
c
-- > 0 && *
èû
 &&

1711 
	`isfûech¨
(*
èû
Ë&& !
	`i•©h£p
(*tail))

1712 *
v¨
++ = *
èû
++;

1713 *
v¨
 = 
NUL
;

1721 #i‡
	`deföed
(
HAVE_GETPWNAM
Ë&& deföed(
HAVE_PWD_H
)

1723 
∑sswd
 *
pw
;

1725 
pw
 = 
	`gëpw«m
((*)
d°
 + 1);

1726 i‡(
pw
 !
NULL
)

1727 
v¨
 = (
ch¨_u
 *)
pw
->
pw_dú
;

1729 
v¨
 = 
NULL
;

1731 i‡(
v¨
 =
NULL
)

1734 
v¨
 = 
	`Ex∑ndO√
(
d°
, 
NULL
, 0, 
WILD_EXPAND_FREE
);

1735 
mu°‰ì
 = 
TRUE
;

1740 i‡(
v¨
 !
NULL
 && *v¨ !
NUL
 &&

1741 (
	`STRLEN
(
v¨
Ë+ STRLEN(
èû
Ë+ 1 < ()
d°Àn
))

1743 
	`STRCPY
(
d°
, 
v¨
);

1744 
d°Àn
 -
	`STRLEN
(
v¨
);

1745 
d°
 +
	`STRLEN
(
v¨
);

1748 i‡(*
v¨
 && 
	`i•©h£p
(*(
d°
-1)Ë&& i•©h£p(*
èû
))

1749 ++
èû
;

1750 
§c
 = 
èû
;

1751 
c›y_ch¨
 = 
FALSE
;

1753 #i‡
	`deföed
(
UNIX
Ë|| deföed(
OS2
)

1754 i‡(
mu°‰ì
)

1755 
	`vim_‰ì
(
v¨
);

1759 i‡(
c›y_ch¨
)

1761 #i‡
	`deföed
(
UNIX
Ë|| deföed(
OS2
)

1765 
©_°¨t
 = 
FALSE
;

1767 i‡(
§c
[0] == '\\')

1769 *
d°
++ = *
§c
++;

1770 --
d°Àn
;

1772 #i‡
	`deföed
(
UNIX
Ë|| deföed(
OS2
)

1773 i‡(
§c
[0] == ' ' || src[0] == ',')

1774 
©_°¨t
 = 
TRUE
;

1776 *
d°
++ = *
§c
++;

1777 --
d°Àn
;

1780 *
d°
 = 
NUL
;

1781 
	}
}

1788 
	$home_ª∂a˚
(
buf
, 
§c
, 
d°
, 
d°Àn
)

1789 
BUF
 *
buf
;

1790 
ch¨_u
 *
§c
;

1791 
ch¨_u
 *
d°
;

1792 
d°Àn
;

1794 
size_t
 
dúÀn
 = 0, 
ívÀn
 = 0;

1795 
size_t
 
Àn
;

1796 
ch¨_u
 *
homedú_ív
;

1797 
ch¨_u
 *
p
;

1799 i‡(
§c
 =
NULL
)

1801 *
d°
 = 
NUL
;

1808 i‡(
buf
 !
NULL
 && buf->
b_hñp
)

1810 
	`STRCPY
(
d°
, 
	`gëèû
(
§c
));

1818 i‡(
homedú
 !
NULL
)

1819 
dúÀn
 = 
	`STRLEN
(
homedú
);

1820 
homedú_ív
 = 
	`vim_gëív
((
ch¨_u
 *)"HOME");

1821 i‡(
homedú_ív
 !
NULL
)

1822 
ívÀn
 = 
	`STRLEN
(
homedú_ív
);

1824 
§c
 = 
	`skùwhôe
(src);

1825 *
§c
 && 
d°Àn
 > 0)

1836 
p
 = 
homedú
;

1837 
Àn
 = 
dúÀn
;

1840 i‡(
Àn
 && 
	`‚amícmp
(
§c
, 
p
,ÜíË=0 && (
	`i•©h£p
(src[len]) ||

1841 
§c
[
Àn
] =',' || src[Àn] =' ' || src[Àn] =
NUL
))

1843 
§c
 +
Àn
;

1844 i‡(--
d°Àn
 > 0)

1845 *
d°
++ = '~';

1849 i‡(!
	`i•©h£p
(
§c
[0]Ë&& --
d°Àn
 > 0)

1850 *
d°
++ = '/';

1852 i‡(
p
 =
homedú_ív
)

1854 
p
 = 
homedú_ív
;

1855 
Àn
 = 
ívÀn
;

1859 *
§c
 && *§¯!',' && *§¯!' ' && --
d°Àn
 > 0)

1860 *
d°
++ = *
§c
++;

1862 (*
§c
 =' ' || *§¯=','Ë&& --
d°Àn
 > 0)

1863 *
d°
++ = *
§c
++;

1867 *
d°
 = 
NUL
;

1868 
	}
}

1874 
ch¨_u
 *

1875 
	$home_ª∂a˚_ßve
(
buf
, 
§c
)

1876 
BUF
 *
buf
;

1877 
ch¨_u
 *
§c
;

1879 
ch¨_u
 *
d°
;

1880 
Àn
;

1882 i‡(
§c
 =
NULL
)

1883 
Àn
 = 3;

1885 
Àn
 = 
	`STRLEN
(
§c
) + 3;

1886 
d°
 = 
	`Æloc
(
Àn
);

1887 i‡(
d°
 !
NULL
)

1888 
	`home_ª∂a˚
(
buf
, 
§c
, 
d°
, 
Àn
);

1889  
d°
;

1890 
	}
}

1901 
	$fuŒ∑thcmp
(
s1
, 
s2
)

1902 
ch¨_u
 *
s1
, *
s2
;

1904 #ifde‡
UNIX


1905 
ch¨_u
 
buf1
[
MAXPATHL
];

1906 
°©
 
°1
, 
°2
;

1907 
r1
, 
r2
;

1909 
	`ex∑nd_ív
(
s1
, 
buf1
, 
MAXPATHL
);

1910 
r1
 = 
	`°©
((*)
buf1
, &
°1
);

1911 
r2
 = 
	`°©
((*)
s2
, &
°2
);

1912 i‡(
r1
 !0 && 
r2
 != 0)

1913  
FPC_NOTX
;

1914 i‡(
r1
 !0 || 
r2
 != 0)

1915  
FPC_DIFFX
;

1916 i‡(
°1
.
°_dev
 =
°2
.°_dev && st1.
°_öo
 == st2.st_ino)

1917  
FPC_SAME
;

1918  
FPC_DIFF
;

1920 
ch¨_u
 *
buf1
 = 
NULL
;

1921 
ch¨_u
 *
buf2
 = 
NULL
;

1922 
ªtvÆ
 = 
FPC_DIFF
;

1923 
r1
, 
r2
;

1925 i‡((
buf1
 = 
	`Æloc
(
MAXPATHL
)Ë!
NULL
 && (
buf2
 =álloc(MAXPATHL)) != NULL)

1927 
	`ex∑nd_ív
(
s1
, 
buf2
, 
MAXPATHL
);

1931 
r1
 = 
	`FuŒName
(
buf2
, 
buf1
, 
MAXPATHL
, 
FALSE
);

1932 
r2
 = 
	`FuŒName
(
s2
, 
buf2
, 
MAXPATHL
, 
FALSE
);

1933 i‡(
r1
 !
OK
 && 
r2
 != OK)

1934 
ªtvÆ
 = 
FPC_NOTX
;

1935 i‡(
r1
 !
OK
 || 
r2
 != OK)

1936 
ªtvÆ
 = 
FPC_DIFFX
;

1937 i‡(
	`‚amecmp
(
buf1
, 
buf2
))

1938 
ªtvÆ
 = 
FPC_DIFF
;

1940 
ªtvÆ
 = 
FPC_SAME
;

1942 
	`vim_‰ì
(
buf1
);

1943 
	`vim_‰ì
(
buf2
);

1944  
ªtvÆ
;

1946 
	}
}

1951 
ch¨_u
 *

1952 
	$gëèû
(
‚ame
)

1953 
ch¨_u
 *
‚ame
;

1955 
ch¨_u
 *
p1
, *
p2
;

1957 i‡(
‚ame
 =
NULL
)

1958  (
ch¨_u
 *)"";

1959 
p1
 = 
p2
 = 
‚ame
; *p2; ++p2)

1961 i‡(
	`i•©h£p
(*
p2
))

1962 
p1
 = 
p2
 + 1;

1964  
p1
;

1965 
	}
}

1971 
	$i•©h£p
(
c
)

1972 
c
;

1974 #ifde‡
UNIX


1975  (
c
 =
PATHSEP
);

1977 #ifde‡
BACKSLASH_IN_FILENAME


1978  (
c
 =':' || c =
PATHSEP
 || c == '\\');

1980  (
c
 =':' || c =
PATHSEP
);

1983 
	}
}

1989 
ch¨_u
 *

1990 
	$c⁄ˇt_‚ames
(
‚ame1
, 
‚ame2
, 
£p
)

1991 
ch¨_u
 *
‚ame1
;

1992 
ch¨_u
 *
‚ame2
;

1993 
£p
;

1995 
ch¨_u
 *
de°
;

1997 
de°
 = 
	`Æloc
(()(
	`STRLEN
(
‚ame1
Ë+ STRLEN(
‚ame2
) + 2));

1998 i‡(
de°
 !
NULL
)

2000 
	`STRCPY
(
de°
, 
‚ame1
);

2001 i‡(
£p
 && *
de°
 && !
	`i•©h£p
(*(de° + 
	`STRLEN
(dest) - 1)))

2002 
	`STRCAT
(
de°
, 
PATHSEPSTR
);

2003 
	`STRCAT
(
de°
, 
‚ame2
);

2005  
de°
;

2006 
	}
}

2012 
ch¨_u
 *

2013 
	$FuŒName_ßve
(
‚ame
)

2014 
ch¨_u
 *
‚ame
;

2016 
ch¨_u
 *
buf
;

2017 
ch¨_u
 *
√w_‚ame
 = 
NULL
;

2019 
buf
 = 
	`Æloc
(()
MAXPATHL
);

2020 i‡(
buf
 !
NULL
)

2022 i‡(
	`FuŒName
(
‚ame
, 
buf
, 
MAXPATHL
, 
FALSE
Ë!
FAIL
)

2023 
√w_‚ame
 = 
	`°rßve
(
buf
);

2024 
	`vim_‰ì
(
buf
);

2026  
√w_‚ame
;

2027 
	}
}

2029 #ifde‡
CINDENT


2039 
isdeÁu…
 
__ARGS
((
ch¨_u
 *));

2040 
ch¨_u
 *
a·î_œbñ
 
__ARGS
((ch¨_u *
l
));

2041 
gë_ödít_nﬁabñ
 
__ARGS
((
löír_t
 
 um
));

2042 
skù_œbñ
 
__ARGS
((
löír_t
, 
ch¨_u
 **
µ
, 
öd_maxcommít
));

2043 
i•ª¥oc
 
__ARGS
((
ch¨_u
 *));

2044 
iscommít
 
__ARGS
((
ch¨_u
 *));

2045 
commít‹em±y
 
__ARGS
((
ch¨_u
 *));

2046 
i°îmö©ed
 
__ARGS
((
ch¨_u
 *));

2047 
isfuncde˛
 
__ARGS
((
ch¨_u
 *));

2048 
ch¨_u
 *
skù_°rög
 
__ARGS
((ch¨_u *
p
));

2049 
isif
 
__ARGS
((
ch¨_u
 *));

2050 
i£l£
 
__ARGS
((
ch¨_u
 *));

2051 
isdo
 
__ARGS
((
ch¨_u
 *));

2052 
iswhûeofdo
 
__ARGS
((
ch¨_u
 *, 
löír_t
, ));

2053 
FPOS
 *
föd_°¨t_commít
 
__ARGS
((
öd_maxcommít
));

2054 
FPOS
 *
föd_°¨t_bø˚
 
__ARGS
(());

2055 
FPOS
 *
föd_m©ch_∑ªn
 
__ARGS
((, ));

2056 
föd_œ°_∑ªn
 
__ARGS
((
ch¨_u
 *
l
));

2057 
föd_m©ch
 
__ARGS
((
lookf‹
, 
löír_t
 
oursc›e
,

2058 
öd_max∑ªn
, 
öd_maxcommít
));

2065 
	$i¶abñ
(
öd_maxcommít
)

2066 
öd_maxcommít
;

2068 
ch¨_u
 *
s
;

2070 
s
 = 
	`skùwhôe
(
	`ml_gë_cuæöe
());

2077 i‡(
	`isdeÁu…
(
s
))

2078  
FALSE
;

2080 i‡(!
	`isidch¨
(*
s
))

2081  
FALSE
;

2083 
	`isidch¨
(*
s
))

2084 
s
++;

2086 
s
 = 
	`skùwhôe
(s);

2089 i‡(*
s
 == ':' && s[1] != ':')

2095 
FPOS
 
curs‹_ßve
;

2096 
FPOS
 *
åypos
;

2097 
ch¨_u
 *
löe
;

2099 
curs‹_ßve
 = 
curwö
->
w_curs‹
;

2100 
curwö
->
w_curs‹
.
 um
 > 1)

2102 --
curwö
->
w_curs‹
.
 um
;

2107 
curwö
->
w_curs‹
.
cﬁ
 = 0;

2108 i‡((
åypos
 = 
	`föd_°¨t_commít
(
öd_maxcommít
)Ë!
NULL
)

2109 
curwö
->
w_curs‹
 = *
åypos
;

2111 
löe
 = 
	`ml_gë_cuæöe
();

2112 i‡(
	`i•ª¥oc
(
löe
))

2114 i‡(
	`commít‹em±y
(
löe
))

2117 
curwö
->
w_curs‹
 = 
curs‹_ßve
;

2118 i‡(
	`i°îmö©ed
(
löe
Ë|| 
	`isˇ£
(line))

2119  
TRUE
;

2120  
FALSE
;

2122 
curwö
->
w_curs‹
 = 
curs‹_ßve
;

2123  
TRUE
;

2125  
FALSE
;

2126 
	}
}

2132 
	$isˇ£
(
s
)

2133 
ch¨_u
 *
s
;

2135 
s
 = 
	`skùwhôe
(s);

2136 i‡(
	`STRNCMP
(
s
, "ˇ£", 4Ë=0 && !
	`isidch¨
(s[4]))

2138 
s
 += 4; *s; ++s)

2139 i‡(*
s
 == ':')

2141 i‡(
s
[1] == ':')

2142 ++
s
;

2144  
TRUE
;

2146  
FALSE
;

2149 i‡(
	`isdeÁu…
(
s
))

2150  
TRUE
;

2151  
FALSE
;

2152 
	}
}

2158 
	$isdeÁu…
(
s
)

2159 
ch¨_u
 *
s
;

2161  (
	`STRNCMP
(
s
, "default", 7) == 0 &&

2162 *(
s
 = 
	`skùwhôe
(s + 7)) == ':' &&

2163 
s
[1] != ':');

2164 
	}
}

2172 
ch¨_u
 *

2173 
	$a·î_œbñ
(
l
)

2174 
ch¨_u
 *
l
;

2176  ; *
l
; ++l)

2177 i‡(*
l
 == ':')

2179 i‡(
l
[1] == ':')

2180 ++
l
;

2184 i‡(*
l
 =
NUL
)

2185  
NULL
;

2186 
l
 = 
	`skùwhôe
(l + 1);

2187 i‡(
	`commít‹em±y
(
l
))

2188  
NULL
;

2189  
l
;

2190 
	}
}

2197 
	$gë_ödít_nﬁabñ
(
 um
)

2198 
löír_t
 
 um
;

2200 
ch¨_u
 *
l
;

2201 
FPOS
 
Â
;

2202 
cﬁƒ_t
 
cﬁ
;

2203 
ch¨_u
 *
p
;

2205 
l
 = 
	`ml_gë
(
 um
);

2206 
p
 = 
	`a·î_œbñ
(
l
);

2207 i‡(
p
 =
NULL
)

2210 
Â
.
cﬁ
 = 
p
 - 
l
;

2211 
Â
.
 um
 =Ünum;

2212 
	`gëvcﬁ
(
curwö
, &
Â
, &
cﬁ
, 
NULL
, NULL);

2213  ()
cﬁ
;

2214 
	}
}

2223 
	$skù_œbñ
(
 um
, 
µ
, 
öd_maxcommít
)

2224 
löír_t
 
 um
;

2225 
ch¨_u
 **
µ
;

2226 
öd_maxcommít
;

2228 
ch¨_u
 *
l
;

2229 
amou¡
;

2230 
FPOS
 
curs‹_ßve
;

2232 
curs‹_ßve
 = 
curwö
->
w_curs‹
;

2233 
curwö
->
w_curs‹
.
 um
 =Ünum;

2234 
l
 = 
	`ml_gë_cuæöe
();

2235 i‡(
	`isˇ£
(
l
Ë|| 
	`i¶abñ
(
öd_maxcommít
))

2237 
amou¡
 = 
	`gë_ödít_nﬁabñ
(
 um
);

2238 
l
 = 
	`a·î_œbñ
(
	`ml_gë_cuæöe
());

2239 i‡(
l
 =
NULL
)

2240 
l
 = 
	`ml_gë_cuæöe
();

2244 
amou¡
 = 
	`gë_ödít
();

2245 
l
 = 
	`ml_gë_cuæöe
();

2247 *
µ
 = 
l
;

2249 
curwö
->
w_curs‹
 = 
curs‹_ßve
;

2250  
amou¡
;

2251 
	}
}

2257 
	$i•ª¥oc
(
s
)

2258 
ch¨_u
 *
s
;

2260 
s
 = 
	`skùwhôe
(s);

2261 i‡(*
s
 == '#')

2262  
TRUE
;

2264 
	}
}

2270 
	$iscommít
(
p
)

2271 
ch¨_u
 *
p
;

2273  (
p
[0] == '/' && (p[1] == '*' ||Ö[1] == '/'));

2274 
	}
}

2280 
	$commít‹em±y
(
s
)

2281 
ch¨_u
 *
s
;

2283 
s
 = 
	`skùwhôe
(s);

2284 i‡(*
s
 =
NUL
 || 
	`iscommít
(s))

2285  
TRUE
;

2286  
FALSE
;

2287 
	}
}

2295 
	$i°îmö©ed
(
s
)

2296 
ch¨_u
 *
s
;

2298 
s
 = 
	`skùwhôe
(s);

2300 i‡(*
s
 == '{' || *s == '}')

2301  
TRUE
;

2303 *
s
)

2305 i‡(
	`iscommít
(
s
))

2306  
FALSE
;

2307 
s
 = 
	`skù_°rög
(s);

2308 i‡((*
s
 =';' || *†='{' || *†=','Ë&& 
	`commít‹em±y
(s + 1))

2309  
TRUE
;

2310 
s
++;

2312  
FALSE
;

2313 
	}
}

2321 
	$isfuncde˛
(
s
)

2322 
ch¨_u
 *
s
;

2324 *
s
 && *s != '(' && *s != ';')

2325 i‡(
	`iscommít
(
s
++))

2326  
FALSE
;

2327 i‡(*
s
 != '(')

2328  
FALSE
;

2330 *
s
 && *s != ';')

2332 i‡(*
s
 =')' && 
	`commít‹em±y
(s + 1))

2333  
TRUE
;

2334 i‡(
	`iscommít
(
s
++))

2335  
FALSE
;

2337  
FALSE
;

2338 
	}
}

2343 
ch¨_u
 *

2344 
	$skù_°rög
(
p
)

2345 
ch¨_u
 *
p
;

2347 
i
;

2352  ; ; ++
p
)

2354 i‡(
p
[0] == '\'')

2356 i‡(!
p
[1])

2358 
i
 = 2;

2359 i‡(
p
[1] == '\\')

2361 ++
i
;

2362 
	`isdigô
(
p
[
i
 - 1]))

2363 ++
i
;

2365 i‡(
p
[
i
] == '\'')

2367 
p
 +
i
;

2371 i‡(
p
[0] == '"')

2373 ++
p
;Ö[0]; ++p)

2375 i‡(
p
[0] == '\\' &&Ö[1])

2376 ++
p
;

2377 i‡(
p
[0] == '"')

2384 i‡(!*
p
)

2385 --
p
;

2386  
p
;

2387 
	}
}

2390 
	$isif
(
p
)

2391 
ch¨_u
 *
p
;

2393  (
	`STRNCMP
(
p
, "if", 2Ë=0 && !
	`isidch¨
(p[2]));

2394 
	}
}

2397 
	$i£l£
(
p
)

2398 
ch¨_u
 *
p
;

2400  (
	`STRNCMP
(
p
, "ñ£", 4Ë=0 && !
	`isidch¨
(p[4]));

2401 
	}
}

2404 
	$isdo
(
p
)

2405 
ch¨_u
 *
p
;

2407  (
	`STRNCMP
(
p
, "do", 2Ë=0 && !
	`isidch¨
(p[2]));

2408 
	}
}

2416 
	$iswhûeofdo
(
p
, 
 um
, 
öd_max∑ªn
)

2417 
ch¨_u
 *
p
;

2418 
löír_t
 
 um
;

2419 
öd_max∑ªn
;

2421 
FPOS
 
curs‹_ßve
;

2422 
FPOS
 *
åypos
;

2423 
ªtvÆ
 = 
FALSE
;

2425 
p
 = 
	`skùwhôe
(p);

2426 i‡(
	`STRNCMP
(
p
, "whûe", 5Ë=0 && !
	`isidch¨
(p[5]))

2428 
curs‹_ßve
 = 
curwö
->
w_curs‹
;

2429 
curwö
->
w_curs‹
.
 um
 =Ünum;

2430 
curwö
->
w_curs‹
.
cﬁ
 = 0;

2431 i‡((
åypos
 = 
	`födm©chlimô
(0, 0, 
öd_max∑ªn
)Ë!
NULL
)

2433 
p
 = 
	`ml_gë_pos
(
åypos
) + 1;

2434 
p
 = 
	`skùwhôe
(p);

2435 i‡(*
p
 == ';')

2436 
ªtvÆ
 = 
TRUE
;

2438 
curwö
->
w_curs‹
 = 
curs‹_ßve
;

2440  
ªtvÆ
;

2441 
	}
}

2447 
FPOS
 *

2448 
	$föd_°¨t_commít
(
öd_maxcommít
)

2449 
öd_maxcommít
;

2451 
FPOS
 *
pos
;

2452 
ch¨_u
 *
löe
;

2453 
ch¨_u
 *
p
;

2455 i‡((
pos
 = 
	`födm©chlimô
('*', 
FM_BACKWARD
, 
öd_maxcommít
)Ë=
NULL
)

2456  
NULL
;

2461 
löe
 = 
	`ml_gë
(
pos
->
 um
);

2462 
p
 = 
löe
; *∞&& ()’ -ÜöeË< 
pos
->
cﬁ
; ++p)

2463 
p
 = 
	`skù_°rög
(p);

2464 i‡(()(
p
 - 
löe
Ë> 
pos
->
cﬁ
)

2465  
NULL
;

2466  
pos
;

2467 
	}
}

2478 
FPOS
 *

2479 
	$föd_°¨t_bø˚
(
öd_maxcommít
)

2480 
öd_maxcommít
;

2482 
FPOS
 
curs‹_ßve
;

2483 
FPOS
 *
åypos
;

2484 
FPOS
 *
pos
;

2485 
FPOS
 
pos_c›y
;

2487 
curs‹_ßve
 = 
curwö
->
w_curs‹
;

2488 (
åypos
 = 
	`födm©chlimô
('{', 
FM_BLOCKSTOP
, 0)Ë!
NULL
)

2490 
pos_c›y
 = *
åypos
;

2491 
åypos
 = &
pos_c›y
;

2492 
curwö
->
w_curs‹
 = *
åypos
;

2493 
pos
 = 
NULL
;

2494 i‡(!
	`iscommít
(
	`skùwhôe
(
	`ml_gë
(
åypos
->
 um
))) &&

2495 (
pos
 = 
	`föd_°¨t_commít
(
öd_maxcommít
)Ë=
NULL
)

2497 i‡(
pos
 !
NULL
)

2498 
curwö
->
w_curs‹
.
 um
 = 
pos
->lnum;

2500 
curwö
->
w_curs‹
 = 
curs‹_ßve
;

2501  
åypos
;

2502 
	}
}

2508 
FPOS
 *

2509 
	$föd_m©ch_∑ªn
(
öd_max∑ªn
, 
öd_maxcommít
)

2510 
öd_max∑ªn
;

2511 
öd_maxcommít
;

2513 
FPOS
 
curs‹_ßve
;

2514 
FPOS
 *
åypos
;

2515 
FPOS
 
pos_c›y
;

2517 
curs‹_ßve
 = 
curwö
->
w_curs‹
;

2518 i‡((
åypos
 = 
	`födm©chlimô
('(', 0, 
öd_max∑ªn
)Ë!
NULL
)

2520 i‡(
	`iscommít
(
	`skùwhôe
(
	`ml_gë
(
åypos
->
 um
))))

2521 
åypos
 = 
NULL
;

2524 
pos_c›y
 = *
åypos
;

2525 
åypos
 = &
pos_c›y
;

2526 
curwö
->
w_curs‹
 = *
åypos
;

2527 i‡(
	`föd_°¨t_commít
(
öd_maxcommít
Ë!
NULL
)

2528 
åypos
 = 
NULL
;

2531 
curwö
->
w_curs‹
 = 
curs‹_ßve
;

2532  
åypos
;

2533 
	}
}

2539 
	$föd_œ°_∑ªn
(
l
)

2540 
ch¨_u
 *
l
;

2542 
i
;

2543 
ªtvÆ
 = 
FALSE
;

2545 
curwö
->
w_curs‹
.
cﬁ
 = 0;

2547 
i
 = 0; 
l
[i]; i++)

2549 
i
 = 
	`skù_°rög
(
l
 + i) -Ü;

2550 i‡(
l
[
i
] == ')')

2552 
curwö
->
w_curs‹
.
cﬁ
 = 
i
;

2553 
ªtvÆ
 = 
TRUE
;

2556  
ªtvÆ
;

2557 
	}
}

2560 
	$gë_c_ödít
()

2566 
öd_Àvñ
 = 
curbuf
->
b_p_sw
;

2572 
öd_›í_imag
 = 0;

2578 
öd_no_bø˚
 = 0;

2583 
öd_fú°_›í
 = 0;

2589 
öd_›í_exåa
 = 0;

2596 
öd_˛o£_exåa
 = 0;

2602 
öd_›í_À·_imag
 = 0;

2607 
öd_ˇ£
 = 
curbuf
->
b_p_sw
;

2612 
öd_ˇ£_code
 = 
curbuf
->
b_p_sw
;

2617 
öd_∑øm
 = 
curbuf
->
b_p_sw
;

2622 
öd_func_ty≥
 = 
curbuf
->
b_p_sw
;

2628 
öd_c⁄töu©i⁄
 = 
curbuf
->
b_p_sw
;

2633 
öd_un˛o£d
 = 
curbuf
->
b_p_sw
 * 2;

2638 
öd_ö_commít
 = 3;

2643 
öd_max∑ªn
 = 20;

2648 
öd_maxcommít
 = 30;

2650 
FPOS
 
cur_cuΩos
;

2651 
amou¡
;

2652 
sc›e_amou¡
;

2653 
cur_amou¡
;

2654 
cﬁƒ_t
 
cﬁ
;

2655 
ch¨_u
 *
thñöe
;

2656 
ch¨_u
 *
löec›y
;

2657 
FPOS
 *
åypos
;

2658 
FPOS
 
our_∑ªn_pos
;

2659 
ch¨_u
 *
°¨t
;

2660 
°¨t_bø˚
;

2661 
	#BRACE_IN_COL0
 1

	)

2662 
	#BRACE_AT_START
 2

	)

2663 
	#BRACE_AT_END
 3

	)

2664 
löír_t
 
oursc›e
;

2665 
ch¨_u
 *
l
;

2666 
ch¨_u
 *
look
;

2667 
lookf‹
;

2668 
	#LOOKFOR_IF
 1

	)

2669 
	#LOOKFOR_DO
 2

	)

2670 
	#LOOKFOR_CASE
 3

	)

2671 
	#LOOKFOR_ANY
 4

	)

2672 
	#LOOKFOR_TERM
 5

	)

2673 
	#LOOKFOR_UNTERM
 6

	)

2674 
whûñevñ
;

2675 
löír_t
 
 um
;

2676 
ch¨_u
 *
›ti⁄s
;

2677 
‰a˘i⁄
 = 0;

2678 
dividî
;

2679 
n
;

2681 
›ti⁄s
 = 
curbuf
->
b_p_cöo
; *options; )

2683 
l
 = 
›ti⁄s
++;

2684 i‡(*
›ti⁄s
 == '-')

2685 ++
›ti⁄s
;

2686 
n
 = 
	`gëdigôs
(&
›ti⁄s
);

2687 
dividî
 = 0;

2688 i‡(*
›ti⁄s
 == '.')

2690 
‰a˘i⁄
 = 
	`©ﬁ
((*)++
›ti⁄s
);

2691 
	`isdigô
(*
›ti⁄s
))

2693 ++
›ti⁄s
;

2694 i‡(
dividî
)

2695 
dividî
 *= 10;

2697 
dividî
 = 10;

2700 i‡(*
›ti⁄s
 == 's')

2702 i‡(
n
 =0 && 
‰a˘i⁄
 == 0)

2703 
n
 = 
curbuf
->
b_p_sw
;

2706 
n
 *
curbuf
->
b_p_sw
;

2707 i‡(
dividî
)

2708 
n
 +(
curbuf
->
b_p_sw
 * 
‰a˘i⁄
 + 
dividî
 / 2) / divider;

2710 ++
›ti⁄s
;

2712 i‡(
l
[1] == '-')

2713 
n
 = -n;

2714 *
l
)

2716 '>': 
öd_Àvñ
 = 
n
; ;

2717 'e': 
öd_›í_imag
 = 
n
; ;

2718 'n': 
öd_no_bø˚
 = 
n
; ;

2719 'f': 
öd_fú°_›í
 = 
n
; ;

2720 '{': 
öd_›í_exåa
 = 
n
; ;

2721 '}': 
öd_˛o£_exåa
 = 
n
; ;

2722 '^': 
öd_›í_À·_imag
 = 
n
; ;

2723 ':': 
öd_ˇ£
 = 
n
; ;

2724 '=': 
öd_ˇ£_code
 = 
n
; ;

2725 'p': 
öd_∑øm
 = 
n
; ;

2726 't': 
öd_func_ty≥
 = 
n
; ;

2727 'c': 
öd_ö_commít
 = 
n
; ;

2728 '+': 
öd_c⁄töu©i⁄
 = 
n
; ;

2729 '(': 
öd_un˛o£d
 = 
n
; ;

2730 ')': 
öd_max∑ªn
 = 
n
; ;

2731 '*': 
öd_maxcommít
 = 
n
; ;

2737 
cur_cuΩos
 = 
curwö
->
w_curs‹
;

2743 
löec›y
 = 
	`°rßve
(
	`ml_gë
(
cur_cuΩos
.
 um
));

2744 i‡(
löec›y
 =
NULL
)

2752 i‡((
Sèã
 & 
INSERT
Ë&& 
löec›y
[
curwö
->
w_curs‹
.
cﬁ
] == ')')

2753 
löec›y
[
curwö
->
w_curs‹
.
cﬁ
] = 
NUL
;

2755 
thñöe
 = 
	`skùwhôe
(
löec›y
);

2759 
curwö
->
w_curs‹
.
cﬁ
 = 0;

2764 i‡(*
thñöe
 ='#' && (*
löec›y
 ='#' || 
	`ö_cökeys
('#', ' ', 
TRUE
)))

2766 
amou¡
 = 0;

2772 i‡(
	`i¶abñ
(
öd_maxcommít
))

2774 
amou¡
 = 0;

2781 i‡(!
	`iscommít
(
thñöe
) &&

2782 (
åypos
 = 
	`föd_°¨t_commít
(
öd_maxcommít
)Ë!
NULL
)

2786 
	`gëvcﬁ
(
curwö
, 
åypos
, &
cﬁ
, 
NULL
, NULL);

2787 
amou¡
 = 
cﬁ
;

2793 i‡(
thñöe
[0] == '*')

2795 
amou¡
 += 1;

2806 
amou¡
 = -1;

2807 
 um
 = 
cur_cuΩos
. um - 1;Ünum > 
åypos
->lnum; --lnum)

2809 i‡(
	`löewhôe
(
 um
))

2811 
amou¡
 = 
	`gë_ödít_ um
(
 um
);

2814 i‡(
amou¡
 == -1)

2816 
°¨t
 = 
	`ml_gë
(
åypos
->
 um
);

2817 
look
 = 
°¨t
 + 
åypos
->
cﬁ
 + 2;

2818 i‡(*
look
)

2819 
åypos
->
cﬁ
 = 
	`skùwhôe
(
look
Ë- 
°¨t
;

2820 
	`gëvcﬁ
(
curwö
, 
åypos
, &
cﬁ
, 
NULL
, NULL);

2821 
amou¡
 = 
cﬁ
;

2822 i‡(!*
look
)

2823 
amou¡
 +
öd_ö_commít
;

2831 i‡((
åypos
 = 
	`föd_m©ch_∑ªn
(
öd_max∑ªn
, 
öd_maxcommít
)Ë!
NULL
)

2837 
amou¡
 = -1;

2838 
our_∑ªn_pos
 = *
åypos
;

2839 i‡(
thñöe
[0] != ')')

2841 
 um
 = 
cur_cuΩos
. um - 1;Ünum > 
our_∑ªn_pos
.lnum; --lnum)

2843 
l
 = 
	`skùwhôe
(
	`ml_gë
(
 um
));

2844 i‡(
	`commít‹em±y
(
l
))

2846 i‡(
	`i•ª¥oc
(
l
))

2848 
curwö
->
w_curs‹
.
 um
 =Ünum;

2850 i‡((
åypos
 = 
	`föd_m©ch_∑ªn
(
öd_max∑ªn
,

2851 
öd_maxcommít
)Ë!
NULL
 &&

2852 
åypos
->
 um
 =
our_∑ªn_pos
.lnum &&

2853 
åypos
->
cﬁ
 =
our_∑ªn_pos
.col)

2855 
amou¡
 = 
	`gë_ödít_ um
(
 um
);

2866 i‡(
amou¡
 == -1)

2868 
amou¡
 = 
	`skù_œbñ
(
our_∑ªn_pos
.
 um
, &
look
, 
öd_maxcommít
);

2869 i‡(
thñöe
[0] =')' || 
öd_un˛o£d
 == 0 ||

2870 *
	`skùwhôe
(
look
) == '(')

2877 i‡(
thñöe
[0] != ')')

2879 
cﬁ
 = 
our_∑ªn_pos
.col + 1;

2880 
look
 = 
	`ml_gë
(
our_∑ªn_pos
.
 um
);

2881 
	`vim_iswhôe
(
look
[
cﬁ
]))

2882 
cﬁ
++;

2883 i‡(
look
[
cﬁ
] !
NUL
)

2884 
our_∑ªn_pos
.
cﬁ
 = col;

2886 
our_∑ªn_pos
.
cﬁ
++;

2893 
	`gëvcﬁ
(
curwö
, &
our_∑ªn_pos
, &
cﬁ
, 
NULL
, NULL);

2894 
amou¡
 = 
cﬁ
;

2897 
amou¡
 +
öd_un˛o£d
;

2904 i‡((
åypos
 = 
	`föd_°¨t_bø˚
(
öd_maxcommít
)Ë!
NULL
)

2906 
oursc›e
 = 
åypos
->
 um
;

2907 
°¨t
 = 
	`ml_gë
(
oursc›e
);

2915 
look
 = 
	`skùwhôe
(
°¨t
);

2916 i‡(*
look
 == '{')

2918 
	`gëvcﬁ
(
curwö
, 
åypos
, &
cﬁ
, 
NULL
, NULL);

2919 
amou¡
 = 
cﬁ
;

2920 i‡(*
°¨t
 == '{')

2921 
°¨t_bø˚
 = 
BRACE_IN_COL0
;

2923 
°¨t_bø˚
 = 
BRACE_AT_START
;

2931 
curwö
->
w_curs‹
.
 um
 = 
oursc›e
;

2937 
 um
 = 
oursc›e
;

2938 i‡(
	`föd_œ°_∑ªn
(
°¨t
) &&

2939 (
åypos
 = 
	`föd_m©ch_∑ªn
(
öd_max∑ªn
,

2940 
öd_maxcommít
)Ë!
NULL
)

2941 
 um
 = 
åypos
->lnum;

2949 
amou¡
 = 
	`skù_œbñ
(
 um
, &
l
, 
öd_maxcommít
);

2951 
°¨t_bø˚
 = 
BRACE_AT_END
;

2959 i‡(
thñöe
[0] == '}')

2965 
amou¡
 +
öd_˛o£_exåa
;

2975 
lookf‹
 = 0;

2976 i‡(
	`i£l£
(
thñöe
))

2977 
lookf‹
 = 
LOOKFOR_IF
;

2978 i‡(
	`iswhûeofdo
(
thñöe
, 
cur_cuΩos
.
 um
, 
öd_max∑ªn
))

2980 
lookf‹
 = 
LOOKFOR_DO
;

2981 i‡(
lookf‹
)

2983 
curwö
->
w_curs‹
.
 um
 = 
cur_cuΩos
.lnum;

2984 i‡(
	`föd_m©ch
(
lookf‹
, 
oursc›e
, 
öd_max∑ªn
,

2985 
öd_maxcommít
Ë=
OK
)

2987 
amou¡
 = 
	`gë_ödít
();

2988 
thìnd
;

3005 i‡(
°¨t_bø˚
 =
BRACE_IN_COL0
)

3007 
amou¡
 = 
öd_›í_À·_imag
;

3011 i‡(
°¨t_bø˚
 =
BRACE_AT_END
)

3012 
amou¡
 +
öd_›í_imag
;

3015 
amou¡
 -
öd_›í_exåa
;

3016 i‡(
amou¡
 < 0)

3017 
amou¡
 = 0;

3021 i‡(
	`isˇ£
(
thñöe
))

3023 
lookf‹
 = 
LOOKFOR_CASE
;

3024 
amou¡
 +
öd_ˇ£
;

3028 
lookf‹
 = 
LOOKFOR_ANY
;

3029 
amou¡
 +
öd_Àvñ
;

3031 
sc›e_amou¡
 = 
amou¡
;

3032 
whûñevñ
 = 0;

3042 
curwö
->
w_curs‹
 = 
cur_cuΩos
;

3045 
curwö
->
w_curs‹
.
 um
--;

3046 
curwö
->
w_curs‹
.
cﬁ
 = 0;

3052 i‡(
curwö
->
w_curs‹
.
 um
 <
oursc›e
)

3054 i‡(
lookf‹
 =
LOOKFOR_UNTERM
)

3055 
amou¡
 +
öd_c⁄töu©i⁄
;

3056 i‡(
lookf‹
 !
LOOKFOR_TERM
)

3057 
amou¡
 = 
sc›e_amou¡
;

3064 i‡((
åypos
 = 
	`föd_°¨t_commít
(
öd_maxcommít
)Ë!
NULL
)

3066 
curwö
->
w_curs‹
.
 um
 = 
åypos
->lnum + 1;

3070 
l
 = 
	`ml_gë_cuæöe
();

3075 i‡(
	`isˇ£
(
l
))

3082 i‡(
lookf‹
 =
LOOKFOR_UNTERM
)

3084 
amou¡
 +
öd_c⁄töu©i⁄
;

3093 i‡(
lookf‹
 =
LOOKFOR_CASE
)

3099 i‡((
åypos
 = 
	`föd_°¨t_bø˚
(
öd_maxcommít
)) ==

3100 
NULL
 || 
åypos
->
 um
 =
oursc›e
)

3102 
amou¡
 = 
	`gë_ödít
();

3108 
n
 = 
	`gë_ödít_nﬁabñ
(
curwö
->
w_curs‹
.
 um
);

3120 i‡(
lookf‹
 =
LOOKFOR_TERM
)

3122 i‡(
n
)

3123 
amou¡
 = 
n
;

3134 i‡(
n
)

3136 
amou¡
 = 
n
;

3137 
l
 = 
	`a·î_œbñ
(
	`ml_gë_cuæöe
());

3138 i‡(
l
 !
NULL
 && 
	`is_cöw‹d
(l))

3139 
amou¡
 +
öd_Àvñ
 + 
öd_no_bø˚
;

3151 
sc›e_amou¡
 = 
	`gë_ödít
(Ë+ 
öd_ˇ£_code
;

3152 
lookf‹
 = 
LOOKFOR_ANY
;

3159 i‡(
lookf‹
 =
LOOKFOR_CASE
)

3165 i‡(
	`i¶abñ
(
öd_maxcommít
))

3167 
l
 = 
	`a·î_œbñ
(
	`ml_gë_cuæöe
());

3168 i‡(
l
 =
NULL
 || 
	`commít‹em±y
(l))

3177 
l
 = 
	`ml_gë_cuæöe
();

3178 i‡(
	`i•ª¥oc
(
l
Ë|| 
	`commít‹em±y
(l))

3184 i‡(!
	`i°îmö©ed
(
l
))

3197 ()
	`föd_œ°_∑ªn
(
l
);

3198 i‡((
åypos
 = 
	`föd_m©ch_∑ªn
(
öd_max∑ªn
,

3199 
öd_maxcommít
)Ë!
NULL
)

3207 
curwö
->
w_curs‹
.
 um
 = 
åypos
->lnum;

3208 
l
 = 
	`ml_gë_cuæöe
();

3209 i‡(
	`isˇ£
(
l
))

3211 ++
curwö
->
w_curs‹
.
 um
;

3220 
cur_amou¡
 = 
	`skù_œbñ
(
curwö
->
w_curs‹
.
 um
,

3221 &
l
, 
öd_maxcommít
);

3230 i‡(
lookf‹
 !
LOOKFOR_TERM
 && 
thñöe
[0] == '{')

3232 
amou¡
 = 
cur_amou¡
 + 
öd_›í_exåa
;

3239 i‡(
	`is_cöw‹d
(
l
))

3248 i‡(
lookf‹
 =
LOOKFOR_UNTERM
)

3250 
amou¡
 +
öd_c⁄töu©i⁄
;

3267 
amou¡
 = 
cur_amou¡
;

3268 i‡(
lookf‹
 !
LOOKFOR_TERM
)

3270 
amou¡
 +
öd_Àvñ
 + 
öd_no_bø˚
;

3281 
l
 = 
	`skùwhôe
(
	`ml_gë_cuæöe
());

3282 i‡(
	`isdo
(
l
))

3284 i‡(
whûñevñ
 == 0)

3286 --
whûñevñ
;

3293 i‡(
	`i£l£
(
l
))

3295 i‡(
	`föd_m©ch
(
LOOKFOR_IF
, 
oursc›e
,

3296 
öd_max∑ªn
, 
öd_maxcommít
Ë=
FAIL
)

3316 i‡(
lookf‹
 =
LOOKFOR_UNTERM
)

3325 
amou¡
 = 
cur_amou¡
;

3326 i‡(
lookf‹
 !
LOOKFOR_TERM
)

3327 
lookf‹
 = 
LOOKFOR_UNTERM
;

3336 i‡(
	`iswhûeofdo
(
l
, 
curwö
->
w_curs‹
.
 um
, 
öd_max∑ªn
))

3345 i‡(
lookf‹
 =
LOOKFOR_UNTERM
)

3347 
amou¡
 +
öd_c⁄töu©i⁄
;

3351 i‡(
whûñevñ
 == 0)

3353 
lookf‹
 = 
LOOKFOR_TERM
;

3354 
amou¡
 = 
	`gë_ödít
();

3355 i‡(
thñöe
[0] == '{')

3356 
amou¡
 +
öd_›í_exåa
;

3358 ++
whûñevñ
;

3377 i‡(
lookf‹
 =
LOOKFOR_UNTERM
)

3379 
amou¡
 +
öd_c⁄töu©i⁄
;

3392 i‡(
lookf‹
 =
LOOKFOR_TERM
)

3394 i‡(
whûñevñ
 == 0)

3413 
l
 = 
	`ml_gë_cuæöe
();

3414 i‡(
	`föd_œ°_∑ªn
(
l
) &&

3415 (
åypos
 = 
	`föd_m©ch_∑ªn
(
öd_max∑ªn
,

3416 
öd_maxcommít
)Ë!
NULL
)

3424 
curwö
->
w_curs‹
.
 um
 = 
åypos
->lnum;

3425 
l
 = 
	`ml_gë_cuæöe
();

3426 i‡(
	`isˇ£
(
l
))

3428 ++
curwö
->
w_curs‹
.
 um
;

3437 
amou¡
 = 
	`skù_œbñ
(
curwö
->
w_curs‹
.
 um
,

3438 &
l
, 
öd_maxcommít
);

3440 i‡(
thñöe
[0] == '{')

3441 
amou¡
 +
öd_›í_exåa
;

3442 
lookf‹
 = 
LOOKFOR_TERM
;

3448 i‡(*
	`skùwhôe
(
l
) == '}' &&

3449 (
åypos
 = 
	`föd_°¨t_bø˚
(
öd_maxcommít
))

3450 !
NULL
)

3451 
curwö
->
w_curs‹
.
 um
 = 
åypos
->lnum;

3474 i‡(
thñöe
[0] == '{')

3476 
amou¡
 = 
öd_fú°_›í
;

3484 i‡(
cur_cuΩos
.
 um
 < 
curbuf
->
b_ml
.
ml_löe_cou¡
 &&

3485 !
	`commít‹em±y
(
thñöe
) &&

3486 
	`isfuncde˛
(
	`ml_gë
(
cur_cuΩos
.
 um
 + 1)))

3488 
amou¡
 = 
öd_func_ty≥
;

3492 
amou¡
 = 0;

3493 
curwö
->
w_curs‹
 = 
cur_cuΩos
;

3497 
curwö
->
w_curs‹
.
 um
 > 1)

3499 
curwö
->
w_curs‹
.
 um
--;

3500 
curwö
->
w_curs‹
.
cﬁ
 = 0;

3502 
l
 = 
	`ml_gë_cuæöe
();

3507 i‡((
åypos
 = 
	`föd_°¨t_commít
(
öd_maxcommít
)Ë!
NULL
)

3509 
curwö
->
w_curs‹
.
 um
 = 
åypos
->lnum + 1;

3517 i‡(
	`isfuncde˛
(
thñöe
))

3523 i‡(
	`i•ª¥oc
(
l
))

3526 i‡(
	`commít‹em±y
(
l
))

3534 i‡(
	`isfuncde˛
(
l
))

3536 
amou¡
 = 
öd_∑øm
;

3547 
	`föd_œ°_∑ªn
(
l
);

3549 i‡((
åypos
 = 
	`föd_m©ch_∑ªn
(
öd_max∑ªn
,

3550 
öd_maxcommít
)Ë!
NULL
)

3551 
curwö
->
w_curs‹
.
 um
 = 
åypos
->lnum;

3552 
amou¡
 = 
	`gë_ödít
();

3558 
thìnd
:

3560 
curwö
->
w_curs‹
 = 
cur_cuΩos
;

3562 
	`vim_‰ì
(
löec›y
);

3564 i‡(
amou¡
 < 0)

3566  
amou¡
;

3567 
	}
}

3570 
	$föd_m©ch
(
lookf‹
, 
oursc›e
, 
öd_max∑ªn
, 
öd_maxcommít
)

3571 
lookf‹
;

3572 
löír_t
 
oursc›e
;

3573 
öd_max∑ªn
;

3574 
öd_maxcommít
;

3576 
ch¨_u
 *
look
;

3577 
FPOS
 *
theúsc›e
;

3578 
ch¨_u
 *
mightbeif
;

3579 
ñ£Àvñ
;

3580 
whûñevñ
;

3582 i‡(
lookf‹
 =
LOOKFOR_IF
)

3584 
ñ£Àvñ
 = 1;

3585 
whûñevñ
 = 0;

3589 
ñ£Àvñ
 = 0;

3590 
whûñevñ
 = 1;

3593 
curwö
->
w_curs‹
.
cﬁ
 = 0;

3595 
curwö
->
w_curs‹
.
 um
 > 
oursc›e
 + 1)

3597 
curwö
->
w_curs‹
.
 um
--;

3598 
curwö
->
w_curs‹
.
cﬁ
 = 0;

3600 
look
 = 
	`skùwhôe
(
	`ml_gë_cuæöe
());

3601 i‡(
	`i£l£
(
look
Ë|| 
	`isif
÷ookË|| 
	`isdo
(look) ||

3602 
	`iswhûeofdo
(
look
, 
curwö
->
w_curs‹
.
 um
, 
öd_max∑ªn
))

3608 
theúsc›e
 = 
	`föd_°¨t_bø˚
(
öd_maxcommít
);

3609 i‡(
theúsc›e
 =
NULL
)

3617 i‡(
theúsc›e
->
 um
 < 
oursc›e
)

3625 i‡(
theúsc›e
->
 um
 > 
oursc›e
)

3633 
look
 = 
	`skùwhôe
(
	`ml_gë_cuæöe
());

3634 i‡(
	`i£l£
(
look
))

3636 
mightbeif
 = 
	`skùwhôe
(
look
 + 4);

3637 i‡(!
	`isif
(
mightbeif
))

3638 ++
ñ£Àvñ
;

3646 i‡(
	`iswhûeofdo
(
look
, 
curwö
->
w_curs‹
.
 um
, 
öd_max∑ªn
))

3648 ++
whûñevñ
;

3653 
look
 = 
	`skùwhôe
(
	`ml_gë_cuæöe
());

3654 i‡(
	`isif
(
look
))

3656 
ñ£Àvñ
--;

3661 i‡(
ñ£Àvñ
 =0 && 
lookf‹
 =
LOOKFOR_IF
)

3662 
whûñevñ
 = 0;

3666 i‡(
	`isdo
(
look
))

3667 
whûñevñ
--;

3674 i‡(
ñ£Àvñ
 <0 && 
whûñevñ
 <= 0)

3676  
OK
;

3680  
FAIL
;

3681 
	}
}

3685 #ifde‡
LISPINDENT


3687 
	$gë_li•_ödít
()

3689 
FPOS
 *
pos
, 
ªÆpos
;

3690 
amou¡
 = 0;

3691 
ch¨_u
 *
th©
;

3692 
cﬁƒ_t
 
cﬁ
;

3693 
cﬁƒ_t
 
maybe
;

3694 
cﬁƒ_t
 
fú°åy
;

3697 
ªÆpos
 = 
curwö
->
w_curs‹
;

3698 
curwö
->
w_curs‹
.
cﬁ
 = 0;

3700 i‡((
pos
 = 
	`födm©ch
('(')Ë!
NULL
)

3702 
curwö
->
w_curs‹
.
 um
 = 
pos
->lnum;

3703 
curwö
->
w_curs‹
.
cﬁ
 = 
pos
->col;

3704 
cﬁ
 = 
pos
->col;

3706 
th©
 = 
	`ml_gë_cuæöe
();

3707 
maybe
 = 
	`gë_ödít
();

3709 i‡(
maybe
 == 0)

3710 
amou¡
 = 2;

3713 *
th©
 && 
cﬁ
)

3715 
amou¡
 +
	`lbr_ch¨èbsize
(
th©
, (
cﬁƒ_t
)amount);

3716 
cﬁ
--;

3717 
th©
++;

3720 
th©
++;

3721 
amou¡
++;

3722 
fú°åy
 = 
amou¡
;

3730 
	`vim_iswhôe
(*
th©
))

3732 
amou¡
 +
	`lbr_ch¨èbsize
(
th©
, (
cﬁƒ_t
)amount);

3733 
th©
++;

3735 *
th©
 && !
	`vim_iswhôe
(*that) && *that != '(')

3737 
amou¡
 +
	`lbr_ch¨èbsize
(
th©
, (
cﬁƒ_t
)amount);

3738 
th©
++;

3740 
	`vim_iswhôe
(*
th©
))

3742 
amou¡
 +
	`lbr_ch¨èbsize
(
th©
, (
cﬁƒ_t
)amount);

3743 
th©
++;

3745 i‡(! *
th©
)

3746 
amou¡
 = 
fú°åy
;

3751 
curwö
->
w_curs‹
.
 um
 > 1)

3753 --
curwö
->
w_curs‹
.
 um
;

3754 i‡(!
	`löewhôe
(
curwö
->
w_curs‹
.
 um
))

3757 
amou¡
 = 
	`gë_ödít
();

3760 
curwö
->
w_curs‹
 = 
ªÆpos
;

3762 i‡(
amou¡
 < 0)

3763 
amou¡
 = 0;

3764  ()
amou¡
;

3765 
	}
}

3768 #i‡
deföed
(
UNIX
Ë|| deföed(
WIN32
Ë|| deföed(
__EMX__
)

3774 
	$¥e£rve_exô
()

3776 
BUF
 *
buf
;

3778 #ifde‡
USE_GUI


3779 i‡(
gui
.
ö_u£
)

3781 
gui
.
dyög
 = 
TRUE
;

3782 
	`åash_ouçut_buf
();

3787 
	`wödgŸo
(()
Rows
 - 1, 0);

3793 
	`£âmode
(0);

3794 #ifde‡
WIN32


3795 i‡(
	`ˇn_íd_ãrmˇp_mode
(
FALSE
Ë=
TRUE
)

3797 
	`°›ãrmˇp
();

3798 
	`Êushbuf
();

3801 
	`out°r
(
IObuff
);

3802 
	`s¸ìn_°¨t
();

3803 
	`Êushbuf
();

3805 
	`ml_˛o£_nŸmod
();

3807 
buf
 = 
fú°buf
; bu‡!
NULL
; bu‡buf->
b_√xt
)

3809 i‡(
buf
->
b_ml
.
ml_mÂ
 !
NULL
 && buf->b_ml.ml_mÂ->
mf_‚ame
 != NULL)

3811 
	`OUTSTR
("Vim:Öreserving files...\n");

3812 
	`s¸ìn_°¨t
();

3813 
	`Êushbuf
();

3814 
	`ml_sync_Æl
(
FALSE
, FALSE);

3819 
	`ml_˛o£_Æl
(
FALSE
);

3821 
	`OUTSTR
("Vim: Finished.\n");

3823 
	`gëout
(1);

3824 
	}
}

3831 
	$vim_„xi°s
(
‚ame
)

3832 
ch¨_u
 *
‚ame
;

3834 
°©
 
°
;

3836 i‡(
	`°©
((*)
‚ame
, &
°
))

3837  
FALSE
;

3838  
TRUE
;

3839 
	}
}

3848 #i‚de‡
BREAKCHECK_SKIP


3849 
	#BREAKCHECK_SKIP
 32

	)

3853 
	$löe_bªakcheck
()

3855 
cou¡
 = 0;

3857 i‡(++
cou¡
 =
BREAKCHECK_SKIP
)

3859 
cou¡
 = 0;

3860 
	`mch_bªakcheck
();

3862 
	}
}

3869 
	$FªeWûd
(
num
, 
fûe
)

3870 
num
;

3871 
ch¨_u
 **
fûe
;

3873 i‡(
fûe
 =
NULL
 || 
num
 == 0)

3875 #i‡
	`deföed
(
__EMX__
Ë&& deföed(
__ALWAYS_HAS_TRAILING_NULL_POINTER
)

3880 
	`_‚ex∂ode‰ì
((**)
fûe
);

3882 
num
--)

3883 
	`vim_‰ì
(
fûe
[
num
]);

3884 
	`vim_‰ì
(
fûe
);

3886 
	}
}

	@src/mk_os2pd.c

17 
	~"vim.h
"

20 
	$maö
(
¨gc
, 
¨gv
)

21 
¨gc
;

22 **
¨gv
;

24 
	`puts
("/*Öathdef.c */");

25 
	`puts
("/* This file shouldáutomatically be created by mk_os2pd.exe */");

26 
	`puts
("/* Change mk_os2pd.c only (ifátáll...). */\n");

27 
	`puts
("#include \"vim.h\"");

28 
	`puts
("#ifndef SYS_VIMRC_FILE");

29 
	`puts
("char_u *sys_vimrc_fname = (char_u *)\"$VIM/.vimrc\";");

30 
	`puts
("#else");

31 
	`puts
("char_u *sys_vimrc_fname = (char_u *)SYS_VIMRC_FILE;");

32 
	`puts
("#endif");

33 
	`puts
("#ifndef SYS_GVIMRC_FILE");

34 
	`puts
("char_u *sys_gvimrc_fname = (char_u *)\"$VIM/.gvimrc\";");

35 
	`puts
("#else");

36 
	`puts
("char_u *sys_gvimrc_fname = (char_u *)SYS_GVIMRC_FILE;");

37 
	`puts
("#endif");

38 
	`puts
("#ifndef VIM_HLP");

39 
	`puts
("char_u *help_fname = (char_u *)\"$VIM/vim_help.txt\";");

40 
	`puts
("#else");

41 
	`puts
("char_u *help_fname = (char_u *)VIM_HLP;");

42 
	`puts
("#endif");

43 
	`¥ötf
("ch¨_u *Æl_cÊag†(ch¨_u *)\"%†%s\";\n", 
¨gv
[1],árgv[2]);

45 
	`exô
(0);

46 
	}
}

	@src/mkcmdtab.c

15 
	~"vim.h
"

17 #i‡
deföed
(
UTS4
)

22 
	$maö
(
¨gc
, 
¨gv
)

23 
¨gc
;

24 **
¨gv
;

26 
c
;

27 
buf„r
[100];

28 
cou¡
;

29 
i
;

30 
FILE
 *
iÂ
, *
oÂ
;

32 i‡(
¨gc
 != 3)

34 
	`Ârötf
(
°dîr
, "Usage: mkcmdtab cmdtab.tab cmdtab.h\n");

35 
	`exô
(10);

37 
iÂ
 = 
	`f›í
(
¨gv
[1], "r");

38 i‡(
iÂ
 =
NULL
)

40 
	`≥º‹
(
¨gv
[1]);

41 
	`exô
(10);

43 
oÂ
 = 
	`f›í
(
¨gv
[2], "w");

44 i‡(
oÂ
 =
NULL
)

46 
	`≥º‹
(
¨gv
[2]);

47 
	`exô
(10);

50 (
c
 = 
	`gëc
(
iÂ
)Ë!'|' && c !
EOF
)

51 
	`putc
(
c
, 
oÂ
);

52 
	`Ârötf
(
oÂ
, "THIS FILE IS AUTOMATICALLY PRODUCED - DO NOT EDIT");

53 (
c
 = 
	`gëc
(
iÂ
)Ë!'|' && c !
EOF
)

55 (
c
 = 
	`gëc
(
iÂ
)Ë!'|' && c !
EOF
)

56 
	`putc
(
c
, 
oÂ
);

58 
cou¡
 = 0;

59 (
c
 = 
	`gëc
(
iÂ
)Ë!'|' && c !
EOF
)

61 
	`putc
(
c
, 
oÂ
);

62 (
c
 = 
	`gëc
(
iÂ
)Ë!'"' && c !
EOF
)

63 
	`putc
(
c
, 
oÂ
);

64 
	`putc
(
c
, 
oÂ
);

66 
i
 = 0;

67 (
c
 = 
	`gëc
(
iÂ
)Ë!'"' && c !
EOF
)

69 
	`putc
(
c
, 
oÂ
);

70 
buf„r
[
i
++] = 
c
;

72 
	`putc
(
c
, 
oÂ
);

73 
buf„r
[
i
] = 0;

75 (
c
 = 
	`gëc
(
iÂ
)Ë!'\n' && c !
EOF
)

76 
	`putc
(
c
, 
oÂ
);

77 
	`putc
(
c
, 
oÂ
);

79 
buf„r
[0])

81 '@': 
	`°r˝y
(
buf„r
, "at");

83 '!': 
	`°r˝y
(
buf„r
, "bang");

85 '<': 
	`°r˝y
(
buf„r
, "lshift");

87 '>': 
	`°r˝y
(
buf„r
, "rshift");

89 '=': 
	`°r˝y
(
buf„r
, "equal");

91 '&': 
	`°r˝y
(
buf„r
, "and");

93 '~': 
	`°r˝y
(
buf„r
, "tilde");

95 '#': 
	`°r˝y
(
buf„r
, "pound");

99 
	`Ârötf
(
oÂ
, "#deföêCMD_%†%d\n", 
buf„r
, 
cou¡
++);

102 
	`Ârötf
(
oÂ
, "#deföêCMD_SIZE %d\n", 
cou¡
);

104 (
c
 = 
	`gëc
(
iÂ
)Ë!'|' && c !
EOF
)

105 
	`putc
(
c
, 
oÂ
);

107 i‡(
c
 != '|')

109 
	`Ârötf
(
°dîr
, "notÉnough |'s\n");

110 
	`exô
(1);

112 
	`exô
(0);

113 
	}
}

	@src/msdos.c

19 
	~<io.h
>

20 
	~"vim.h
"

21 
	~"globÆs.h
"

22 
	~"›ti⁄.h
"

23 
	~"¥Ÿo.h
"

24 
	~<c⁄io.h
>

25 #ifde‡
HAVE_FCNTL_H


26 
	~<f˙é.h
>

28 
	~<bios.h
>

29 #ifde‡
DJGPP


30 
	~<dpmi.h
>

31 
	~<sig«l.h
>

33 
	~<Æloc.h
>

36 
WaôF‹Ch¨
 
__ARGS
(());

37 #ifde‡
USE_MOUSE


38 
show_mou£
 
__ARGS
(());

39 
mou£_¨ó
 
__ARGS
(());

41 
ch™ge_drive
 
__ARGS
(());

42 
¶ash_adju°
 
__ARGS
((
ch¨_u
 *));

43 
cbrk_h™dÀr
 
__ARGS
(());

45 
	sfûñi°


47 
ch¨_u
 **
	mfûe
;

48 
	mnfûes
;

49 
	mmaxfûes
;

50 } 
	tFûeLi°
;

52 
addfûe
 
__ARGS
((
FûeLi°
 *, 
ch¨_u
 *, ));

53 
p°rcmp
();

54 
°æow˝y
 
__ARGS
((
ch¨_u
 *, char_u *));

55 
ex∑nd∑th
 
__ARGS
((
FûeLi°
 *, 
ch¨_u
 *, , , ));

57 
	gcbrk_¥es£d
 = 
FALSE
;

58 
	g˘æc_¥es£d
 = 
FALSE
;

59 
	gdñayed_ªdøw
 = 
FALSE
;

61 #ifde‡
USE_MOUSE


62 
	gmou£_avaû
 = 
FALSE
;

63 
	gmou£_a˘ive
;

64 
	gmou£_hiddí
;

65 
	gmou£_˛ick
 = 0;

66 
	gmou£_x
 = -1;

67 
	gmou£_y
 = -1;

68 
	gmou£_˛ick_time
 = 0;

69 
	gmou£_˛ick_cou¡
 = 0;

70 
	gmou£_œ°_˛ick
 = 0;

71 
	gmou£_˛ick_x
 = 0;

72 
	gmou£_˛ick_y
 = 0;

73 
löír_t
 
	gmou£_t›löe
 = 0;

76 
	#BIOSTICK
 55

	)

80 
	$mch_avaû_mem
(
•ecül
)

81 
•ecül
;

83 #ifde‡
DJGPP


84  
	`_go32_dpmi_ªmaöög_vútuÆ_mem‹y
();

86  
	`c‹ñe·
();

88 
	}
}

94 
	$mch_dñay
(
m£c
, 
ign‹eöput
)

95 
m£c
;

96 
ign‹eöput
;

98 
°¨âime
;

100 i‡(
ign‹eöput
)

102 
°¨âime
 = 
	`bio°ime
(0, 0L);

103 
	`bio°ime
(0, 0LË< 
°¨âime
 + 
m£c
 / 
BIOSTICK
)

107 
	`WaôF‹Ch¨
(
m£c
);

108 
	}
}

116 
	$vim_ªmove
(
«me
)

117 
ch¨_u
 *
«me
;

119 ()
	`£çîm
(
«me
, 0);

120  
	`u∆ök
((*)
«me
);

121 
	}
}

127 
	$mch_wrôe
(
s
, 
Àn
)

128 
ch¨_u
 *
s
;

129 
Àn
;

131 
ch¨_u
 *
p
;

132 
row
, 
cﬁ
;

134 i‡(
ãrm_c⁄sﬁe
)

135 
Àn
--)

137 i‡(
p_wd
)

138 
	`WaôF‹Ch¨
(
p_wd
);

140 i‡(
s
[0] == '\n')

141 
	`putch
('\r');

142 i‡(
s
[0] =
ESC
 && 
Àn
 > 1 && s[1] == '|')

144 
s
[2])

146 'J': 
	`˛rs¸
();

147 
gŸ3
;

149 'K': 
	`˛ªﬁ
();

150 
gŸ3
;

152 'L': 
	`ö¶öe
();

153 
gŸ3
;

155 'M': 
	`dñlöe
();

156 
gŸ3
: 
s
 += 3;

157 
Àn
 -= 2;

169 '9': 
p
 = 
s
 + 2;

170 
row
 = 
	`gëdigôs
(&
p
);

171 i‡(
p
 > 
s
 + 
Àn
)

173 i‡(*
p
 == ';')

175 ++
p
;

176 
cﬁ
 = 
	`gëdigôs
(&
p
);

177 i‡(
p
 > 
s
 + 
Àn
)

179 i‡(*
p
 == 'H' || *p == 'r')

181 i‡(*
p
 == 'H')

182 
	`gŸoxy
(
cﬁ
, 
row
);

184 
	`wödow
(1, 
row
, 
Cﬁumns
, 
cﬁ
);

185 
Àn
 -
p
 - 
s
;

186 
s
 = 
p
 + 1;

190 i‡(*
p
 == 'm')

192 i‡(
row
 == 0)

193 
	`n‹mvideo
();

195 
	`ãxèâr
(
row
);

196 
Àn
 -
p
 - 
s
;

197 
s
 = 
p
 + 1;

202 
	`putch
(*
s
++);

205 
	`wrôe
(1, 
s
, ()
Àn
);

206 
	}
}

219 
	#FOREVER
 1999999999L

	)

222 
	$WaôF‹Ch¨
(
m£c
)

223 
m£c
;

225 
œ°_°©us
 = 0;

226 
REGS
 
ªgs
;

227 
°¨âime
;

228 
x
, 
y
;

230 
°¨âime
 = 
	`bio°ime
(0, 0L);

234 #ifde‡
USE_MOUSE


235 
˛icktime
;

237 i‡(
mou£_avaû
 && 
mou£_a˘ive
 && !
mou£_˛ick
)

239 
ªgs
.
x
.
ax
 = 3;

240 
	`öt86
(0x33, &
ªgs
, &regs);

242 
x
 = 
ªgs
.x.
cx
 / 8;

243 
y
 = 
ªgs
.
x
.
dx
 / 8;

244 i‡((
œ°_°©us
 =0Ë!(
ªgs
.
x
.
bx
 == 0))

246 i‡(
œ°_°©us
)

247 
mou£_˛ick
 = 
MOUSE_RELEASE
;

250 
mou£_˛ick
 = 
ªgs
.
x
.
bx
;

255 
˛icktime
 = 
	`bio°ime
(0, 0L);

256 i‡(
mou£_˛ick_x
 =
x
 && 
mou£_˛ick_y
 =
y
 &&

257 
mou£_t›löe
 =
curwö
->
w_t›löe
 &&

258 
mou£_˛ick_cou¡
 != 4 &&

259 
mou£_˛ick
 =
mou£_œ°_˛ick
 &&

260 
˛icktime
 < 
mou£_˛ick_time
 + 
p_mou£t
 / 
BIOSTICK
)

261 ++
mou£_˛ick_cou¡
;

263 
mou£_˛ick_cou¡
 = 1;

264 
mou£_˛ick_time
 = 
˛icktime
;

265 
mou£_œ°_˛ick
 = 
mou£_˛ick
;

266 
mou£_˛ick_x
 = 
x
;

267 
mou£_˛ick_y
 = 
y
;

268 
mou£_t›löe
 = 
curwö
->
w_t›löe
;

269 
	`SET_NUM_MOUSE_CLICKS
(
mou£_˛ick
, 
mou£_˛ick_cou¡
);

272 i‡(
œ°_°©us
 && (
x
 !
mou£_x
 || 
y
 !
mou£_y
))

273 
mou£_˛ick
 = 
MOUSE_DRAG
;

274 
œ°_°©us
 = 
ªgs
.
x
.
bx
;

275 i‡(
mou£_hiddí
 && 
mou£_x
 >0 && (mou£_x !
x
 || 
mou£_y
 !
y
))

277 
mou£_hiddí
 = 
FALSE
;

278 
	`show_mou£
(
TRUE
);

280 
mou£_x
 = 
x
;

281 
mou£_y
 = 
y
;

285 i‡((
p_biosk
 ? 
	`bioskey
(1Ë: 
	`kbhô
()Ë|| 
cbrk_¥es£d


286 #ifde‡
USE_MOUSE


287 || 
mou£_˛ick


290  
TRUE
;

296 i‡(
m£c
 !
FOREVER
 && 
	`bio°ime
(0, 0LË> 
°¨âime
 + m£¯/ 
BIOSTICK
)

299  
FALSE
;

300 
	}
}

312 
	$mch_öch¨
(
buf
, 
maxÀn
, 
time
)

313 
ch¨_u
 *
buf
;

314 
maxÀn
;

315 
time
;

317 
Àn
 = 0;

318 
c
;

324 i‡(
dñayed_ªdøw
)

326 
dñayed_ªdøw
 = 
FALSE
;

327 
	`upd©eS¸ìn
(
CLEAR
);

328 
	`£tcurs‹
();

329 
	`Êushbuf
();

332 #ifde‡
USE_MOUSE


333 i‡(
time
 != 0)

334 
	`show_mou£
(
TRUE
);

336 i‡(
time
 >= 0)

338 i‡(
	`WaôF‹Ch¨
(
time
) == 0)

340 #ifde‡
USE_MOUSE


341 
	`show_mou£
(
FALSE
);

352 i‡(
	`WaôF‹Ch¨
(
p_ut
) == 0)

353 
	`upd©es¸ùt
(0);

355 
	`WaôF‹Ch¨
(
FOREVER
);

361 --
maxÀn
;

369 
cbrk_¥es£d
 = 
FALSE
;

370 #ifde‡
USE_MOUSE


371 i‡(
mou£_˛ick
 && 
maxÀn
 >= 6)

373 
Àn
 = 5;

374 *
buf
++ = 
ESC
 + 128;

375 *
buf
++ = 'M';

376 *
buf
++ = 
mou£_˛ick
;

377 *
buf
++ = 
mou£_x
 + '!';

378 *
buf
++ = 
mou£_y
 + '!';

379 
mou£_˛ick
 = 0;

384 #ifde‡
USE_MOUSE


385 
mou£_hiddí
 = 
TRUE
;

387 i‡(
p_biosk
)

389 (
Àn
 =0 || 
	`bioskey
(1)Ë&&Üí < 
maxÀn
)

391 
c
 = 
	`bioskey
(0);

399 i‡(
c
 == 0)

400 
c
 = 3;

401 i‡(
c
 == 0x0300)

402 
c
 = 
NUL
;

403 i‡((
c
 & 0xffË=0 || c =
K_NUL
)

405 i‡(
c
 =
K_NUL
)

406 
c
 = 3;

408 
c
 >>= 8;

409 *
buf
++ = 
K_NUL
;

410 ++
Àn
;

413 *
buf
++ = 
c
;

414 
Àn
++;

419 (
Àn
 =0 || 
	`kbhô
()Ë&&Üí < 
maxÀn
)

421 
c
 = 
	`gëch
())

428 *
buf
++ = 
K_NUL
;

429 *
buf
++ = 
	`gëch
();

430 
Àn
++;

432 
K_NUL
:

433 *
buf
++ = 
K_NUL
;

434 *
buf
++ = 3;

435 ++
Àn
;

438 
cbrk_¥es£d
 = 
TRUE
;

441 *
buf
++ = 
c
;

443 ++
Àn
;

447 #ifde‡
USE_MOUSE


448 
	`show_mou£
(
FALSE
);

450 
bìp_cou¡
 = 0;

451  
Àn
;

452 
	}
}

458 
	$mch_ch¨_avaû
()

460  
	`WaôF‹Ch¨
(0L);

461 
	}
}

467 
	$mch_su•íd
()

469 
	`MSG_OUTSTR
("new shell started\n");

470 ()
	`ˇŒ_shñl
(
NULL
, 
SHELL_COOKED
);

471 
√ed_check_time°amps
 = 
TRUE
;

472 
	}
}

474 
_fmode
;

479 
	$mch_wödöô
()

481 
REGS
 
ªgs
;

483 
_fmode
 = 
O_BINARY
;

484 
	`Êushbuf
();

485 ()
	`mch_gë_wösize
();

487 #ifde‡
USE_MOUSE


489 
ªgs
.
x
.
ax
 = 0;

490 ()
	`öt86
(0x33, &
ªgs
, &regs);

491 
mou£_avaû
 = 
ªgs
.
x
.
ax
;

493 
	}
}

495 #ifde‡
USE_MOUSE


497 
	$show_mou£
(
⁄
)

498 
⁄
;

500 
was_⁄
 = 
FALSE
;

501 
REGS
 
ªgs
;

503 i‡(
mou£_avaû
)

505 i‡(!
mou£_a˘ive
 || 
mou£_hiddí
)

506 
⁄
 = 
FALSE
;

511 i‡(
⁄
 && !
was_⁄
 || !on && was_on)

513 
was_⁄
 = 
⁄
;

514 
ªgs
.
x
.
ax
 = 
⁄
 ? 1 : 2;

515 
	`öt86
(0x33, &
ªgs
, &regs);

516 i‡(
⁄
)

517 
	`mou£_¨ó
();

520 
	}
}

526 
	$mou£_¨ó
()

528 
REGS
 
ªgs
;

530 i‡(
mou£_avaû
)

532 
ªgs
.
x
.
cx
 = 0;

533 
ªgs
.
x
.
dx
 = (()
Cﬁumns
 - 1) * 8;

534 
ªgs
.
x
.
ax
 = 7;

535 ()
	`öt86
(0x33, &
ªgs
, &regs);

536 
ªgs
.
x
.
cx
 = 0;

537 
ªgs
.
x
.
dx
 = (()
Rows
 - 1) * 8;

538 
ªgs
.
x
.
ax
 = 8;

539 ()
	`öt86
(0x33, &
ªgs
, &regs);

541 
	}
}

546 
	$mch_check_wö
(
¨gc
, 
¨gv
)

547 
¨gc
;

548 **
¨gv
;

550 i‡(
	`ißây
(1))

551  
OK
;

552  
FAIL
;

553 
	}
}

556 
	$mch_check_öput
()

558 i‡(
	`ißây
(0))

559  
OK
;

560  
FAIL
;

561 
	}
}

563 #ifde‡
USE_FNAME_CASE


568 
	$‚ame_ˇ£
(
«me
)

569 
ch¨_u
 *
«me
;

571 
ch¨_u
 *
èû
;

572 
ffblk
 
fb
;

574 
	`¶ash_adju°
(
«me
);

575 i‡(
	`födfú°
(
«me
, &
fb
, 0) == 0)

577 
èû
 = 
	`gëèû
(
«me
);

578 i‡(
	`STRLEN
(
èû
Ë=STRLEN(
fb
.
ff_«me
))

579 
	`STRCPY
(
èû
, 
fb
.
ff_«me
);

581 
	}
}

589 
	$mch_£âôÀ
(
tôÀ
, 
ic⁄
)

590 
ch¨_u
 *
tôÀ
;

591 
ch¨_u
 *
ic⁄
;

593 
	}
}

599 
	$mch_ª°‹e_tôÀ
(
which
)

600 
which
;

602 
	}
}

605 
	$mch_ˇn_ª°‹e_tôÀ
()

607  
FALSE
;

608 
	}
}

611 
	$mch_ˇn_ª°‹e_ic⁄
()

613  
FALSE
;

614 
	}
}

620 
	$mch_gë_u£r_«me
(
s
, 
Àn
)

621 
ch¨_u
 *
s
;

622 
Àn
;

624 *
s
 = 
NUL
;

625  
FAIL
;

626 
	}
}

632 
	$mch_gë_ho°_«me
(
s
, 
Àn
)

633 
ch¨_u
 *
s
;

634 
Àn
;

636 #ifde‡
DJGPP


637 
	`STRNCPY
(
s
, "PC (32 bô†Vim)", 
Àn
);

639 
	`STRNCPY
(
s
, "PC (16 bô†Vim)", 
Àn
);

641 
	}
}

647 
	$mch_gë_pid
()

650 
	}
}

657 
	$mch_dú«me
(
buf
, 
Àn
)

658 
ch¨_u
 *
buf
;

659 
Àn
;

661  (
	`gëcwd
(
buf
, 
Àn
Ë!
NULL
 ? 
OK
 : 
FAIL
);

662 
	}
}

668 
	$ch™ge_drive
(
drive
)

669 
drive
;

671 
dummy
;

672 
REGS
 
ªgs
;

674 
ªgs
.
h
.
ah
 = 0x0e;

675 
ªgs
.
h
.
dl
 = 
drive
 - 1;

676 
	`ötdos
(&
ªgs
, &regs);

677 
ªgs
.
h
.
ah
 = 0x19;

678 
	`ötdos
(&
ªgs
, &regs);

679 i‡(
ªgs
.
h
.
Æ
 =
drive
 - 1)

683 
	}
}

693 
	$FuŒName
(
‚ame
, 
buf
, 
Àn
, 
f‹˚
)

694 
ch¨_u
 *
‚ame
, *
buf
;

695 
Àn
;

696 
f‹˚
;

698 i‡(
‚ame
 =
NULL
)

700 *
buf
 = 
NUL
;

701  
FAIL
;

704 i‡(!
f‹˚
 && 
	`isFuŒName
(
‚ame
))

706 
	`STRNCPY
(
buf
, 
‚ame
, 
Àn
);

707 
	`¶ash_adju°
(
buf
);

708  
OK
;

711 #ifde‡
__BORLANDC__


712 i‡(
	`_fuŒ∑th
(
buf
, 
‚ame
, 
Àn
Ë=
NULL
)

714 
	`STRNCPY
(
buf
, 
‚ame
, 
Àn
);

715 
	`¶ash_adju°
(
buf
);

716  
FAIL
;

718 
	`¶ash_adju°
(
buf
);

719  
OK
;

722 
l
;

723 
ch¨_u
 
ﬁddú
[
MAXPATHL
];

724 
ch¨_u
 *
p
, *
q
;

725 
c
;

726 
ªtvÆ
 = 
OK
;

728 *
buf
 = 0;

734 
p
 = 
	`vim_°ºchr
(
‚ame
, '/');

735 
q
 = 
	`vim_°ºchr
(
‚ame
, '\\');

736 i‡(
q
 !
NULL
 && (
p
 == NULL || q >Ö))

737 
p
 = 
q
;

738 
q
 = 
	`vim_°ºchr
(
‚ame
, ':');

739 i‡(
q
 !
NULL
 && (
p
 == NULL || q >Ö))

740 
p
 = 
q
;

741 i‡(
p
 !
NULL
)

743 i‡(
	`gëcwd
(
ﬁddú
, 
MAXPATHL
Ë=
NULL
)

745 
p
 = 
NULL
;

746 
ªtvÆ
 = 
FAIL
;

750 
q
 = 
p
 + 1;

751 
c
 = *
q
;

752 *
q
 = 
NUL
;

753 #ifde‡
DJGPP


754 
	`STRCPY
(
buf
, 
‚ame
);

755 
	`¶ash_adju°
(
buf
);

756 i‡(
	`vim_chdú
(
buf
))

758 i‡(
	`vim_chdú
(
‚ame
))

760 
ªtvÆ
 = 
FAIL
;

762 
‚ame
 = 
q
;

763 *
q
 = 
c
;

766 i‡(
	`gëcwd
(
buf
, 
Àn
Ë=
NULL
)

768 
ªtvÆ
 = 
FAIL
;

769 *
buf
 = 
NUL
;

774 
l
 = 
	`STRLEN
(
buf
);

775 i‡(
l
 && 
buf
[l - 1] != '/' && buf[l - 1] != '\\')

776 
	`°rˇt
(
buf
, "/");

777 i‡(
p
)

778 
	`vim_chdú
(
ﬁddú
);

779 
	`°rˇt
(
buf
, 
‚ame
);

780 
	`¶ash_adju°
(
buf
);

781  
ªtvÆ
;

784 
	}
}

795 
	$¶ash_adju°
(
p
)

796 
ch¨_u
 *
p
;

798 #ifde‡
DJGPP


801 i‡(*
p
 == '\\' || *p == '/')

802 *
p
)

804 i‡(*
p
 == '\\')

805 *
p
 = '/';

806 ++
p
;

810 *
p
)

812 i‡(*
p
 == '/')

813 *
p
 = '\\';

814 ++
p
;

816 
	}
}

822 
	$isFuŒName
(
‚ame
)

823 
ch¨_u
 *
‚ame
;

825  (
	`vim_°rchr
(
‚ame
, ':'Ë!
NULL
);

826 
	}
}

834 
	$gë≥rm
(
«me
)

835 
ch¨_u
 *
«me
;

837 
r
;

839 
r
 = 
	`_chmod
(
«me
, 0, 0);

840  
r
;

841 
	}
}

849 
	$£çîm
(
«me
, 
≥rm
)

850 
ch¨_u
 *
«me
;

851 
≥rm
;

853 
≥rm
 |
FA_ARCH
;

854  (
	`_chmod
((*)
«me
, 1, ()
≥rm
Ë=-1 ? 
FAIL
 : 
OK
);

855 
	}
}

865 
	$mch_isdú
(
«me
)

866 
ch¨_u
 *
«me
;

868 
f
;

869 
ch¨_u
 *
p
;

871 
p
 = 
«me
 + 
	`°æí
(name);

872 i‡(
p
 > 
«me
)

873 --
p
;

874 i‡(*
p
 == '\\')

875 *
p
 = 
NUL
;

877 
p
 = 
NULL
;

878 
f
 = 
	`_chmod
(
«me
, 0, 0);

879 i‡(
p
 !
NULL
)

880 *
p
 = '\\';

881 i‡(
f
 == -1)

882  
FALSE
;

883 i‡((
f
 & 
FA_DIREC
) == 0)

884  
FALSE
;

885  
TRUE
;

886 
	}
}

892 
	$mch_wödexô
(
r
)

893 
r
;

895 
	`£âmode
(0);

896 
	`°›ãrmˇp
();

897 
	`Êushbuf
();

898 
	`ml_˛o£_Æl
(
TRUE
);

899 
	`exô
(
r
);

900 
	}
}

905 
öãºu±


906 
	$ˇtch_cbrk
()

908 
cbrk_¥es£d
 = 
TRUE
;

909 
˘æc_¥es£d
 = 
TRUE
;

910 
	}
}

921 
	$cbrk_h™dÀr
()

923 
dñayed_ªdøw
 = 
TRUE
;

925 
	}
}

932 
öãºu±


933 
	$ˇtch_cöt
(
bp
, 
di
, 
si
, 
ds
, 
es
, 
dx
, 
cx
, 
bx
, 
ax
)

934 
bp
, 
di
, 
si
, 
ds
, 
es
, 
dx
, 
cx
, 
bx
, 
ax
;

936 
ax
 = (ax & 0xff00);

937 i‡(
_osmaj‹
 >= 3)

938 
ax
 |= 3;

939 
	}
}

947 
öãºu±
 
CINT_FUNC
();

950 
	$mch_£âmode
(
øw
)

951 
øw
;

953 
ßved_cbrk
;

954 #i‚de‡
DJGPP


955 
	`öãºu±
 (*
ﬁd_cöt
)();

957 
	`öãºu±
 (*
ﬁd_cbrk
)();

959 i‡(
øw
)

961 
ßved_cbrk
 = 
	`gëcbrk
();

962 
	`£tcbrk
(0);

963 #ifde‡
DJGPP


964 
ﬁd_cbrk
 = 
	`sig«l
(
SIGINT
,
ˇtch_cbrk
);

966 
ﬁd_cöt
 = 
	`gëve˘
(0x24);

967 
	`£tve˘
(0x24, 
ˇtch_cöt
);

968 
ﬁd_cbrk
 = 
	`gëve˘
(0x1B);

969 
	`£tve˘
(0x1B, 
ˇtch_cbrk
);

970 
	`˘æbrk
(
cbrk_h™dÀr
);

972 i‡(
ãrm_c⁄sﬁe
)

973 
	`out°r
(
T_ME
);

977 
	`£tcbrk
(
ßved_cbrk
);

978 #ifde‡
DJGPP


979 
	`sig«l
(
SIGINT
,
ﬁd_cbrk
);

981 
	`£tve˘
(0x24, 
ﬁd_cöt
);

982 
	`£tve˘
(0x1B, 
ﬁd_cbrk
);

985 i‡(
ãrm_c⁄sﬁe
)

986 
	`n‹mvideo
();

988 
	}
}

990 #ifde‡
USE_MOUSE


992 
	$mch_£tmou£
(
⁄
)

993 
⁄
;

995 
mou£_a˘ive
 = 
⁄
;

996 
mou£_hiddí
 = 
TRUE
;

997 
	}
}

1005 
	$mch_s¸ìnmode
(
¨g
)

1006 
ch¨_u
 *
¨g
;

1008 
mode
;

1009 
i
;

1010 
ch¨_u
 *(
«mes
[]) = {"BW40", "C40", "BW80", "C80", "MONO", "C4350"};

1011 
modes
[] = { 
BW40
, 
C40
, 
BW80
, 
C80
, 
MONO
, 
C4350
};

1013 
mode
 = -1;

1014 i‡(
	`isdigô
(*
¨g
))

1015 
mode
 = 
	`©oi
((*)
¨g
);

1018 
i
 = 0; i < (
«mes
Ë/ (
ch¨_u
 *); ++i)

1019 i‡(
	`°ricmp
((*)
«mes
[
i
], (*)
¨g
) == 0)

1021 
mode
 = 
modes
[
i
];

1025 i‡(
mode
 == -1)

1027 
	`EMSG
("Unsupported screen mode");

1028  
FAIL
;

1030 
	`ãxtmode
(
mode
);

1031  
OK
;

1032 
	}
}

1037 #i‚de‡
DJGPP


1038 
ãxt_öfo
 
_video
;

1046 
	$mch_gë_wösize
()

1048 
i
;

1049 
ãxt_öfo
 
ti
;

1055 i‡(!
ãrm_c⁄sﬁe
)

1056  
FAIL
;

1057 
	`gëãxtöfo
(&
ti
);

1058 
Cﬁumns
 = 
ti
.
s¸ìnwidth
;

1059 
Rows
 = 
ti
.
s¸ìnheight
;

1060 #i‚de‡
DJGPP


1061 i‡(
ti
.
cuºmode
 > 10)

1062 
Rows
 = *(
Ár
 *)
	`MK_FP
(0x40, 0x84) + 1;

1068 i‡(
fuŒ_s¸ìn
 && !
exôög
)

1069 
	`£t_wödow
();

1071 i‡(
Cﬁumns
 < 
MIN_COLUMNS
 || 
Rows
 < 
MIN_ROWS
 + 1)

1074 
Cﬁumns
 = 80;

1075 
Rows
 = 25;

1076  
FAIL
;

1078 
	`check_wösize
();

1080  
OK
;

1081 
	}
}

1087 
	$£t_wödow
()

1089 #i‚de‡
DJGPP


1090 
_video
.
s¸ìnheight
 = 
Rows
;

1092 
	`wödow
(1, 1, 
Cﬁumns
, 
Rows
);

1093 
	`s¸ìn_°¨t
();

1094 
	}
}

1097 
	$mch_£t_wösize
()

1102 #ifde‡
USE_MOUSE


1103 
	`mou£_¨ó
();

1105 
	}
}

1111 
	$ˇŒ_shñl
(
cmd
, 
›ti⁄s
)

1112 
ch¨_u
 *
cmd
;

1113 
›ti⁄s
;

1117 
x
;

1118 
ch¨_u
 *
√wcmd
;

1120 
	`Êushbuf
();

1122 i‡(
›ti⁄s
 & 
SHELL_COOKED
)

1123 
	`£âmode
(0);

1125 i‡(
cmd
 =
NULL
)

1126 
x
 = 
	`sy°em
(
p_sh
);

1129 
√wcmd
 = 
	`Æloc
(
	`STRLEN
(
p_sh
Ë+ STRLEN(
cmd
) + 5);

1130 i‡(
√wcmd
 =
NULL
)

1131 
x
 = 1;

1134 
	`•rötf
(
√wcmd
, "%†/¯%s", 
p_sh
, 
cmd
);

1135 
x
 = 
	`sy°em
(
√wcmd
);

1136 
	`vim_‰ì
(
√wcmd
);

1139 
	`£âmode
(1);

1141 i‡(
x
 && !
ex∑nd_öãø˘ivñy
)

1143 
	`msg_outch¨
('\n');

1144 
	`msg_ouäum
(()
x
);

1145 
	`MSG_OUTSTR
("Ñeturned\n");

1149 ()
	`mch_gë_wösize
();

1150  (
x
 ? 
FAIL
 : 
OK
);

1151 
	}
}

1157 
	$mch_bªakcheck
()

1159 i‡(
˘æc_¥es£d
)

1161 
˘æc_¥es£d
 = 
FALSE
;

1162 
gŸ_öt
 = 
TRUE
;

1164 
	}
}

1166 
	#FL_CHUNK
 32

	)

1169 
	$addfûe
(
Ê
, 
f
, 
isdú
)

1170 
FûeLi°
 *
Ê
;

1171 
ch¨_u
 *
f
;

1172 
isdú
;

1174 
ch¨_u
 *
p
;

1176 i‡(!
Ê
->
fûe
)

1178 
Ê
->
fûe
 = (
ch¨_u
 **)
	`Æloc
((ch¨_u *Ë* 
FL_CHUNK
);

1179 i‡(!
Ê
->
fûe
)

1181 
Ê
->
nfûes
 = 0;

1182 
Ê
->
maxfûes
 = 
FL_CHUNK
;

1184 i‡(
Ê
->
nfûes
 >Ê->
maxfûes
)

1186 
ch¨_u
 **
t
;

1187 
i
;

1189 
t
 = (
ch¨_u
 **)
	`œŒoc
((
l⁄g_u
)((ch¨_u *Ë* (
Ê
->
maxfûes
 + 
FL_CHUNK
)), 
TRUE
);

1190 i‡(!
t
)

1192 
i
 = 
Ê
->
nfûes
 - 1; i >= 0; i--)

1193 
t
[
i
] = 
Ê
->
fûe
[i];

1194 
	`vim_‰ì
(
Ê
->
fûe
);

1195 
Ê
->
fûe
 = 
t
;

1196 
Ê
->
maxfûes
 +
FL_CHUNK
;

1198 
p
 = 
	`Æloc
(()(
	`STRLEN
(
f
Ë+ 1 + 
isdú
));

1199 i‡(
p
)

1201 
	`STRCPY
(
p
, 
f
);

1202 
	`¶ash_adju°
(
p
);

1206 i‡(
isdú
)

1207 
	`°rˇt
(
p
, "\\");

1209 
Ê
->
fûe
[Ê->
nfûes
++] = 
p
;

1210 
	}
}

1213 
	$p°rcmp
(
a
, 
b
)

1214 
ch¨_u
 **
a
, **
b
;

1216  (
	`°rcmp
(*
a
, *
b
));

1217 
	}
}

1220 
	$mch_has_wûdˇrd
(
s
)

1221 
ch¨_u
 *
s
;

1223  ; *
s
; ++s)

1224 i‡(*
s
 == '?' || *s == '*')

1225  
TRUE
;

1226  
FALSE
;

1227 
	}
}

1230 
	$°æow˝y
(
d
, 
s
)

1231 
ch¨_u
 *
d
, *
s
;

1233 #ifde‡
DJGPP


1234 i‡(
USE_LONG_FNAME
)

1235 *
s
)

1236 *
d
++ = *
s
++;

1239 *
s
)

1240 *
d
++ = 
	`tﬁowî
(*
s
++);

1241 *
d
 = 
NUL
;

1242 
	}
}

1245 
	$ex∑nd∑th
(
Ê
, 
∑th
, 
f⁄ly
, 
d⁄ly
, 
nŸf
)

1246 
FûeLi°
 *
Ê
;

1247 
ch¨_u
 *
∑th
;

1248 
f⁄ly
, 
d⁄ly
, 
nŸf
;

1250 
ch¨_u
 *
buf
;

1251 
ch¨_u
 *
p
, *
s
, *
e
;

1252 
œ°n
, 
c
, 
ªtvÆ
;

1253 
ffblk
 
fb
;

1255 
œ°n
 = 
Ê
->
nfûes
;

1256 
buf
 = 
	`Æloc
(
	`STRLEN
(
∑th
Ë+ 
BASENAMELEN
 + 5);

1257 i‡(
buf
 =
NULL
)

1264 
p
 = 
buf
;

1265 
s
 = 
NULL
;

1266 
e
 = 
NULL
;

1267 *
∑th
)

1269 i‡(*
∑th
 == '\\' || *path == ':' || *path == '/')

1271 i‡(
e
)

1274 
s
 = 
p
;

1276 i‡(*
∑th
 == '*' || *path == '?')

1277 
e
 = 
p
;

1278 *
p
++ = *
∑th
++;

1280 
e
 = 
p
;

1281 i‡(
s
)

1282 
s
++;

1284 
s
 = 
buf
;

1287 i‡(
e
[-1] ='*' && 
	`vim_°rchr
(
s
, '.'Ë=
NULL
)

1289 *
e
++ = '.';

1290 *
e
++ = '*';

1293 *
e
 = 
NUL
;

1294 
ªtvÆ
 = 0;

1296 i‡((
c
 = 
	`födfú°
(
buf
, &
fb
, (*
∑th
 || !
nŸf
Ë? 
FA_DIREC
 : 0)) != 0)

1299 
	`STRCPY
(
e
, 
∑th
);

1300 i‡(
nŸf
)

1301 
	`addfûe
(
Ê
, 
buf
, 
FALSE
);

1302 
	`vim_‰ì
(
buf
);

1305 !
c
)

1307 
	`°æow˝y
(
s
, 
fb
.
ff_«me
);

1309 i‡(*
s
 !'.' || (s[1] !
NUL
 && (s[1] != '.' || s[2] != NUL)))

1311 
	`°rˇt
(
buf
, 
∑th
);

1312 i‡(!
	`mch_has_wûdˇrd
(
∑th
))

1313 
	`addfûe
(
Ê
, 
buf
, 
	`mch_isdú
(buf));

1315 
ªtvÆ
 |
	`ex∑nd∑th
(
Ê
, 
buf
, 
f⁄ly
, 
d⁄ly
, 
nŸf
);

1317 
c
 = 
	`föd√xt
(&
fb
);

1319 
	`vim_‰ì
(
buf
);

1320 
	`qs‹t
(
Ê
->
fûe
 + 
œ°n
, fl->
nfûes
 -Üa°n, (
ch¨_u
 *), 
p°rcmp
);

1321  
ªtvÆ
;

1322 
	}
}

1330 
	$Ex∑ndWûdC¨ds
(
num_∑t
, 
∑t
, 
num_fûe
, 
fûe
, 
fûes_⁄ly
, 
li°_nŸfound
)

1331 
num_∑t
;

1332 
ch¨_u
 **
∑t
;

1333 *
num_fûe
;

1334 
ch¨_u
 ***
fûe
;

1335 
fûes_⁄ly
, 
li°_nŸfound
;

1337 
i
, 
ªtvÆ
 = 0;

1338 
FûeLi°
 
f
;

1340 
f
.
fûe
 = 
NULL
;

1341 
f
.
nfûes
 = 0;

1343 
i
 = 0; i < 
num_∑t
; i++)

1345 i‡(!
	`mch_has_wûdˇrd
(
∑t
[
i
]))

1346 
	`addfûe
(&
f
, 
∑t
[
i
], 
fûes_⁄ly
 ? 
FALSE
 : 
	`mch_isdú
(pat[i]));

1348 
ªtvÆ
 |
	`ex∑nd∑th
(&
f
, 
∑t
[
i
], 
fûes_⁄ly
, 0, 
li°_nŸfound
);

1351 *
num_fûe
 = 
f
.
nfûes
;

1352 *
fûe
 = (*
num_fûe
 > 0Ë? 
f
.fûê: (
ch¨_u
 **)"";

1354  (*
num_fûe
 > 0Ë? 
OK
 : 
FAIL
;

1355 
	}
}

1357 #ifde‡
USE_VIM_CHDIR


1363 
	$vim_chdú
(
∑th
)

1364 *
∑th
;

1366 i‡(
∑th
[0] =
NUL
)

1368 i‡(
∑th
[1] == ':')

1370 i‡(
	`ch™ge_drive
(
	`touµî
(
∑th
[0]) - 'A' + 1))

1372 
∑th
 += 2;

1374 i‡(*
∑th
 =
NUL
)

1376  
	`chdú
(
∑th
);

1377 
	}
}

1380 #ifde‡
DJGPP


1397 #unde‡
ª«me


1400 
	$djgµ_ª«me
(c⁄° *
OldFûe
, c⁄° *
NewFûe
)

1402 
ch¨_u
 *
TempFûe
;

1403 
ªtvÆ
;

1404 
fd
;

1407 i‡(!
	`_u£_l‚
())

1408  
	`ª«me
(
OldFûe
, 
NewFûe
);

1410 i‡((
TempFûe
 = 
	`Æloc
(()(
	`STRLEN
(
OldFûe
Ë+ 
TMPNAMELEN
))Ë=
NULL
)

1413 
	`STRCPY
(
TempFûe
, 
OldFûe
);

1414 
	`STRCPY
(
	`gëèû
(
TempFûe
), 
TMPNAME1
);

1415 i‡(
	`ª«me
(
OldFûe
, 
TempFûe
))

1416 
ªtvÆ
 = -1;

1430 i‡((
fd
 = 
	`›í
(
OldFûe
, 
O_RDWR
|
O_CREAT
|
O_EXCL
, 0444)) < 0)

1432 
ªtvÆ
 = 
	`ª«me
(
TempFûe
, 
NewFûe
);

1433 
	`˛o£
(
fd
);

1434 
	`vim_ªmove
((
ch¨_u
 *)
OldFûe
);

1436 
	`vim_‰ì
(
TempFûe
);

1438  
ªtvÆ
;

1439 
	}
}

1445 
ch¨_u
 *

1446 
	$vim_gëív
(
v¨
)

1447 
ch¨_u
 *
v¨
;

1449 
ch¨_u
 *
ªtvÆ
;

1451 
ªtvÆ
 = (
ch¨_u
 *)
	`gëív
((*)
v¨
);

1453 i‡(
ªtvÆ
 =
NULL
 && 
	`STRCMP
(
v¨
, "VIM") == 0)

1454 
ªtvÆ
 = (
ch¨_u
 *)
	`gëív
("HOME");

1456  
ªtvÆ
;

1457 
	}
}

	@src/msdos.h

13 
	#CASE_INSENSITIVE_FILENAME


	)

14 
	#SPACE_IN_FILENAME


	)

15 
	#BACKSLASH_IN_FILENAME


	)

16 
	#BINARY_FILE_IO


	)

17 
	#USE_CRNL


	)

18 
	#USE_VIM_REMOVE


	)

19 
	#USE_VIM_CHDIR


	)

20 
	#USE_MOUSE


	)

21 
	#SYNC_DUP_CLOSE


	)

22 #ifde‡
DJGPP


23 
	#USE_LONG_FNAME
 
	`_u£_l‚
(Ë

	)

24 
	#USE_FNAME_CASE


	)

26 
	#SHORT_FNAME


	)

28 
	#HAVE_STDLIB_H


	)

29 
	#HAVE_STRING_H


	)

30 
	#HAVE_FCNTL_H


	)

31 
	#HAVE_STRCSPN


	)

32 
	#HAVE_MEMSET


	)

33 
	#HAVE_QSORT


	)

34 #i‡
deföed
(
__DATE__
Ë&& deföed(
__TIME__
)

35 
	#HAVE_DATE_TIME


	)

37 
	#BREAKCHECK_SKIP
 1

	)

40 #ifde‡
DJGPP


41 
	#SIZEOF_INT
 4

	)

43 
	#SIZEOF_INT
 2

	)

46 
	~<dos.h
>

47 
	~<dú.h
>

48 
	~<time.h
>

50 #ifde‡
DJGPP


51 
	~<uni°d.h
>

59 #i‚de‡
USR_VIMRC_FILE


60 
	#USR_VIMRC_FILE
 "$VIM\\_vimrc"

	)

63 #i‚de‡
USR_EXRC_FILE


64 
	#USR_EXRC_FILE
 "$VIM\\_exrc"

	)

67 #i‚de‡
VIMRC_FILE


68 
	#VIMRC_FILE
 "_vimrc"

	)

71 #i‚de‡
EXRC_FILE


72 
	#EXRC_FILE
 "_exrc"

	)

75 #i‚de‡
VIM_HLP


76 
	#VIM_HLP
 "$VIM\\vim_hñp.txt"

	)

79 #ifde‡
VIMINFO


80 #i‚de‡
VIMINFO_FILE


81 
	#VIMINFO_FILE
 "$VIM\\vimöfo"

	)

85 #i‚de‡
DEF_BDIR


86 
	#DEF_BDIR
 ".,c:\\tmp,c:\\ãmp"

	)

89 #i‚de‡
DEF_DIR


90 
	#DEF_DIR
 ".,c:\\tmp,c:\\ãmp"

	)

93 
	#TMPNAME1
 "viXXXXXX"

	)

94 
	#TMPNAME2
 "voXXXXXX"

	)

95 
	#TMPNAMELEN
 10

	)

97 #i‚de‡
MAXMEM


98 
	#MAXMEM
 256

	)

100 #i‚de‡
MAXMEMTOT


101 
	#MAXMEMTOT
 0

	)

104 #ifde‡
DJGPP


105 
	#BASENAMELEN
 (
	`_u£_l‚
()?250:8Ë

	)

107 
	#BASENAMELEN
 8

	)

111 
	#MOUSE_LEFT
 0x01

	)

112 
	#MOUSE_RIGHT
 0x02

	)

113 
	#MOUSE_MIDDLE
 0x04

	)

114 
	#MOUSE_RELEASE
 0x07

	)

116 
	#MOUSE_SHIFT
 0x08

	)

117 
	#MOUSE_ALT
 0x10

	)

118 
	#MOUSE_CTRL
 0x20

	)

120 
	#MOUSE_DRAG
 (0x40 | 
MOUSE_RELEASE
)

	)

122 
	#MOUSE_CLICK_MASK
 0x07

	)

124 
	#NUM_MOUSE_CLICKS
(
code
) \

125 ((((
code
Ë& 0xffË>> 6Ë+ 1)

	)

127 
	#SET_NUM_MOUSE_CLICKS
(
code
, 
num
) \

128 (
code
Ë((codeË& 0x3fË+ (((
num
Ë- 1Ë<< 6)

	)

130 #ifde‡
DJGPP


132 
	#ª«me
(
ﬁd
, 
√w
Ë
	`djgµ_ª«me
(ﬁd,Çew)

	)

	@src/normal.c

14 
	~"vim.h
"

15 
	~"globÆs.h
"

16 
	~"¥Ÿo.h
"

17 
	~"›ti⁄.h
"

19 #unde‡
EXTERN


20 #unde‡
INIT


21 
	#EXTERN


	)

22 
	#INIT
(
x
Ë
	)
x

23 
	~"›s.h
"

33 
löír_t
 
	g›num
 = 0;

34 
löír_t
 
	gPªnum
;

35 
	g¥ech¨
 = 
NUL
;

39 
	gª£l_VIsuÆ_mode
 = 
NUL
;

40 
löír_t
 
	gª£l_VIsuÆ_löe_cou¡
;

41 
cﬁƒ_t
 
	gª£l_VIsuÆ_cﬁ
;

43 #ifde‡
USE_MOUSE


44 
föd_°¨t_of_w‹d
 
__ARGS
((
FPOS
 *));

45 
föd_íd_of_w‹d
 
__ARGS
((
FPOS
 *));

46 
gë_mou£_˛ass
 
__ARGS
(());

48 
¥ï_ªdo
 
__ARGS
((, , , , ));

49 
check˛ór›
 
__ARGS
(());

50 
check˛ór›q
 
__ARGS
(());

51 
˛ór›
 
__ARGS
(());

52 
˛ór›bìp
 
__ARGS
(());

53 
dñ_‰om_showcmd
 
__ARGS
(());

54 
do_gd
 
__ARGS
((
nch¨
));

86 
	$n‹mÆ
()

88 
c
;

89 
n
 = 0;

90 
Êag
 = 
FALSE
;

91 
Êag2
 = 
FALSE
;

92 
ty≥
 = 0;

93 
dú
 = 
FORWARD
;

94 
nch¨
 = 
NUL
;

95 
föish_›
;

96 
löír_t
 
Pªnum1
;

97 
ch¨_u
 *
£¨chbuff
 = 
NULL
;

98 
FPOS
 *
pos
 = 
NULL
;

99 
ch¨_u
 *
±r
 = 
NULL
;

100 
comm™d_busy
 = 
FALSE
;

101 
˘æ_w
 = 
FALSE
;

102 
ﬁd_cﬁ
 = 0;

103 
d⁄t_adju°_›_íd
 = 
FALSE
;

105 
Pªnum
 = 0;

111 
föish_›
 = (
›_ty≥
 !
NOP
);

113 i‡(!
föish_›
 && !
y™kbuf„r
)

114 
›num
 = 0;

116 
Sèã
 = 
NORMAL_BUSY
;

117 
c
 = 
	`vgëc
();

118 #ifde‡
HAVE_LANGMAP


119 
	`LANGMAP_ADJUST
(
c
, 
TRUE
);

121 i‡(
c
 =
NUL
)

122 
c
 = 
K_ZERO
;

123 ()
	`add_to_showcmd
(
c
, 
FALSE
);

125 
gëcou¡
:

127 (
c
 >'1' && c <'9'Ë|| (
Pªnum
 !0 && (¯=
K_DEL
 || c == '0')))

129 i‡(
c
 =
K_DEL
)

131 
Pªnum
 /= 10;

132 
	`dñ_‰om_showcmd
(4);

135 
Pªnum
 = Pªnum * 10 + (
c
 - '0');

136 i‡(
Pªnum
 < 0)

137 
Pªnum
 = 999999999;

138 
c
 = 
	`vgëc
();

139 #ifde‡
HAVE_LANGMAP


140 
	`LANGMAP_ADJUST
(
c
, 
TRUE
);

142 ()
	`add_to_showcmd
(
c
, 
FALSE
);

148 i‡(
c
 =
	`Cål
('W'Ë&& !
˘æ_w
 && 
›_ty≥
 =
NOP
)

150 
˘æ_w
 = 
TRUE
;

151 
›num
 = 
Pªnum
;

152 
Pªnum
 = 0;

153 ++
no_m≠pög
;

154 ++
Ælow_keys
;

155 
c
 = 
	`vgëc
();

156 #ifde‡
HAVE_LANGMAP


157 
	`LANGMAP_ADJUST
(
c
, 
TRUE
);

159 --
no_m≠pög
;

160 --
Ælow_keys
;

161 ()
	`add_to_showcmd
(
c
, 
FALSE
);

162 
gëcou¡
;

173 i‡(
›num
 != 0)

175 i‡(
Pªnum
)

176 
Pªnum
 *
›num
;

178 
Pªnum
 = 
›num
;

179 
›num
 = 0;

182 
Pªnum1
 = (
Pªnum
 == 0 ? 1 : Prenum);

188 i‡(
˘æ_w
)

190 
nch¨
 = 
c
;

191 
c
 = 
	`Cål
('W');

193 i‡((
›_ty≥
 =
NOP
 && 
	`vim_°rchr
((
ch¨_u
 *)"@zm\"", 
c
Ë!
NULL
) ||

194 (
›_ty≥
 =
NOP
 && !
VIsuÆ_a˘ive
 &&

195 
	`vim_°rchr
((
ch¨_u
 *)"rZ", 
c
Ë!
NULL
) ||

196 
	`vim_°rchr
((
ch¨_u
 *)"tTfF[]g'`", 
c
Ë!
NULL
 ||

197 (
c
 ='q' && !
Rec‹dög
 && !
Exec_ªg
))

199 ++
no_m≠pög
;

200 ++
Ælow_keys
;

201 
nch¨
 = 
	`vgëc
();

202 #ifde‡
HAVE_LANGMAP


204 
	`LANGMAP_ADJUST
(
nch¨
, 
	`vim_°rchr
((
ch¨_u
 *)"tTfFr", 
c
Ë=
NULL
);

206 #ifde‡
RIGHTLEFT


207 i‡(
p_hkm≠
 && 
	`°rchr
("tTfFr", 
c
Ë&& 
KeyTy≥d
)

208 
nch¨
 = 
	`hkm≠
(nchar);

210 --
no_m≠pög
;

211 --
Ælow_keys
;

212 ()
	`add_to_showcmd
(
nch¨
, 
FALSE
);

214 i‡(
p_sc
)

215 
	`Êushbuf
();

220 
Sèã
 = 
NORMAL
;

221 i‡(
nch¨
 =
ESC
)

223 
	`˛ór›
();

224 
n‹mÆ_íd
;

226 
msg_didout
 = 
FALSE
;

227 
msg_cﬁ
 = 0;

229 #ifde‡
RIGHTLEFT


230 i‡(
curwö
->
w_p_æ
 && 
KeyTy≥d
)

231 
c
)

233 'l': 
c
 = 'h'; ;

234 
K_RIGHT
: 
c
 = 
K_LEFT
; ;

235 'h': 
c
 = 'l'; ;

236 
K_LEFT
: 
c
 = 
K_RIGHT
; ;

237 '>': 
c
 = '<'; ;

238 '<': 
c
 = '>'; ;

241 
c
)

248 i‡(
	`check˛ór›
())

251 i‡(!
Exec_ªg
 && 
	`do_ªc‹d
(
nch¨
Ë=
FAIL
)

252 
	`˛ór›bìp
();

256 i‡(
	`check˛ór›
())

258 
Pªnum1
--)

260 i‡(
	`do_execbuf
(
nch¨
, 
FALSE
, FALSEË=
FAIL
)

262 
	`˛ór›bìp
();

271 
	`Cål
('D'):

272 
Êag
 = 
TRUE
;

274 
	`Cål
('U'):

275 i‡((
c
 =
	`Cål
('U'Ë&& 
curwö
->
w_curs‹
.
 um
 == 1) ||

276 (
c
 =
	`Cål
('D'Ë&& 
curwö
->
w_curs‹
.
 um
 ==

277 
curbuf
->
b_ml
.
ml_löe_cou¡
))

278 
	`˛ór›bìp
();

281 i‡(
	`check˛ór›
())

283 
	`hÆÂage
(
Êag
, 
Pªnum
);

287 
	`Cål
('B'):

288 
K_S_UP
:

289 
K_PAGEUP
:

290 
dú
 = 
BACKWARD
;

292 
	`Cål
('F'):

293 
K_S_DOWN
:

294 
K_PAGEDOWN
:

295 i‡(
	`check˛ór›
())

297 ()
	`⁄ïage
(
dú
, 
Pªnum1
);

300 
	`Cål
('E'):

301 i‡(
	`check˛ór›
())

303 
	`s¸ﬁlup
(
Pªnum1
);

304 i‡(
p_so
)

305 
	`curs‹_c‹ª˘
();

307 
	`cﬁadv™˚
(
curwö
->
w_cursw™t
);

308 
	`cursupd©e
();

309 
	`upd©eS¸ìn
(
VALID
);

312 
	`Cål
('Y'):

313 i‡(
	`check˛ór›
())

315 
	`s¸ﬁldown
(
Pªnum1
);

316 i‡(
p_so
)

317 
	`curs‹_c‹ª˘
();

319 
	`cﬁadv™˚
(
curwö
->
w_cursw™t
);

320 
	`upd©eS¸ìn
(
VALID
);

324 i‡(
	`check˛ór›
())

326 i‡(
nch¨
 < 0x100 && 
	`isdigô
(nchar))

328 
Pªnum
 = 
nch¨
 - '0';

331 ++
no_m≠pög
;

332 ++
Ælow_keys
;

333 
nch¨
 = 
	`vgëc
();

334 #ifde‡
HAVE_LANGMAP


335 
	`LANGMAP_ADJUST
(
c
, 
TRUE
);

337 --
no_m≠pög
;

338 --
Ælow_keys
;

339 ()
	`add_to_showcmd
(
nch¨
, 
FALSE
);

340 i‡(
c
 =
K_DEL
)

341 
Pªnum
 /= 10;

342 i‡(
nch¨
 < 0x100 && 
	`isdigô
(nchar))

343 
Pªnum
 = Pªnum * 10 + (
nch¨
 - '0');

344 i‡(
nch¨
 =
CR
)

346 
	`wö_£theight
(()
Pªnum
);

349 i‡(
nch¨
 == 'l' ||Çchar == 'h' ||

350 
nch¨
 =
K_LEFT
 ||Çch¨ =
K_RIGHT
)

352 
Pªnum1
 = 
Pªnum
 ? Prenum : 1;

353 
dozë
;

357 
	`˛ór›bìp
();

361 
›_ty≥
 = 
NOP
;

364 
dozë
:

369 i‡(
	`vim_°rchr
((
ch¨_u
 *)"hÀs", 
nch¨
Ë=
NULL
 &&

370 
nch¨
 !
K_LEFT
 &&Çch¨ !
K_RIGHT
 &&

371 
Pªnum
 && Pªnum !
curwö
->
w_curs‹
.
 um
)

373 
	`£çcm¨k
();

374 i‡(
Pªnum
 > 
curbuf
->
b_ml
.
ml_löe_cou¡
)

375 
curwö
->
w_curs‹
.
 um
 = 
curbuf
->
b_ml
.
ml_löe_cou¡
;

377 
curwö
->
w_curs‹
.
 um
 = 
Pªnum
;

379 
nch¨
)

381 
NL
:

382 
CR
:

383 
	`begölöe
(
TRUE
);

386 
	`s¸ﬁl_curs‹_t›
(0, 
TRUE
);

390 
	`begölöe
(
TRUE
);

393 
	`s¸ﬁl_curs‹_hÆfway
(
TRUE
);

397 
	`begölöe
(
TRUE
);

400 
	`s¸ﬁl_curs‹_bŸ
(0, 
TRUE
);

405 
K_LEFT
:

406 i‡(!
curwö
->
w_p_wøp
)

408 
cﬁƒ_t
 
s
, 
e
;

410 i‡((
cﬁƒ_t
)
Pªnum1
 > 
curwö
->
w_À·cﬁ
)

411 
curwö
->
w_À·cﬁ
 = 0;

413 
curwö
->
w_À·cﬁ
 -(
cﬁƒ_t
)
Pªnum1
;

414 
n
 = 
curwö
->
w_À·cﬁ
 + 
Cﬁumns
 -

415 (
curwö
->
w_p_nu
 ? 8 : 0) - 1;

416 i‡(
curwö
->
w_vútcﬁ
 > (
cﬁƒ_t
)
n
)

417 
	`cﬁadv™˚
((
cﬁƒ_t
)
n
);

419 
	`gëvcﬁ
(
curwö
, &curwö->
w_curs‹
, &
s
, 
NULL
, &
e
);

420 i‡(
e
 > (
cﬁƒ_t
)
n
)

421 
	`cﬁadv™˚
(
s
 - 1);

422 
	`ªdøw_œãr
(
NOT_VALID
);

428 
K_RIGHT
:

429 i‡(!
curwö
->
w_p_wøp
)

431 
cﬁƒ_t
 
s
, 
e
;

434 
curwö
->
w_À·cﬁ
 +(
cﬁƒ_t
)
Pªnum1
;

438 i‡(
curwö
->
w_À·cﬁ
 > curwö->
w_vútcﬁ
)

439 ()
	`cﬁadv™˚
(
curwö
->
w_À·cﬁ
);

445 
	`gëvcﬁ
(
curwö
, &curwö->
w_curs‹
, &
s
, 
NULL
, &
e
);

446 i‡(
s
 < 
curwö
->
w_À·cﬁ
)

447 i‡(
	`cﬁadv™˚
(
e
 + 1Ë=
FAIL
)

448 
curwö
->
w_À·cﬁ
 = 
s
;

450 
	`ªdøw_œãr
(
NOT_VALID
);

456 i‡(!
curwö
->
w_p_wøp
)

458 
cﬁƒ_t
 
s
;

460 
	`gëvcﬁ
(
curwö
, &curwö->
w_curs‹
, &
s
, 
NULL
, NULL);

461 
curwö
->
w_À·cﬁ
 = 
s
;

462 
	`ªdøw_œãr
(
NOT_VALID
);

468 i‡(!
curwö
->
w_p_wøp
)

470 
cﬁƒ_t
 
e
;

472 
	`gëvcﬁ
(
curwö
, &curwö->
w_curs‹
, 
NULL
, NULL, &
e
);

473 i‡(()
e
 < 
Cﬁumns
)

474 
curwö
->
w_À·cﬁ
 = 0;

476 
curwö
->
w_À·cﬁ
 = 
e
 - 
Cﬁumns
 + 1;

477 
	`ªdøw_œãr
(
NOT_VALID
);

481 
	`Cål
('S'):

482 
	`Cål
('Q'):

486 
	`˛ór›bìp
();

488 
	`upd©eS¸ìn
(
VALID
);

495 i‡(
VIsuÆ_a˘ive
)

496 
do›î©‹
;

497 i‡(
	`check˛ór›
())

502 i‡(
Pªnum
)

504 
	`°uffRódbuff
((
ch¨_u
 *)".");

505 i‡(
Pªnum
 > 1)

507 
	`°uffRódbuff
((
ch¨_u
 *)",.+");

508 
	`°uf‚umRódbuff
(()
Pªnum
 - 1L);

511 
	`do_cmdlöe
(
NULL
, 
FALSE
, FALSE);

514 
K_HELP
:

515 
K_F1
:

516 i‡(
	`check˛ór›q
())

518 
	`do_hñp
((
ch¨_u
 *)"");

521 
	`Cål
('L'):

522 i‡(
	`check˛ór›
())

524 
	`upd©eS¸ìn
(
CLEAR
);

527 
	`Cål
('G'):

528 i‡(
	`check˛ór›
())

531 
	`fûeöfo
(
did_cd
 | ()
Pªnum
, 
FALSE
, FALSE);

534 
K_CCIRCM
:

535 i‡(
	`check˛ór›q
())

537 ()
	`buÊi°_gëfûe
(()
Pªnum
, (
löír_t
)0, 
GETF_SETMARK
|
GETF_ALT
);

541 i‡(
	`check˛ór›q
())

543 i‡(
nch¨
 != 'Z')

545 
	`˛ór›bìp
();

548 
	`°uffRódbuff
((
ch¨_u
 *)":x\n");

551 
	`Cål
(']'):

553 i‡(
VIsuÆ_a˘ive
)

555 i‡(
VIsuÆ
.
 um
 !
curwö
->
w_curs‹
.lnum)

557 
	`˛ór›bìp
();

560 i‡(
	`…
(
curwö
->
w_curs‹
, 
VIsuÆ
))

562 
±r
 = 
	`ml_gë_pos
(&
curwö
->
w_curs‹
);

563 
n
 = 
VIsuÆ
.
cﬁ
 - 
curwö
->
w_curs‹
.col + 1;

567 
±r
 = 
	`ml_gë_pos
(&
VIsuÆ
);

568 
n
 = 
curwö
->
w_curs‹
.
cﬁ
 - 
VIsuÆ
.col + 1;

570 
	`íd_visuÆ_mode
();

571 ++
RedøwögDißbÀd
;

572 
	`upd©e_curbuf
(
NOT_VALID
);

573 --
RedøwögDißbÀd
;

575 i‡(
	`check˛ór›q
())

580 i‡(
c
 == 163)

581 
c
 = '#';

586 
£¨ch_w‹d
:

587 i‡(
c
 == 'g')

588 
ty≥
 = 
nch¨
;

590 
ty≥
 = 
c
;

591 i‡(
±r
 =
NULL
 && (
n
 = 
	`föd_idít_undî_curs‹
(&±r, (
ty≥
 == '*' ||

592 
ty≥
 ='#'Ë? 
FIND_IDENT
|
FIND_STRING
 : FIND_IDENT)) == 0)

594 
	`˛ór›
();

598 i‡(
Pªnum
)

599 
	`°uf‚umRódbuff
(
Pªnum
);

600 
ty≥
)

603 
	`°uffRódbuff
((
ch¨_u
 *)"/");

607 i‡(
ty≥
 == '#')

608 
	`°uffRódbuff
((
ch¨_u
 *)"?");

614 
curwö
->
w_curs‹
.
cﬁ
 = 
±r
 - 
	`ml_gë_cuæöe
();

616 i‡(
c
 !'g' && 
	`isw‹dch¨
(*
±r
))

617 
	`°uffRódbuff
((
ch¨_u
 *)"\\<");

618 
no_sm¨tˇ£
 = 
TRUE
;

622 i‡(*
p_kp
 =
NUL
)

623 
	`°uffRódbuff
((
ch¨_u
 *)":he ");

626 
	`°uffRódbuff
((
ch¨_u
 *)":! ");

627 
	`°uffRódbuff
(
p_kp
);

628 
	`°uffRódbuff
((
ch¨_u
 *)" ");

632 i‡(
curbuf
->
b_hñp
)

633 
	`°uffRódbuff
((
ch¨_u
 *)":he ");

635 
	`°uffRódbuff
((
ch¨_u
 *)":ta ");

641 
n
--)

644 i‡(*
±r
 ='\\' || (!(
ty≥
 == '*' ||Åype == '#') &&

645 
	`vim_°rchr
(
esˇ≥_ch¨s
, *
±r
Ë!
NULL
))

646 
	`°uffch¨Ródbuff
('\\');

648 i‡(*
±r
 < ' ' || *ptr > '~')

649 
	`°uffch¨Ródbuff
(
	`Cål
('V'));

650 
	`°uffch¨Ródbuff
(*
±r
++);

653 i‡(
c
 !'g' && (
ty≥
 ='*' ||Åy≥ ='#'Ë&& 
	`isw‹dch¨
(
±r
[-1]))

654 
	`°uffRódbuff
((
ch¨_u
 *)"\\>");

655 
	`°uffRódbuff
((
ch¨_u
 *)"\n");

658 
	`Cål
('T'):

659 i‡(
	`check˛ór›q
())

661 
	`do_èg
((
ch¨_u
 *)"", 2, ()
Pªnum1
);

668 
gŸo_löe
:

669 
›_mŸi⁄_ty≥
 = 
MLINE
;

670 
	`£çcm¨k
();

671 i‡(
Pªnum
 =0 || Pªnum > 
curbuf
->
b_ml
.
ml_löe_cou¡
)

672 
curwö
->
w_curs‹
.
 um
 = 
curbuf
->
b_ml
.
ml_löe_cou¡
;

674 
curwö
->
w_curs‹
.
 um
 = 
Pªnum
;

675 
	`begölöe
(
MAYBE
);

680 i‡(
c
 == 'M')

682 
u£d
 = 0;

684 
n
 = 0; 
curwö
->
w_t›löe
 +Ç < 
curbuf
->
b_ml
.
ml_löe_cou¡
; ++n)

685 i‡((
u£d
 +
	`∂öes
(
curwö
->
w_t›löe
 + 
n
)) >=

686 (
curwö
->
w_height
 - curwö->
w_em±y_rows
 + 1) / 2)

688 i‡(
n
 && 
u£d
 > 
curwö
->
w_height
)

689 --
n
;

692 
n
 = 
Pªnum
;

693 
›_mŸi⁄_ty≥
 = 
MLINE
;

694 
	`£çcm¨k
();

695 
curwö
->
w_curs‹
.
 um
 = curwö->
w_t›löe
 + 
n
;

696 i‡(
curwö
->
w_curs‹
.
 um
 > 
curbuf
->
b_ml
.
ml_löe_cou¡
)

697 
curwö
->
w_curs‹
.
 um
 = 
curbuf
->
b_ml
.
ml_löe_cou¡
;

698 
	`curs‹_c‹ª˘
();

699 
	`begölöe
(
MAYBE
);

703 
›_mŸi⁄_ty≥
 = 
MLINE
;

704 
	`£çcm¨k
();

705 
curwö
->
w_curs‹
.
 um
 = curwö->
w_bŸlöe
 - 1;

706 i‡(
Pªnum
 >
curwö
->
w_curs‹
.
 um
)

707 
curwö
->
w_curs‹
.
 um
 = 1;

709 
curwö
->
w_curs‹
.
 um
 -
Pªnum
;

710 
	`curs‹_c‹ª˘
();

711 
	`begölöe
(
MAYBE
);

715 
K_RIGHT
:

717 
›_mŸi⁄_ty≥
 = 
MCHAR
;

718 
›_ö˛usive
 = 
FALSE
;

719 
n
 = 
Pªnum1
;

720 
n
--)

722 i‡(
	`⁄îight
(Ë=
FAIL
)

727 i‡(((
c
 =' ' && 
	`vim_°rchr
(
p_ww
, 's'Ë!
NULL
) ||

728 (
c
 ='l' && 
	`vim_°rchr
(
p_ww
, 'l'Ë!
NULL
) ||

729 (
c
 =
K_RIGHT
 && 
	`vim_°rchr
(
p_ww
, '>'Ë!
NULL
)) &&

730 
curwö
->
w_curs‹
.
 um
 < 
curbuf
->
b_ml
.
ml_löe_cou¡
)

735 i‡((
›_ty≥
 =
DELETE
 || op_ty≥ =
CHANGE
) &&

736 !
›_ö˛usive
 && !
	`löìm±y
(
curwö
->
w_curs‹
.
 um
))

737 
›_ö˛usive
 = 
TRUE
;

740 ++
curwö
->
w_curs‹
.
 um
;

741 
curwö
->
w_curs‹
.
cﬁ
 = 0;

742 
curwö
->
w_£t_cursw™t
 = 
TRUE
;

743 
›_ö˛usive
 = 
FALSE
;

747 i‡(
›_ty≥
 =
NOP
)

748 
	`bìp_Êush
();

751 i‡(
	`löìm±y
(
curwö
->
w_curs‹
.
 um
))

752 
	`˛ór›bìp
();

755 
›_ö˛usive
 = 
TRUE
;

756 i‡(
n
)

757 
	`bìp_Êush
();

766 
K_LEFT
:

767 
K_BS
:

768 
	`Cål
('H'):

769 
›_mŸi⁄_ty≥
 = 
MCHAR
;

770 
›_ö˛usive
 = 
FALSE
;

771 
n
 = 
Pªnum1
;

772 
n
--)

774 i‡(
	`⁄ñe·
(Ë=
FAIL
)

781 i‡–(((
c
 =
K_BS
 || c =
	`Cål
('H'))

782 && 
	`vim_°rchr
(
p_ww
, 'b'Ë!
NULL
) ||

783 (
c
 ='h' && 
	`vim_°rchr
(
p_ww
, 'h'Ë!
NULL
) ||

784 (
c
 =
K_LEFT
 && 
	`vim_°rchr
(
p_ww
, '<'Ë!
NULL
)) &&

785 
curwö
->
w_curs‹
.
 um
 > 1)

787 --(
curwö
->
w_curs‹
.
 um
);

788 
	`cﬁadv™˚
(
MAXCOL
);

789 
curwö
->
w_£t_cursw™t
 = 
TRUE
;

795 i‡((
›_ty≥
 =
DELETE
 || op_ty≥ =
CHANGE
) &&

796 !
	`löìm±y
(
curwö
->
w_curs‹
.
 um
))

798 ++
curwö
->
w_curs‹
.
cﬁ
;

799 
d⁄t_adju°_›_íd
 = 
TRUE
;

803 i‡(
›_ty≥
 !
DELETE
 && op_ty≥ !
CHANGE
)

804 
	`bìp_Êush
();

805 i‡(
Pªnum1
 == 1)

806 
	`˛ór›bìp
();

813 
Êag
 = 
TRUE
;

817 
K_UP
:

818 
	`Cål
('P'):

819 
n‹mÆ_k
:

820 
›_mŸi⁄_ty≥
 = 
MLINE
;

821 i‡(
	`curs‹_up
(
Pªnum1
Ë=
FAIL
)

822 
	`˛ór›bìp
();

823 i‡(
Êag
)

824 
	`begölöe
(
TRUE
);

828 
CR
:

829 
Êag
 = 
TRUE
;

833 
K_DOWN
:

834 
	`Cål
('N'):

835 
NL
:

836 
n‹mÆ_j
:

837 
›_mŸi⁄_ty≥
 = 
MLINE
;

838 i‡(
	`curs‹_down
(
Pªnum1
Ë=
FAIL
)

839 
	`˛ór›bìp
();

840 i‡(
Êag
)

841 
	`begölöe
(
TRUE
);

853 
löe›
:

854 
ﬁd_cﬁ
 = 
curwö
->
w_cursw™t
;

855 
›_mŸi⁄_ty≥
 = 
MLINE
;

856 i‡(
	`curs‹_down
(()(
Pªnum1
 - 1)Ë=
FAIL
)

857 
	`˛ór›bìp
();

858 i‡(
›_ty≥
 =
DELETE
 || op_ty≥ =
LSHIFT
 || op_ty≥ =
RSHIFT
)

859 
	`begölöe
(
MAYBE
);

860 i‡(
›_ty≥
 !
YANK
)

861 
	`begölöe
(
TRUE
);

864 
K_HOME
:

865 i‡((
mod_mask
 & 
MOD_MASK_CTRL
))

866 
gŸo_löe_⁄e
;

867 
Pªnum
 = 1;

871 
›_mŸi⁄_ty≥
 = 
MCHAR
;

872 
›_ö˛usive
 = 
FALSE
;

873 
	`begölöe
(
FALSE
);

874 i‡(
Pªnum
 > 0)

876 
	`cﬁadv™˚
((
cﬁƒ_t
)(
Pªnum
 - 1));

877 
curwö
->
w_cursw™t
 = (
cﬁƒ_t
)(
Pªnum
 - 1);

880 
curwö
->
w_cursw™t
 = 0;

883 
curwö
->
w_£t_cursw™t
 = 
FALSE
;

891 
ty≥
 = 1;

895 
K_S_LEFT
:

896 
›_mŸi⁄_ty≥
 = 
MCHAR
;

897 
›_ö˛usive
 = 
FALSE
;

898 
curwö
->
w_£t_cursw™t
 = 
TRUE
;

899 i‡(
	`bck_w‹d
(
Pªnum1
, 
ty≥
, 
FALSE
Ë=
FAIL
)

900 
	`˛ór›bìp
();

904 
ty≥
 = 1;

908 
›_ö˛usive
 = 
TRUE
;

909 
dowrdcmd
;

912 
ty≥
 = 1;

916 
K_S_RIGHT
:

917 
›_ö˛usive
 = 
FALSE
;

918 
Êag
 = 
TRUE
;

928 i‡(
›_ty≥
 =
CHANGE
 && (
n
 = 
	`gch¨_curs‹
()Ë!' ' &&Ç !
TAB
 &&

929 
n
 !
NUL
)

931 
›_ö˛usive
 = 
TRUE
;

932 
Êag
 = 
FALSE
;

933 
Êag2
 = 
TRUE
;

936 
dowrdcmd
:

937 
›_mŸi⁄_ty≥
 = 
MCHAR
;

938 
curwö
->
w_£t_cursw™t
 = 
TRUE
;

939 i‡(
Êag
)

940 
n
 = 
	`fwd_w‹d
(
Pªnum1
, 
ty≥
, 
›_ty≥
 !
NOP
);

942 
n
 = 
	`íd_w‹d
(
Pªnum1
, 
ty≥
, 
Êag2
, 
FALSE
);

943 i‡(
n
 =
FAIL
)

944 
	`˛ór›bìp
();

947 
K_END
:

948 i‡((
mod_mask
 & 
MOD_MASK_CTRL
))

949 
gŸo_löe
;

953 
›_mŸi⁄_ty≥
 = 
MCHAR
;

954 
›_ö˛usive
 = 
TRUE
;

955 
curwö
->
w_cursw™t
 = 
MAXCOL
;

956 i‡(
	`curs‹_down
(()(
Pªnum1
 - 1)Ë=
FAIL
)

958 
	`˛ór›bìp
();

964 
Êag
 = 
TRUE
;

968 
›_mŸi⁄_ty≥
 = 
MCHAR
;

969 
›_ö˛usive
 = 
FALSE
;

970 
	`begölöe
(
Êag
);

978 i‡((
£¨chbuff
 = 
	`gëcmdlöe
(
c
, 
Pªnum1
)Ë=
NULL
)

980 
	`˛ór›
();

983 
›_mŸi⁄_ty≥
 = 
MCHAR
;

984 
›_ö˛usive
 = 
FALSE
;

985 
curwö
->
w_£t_cursw™t
 = 
TRUE
;

987 
n
 = 
	`do_£¨ch
(
c
, 
£¨chbuff
, 
Pªnum1
,

988 
SEARCH_MARK
 | 
SEARCH_OPT
 | 
SEARCH_ECHO
 | 
SEARCH_MSG
);

989 i‡(
n
 == 0)

990 
	`˛ór›
();

991 i‡(
n
 == 2)

992 
›_mŸi⁄_ty≥
 = 
MLINE
;

996 
Êag
 = 
SEARCH_REV
;

999 
›_mŸi⁄_ty≥
 = 
MCHAR
;

1000 
›_ö˛usive
 = 
FALSE
;

1001 
curwö
->
w_£t_cursw™t
 = 
TRUE
;

1002 i‡(!
	`do_£¨ch
(0, 
NULL
, 
Pªnum1
,

1003 
SEARCH_MARK
 | 
SEARCH_OPT
 | 
SEARCH_ECHO
 | 
SEARCH_MSG
 | 
Êag
))

1004 
	`˛ór›
();

1011 
dú
 = 
BACKWARD
;

1015 
ty≥
 = 1;

1016 
doc£¨ch
;

1019 
dú
 = 
BACKWARD
;

1023 
doc£¨ch
:

1024 
›_mŸi⁄_ty≥
 = 
MCHAR
;

1025 i‡(
dú
 =
BACKWARD
)

1026 
›_ö˛usive
 = 
FALSE
;

1028 
›_ö˛usive
 = 
TRUE
;

1029 
curwö
->
w_£t_cursw™t
 = 
TRUE
;

1030 i‡(
nch¨
 >0x100 || !
	`£¨chc
“ch¨, 
dú
, 
ty≥
, 
Pªnum1
))

1031 
	`˛ór›bìp
();

1035 
Êag
 = 1;

1039 
dú
 = 
Êag
;

1040 
doc£¨ch
;

1046 
dú
 = 
BACKWARD
;

1050 
›_mŸi⁄_ty≥
 = 
MCHAR
;

1051 
›_ö˛usive
 = 
FALSE
;

1056 i‡(
nch¨
 == 'f')

1057 
gŸofûe
;

1068 i‡(
nch¨
 ='i' ||Çch¨ ='I' ||Çch¨ =
	`Cål
('I') ||

1069 
nch¨
 ='d' ||Çch¨ ='D' ||Çch¨ =
	`Cål
('D'))

1071 
Àn
;

1073 i‡((
Àn
 = 
	`föd_idít_undî_curs‹
(&
±r
, 
FIND_IDENT
)) == 0)

1075 
	`˛ór›
();

1078 
	`föd_∑âîn_ö_∑th
(
±r
, 
Àn
, 
TRUE
,

1079 
Pªnum
 =0 ? !
	`isuµî
(
nch¨
Ë: 
FALSE
,

1080 ((
nch¨
 & 0xfË=('d' & 0xf)Ë? 
FIND_DEFINE
 : 
FIND_ANY
,

1081 
Pªnum1
,

1082 
	`isuµî
(
nch¨
Ë? 
ACTION_SHOW_ALL
 :

1083 
	`i¶owî
(
nch¨
Ë? 
ACTION_SHOW
 : 
ACTION_GOTO
,

1084 
c
 =']' ? 
curwö
->
w_curs‹
.
 um
 : (
löír_t
)1,

1085 (
löír_t
)
MAXLNUM
);

1086 
curwö
->
w_£t_cursw™t
 = 
TRUE
;

1095 i‡((
c
 ='[' && 
	`vim_°rchr
((
ch¨_u
 *)"{(*/#", 
nch¨
Ë!
NULL
) ||

1096 (
c
 =']' && 
	`vim_°rchr
((
ch¨_u
 *)"})*/#", 
nch¨
Ë!
NULL
))

1098 
FPOS
 
ﬁd_pos
;

1099 
FPOS
 
√w_pos
;

1101 i‡(
nch¨
 == '*')

1102 
nch¨
 = '/';

1103 
ﬁd_pos
 = 
curwö
->
w_curs‹
;

1104 
√w_pos
.
 um
 = 0;

1105 
Pªnum1
--)

1107 i‡((
pos
 = 
	`födm©chlimô
(
nch¨
,

1108 (
c
 ='['Ë? 
FM_BACKWARD
 : 
FM_FORWARD
, 0)Ë=
NULL
)

1110 i‡(
√w_pos
.
 um
 == 0)

1111 
	`˛ór›bìp
();

1113 
pos
 = &
√w_pos
;

1116 
curwö
->
w_curs‹
 = *
pos
;

1117 
√w_pos
*
pos
;

1119 
curwö
->
w_curs‹
 = 
ﬁd_pos
;

1120 i‡(
pos
 !
NULL
)

1122 
	`£çcm¨k
();

1123 
curwö
->
w_curs‹
 = *
pos
;

1124 
curwö
->
w_£t_cursw™t
 = 
TRUE
;

1132 i‡(
nch¨
 == '[' ||Çchar == ']')

1134 i‡(
nch¨
 =
c
)

1135 
Êag
 = '{';

1137 
Êag
 = '}';

1139 
curwö
->
w_£t_cursw™t
 = 
TRUE
;

1144 i‡(!
	`föd∑r
(
dú
, 
Pªnum1
, 
Êag
,

1145 (
›_ty≥
 !
NOP
 && 
dú
 =
FORWARD
 && 
Êag
 == '{')))

1146 
	`˛ór›bìp
();

1147 i‡(
›_ty≥
 =
NOP
)

1148 
	`begölöe
(
TRUE
);

1155 i‡(
nch¨
 == 'p' ||Çchar == 'P')

1157 i‡(
	`check˛ór›q
())

1159 
	`¥ï_ªdo
(
Pªnum
, 
NUL
, 
c
, 
nch¨
, NUL);

1160 
	`do_put
((
c
 =']' && 
nch¨
 ='p'Ë? 
FORWARD
 : 
BACKWARD
,

1161 
Pªnum1
, 
TRUE
);

1165 #ifde‡
USE_MOUSE


1170 i‡(
nch¨
 >
K_LEFTMOUSE
 &&Çch¨ <
K_RIGHTRELEASE
)

1172 ()
	`do_mou£
(
nch¨
, (
c
 =']'Ë? 
FORWARD
 : 
BACKWARD
,

1173 
Pªnum1
, 
TRUE
);

1181 
	`˛ór›bìp
();

1185 
›_ö˛usive
 = 
TRUE
;

1186 i‡(
Pªnum
)

1188 i‡(
Pªnum
 > 100)

1189 
	`˛ór›bìp
();

1192 
›_mŸi⁄_ty≥
 = 
MLINE
;

1193 
	`£çcm¨k
();

1195 
curwö
->
w_curs‹
.
 um
 = (
curbuf
->
b_ml
.
ml_löe_cou¡
 *

1196 
Pªnum
 + 99) / 100;

1197 
	`begölöe
(
MAYBE
);

1202 
›_mŸi⁄_ty≥
 = 
MCHAR
;

1203 i‡((
pos
 = 
	`födm©ch
(
NUL
)Ë=
NULL
)

1204 
	`˛ór›bìp
();

1207 
	`£çcm¨k
();

1208 
curwö
->
w_curs‹
 = *
pos
;

1209 
curwö
->
w_£t_cursw™t
 = 
TRUE
;

1215 
dú
 = 
BACKWARD
;

1219 
›_mŸi⁄_ty≥
 = 
MCHAR
;

1220 i‡(
c
 == ')')

1221 
›_ö˛usive
 = 
FALSE
;

1223 
›_ö˛usive
 = 
TRUE
;

1224 
curwö
->
w_£t_cursw™t
 = 
TRUE
;

1226 i‡(
	`föd£¡
(
dú
, 
Pªnum1
Ë=
FAIL
)

1227 
	`˛ór›bìp
();

1231 
dú
 = 
BACKWARD
;

1235 
›_mŸi⁄_ty≥
 = 
MCHAR
;

1236 
›_ö˛usive
 = 
FALSE
;

1237 
curwö
->
w_£t_cursw™t
 = 
TRUE
;

1238 i‡(!
	`föd∑r
(
dú
, 
Pªnum1
, 
NUL
, 
FALSE
))

1239 
	`˛ór›bìp
();

1246 i‡(
	`check˛ór›q
())

1253 i‡(
	`°¨t_ªdo
(
Pªnum
, 
ª°¨t_edô
 && !
¨row_u£d
Ë=
FAIL
)

1254 
	`˛ór›bìp
();

1258 i‡(
VIsuÆ_a˘ive
 || 
›_ty≥
 =
	`vim_°rchr
(
›ch¨s
, 'u') - opchars + 1)

1259 
do›î©‹
;

1260 
K_UNDO
:

1261 i‡(
	`check˛ór›q
())

1263 
	`u_undo
(()
Pªnum1
);

1264 
curwö
->
w_£t_cursw™t
 = 
TRUE
;

1267 
	`Cål
('R'):

1268 i‡(
	`check˛ór›q
())

1270 
	`u_ªdo
(()
Pªnum1
);

1271 
curwö
->
w_£t_cursw™t
 = 
TRUE
;

1275 i‡(
VIsuÆ_a˘ive
 || 
›_ty≥
 =
	`vim_°rchr
(
›ch¨s
, 'U') - opchars + 1)

1276 
do›î©‹
;

1277 i‡(
	`check˛ór›q
())

1279 
	`u_undﬁöe
();

1280 
curwö
->
w_£t_cursw™t
 = 
TRUE
;

1284 i‡(
VIsuÆ_a˘ive
)

1286 
c
 = 'c';

1287 
do›î©‹
;

1289 i‡(
	`check˛ór›
())

1291 
±r
 = 
	`ml_gë_curs‹
();

1293 i‡(
nch¨
 >0x100 || 
	`STRLEN
(
±r
Ë< ()
Pªnum1
)

1295 
	`˛ór›bìp
();

1304 i‡(
nch¨
 ='\t' && 
curbuf
->
b_p_ë
)

1306 
	`¥ï_ªdo
(
Pªnum1
, 
NUL
, 'r', '\t', NUL);

1307 
	`°uf‚umRódbuff
(
Pªnum1
);

1308 
	`°uffch¨Ródbuff
('R');

1309 
	`°uffch¨Ródbuff
('\t');

1310 
	`°uffch¨Ródbuff
(
ESC
);

1314 i‡(
nch¨
 =
	`Cål
('V'))

1316 
c
 = 
	`Cål
('V');

1317 
nch¨
 = 
	`gë_lôîÆ
();

1320 
c
 = 
NUL
;

1321 
	`¥ï_ªdo
(
Pªnum1
, 
NUL
, 'r', 
c
, 
nch¨
);

1322 i‡(
	`u_ßve_curs‹
(Ë=
FAIL
)

1331 i‡(
c
 !
	`Cål
('V'Ë&& (
nch¨
 == '\r' ||Çchar == '\n'))

1333 
Pªnum1
--)

1334 
	`dñch¨
(
FALSE
);

1336 i‡(
curwö
->
w_curs‹
.
cﬁ
 > 0 && 
	`gch¨_curs‹
(Ë=
NUL
)

1338 --
curwö
->
w_curs‹
.
cﬁ
;

1339 
	`°uffch¨Ródbuff
('a');

1342 
	`°uffch¨Ródbuff
('i');

1343 
	`°uffch¨Ródbuff
('\r');

1344 
	`°uffch¨Ródbuff
(
ESC
);

1348 
Pªnum1
--)

1356 
±r
 = 
	`ml_gë_buf
(
curbuf
, 
curwö
->
w_curs‹
.
 um
, 
TRUE
);

1357 
±r
[
curwö
->
w_curs‹
.
cﬁ
] = 
nch¨
;

1358 i‡(
p_sm
 && (
nch¨
 == ')' ||Çchar == '}' ||Çchar == ']'))

1359 
	`showm©ch
();

1360 ++
curwö
->
w_curs‹
.
cﬁ
;

1362 --
curwö
->
w_curs‹
.
cﬁ
;

1364 
curwö
->
w_£t_cursw™t
 = 
TRUE
;

1365 
CHANGED
;

1366 
	`upd©ñöe
();

1367 
	`£t_œ°_ö£π
(
nch¨
);

1371 i‡(
VIsuÆ_a˘ive
)

1372 
do›î©‹
;

1373 i‡(
	`check˛ór›
())

1375 i‡(
Pªnum
 <= 1)

1376 
Pªnum
 = 2;

1377 i‡(
curwö
->
w_curs‹
.
 um
 + 
Pªnum
 - 1 > 
curbuf
->
b_ml
.
ml_löe_cou¡
)

1379 
	`˛ór›bìp
();

1383 
	`¥ï_ªdo
(
Pªnum
, 
NUL
, 'J', NUL, NUL);

1384 
	`do_do_joö
(
Pªnum
, 
TRUE
, TRUE);

1388 
dú
 = 
BACKWARD
;

1396 i‡(
›_ty≥
 !
NOP
 || 
VIsuÆ_a˘ive
)

1398 i‡(
c
 == 'P')

1400 i‡(
	`cuºít_block
('{', 
Pªnum1
Ë=
FAIL
)

1401 
	`˛ór›bìp
();

1405 i‡(
	`cuºít_∑r
(
c
, 
Pªnum1
Ë=
FAIL
)

1406 
	`˛ór›bìp
();

1411 
	`¥ï_ªdo
(
Pªnum
, 
NUL
, 
c
, NUL, NUL);

1412 
	`do_put
(
dú
, 
Pªnum1
, 
FALSE
);

1416 
	`Cål
('A'):

1417 
	`Cål
('X'):

1418 i‡(
	`check˛ór›q
())

1420 i‡(
	`do_addsub
(()
c
, 
Pªnum1
Ë=
OK
)

1421 
	`¥ï_ªdo
(
Pªnum1
, 
NUL
, 
c
, NUL, NUL);

1428 
ty≥
 = 1;

1432 i‡(
›_ty≥
 !
NOP
 || 
VIsuÆ_a˘ive
)

1434 i‡(
	`cuºít_w‹d
(
Pªnum1
, 
ty≥
Ë=
FAIL
)

1435 
	`˛ór›bìp
();

1439 i‡(
c
 == 'A')

1441 
curwö
->
w_£t_cursw™t
 = 
TRUE
;

1442 
	`⁄îight
(Ë=
OK
)

1447 i‡(
	`u_ßve_curs‹
(Ë=
OK
)

1449 i‡(!
	`löìm±y
(
curwö
->
w_curs‹
.
 um
))

1450 
	`öc_curs‹
();

1451 
comm™d_busy
 = 
	`edô
(
c
, 
FALSE
, 
Pªnum1
);

1457 i‡(
	`check˛ór›q
())

1459 
	`begölöe
(
TRUE
);

1463 
K_INS
:

1464 
ö£π_comm™d
:

1465 i‡(
	`check˛ór›q
())

1467 i‡(
	`u_ßve_curs‹
(Ë=
OK
)

1468 
comm™d_busy
 = 
	`edô
(
c
, 
FALSE
, 
Pªnum1
);

1472 i‡(
VIsuÆ_a˘ive
)

1474 
Pªnum
 = 
VIsuÆ
.
 um
;

1475 
VIsuÆ
.
 um
 = 
curwö
->
w_curs‹
.lnum;

1476 
curwö
->
w_curs‹
.
 um
 = 
Pªnum
;

1477 
n
 = 
VIsuÆ
.
cﬁ
;

1478 
VIsuÆ
.
cﬁ
 = 
curwö
->
w_curs‹
.col;

1479 
curwö
->
w_curs‹
.
cﬁ
 = ()
n
;

1480 
curwö
->
w_£t_cursw™t
 = 
TRUE
;

1483 i‡(
	`check˛ór›
())

1485 i‡(
	`has_f‹m©_›ti⁄
(
FO_OPEN_COMS
))

1486 
fo_do_commíts
 = 
TRUE
;

1487 i‡(
	`u_ßve
(
curwö
->
w_curs‹
.
 um
,

1488 (
löír_t
)(
curwö
->
w_curs‹
.
 um
 + 1)Ë=
OK
 &&

1489 
	`O≥ncmd
(
FORWARD
, 
TRUE
, 
FALSE
))

1490 
comm™d_busy
 = 
	`edô
('o', 
TRUE
, 
Pªnum1
);

1491 
fo_do_commíts
 = 
FALSE
;

1495 i‡(
	`check˛ór›q
())

1497 i‡(
	`has_f‹m©_›ti⁄
(
FO_OPEN_COMS
))

1498 
fo_do_commíts
 = 
TRUE
;

1499 i‡(
	`u_ßve
((
löír_t
)(
curwö
->
w_curs‹
.
 um
 - 1),

1500 
curwö
->
w_curs‹
.
 um
Ë=
OK
 && 
	`O≥ncmd
(
BACKWARD
, 
TRUE
, 
FALSE
))

1501 
comm™d_busy
 = 
	`edô
('O', 
TRUE
, 
Pªnum1
);

1502 
fo_do_commíts
 = 
FALSE
;

1506 i‡(
VIsuÆ_a˘ive
)

1508 
c
 = 'c';

1509 
VIsuÆ_mode
 = 'V';

1510 
do›î©‹
;

1512 i‡(
	`check˛ór›q
())

1514 i‡(
	`u_ßve_curs‹
(Ë=
OK
)

1515 
comm™d_busy
 = 
	`edô
('R', 
FALSE
, 
Pªnum1
);

1526 i‡(!
p_to
 && !
VIsuÆ_a˘ive
 &&

1527 
›_ty≥
 !
	`vim_°rchr
(
›ch¨s
, '~') - opchars + 1)

1529 i‡(
	`check˛ór›q
())

1531 i‡(
	`löìm±y
(
curwö
->
w_curs‹
.
 um
))

1533 
	`˛ór›bìp
();

1536 
	`¥ï_ªdo
(
Pªnum
, 
NUL
, '~', NUL, NUL);

1538 i‡(
	`u_ßve_curs‹
(Ë=
FAIL
)

1541 ; 
Pªnum1
 > 0; --Prenum1)

1543 i‡(
	`gch¨_curs‹
(Ë=
NUL
)

1545 
	`sw≠ch¨
(&
curwö
->
w_curs‹
);

1546 
	`öc_curs‹
();

1549 
curwö
->
w_£t_cursw™t
 = 
TRUE
;

1550 
CHANGED
;

1551 
	`upd©ñöe
();

1564 
do›î©‹
:

1565 
n
 = 
	`vim_°rchr
(
›ch¨s
, 
c
) - opchars + 1;

1566 i‡(
n
 =
›_ty≥
)

1567 
löe›
;

1568 i‡(
	`check˛ór›
())

1570 i‡(
Pªnum
 != 0)

1571 
›num
 = 
Pªnum
;

1572 
curbuf
->
b_›_°¨t
 = 
curwö
->
w_curs‹
;

1573 
›_ty≥
 = ()
n
;

1581 
K_DEL
:

1582 
c
 = 'x';

1593 i‡(
›_ty≥
 !
NOP
 || 
VIsuÆ_a˘ive
)

1595 i‡(
c
 == 's')

1597 i‡(
	`cuºít_£¡
(
Pªnum1
Ë=
FAIL
)

1598 
	`˛ór›bìp
();

1601 i‡(
c
 == 'S')

1603 i‡(
	`cuºít_block
('(', 
Pªnum1
Ë=
FAIL
)

1604 
	`˛ór›bìp
();

1608 i‡(
VIsuÆ_a˘ive
)

1610 
ch¨_u
 
å™s
[] = "YyDdCcxdXd";

1613 i‡(
	`isuµî
(
c
Ë&& 
VIsuÆ_mode
 !
	`Cål
('V'))

1614 
VIsuÆ_mode
 = 'V';

1615 
c
 = *(
	`vim_°rchr
(
å™s
, c) + 1);

1616 
do›î©‹
;

1620 i‡(
	`check˛ór›q
())

1622 i‡(
Pªnum
)

1623 
	`°uf‚umRódbuff
(
Pªnum
);

1626 
ch¨_u
 *(
¨
[8]) = {(char_u *)"dl", (char_u *)"dh",

1627 (
ch¨_u
 *)"d$", (char_u *)"c$",

1628 (
ch¨_u
 *)"cl", (char_u *)"cc",

1629 (
ch¨_u
 *)"yy", (char_u *)":s\r"};

1630 
ch¨_u
 *
°r
 = (char_u *)"xXDCsSY&";

1632 
	`°uffRódbuff
(
¨
[()(
	`vim_°rchr
(
°r
, 
c
) - str)]);

1641 i‡(
	`check˛ór›
())

1643 i‡(
	`£tm¨k
(
nch¨
Ë=
FAIL
)

1644 
	`˛ór›bìp
();

1648 
Êag
 = 
TRUE
;

1652 
pos
 = 
	`gëm¨k
(
nch¨
, (
›_ty≥
 =
NOP
));

1653 i‡(
pos
 =(
FPOS
 *)-1)

1655 i‡(
Êag
)

1656 
	`begölöe
(
TRUE
);

1660 
curs‹m¨k
:

1661 i‡(
	`check_m¨k
(
pos
Ë=
FAIL
)

1662 
	`˛ór›
();

1665 i‡(
c
 == '\'' || c == '`')

1666 
	`£çcm¨k
();

1667 
curwö
->
w_curs‹
 = *
pos
;

1668 i‡(
Êag
)

1669 
	`begölöe
(
TRUE
);

1671 
›_mŸi⁄_ty≥
 = 
Êag
 ? 
MLINE
 : 
MCHAR
;

1672 
›_ö˛usive
 = 
FALSE
;

1673 
curwö
->
w_£t_cursw™t
 = 
TRUE
;

1676 
	`Cål
('O'):

1677 
Pªnum1
 = -Prenum1;

1680 
	`Cål
('I'):

1681 i‡(
	`check˛ór›q
())

1683 
pos
 = 
	`movem¨k
(()
Pªnum1
);

1684 i‡(
pos
 =(
FPOS
 *)-1)

1686 
curwö
->
w_£t_cursw™t
 = 
TRUE
;

1689 i‡(
pos
 !
NULL
)

1690 
curs‹m¨k
;

1691 
	`˛ór›bìp
();

1698 i‡(
	`check˛ór›
())

1700 i‡(
nch¨
 !
NUL
 && 
	`is_y™k_buf„r
“ch¨, 
FALSE
))

1702 
y™kbuf„r
 = 
nch¨
;

1703 
›num
 = 
Pªnum
;

1706 
	`˛ór›bìp
();

1714 
	`Cål
('V'):

1715 i‡(
	`check˛ór›
())

1719 i‡(
VIsuÆ_a˘ive
)

1721 i‡(
VIsuÆ_mode
 =
c
)

1723 
	`íd_visuÆ_mode
();

1727 
VIsuÆ_mode
 = 
c
;

1728 
	`showmode
();

1730 
	`upd©e_curbuf
(
NOT_VALID
);

1735 
VIsuÆ_ßve
 = 
VIsuÆ
;

1736 
VIsuÆ_mode_ßve
 = 
VIsuÆ_mode
;

1737 
	`°¨t_visuÆ_highlight
();

1738 i‡(
Pªnum
)

1740 i‡(
ª£l_VIsuÆ_mode
 =
NUL
)

1742 
	`bìp_Êush
();

1745 
VIsuÆ
 = 
curwö
->
w_curs‹
;

1746 
VIsuÆ_a˘ive
 = 
TRUE
;

1747 #ifde‡
USE_MOUSE


1748 
	`£tmou£
();

1750 i‡(
p_smd
)

1751 
ªdøw_cmdlöe
 = 
TRUE
;

1756 i‡(
ª£l_VIsuÆ_mode
 !'v' || 
ª£l_VIsuÆ_löe_cou¡
 > 1)

1758 
curwö
->
w_curs‹
.
 um
 +
ª£l_VIsuÆ_löe_cou¡
 * 
Pªnum
 - 1;

1759 i‡(
curwö
->
w_curs‹
.
 um
 > 
curbuf
->
b_ml
.
ml_löe_cou¡
)

1760 
curwö
->
w_curs‹
.
 um
 = 
curbuf
->
b_ml
.
ml_löe_cou¡
;

1762 
VIsuÆ_mode
 = 
ª£l_VIsuÆ_mode
;

1763 i‡(
VIsuÆ_mode
 == 'v')

1765 i‡(
ª£l_VIsuÆ_löe_cou¡
 <= 1)

1766 
curwö
->
w_curs‹
.
cﬁ
 +
ª£l_VIsuÆ_cﬁ
 * 
Pªnum
 - 1;

1768 
curwö
->
w_curs‹
.
cﬁ
 = 
ª£l_VIsuÆ_cﬁ
;

1770 i‡(
ª£l_VIsuÆ_cﬁ
 =
MAXCOL
)

1772 
curwö
->
w_cursw™t
 = 
MAXCOL
;

1773 
	`cﬁadv™˚
(
MAXCOL
);

1775 i‡(
VIsuÆ_mode
 =
	`Cål
('V'))

1777 
curwö
->
w_cursw™t
 = curwö->
w_vútcﬁ
 +

1778 
ª£l_VIsuÆ_cﬁ
 * 
Pªnum
 - 1;

1779 
	`cﬁadv™˚
((
cﬁƒ_t
)
curwö
->
w_cursw™t
);

1782 
curwö
->
w_£t_cursw™t
 = 
TRUE
;

1783 
	`curs_cﬁumns
(
TRUE
);

1784 
	`upd©e_curbuf
(
NOT_VALID
);

1788 
VIsuÆ
 = 
curwö
->
w_curs‹
;

1789 
VIsuÆ_mode
 = 
c
;

1790 
VIsuÆ_a˘ive
 = 
TRUE
;

1791 #ifde‡
USE_MOUSE


1792 
	`£tmou£
();

1794 i‡(
p_smd
)

1795 
ªdøw_cmdlöe
 = 
TRUE
;

1796 
	`upd©ñöe
();

1805 
	`Cål
('Z'):

1806 
	`˛ór›
();

1807 i‡(
VIsuÆ_a˘ive
)

1808 
	`íd_visuÆ_mode
();

1809 
	`°uffRódbuff
((
ch¨_u
 *)":st\r");

1816 
	`Cål
('W'):

1817 i‡(
	`check˛ór›
())

1819 
	`do_wödow
(
nch¨
, 
Pªnum
);

1826 
nch¨
)

1832 i‡(
	`check˛ór›
())

1834 i‡(
VIsuÆ_a˘ive
)

1835 
pos
 = &
VIsuÆ_ßve
;

1837 
pos
 = &
VIsuÆ
;

1838 i‡(
pos
->
 um
 =0 ||Öos-> um > 
curbuf
->
b_ml
.
ml_löe_cou¡
 ||

1839 
VIsuÆ_íd
.
 um
 == 0)

1840 
	`bìp_Êush
();

1843 
FPOS
 
â
;

1844 
t
;

1847 i‡(
VIsuÆ_a˘ive
)

1849 
â
 = 
VIsuÆ
;

1850 
VIsuÆ
 = 
VIsuÆ_ßve
;

1851 
VIsuÆ_ßve
 = 
â
;

1852 
t
 = 
VIsuÆ_mode
;

1853 
VIsuÆ_mode
 = 
VIsuÆ_mode_ßve
;

1854 
VIsuÆ_mode_ßve
 = 
t
;

1855 
â
 = 
curwö
->
w_curs‹
;

1857 
curwö
->
w_curs‹
 = 
VIsuÆ_íd
;

1858 i‡(
VIsuÆ_a˘ive
)

1859 
VIsuÆ_íd
 = 
â
;

1860 
	`check_curs‹
();

1861 
VIsuÆ_a˘ive
 = 
TRUE
;

1862 #ifde‡
USE_MOUSE


1863 
	`£tmou£
();

1865 
	`upd©e_curbuf
(
NOT_VALID
);

1866 
	`showmode
();

1875 
K_DOWN
:

1876 i‡(!
curwö
->
w_p_wøp
)

1877 
n‹mÆ_j
;

1878 i‡(
	`s¸ìngo
(
FORWARD
, 
Pªnum1
Ë=
FAIL
)

1879 
	`˛ór›bìp
();

1883 
K_UP
:

1884 i‡(!
curwö
->
w_p_wøp
)

1885 
n‹mÆ_k
;

1886 i‡(
	`s¸ìngo
(
BACKWARD
, 
Pªnum1
Ë=
FAIL
)

1887 
	`˛ór›bìp
();

1894 
Êag
 = 
TRUE
;

1898 
K_HOME
:

1899 
›_mŸi⁄_ty≥
 = 
MCHAR
;

1900 
›_ö˛usive
 = 
FALSE
;

1901 i‡(
curwö
->
w_p_wøp
)

1903 
n
 = ((
curwö
->
w_vútcﬁ
 + (curwö->
w_p_nu
 ? 8 : 0)) /

1904 
Cﬁumns
) * Columns;

1905 i‡(
curwö
->
w_p_nu
 && 
n
 > 8)

1906 
n
 -= 8;

1909 
n
 = 
curwö
->
w_À·cﬁ
;

1910 
	`cﬁadv™˚
((
cﬁƒ_t
)
n
);

1911 i‡(
Êag
)

1912 
	`vim_iswhôe
(
	`gch¨_curs‹
()Ë&& 
	`⁄îight
(Ë=
OK
)

1914 
curwö
->
w_£t_cursw™t
 = 
TRUE
;

1918 
K_END
:

1919 
›_mŸi⁄_ty≥
 = 
MCHAR
;

1920 
›_ö˛usive
 = 
TRUE
;

1921 i‡(
curwö
->
w_p_wøp
)

1923 
curwö
->
w_cursw™t
 = 
MAXCOL
;

1924 i‡(
Pªnum1
 == 1)

1926 
n
 = ((
curwö
->
w_vútcﬁ
 + (curwö->
w_p_nu
 ? 8 : 0)) /

1927 
Cﬁumns
 + 1) * Columns - 1;

1928 i‡(
curwö
->
w_p_nu
 && 
n
 > 8)

1929 
n
 -= 8;

1930 
	`cﬁadv™˚
((
cﬁƒ_t
)
n
);

1932 i‡(
	`s¸ìngo
(
FORWARD
, 
Pªnum1
 - 1Ë=
FAIL
)

1933 
	`˛ór›bìp
();

1937 
n
 = 
curwö
->
w_À·cﬁ
 + 
Cﬁumns
 - 1;

1938 i‡(
curwö
->
w_p_nu
)

1939 
n
 -= 8;

1940 
	`cﬁadv™˚
((
cﬁƒ_t
)
n
);

1941 
curwö
->
w_£t_cursw™t
 = 
TRUE
;

1950 
£¨ch_w‹d
;

1957 
›_mŸi⁄_ty≥
 = 
MCHAR
;

1958 
curwö
->
w_£t_cursw™t
 = 
TRUE
;

1959 
›_ö˛usive
 = 
TRUE
;

1960 i‡(
	`bckíd_w‹d
(
Pªnum1
, 
nch¨
 ='E', 
FALSE
Ë=
FAIL
)

1961 
	`˛ór›bìp
();

1967 
	`Cål
('G'):

1968 
	`curs‹_pos_öfo
();

1975 
	`begölöe
(
FALSE
);

1976 
ö£π_comm™d
;

1983 
gŸofûe
:

1984 
±r
 = 
	`fûe_«me_©_curs‹
(
FNAME_MESS
|
FNAME_HYP
|
FNAME_EXP
);

1985 i‡(
±r
 !
NULL
)

1988 i‡(
curbuf
->
b_ch™ged
 && curbuf->
b_nwödows
 <1 && !
p_hid
)

1989 
	`autowrôe
(
curbuf
);

1990 
	`£çcm¨k
();

1991 ()
	`do_ecmd
(0, 
±r
, 
NULL
, NULL, 
p_hid
, (
löír_t
)0,

1992 
FALSE
);

1993 
	`vim_‰ì
(
±r
);

1996 
	`˛ór›
();

2003 
Pªnum1
-- && !
gŸ_öt
)

2005 
	`mch_dñay
(1000L, 
TRUE
);

2006 
	`mch_bªakcheck
();

2015 
	`do_ascii
();

2023 
gŸo_löe_⁄e
:

2024 i‡(
Pªnum
 == 0)

2025 
Pªnum
 = 1;

2026 
gŸo_löe
;

2038 
¥ech¨
 = 
c
;

2039 
c
 = 
nch¨
;

2040 
do›î©‹
;

2049 
	`do_gd
(
nch¨
);

2052 #ifde‡
USE_MOUSE


2056 
K_MIDDLEMOUSE
:

2057 
K_MIDDLEDRAG
:

2058 
K_MIDDLERELEASE
:

2059 
K_LEFTMOUSE
:

2060 
K_LEFTDRAG
:

2061 
K_LEFTRELEASE
:

2062 
K_RIGHTMOUSE
:

2063 
K_RIGHTDRAG
:

2064 
K_RIGHTRELEASE
:

2065 
mod_mask
 = 
MOD_MASK_CTRL
;

2066 ()
	`do_mou£
(
nch¨
, 
BACKWARD
, 
Pªnum1
, 
FALSE
);

2069 
K_IGNORE
:

2074 
	`˛ór›bìp
();

2082 #ifde‡
USE_MOUSE


2083 
K_MIDDLEMOUSE
:

2084 
K_MIDDLEDRAG
:

2085 
K_MIDDLERELEASE
:

2086 
K_LEFTMOUSE
:

2087 
K_LEFTDRAG
:

2088 
K_LEFTRELEASE
:

2089 
K_RIGHTMOUSE
:

2090 
K_RIGHTDRAG
:

2091 
K_RIGHTRELEASE
:

2092 ()
	`do_mou£
(
c
, 
BACKWARD
, 
Pªnum1
, 
FALSE
);

2095 
K_IGNORE
:

2099 #ifde‡
USE_GUI


2103 
K_SCROLLBAR
:

2104 i‡(
›_ty≥
 !
NOP
)

2105 
	`˛ór›bìp
();

2108 
	`gui_do_s¸ﬁl
();

2111 
K_HORIZ_SCROLLBAR
:

2112 i‡(
›_ty≥
 !
NOP
)

2113 
	`˛ór›bìp
();

2116 
	`gui_do_h‹iz_s¸ﬁl
();

2123 
ESC
:

2125 i‡(!
VIsuÆ_a˘ive
 && (
›_ty≥
 !
NOP
 ||

2126 
›num
 || 
Pªnum
 || 
y™kbuf„r
))

2128 
	`˛ór›
();

2131 i‡(
VIsuÆ_a˘ive
)

2133 
	`íd_visuÆ_mode
();

2134 
	`upd©e_curbuf
(
NOT_VALID
);

2135 
	`˛ór›
();

2139 
	`˛ór›
();

2140 
	`vim_bìp
();

2144 
	`˛ór›bìp
();

2153 i‡(!
föish_›
 && !
›_ty≥
 && 
	`vim_°rchr
((
ch¨_u
 *)"\"DCYSsXx.", 
c
Ë=
NULL
)

2154 
y™kbuf„r
 = 0;

2159 
	`do_≥ndög_›î©‹
(
c
, 
nch¨
, 
föish_›
, 
£¨chbuff
,

2160 &
comm™d_busy
, 
ﬁd_cﬁ
, 
FALSE
, 
d⁄t_adju°_›_íd
);

2162 
n‹mÆ_íd
:

2163 i‡(
›_ty≥
 =
NOP
 && 
y™kbuf„r
 == 0)

2164 
	`˛ór_showcmd
();

2166 i‡(
ª°¨t_edô
 && 
›_ty≥
 =
NOP
 && !
VIsuÆ_a˘ive


2167 && !
comm™d_busy
 && 
	`°uff_em±y
(Ë&& 
y™kbuf„r
 == 0)

2168 ()
	`edô
(
ª°¨t_edô
, 
FALSE
, 1L);

2170 
	`checkpcm¨k
();

2171 
	`vim_‰ì
(
£¨chbuff
);

2177 i‡(
modifõd
)

2179 
WIN
 *
wp
;

2181 
wp
 = 
fú°wö
; wp; w∞wp->
w_√xt
)

2182 i‡(
wp
 !
curwö
 && wp->
w_buf„r
 =
curbuf
)

2184 
	`curs‹_off
();

2185 
wp
->
w_ªdr_ty≥
 = 
NOT_VALID
;

2190 i‡(!
skù_ªdøw
)

2191 
	`wö_upd©e
(
wp
);

2193 
modifõd
 = 
FALSE
;

2195 
	}
}

2201 
	$do_≥ndög_›î©‹
(
c
, 
nch¨
, 
föish_›
, 
£¨chbuff
, 
comm™d_busy
,

2202 
ﬁd_cﬁ
, 
gui_y™k
, 
d⁄t_adju°_›_íd
)

2203 
c
;

2204 
nch¨
;

2205 
föish_›
;

2206 
ch¨_u
 *
£¨chbuff
;

2207 *
comm™d_busy
;

2208 
ﬁd_cﬁ
;

2209 
gui_y™k
;

2210 
d⁄t_adju°_›_íd
;

2213 
ªdo_VIsuÆ_mode
 = 
NUL
;

2214 
löír_t
 
ªdo_VIsuÆ_löe_cou¡
;

2215 
cﬁƒ_t
 
ªdo_VIsuÆ_cﬁ
;

2216 
ªdo_VIsuÆ_Pªnum
;

2218 
löír_t
 
Pªnum1
 = 1L;

2219 
FPOS
 
ﬁd_curs‹
;

2220 
VIsuÆ_was_a˘ive
 = 
VIsuÆ_a˘ive
;

2221 
ªdøw
;

2223 #ifde‡
USE_GUI


2234 i‡(
gui
.
ö_u£
 && 
›_ty≥
 !
NOP
 && !
gui_y™k
 && 
VIsuÆ_a˘ive


2235 && !
ªdo_VIsuÆ_busy
)

2236 
	`gui_c›y_£À˘i⁄
();

2238 
ﬁd_curs‹
 = 
curwö
->
w_curs‹
;

2243 i‡((
VIsuÆ_a˘ive
 || 
föish_›
Ë&& 
›_ty≥
 !
NOP
)

2245 
›_is_VIsuÆ
 = 
VIsuÆ_a˘ive
;

2246 i‡(
›_ty≥
 !
YANK
 && !
VIsuÆ_a˘ive
)

2248 
	`¥ï_ªdo
(
Pªnum
, 
¥ech¨
, 
›ch¨s
[
›_ty≥
 - 1], 
c
, 
nch¨
);

2249 i‡(
c
 == '/' || c == '?')

2255 i‡(
	`vim_°rchr
(
p_˝o
, 
CPO_REDO
Ë=
NULL
)

2256 
	`AµídToRedobuff
(
£¨chbuff
);

2257 
	`AµídToRedobuff
(
NL_STR
);

2261 i‡(
ªdo_VIsuÆ_busy
)

2263 
curbuf
->
b_›_°¨t
 = 
curwö
->
w_curs‹
;

2264 
curwö
->
w_curs‹
.
 um
 +
ªdo_VIsuÆ_löe_cou¡
 - 1;

2265 
VIsuÆ_mode
 = 
ªdo_VIsuÆ_mode
;

2266 i‡(
VIsuÆ_mode
 == 'v')

2268 i‡(
ªdo_VIsuÆ_löe_cou¡
 <= 1)

2269 
curwö
->
w_curs‹
.
cﬁ
 +
ªdo_VIsuÆ_cﬁ
 - 1;

2271 
curwö
->
w_curs‹
.
cﬁ
 = 
ªdo_VIsuÆ_cﬁ
;

2273 i‡(
ªdo_VIsuÆ_cﬁ
 =
MAXCOL
)

2275 
curwö
->
w_cursw™t
 = 
MAXCOL
;

2276 
	`cﬁadv™˚
(
MAXCOL
);

2278 
Pªnum
 = 
ªdo_VIsuÆ_Pªnum
;

2280 i‡(
VIsuÆ_a˘ive
)

2282 
curbuf
->
b_›_°¨t
 = 
VIsuÆ
;

2283 
VIsuÆ_íd
 = 
curwö
->
w_curs‹
;

2284 i‡(
VIsuÆ_mode
 == 'V')

2285 
curbuf
->
b_›_°¨t
.
cﬁ
 = 0;

2288 i‡(
	`…
(
curbuf
->
b_›_°¨t
, 
curwö
->
w_curs‹
))

2290 
curbuf
->
b_›_íd
 = 
curwö
->
w_curs‹
;

2291 
curwö
->
w_curs‹
 = 
curbuf
->
b_›_°¨t
;

2295 
curbuf
->
b_›_íd
 = curbuf->
b_›_°¨t
;

2296 
curbuf
->
b_›_°¨t
 = 
curwö
->
w_curs‹
;

2298 
›_löe_cou¡
 = 
curbuf
->
b_›_íd
.
 um
 - curbuf->
b_›_°¨t
.lnum + 1;

2300 i‡(
VIsuÆ_a˘ive
 || 
ªdo_VIsuÆ_busy
)

2302 i‡(
VIsuÆ_mode
 =
	`Cål
('V'))

2304 
cﬁƒ_t
 
°¨t
, 
íd
;

2306 
›_block_mode
 = 
TRUE
;

2307 
	`gëvcﬁ
(
curwö
, &(
curbuf
->
b_›_°¨t
),

2308 &
›_°¨t_vcﬁ
, 
NULL
, &
›_íd_vcﬁ
);

2309 
	`gëvcﬁ
(
curwö
, &(
curbuf
->
b_›_íd
), &
°¨t
, 
NULL
, &
íd
);

2310 i‡(
°¨t
 < 
›_°¨t_vcﬁ
)

2311 
›_°¨t_vcﬁ
 = 
°¨t
;

2312 i‡(
íd
 > 
›_íd_vcﬁ
)

2313 
›_íd_vcﬁ
 = 
íd
;

2316 i‡(
curwö
->
w_cursw™t
 =
MAXCOL
)

2318 
curwö
->
w_curs‹
.
cﬁ
 = 
MAXCOL
;

2319 
›_íd_vcﬁ
 = 0;

2320 
curwö
->
w_curs‹
.
 um
 = 
curbuf
->
b_›_°¨t
.lnum;

2321 
curwö
->
w_curs‹
.
 um
 <
curbuf
->
b_›_íd
.lnum;

2322 ++
curwö
->
w_curs‹
.
 um
)

2324 
	`gëvcﬁ
(
curwö
, &curwö->
w_curs‹
, 
NULL
, NULL, &
íd
);

2325 i‡(
íd
 > 
›_íd_vcﬁ
)

2326 
›_íd_vcﬁ
 = 
íd
;

2328 
curwö
->
w_curs‹
 = 
curbuf
->
b_›_°¨t
;

2330 i‡(
ªdo_VIsuÆ_busy
)

2331 
›_íd_vcﬁ
 = 
›_°¨t_vcﬁ
 + 
ªdo_VIsuÆ_cﬁ
 - 1;

2332 
	`cﬁadv™˚
(
›_°¨t_vcﬁ
);

2339 
ª£l_VIsuÆ_mode
 = 
VIsuÆ_mode
;

2340 i‡(
curwö
->
w_cursw™t
 =
MAXCOL
)

2341 
ª£l_VIsuÆ_cﬁ
 = 
MAXCOL
;

2342 i‡(
VIsuÆ_mode
 =
	`Cål
('V'))

2343 
ª£l_VIsuÆ_cﬁ
 = 
›_íd_vcﬁ
 - 
›_°¨t_vcﬁ
 + 1;

2344 i‡(
›_löe_cou¡
 > 1)

2345 
ª£l_VIsuÆ_cﬁ
 = 
curbuf
->
b_›_íd
.
cﬁ
;

2347 
ª£l_VIsuÆ_cﬁ
 = 
curbuf
->
b_›_íd
.
cﬁ
 -

2348 
curbuf
->
b_›_°¨t
.
cﬁ
 + 1;

2349 
ª£l_VIsuÆ_löe_cou¡
 = 
›_löe_cou¡
;

2351 i‡(
›_ty≥
 !
YANK
 && op_ty≥ !
COLON
)

2353 
	`¥ï_ªdo
(0L, 
¥ech¨
, 'v', 
›ch¨s
[
›_ty≥
 - 1], 
NUL
);

2354 
ªdo_VIsuÆ_mode
 = 
ª£l_VIsuÆ_mode
;

2355 
ªdo_VIsuÆ_cﬁ
 = 
ª£l_VIsuÆ_cﬁ
;

2356 
ªdo_VIsuÆ_löe_cou¡
 = 
ª£l_VIsuÆ_löe_cou¡
;

2357 
ªdo_VIsuÆ_Pªnum
 = 
Pªnum
;

2365 
›_ö˛usive
 = 
TRUE
;

2366 i‡(
VIsuÆ_mode
 == 'V')

2367 
›_mŸi⁄_ty≥
 = 
MLINE
;

2370 
›_mŸi⁄_ty≥
 = 
MCHAR
;

2371 i‡(*
	`ml_gë_pos
(&(
curbuf
->
b_›_íd
)Ë=
NUL
)

2372 
›_ö˛usive
 = 
FALSE
;

2375 
ªdo_VIsuÆ_busy
 = 
FALSE
;

2382 i‡(!
gui_y™k
)

2384 
VIsuÆ_a˘ive
 = 
FALSE
;

2385 #ifde‡
USE_MOUSE


2386 
	`£tmou£
();

2388 i‡(
p_smd
)

2389 
˛ór_cmdlöe
 = 
TRUE
;

2390 i‡(
›_ty≥
 =
YANK
 || op_ty≥ =
COLON
 || op_ty≥ =
FILTER
)

2391 
	`upd©e_curbuf
(
NOT_VALID
);

2395 i‡(
Pªnum
 == 0)

2396 
Pªnum1
 = 1L;

2398 
Pªnum1
 = 
Pªnum
;

2401 
curwö
->
w_£t_cursw™t
 = 
TRUE
;

2404 
›_em±y
 = (
›_mŸi⁄_ty≥
 =
MCHAR
 && !
›_ö˛usive
 &&

2405 
	`equÆ
(
curbuf
->
b_›_°¨t
, curbuf->
b_›_íd
));

2414 i‡(
›_mŸi⁄_ty≥
 =
MCHAR
 && 
›_ö˛usive
 =
FALSE
 &&

2415 !
d⁄t_adju°_›_íd
 && 
curbuf
->
b_›_íd
.
cﬁ
 == 0 &&

2416 
›_löe_cou¡
 > 1)

2418 
›_íd_adju°ed
 = 
TRUE
;

2419 --
›_löe_cou¡
;

2420 --
curbuf
->
b_›_íd
.
 um
;

2421 i‡(
	`öödít
(0))

2422 
›_mŸi⁄_ty≥
 = 
MLINE
;

2425 
curbuf
->
b_›_íd
.
cﬁ
 = 
	`STRLEN
(
	`ml_gë
(curbuf->b_›_íd.
 um
));

2426 i‡(
curbuf
->
b_›_íd
.
cﬁ
)

2428 --
curbuf
->
b_›_íd
.
cﬁ
;

2429 
›_ö˛usive
 = 
TRUE
;

2434 
›_íd_adju°ed
 = 
FALSE
;

2435 
›_ty≥
)

2437 
LSHIFT
:

2438 
RSHIFT
:

2439 
	`do_shi·
(
›_ty≥
, 
TRUE
, ()
Pªnum1
);

2442 
JOIN
:

2443 i‡(
›_löe_cou¡
 < 2)

2444 
›_löe_cou¡
 = 2;

2445 i‡(
curwö
->
w_curs‹
.
 um
 + 
›_löe_cou¡
 - 1 >

2446 
curbuf
->
b_ml
.
ml_löe_cou¡
)

2447 
	`bìp_Êush
();

2455 i‡(
ﬁd_curs‹
.
 um
 !
curwö
->
w_curs‹
.lnum ||

2456 
ﬁd_curs‹
.
cﬁ
 !
curwö
->
w_curs‹
.col)

2457 
ªdøw
 = (
	`curs_rows
(Ë=
OK
);

2459 
ªdøw
 = 
TRUE
;

2460 
	`do_do_joö
(
›_löe_cou¡
, 
TRUE
, 
ªdøw
);

2464 
DELETE
:

2465 i‡(!
›_em±y
)

2466 
	`do_dñëe
();

2469 
YANK
:

2470 i‡(!
›_em±y
)

2471 ()
	`do_y™k
(
FALSE
, !
gui_y™k
);

2474 
CHANGE
:

2475 *
comm™d_busy
 = 
	`do_ch™ge
();

2478 
FILTER
:

2479 i‡(
	`vim_°rchr
(
p_˝o
, 
CPO_FILTER
Ë!
NULL
)

2480 
	`AµídToRedobuff
((
ch¨_u
 *)"!\r");

2482 
b™gªdo
 = 
TRUE
;

2484 
INDENT
:

2485 
COLON
:

2487 #i‡
	`deföed
(
LISPINDENT
Ë|| deföed(
CINDENT
)

2491 i‡(
›_ty≥
 =
INDENT
 && *
p_ï
 =
NUL
)

2493 #ifde‡
LISPINDENT


2494 i‡(
curbuf
->
b_p_li•
)

2496 
	`do_ªödít
(
gë_li•_ödít
);

2500 #ifde‡
CINDENT


2501 
	`do_ªödít
(
gë_c_ödít
);

2507 
dofûãr
:

2508 i‡(
VIsuÆ_was_a˘ive
)

2509 
	`•rötf
((*)
IObuff
, ":'<,'>");

2511 
	`•rötf
((*)
IObuff
, ":%ld,%ld",

2512 ()
curbuf
->
b_›_°¨t
.
 um
,

2513 ()
curbuf
->
b_›_íd
.
 um
);

2514 
	`°uffRódbuff
(
IObuff
);

2515 i‡(
›_ty≥
 !
COLON
)

2516 
	`°uffRódbuff
((
ch¨_u
 *)"!");

2517 i‡(
›_ty≥
 =
INDENT
)

2519 #i‚de‡
CINDENT


2520 i‡(*
p_ï
 =
NUL
)

2521 
	`°uffRódbuff
((
ch¨_u
 *)"indent");

2524 
	`°uffRódbuff
(
p_ï
);

2525 
	`°uffRódbuff
((
ch¨_u
 *)"\n");

2527 i‡(
›_ty≥
 =
FORMAT
)

2529 i‡(*
p_Â
 =
NUL
)

2530 
	`°uffRódbuff
((
ch¨_u
 *)"fmt");

2532 
	`°uffRódbuff
(
p_Â
);

2533 
	`°uffRódbuff
((
ch¨_u
 *)"\n");

2538 
TILDE
:

2539 
UPPER
:

2540 
LOWER
:

2541 i‡(!
›_em±y
)

2542 
	`do_tûde
();

2545 
FORMAT
:

2546 i‡(*
p_Â
 !
NUL
)

2547 
dofûãr
;

2548 
	`do_f‹m©
();

2552 
	`˛ór›bìp
();

2554 
¥ech¨
 = 
NUL
;

2555 i‡(!
gui_y™k
)

2560 i‡(!
p_sﬁ
 && 
›_mŸi⁄_ty≥
 =
MLINE
 && (
›_ty≥
 =
LSHIFT
 ||

2561 
›_ty≥
 =
RSHIFT
 || op_ty≥ =
DELETE
))

2562 
	`cﬁadv™˚
(
curwö
->
w_cursw™t
 = 
ﬁd_cﬁ
);

2563 
›_ty≥
 = 
NOP
;

2566 
curwö
->
w_curs‹
 = 
ﬁd_curs‹
;

2567 
›_block_mode
 = 
FALSE
;

2568 
y™kbuf„r
 = 0;

2570 
	}
}

2572 #ifde‡
USE_MOUSE


2609 
	$do_mou£
(
c
, 
dú
, 
cou¡
, 
fix_ödít
)

2610 
c
;

2611 
dú
;

2612 
cou¡
;

2613 
fix_ödít
;

2615 
ign‹e_døg_ªÀa£
 = 
FALSE
;

2616 
FPOS
 
‹ig_curs‹
;

2617 
do_Æways
 = 
FALSE
;

2618 
gŸ_˛ick
 = 
FALSE
;

2620 
which_buâ⁄
;

2621 
is_˛ick
;

2622 
is_døg
;

2623 
jump_Êags
 = 0;

2624 
FPOS
 
°¨t_visuÆ
;

2625 
FPOS
 
íd_visuÆ
;

2626 
BUF
 *
ßve_buf„r
;

2627 
diff
;

2628 
moved
;

2629 
c1
, 
c2
;

2630 
VIsuÆ_was_a˘ive
 = 
VIsuÆ_a˘ive
;

2639 i‡(
do_Æways
)

2640 
do_Æways
 = 
FALSE
;

2642 #ifde‡
USE_GUI


2643 i‡(!
gui
.
ö_u£
)

2646 i‡(
VIsuÆ_a˘ive
)

2648 i‡(!
	`mou£_has
(
MOUSE_VISUAL
))

2649  
FALSE
;

2651 i‡(
Sèã
 =
NORMAL
 && !
	`mou£_has
(
MOUSE_NORMAL
))

2652  
FALSE
;

2655 
which_buâ⁄
 = 
	`gë_mou£_buâ⁄
(
	`KEY2TERMCAP1
(
c
), &
is_˛ick
, &
is_døg
);

2660 i‡(
is_˛ick
)

2661 
gŸ_˛ick
 = 
TRUE
;

2664 i‡(!
gŸ_˛ick
)

2665  
FALSE
;

2666 i‡(!
is_døg
)

2667 
gŸ_˛ick
 = 
FALSE
;

2673 i‡((
mod_mask
 & 
MOD_MASK_ALT
))

2674  
FALSE
;

2679 i‡(
is_˛ick
 && (
mod_mask
 & 
MOD_MASK_CTRL
Ë&& 
which_buâ⁄
 =
MOUSE_RIGHT
)

2681 i‡(
Sèã
 & 
INSERT
)

2682 
	`°uffch¨Ródbuff
(
	`Cål
('O'));

2683 
	`°uffch¨Ródbuff
(
	`Cål
('T'));

2684 
gŸ_˛ick
 = 
FALSE
;

2685  
FALSE
;

2691 i‡((
mod_mask
 & 
MOD_MASK_CTRL
Ë&& 
which_buâ⁄
 !
MOUSE_LEFT
)

2692  
FALSE
;

2698 i‡((
mod_mask
 & (
MOD_MASK_SHIFT
 | 
MOD_MASK_CTRL
 | 
MOD_MASK_ALT
)) &&

2699 (!
is_˛ick
 || (
mod_mask
 & 
MOD_MASK_MULTI_CLICK
) ||

2700 
which_buâ⁄
 =
MOUSE_MIDDLE
))

2701  
FALSE
;

2708 i‡(!
is_˛ick
 && (
ign‹e_døg_ªÀa£
 || 
which_buâ⁄
 =
MOUSE_MIDDLE
))

2709  
FALSE
;

2714 i‡(
which_buâ⁄
 =
MOUSE_MIDDLE
)

2716 i‡(
Sèã
 =
NORMAL
)

2722 i‡(
›_ty≥
 !
NOP
)

2724 
	`˛ór›bìp
();

2725  
FALSE
;

2732 i‡(
VIsuÆ_a˘ive
)

2734 
	`°uffch¨Ródbuff
('y');

2735 
	`°uffch¨Ródbuff
(
K_MIDDLEMOUSE
);

2736 
do_Æways
 = 
TRUE
;

2737  
FALSE
;

2749 i‡(
Sèã
 & 
INSERT
)

2751 i‡(
y™kbuf„r
 == '.')

2752 
	`ö£πbuf
(
y™kbuf„r
);

2755 #ifde‡
USE_GUI


2756 i‡(
gui
.
ö_u£
 && 
y™kbuf„r
 == 0)

2757 
y™kbuf„r
 = '*';

2759 
	`do_put
(
BACKWARD
, 1L, 
fix_ödít
);

2762 
	`AµídCh¨ToRedobuff
(
	`Cål
('R'));

2763 i‡(
y™kbuf„r
 == 0)

2764 
	`AµídCh¨ToRedobuff
('"');

2766 
	`AµídCh¨ToRedobuff
(
y™kbuf„r
);

2767 i‡(
	`gch¨_curs‹
(Ë!
NUL
)

2768 ++
curwö
->
w_curs‹
.
cﬁ
;

2770  
FALSE
;

2773  
FALSE
;

2776 i‡(!
is_˛ick
)

2777 
jump_Êags
 |
MOUSE_FOCUS
;

2779 
°¨t_visuÆ
.
 um
 = 0;

2781 i‡((
Sèã
 & (
NORMAL
 | 
INSERT
)) &&

2782 !(
mod_mask
 & (
MOD_MASK_SHIFT
 | 
MOD_MASK_CTRL
)))

2784 i‡(
which_buâ⁄
 =
MOUSE_LEFT
)

2786 i‡(
is_˛ick
)

2788 i‡(
VIsuÆ_a˘ive
)

2790 
	`íd_visuÆ_mode
();

2791 
	`upd©e_curbuf
(
NOT_VALID
);

2795 
jump_Êags
 |
MOUSE_MAY_VIS
;

2797 i‡(
which_buâ⁄
 =
MOUSE_RIGHT
)

2799 i‡(
is_˛ick
 && 
VIsuÆ_a˘ive
)

2805 i‡(
	`…
(
curwö
->
w_curs‹
, 
VIsuÆ
))

2807 
°¨t_visuÆ
 = 
curwö
->
w_curs‹
;

2808 
íd_visuÆ
 = 
VIsuÆ
;

2812 
°¨t_visuÆ
 = 
VIsuÆ
;

2813 
íd_visuÆ
 = 
curwö
->
w_curs‹
;

2816 
jump_Êags
 |
MOUSE_MAY_VIS
;

2820 i‡(!
is_døg
)

2826 
ign‹e_døg_ªÀa£
 = (
›_ty≥
 !
NOP
);

2832 i‡(!
is_˛ick
)

2833 
jump_Êags
 |
MOUSE_DID_MOVE
;

2834 
ßve_buf„r
 = 
curbuf
;

2835 
moved
 = (
	`jump_to_mou£
(
jump_Êags
Ë& 
CURSOR_MOVED
);

2838 i‡(
curbuf
 !
ßve_buf„r
 && 
VIsuÆ_a˘ive
)

2840 
	`íd_visuÆ_mode
();

2841 
	`upd©e_curbuf
(
NOT_VALID
);

2843 i‡(
°¨t_visuÆ
.
 um
)

2850 i‡(
	`…
(
curwö
->
w_curs‹
, 
°¨t_visuÆ
))

2851 
VIsuÆ
 = 
íd_visuÆ
;

2852 i‡(
	`…
(
íd_visuÆ
, 
curwö
->
w_curs‹
))

2853 
VIsuÆ
 = 
°¨t_visuÆ
;

2857 i‡(
íd_visuÆ
.
 um
 =
°¨t_visuÆ
.lnum)

2859 i‡(
curwö
->
w_curs‹
.
cﬁ
 - 
°¨t_visuÆ
.col >

2860 
íd_visuÆ
.
cﬁ
 - 
curwö
->
w_curs‹
.col)

2861 
VIsuÆ
 = 
°¨t_visuÆ
;

2863 
VIsuÆ
 = 
íd_visuÆ
;

2869 
diff
 = (
curwö
->
w_curs‹
.
 um
 - 
°¨t_visuÆ
.lnum) -

2870 (
íd_visuÆ
.
 um
 - 
curwö
->
w_curs‹
.lnum);

2872 i‡(
diff
 > 0)

2873 
VIsuÆ
 = 
°¨t_visuÆ
;

2874 i‡(
diff
 < 0)

2875 
VIsuÆ
 = 
íd_visuÆ
;

2878 i‡(
curwö
->
w_curs‹
.
cﬁ
 <

2879 (
°¨t_visuÆ
.
cﬁ
 + 
íd_visuÆ
.col) / 2)

2880 
VIsuÆ
 = 
íd_visuÆ
;

2882 
VIsuÆ
 = 
°¨t_visuÆ
;

2890 i‡((
Sèã
 & 
INSERT
Ë&& 
VIsuÆ_a˘ive
)

2891 
	`°uffch¨Ródbuff
(
	`Cål
('O'));

2895 i‡(
moved
)

2896 
	`cursupd©e
();

2901 i‡(
which_buâ⁄
 =
MOUSE_MIDDLE
)

2903 #ifde‡
USE_GUI


2904 i‡(
gui
.
ö_u£
 && 
y™kbuf„r
 == 0)

2905 
y™kbuf„r
 = '*';

2907 i‡(
	`y™k_buf„r_mlöe
())

2909 i‡(
mou£_∑°_bŸtom
)

2910 
dú
 = 
FORWARD
;

2912 i‡(
mou£_∑°_eﬁ
)

2913 
dú
 = 
FORWARD
;

2915 i‡(
fix_ödít
)

2917 
c1
 = (
dú
 =
BACKWARD
) ? '[' : ']';

2918 
c2
 = 'p';

2922 
c1
 = (
dú
 =
FORWARD
) ? 'p' : 'P';

2923 
c2
 = 
NUL
;

2925 
	`¥ï_ªdo
(
Pªnum
, 
NUL
, 
c1
, 
c2
, NUL);

2930 i‡(
ª°¨t_edô
)

2931 
whîe_∑°e_°¨ãd
 = 
curwö
->
w_curs‹
;

2932 
	`do_put
(
dú
, 
cou¡
, 
fix_ödít
);

2936 
curwö
->
w_curs‹
 = 
curbuf
->
b_›_íd
;

2937 i‡(
ª°¨t_edô
)

2938 ++
curwö
->
w_curs‹
.
cﬁ
;

2944 i‡((
mod_mask
 & 
MOD_MASK_CTRL
))

2946 i‡(
Sèã
 & 
INSERT
)

2947 
	`°uffch¨Ródbuff
(
	`Cål
('O'));

2948 
	`°uffch¨Ródbuff
(
	`Cål
(']'));

2949 
ign‹e_døg_ªÀa£
 = 
TRUE
;

2956 i‡((
mod_mask
 & 
MOD_MASK_SHIFT
))

2958 i‡(
Sèã
 & 
INSERT
)

2959 
	`°uffch¨Ródbuff
(
	`Cål
('O'));

2960 i‡(
which_buâ⁄
 =
MOUSE_LEFT
)

2961 
	`°uffch¨Ródbuff
('*');

2963 
	`°uffch¨Ródbuff
('#');

2967 i‡((
mod_mask
 & 
MOD_MASK_MULTI_CLICK
Ë&& (
Sèã
 & (
NORMAL
 | 
INSERT
)))

2969 i‡(
is_˛ick
 || !
VIsuÆ_a˘ive
)

2971 i‡(
VIsuÆ_a˘ive
)

2972 
‹ig_curs‹
 = 
VIsuÆ
;

2975 
	`°¨t_visuÆ_highlight
();

2976 
VIsuÆ
 = 
curwö
->
w_curs‹
;

2977 
‹ig_curs‹
 = 
VIsuÆ
;

2978 
VIsuÆ_a˘ive
 = 
TRUE
;

2979 #ifde‡
USE_MOUSE


2980 
	`£tmou£
();

2982 i‡(
p_smd
)

2983 
ªdøw_cmdlöe
 = 
TRUE
;

2985 i‡(
mod_mask
 & 
MOD_MASK_2CLICK
)

2986 
VIsuÆ_mode
 = 'v';

2987 i‡(
mod_mask
 & 
MOD_MASK_3CLICK
)

2988 
VIsuÆ_mode
 = 'V';

2989 i‡(
mod_mask
 & 
MOD_MASK_4CLICK
)

2990 
VIsuÆ_mode
 = 
	`Cål
('V');

2992 i‡(
mod_mask
 & 
MOD_MASK_2CLICK
)

2994 i‡(
	`…
(
curwö
->
w_curs‹
, 
‹ig_curs‹
))

2996 
	`föd_°¨t_of_w‹d
(&
curwö
->
w_curs‹
);

2997 
	`föd_íd_of_w‹d
(&
VIsuÆ
);

3001 
	`föd_°¨t_of_w‹d
(&
VIsuÆ
);

3002 
	`föd_íd_of_w‹d
(&
curwö
->
w_curs‹
);

3004 
curwö
->
w_£t_cursw™t
 = 
TRUE
;

3006 i‡(
is_˛ick
)

3008 
	`curs_cﬁumns
(
TRUE
);

3009 
	`upd©e_curbuf
(
NOT_VALID
);

3012 i‡(
VIsuÆ_a˘ive
 && 
VIsuÆ_was_a˘ive
 != VIsual_active)

3013 
VIsuÆ_mode
 = 'v';

3015  
moved
;

3016 
	}
}

3019 
	$föd_°¨t_of_w‹d
(
pos
)

3020 
FPOS
 *
pos
;

3022 
ch¨_u
 *
±r
;

3023 
c˛ass
;

3025 
±r
 = 
	`ml_gë
(
pos
->
 um
);

3026 
c˛ass
 = 
	`gë_mou£_˛ass
(
±r
[
pos
->
cﬁ
]);

3029 
pos
->
cﬁ
 > 0 && 
	`gë_mou£_˛ass
(
±r
[pos->cﬁ]Ë=
c˛ass
)

3030 
pos
->
cﬁ
--;

3031 i‡(
pos
->
cﬁ
 !0 || 
	`gë_mou£_˛ass
(
±r
[0]Ë!
c˛ass
)

3032 
pos
->
cﬁ
++;

3033 
	}
}

3036 
	$föd_íd_of_w‹d
(
pos
)

3037 
FPOS
 *
pos
;

3039 
ch¨_u
 *
±r
;

3040 
c˛ass
;

3042 
±r
 = 
	`ml_gë
(
pos
->
 um
);

3043 
c˛ass
 = 
	`gë_mou£_˛ass
(
±r
[
pos
->
cﬁ
]);

3044 
±r
[
pos
->
cﬁ
] && 
	`gë_mou£_˛ass
’å[pos->cﬁ]Ë=
c˛ass
)

3045 
pos
->
cﬁ
++;

3046 
pos
->
cﬁ
--;

3047 
	}
}

3050 
	$gë_mou£_˛ass
(
c
)

3051 
c
;

3053 i‡(
c
 == ' ' || c == '\t')

3056 i‡(
	`isidch¨
(
c
))

3065 i‡(
c
 !
NUL
 && 
	`vim_°rchr
((
ch¨_u
 *)"-+*/%<>&|^!=", cË!
NULL
)

3067  
c
;

3068 
	}
}

3075 
	$°¨t_visuÆ_highlight
()

3077 
didw¨n
 = 
FALSE
;

3079 i‡(!
didw¨n
 && 
	`£t_highlight
('v'Ë=
FAIL
)

3081 
	`EMSG
("Warning:Åerminal cannot highlight");

3082 
didw¨n
 = 
TRUE
;

3084 
	}
}

3093 
	$íd_visuÆ_mode
()

3095 #ifde‡
USE_GUI


3096 i‡(
gui
.
ö_u£
)

3097 
	`gui_auto_£À˘
();

3099 
VIsuÆ_a˘ive
 = 
FALSE
;

3100 #ifde‡
USE_MOUSE


3101 
	`£tmou£
();

3103 
VIsuÆ_íd
 = 
curwö
->
w_curs‹
;

3104 i‡(
p_smd
)

3105 
˛ór_cmdlöe
 = 
TRUE
;

3106 
	}
}

3117 
	$föd_idít_undî_curs‹
(
°rög
, 
föd_ty≥
)

3118 
ch¨_u
 **
°rög
;

3119 
föd_ty≥
;

3121 
ch¨_u
 *
±r
;

3122 
cﬁ
 = 0;

3123 
i
;

3129 
±r
 = 
	`ml_gë_cuæöe
();

3130 
i
 = (
föd_ty≥
 & 
FIND_IDENT
) ? 0 : 1; i < 2; ++i)

3135 
cﬁ
 = 
curwö
->
w_curs‹
.col;

3136 
±r
[
cﬁ
] !
NUL
 &&

3137 (
i
 =0 ? !
	`isw‹dch¨
(
±r
[
cﬁ
]Ë: 
	`vim_iswhôe
(ptr[col])))

3138 ++
cﬁ
;

3146 
cﬁ
 > 0 && (
i
 =0 ? 
	`isw‹dch¨
(
±r
[col - 1]) :

3147 (!
	`vim_iswhôe
(
±r
[
cﬁ
 - 1]) &&

3148 (!(
föd_ty≥
 & 
FIND_IDENT
Ë|| !
	`isw‹dch¨
(
±r
[
cﬁ
 - 1])))))

3149 --
cﬁ
;

3155 i‡(!(
föd_ty≥
 & 
FIND_STRING
Ë|| 
	`isw‹dch¨
(
±r
[
cﬁ
]))

3161 i‡(
±r
[
cﬁ
] =
NUL
 || (!
	`isw‹dch¨
’å[cﬁ]Ë&& 
i
 == 0))

3163 i‡(
föd_ty≥
 & 
FIND_STRING
)

3164 
	`EMSG
("No string under cursor");

3166 
	`EMSG
("No identifier under cursor");

3169 
±r
 +
cﬁ
;

3170 *
°rög
 = 
±r
;

3171 
cﬁ
 = 0;

3172 
i
 =0 ? 
	`isw‹dch¨
(*
±r
Ë: (*±∏!
NUL
 && !
	`vim_iswhôe
(*ptr)))

3174 ++
±r
;

3175 ++
cﬁ
;

3177  
cﬁ
;

3178 
	}
}

3181 
	$¥ï_ªdo
(
num
, 
¥e_ch¨
, 
cmd
, 
c
, 
nch¨
)

3182 
num
;

3183 
¥e_ch¨
;

3184 
cmd
;

3185 
c
;

3186 
nch¨
;

3188 
	`Re£tRedobuff
();

3189 i‡(
y™kbuf„r
 != 0)

3191 
	`AµídCh¨ToRedobuff
('\"');

3192 
	`AµídCh¨ToRedobuff
(
y™kbuf„r
);

3194 i‡(
num
)

3195 
	`AµídNumbîToRedobuff
(
num
);

3196 i‡(
¥e_ch¨
 !
NUL
)

3197 
	`AµídCh¨ToRedobuff
(
¥e_ch¨
);

3198 
	`AµídCh¨ToRedobuff
(
cmd
);

3199 i‡(
c
 !
NUL
)

3200 
	`AµídCh¨ToRedobuff
(
c
);

3201 i‡(
nch¨
 !
NUL
)

3202 
	`AµídCh¨ToRedobuff
(
nch¨
);

3203 
	}
}

3211 
	$check˛ór›
()

3213 i‡(
›_ty≥
 =
NOP
)

3214  (
FALSE
);

3215 
	`˛ór›bìp
();

3216  (
TRUE
);

3217 
	}
}

3225 
	$check˛ór›q
()

3227 i‡(
›_ty≥
 =
NOP
 && !
VIsuÆ_a˘ive
)

3228  (
FALSE
);

3229 
	`˛ór›bìp
();

3230  (
TRUE
);

3231 
	}
}

3234 
	$˛ór›
()

3236 
›_ty≥
 = 
NOP
;

3237 
y™kbuf„r
 = 0;

3238 
¥ech¨
 = 
NUL
;

3239 
	}
}

3242 
	$˛ór›bìp
()

3244 
	`˛ór›
();

3245 
	`bìp_Êush
();

3246 
	}
}

3252 
ch¨_u
 
	gshowcmd_buf
[
SHOWCMD_COLS
 + 1];

3253 
ch¨_u
 
	gﬁd_showcmd_buf
[
SHOWCMD_COLS
 + 1];

3254 
	gis_showcmd_˛ór
 = 
TRUE
;

3256 
di•œy_showcmd
 
__ARGS
(());

3259 
	$˛ór_showcmd
()

3261 i‡(!
p_sc
)

3264 
showcmd_buf
[0] = 
NUL
;

3269 i‡(
is_showcmd_˛ór
)

3272 
	`di•œy_showcmd
();

3273 
	}
}

3280 
	$add_to_showcmd
(
c
, 
di•œy_Æways
)

3281 
c
;

3282 
di•œy_Æways
;

3284 
ch¨_u
 *
p
;

3285 
ﬁd_Àn
;

3286 
exåa_Àn
;

3287 
ovîÊow
;

3289 i‡(!
p_sc
)

3290  
FALSE
;

3292 
p
 = 
	`å™sch¨
(
c
);

3293 
ﬁd_Àn
 = 
	`STRLEN
(
showcmd_buf
);

3294 
exåa_Àn
 = 
	`STRLEN
(
p
);

3295 
ovîÊow
 = 
ﬁd_Àn
 + 
exåa_Àn
 - 
SHOWCMD_COLS
;

3296 i‡(
ovîÊow
 > 0)

3297 
	`STRCPY
(
showcmd_buf
, showcmd_bu‡+ 
ovîÊow
);

3298 
	`STRCAT
(
showcmd_buf
, 
p
);

3300 i‡(!
di•œy_Æways
 && 
	`ch¨_avaû
())

3301  
FALSE
;

3303 
	`di•œy_showcmd
();

3305  
TRUE
;

3306 
	}
}

3312 
	$dñ_‰om_showcmd
(
Àn
)

3313 
Àn
;

3315 
ﬁd_Àn
;

3317 i‡(!
p_sc
)

3320 
ﬁd_Àn
 = 
	`STRLEN
(
showcmd_buf
);

3321 i‡(
Àn
 > 
ﬁd_Àn
)

3322 
Àn
 = 
ﬁd_Àn
;

3323 
showcmd_buf
[
ﬁd_Àn
 - 
Àn
] = 
NUL
;

3325 i‡(!
	`ch¨_avaû
())

3326 
	`di•œy_showcmd
();

3327 
	}
}

3330 
	$push_showcmd
()

3332 i‡(
p_sc
)

3333 
	`STRCPY
(
ﬁd_showcmd_buf
, 
showcmd_buf
);

3334 
	}
}

3337 
	$p›_showcmd
()

3339 i‡(!
p_sc
)

3342 
	`STRCPY
(
showcmd_buf
, 
ﬁd_showcmd_buf
);

3344 
	`di•œy_showcmd
();

3345 
	}
}

3348 
	$di•œy_showcmd
()

3350 
Àn
;

3352 
	`curs‹_off
();

3354 
Àn
 = 
	`STRLEN
(
showcmd_buf
);

3355 i‡(
Àn
 == 0)

3356 
is_showcmd_˛ór
 = 
TRUE
;

3359 
	`s¸ìn_msg
(
showcmd_buf
, ()
Rows
 - 1, 
sc_cﬁ
);

3360 
is_showcmd_˛ór
 = 
FALSE
;

3366 
	`s¸ìn_msg
((
ch¨_u
 *)" " + 
Àn
, ()
Rows
 - 1, 
sc_cﬁ
 +Üen);

3368 
	`£tcurs‹
();

3369 
	}
}

3375 
	$do_gd
(
nch¨
)

3376 
nch¨
;

3378 
Àn
;

3379 
ch¨_u
 *
∑t
;

3380 
FPOS
 
ﬁd_pos
;

3381 
t
;

3382 
ßve_p_ws
;

3383 
ßve_p_scs
;

3384 
ch¨_u
 *
±r
;

3386 i‡((
Àn
 = 
	`föd_idít_undî_curs‹
(&
±r
, 
FIND_IDENT
)) == 0 ||

3387 (
∑t
 = 
	`Æloc
(
Àn
 + 5)Ë=
NULL
)

3389 
	`˛ór›bìp
();

3392 
	`•rötf
((*)
∑t
, 
	`isw‹dch¨
(*
±r
) ? "\\<%.*s\\>" :

3393 "%.*s", 
Àn
, 
±r
);

3394 
ﬁd_pos
 = 
curwö
->
w_curs‹
;

3395 
ßve_p_ws
 = 
p_ws
;

3396 
ßve_p_scs
 = 
p_scs
;

3397 
p_ws
 = 
FALSE
;

3398 
p_scs
 = 
FALSE
;

3399 
fo_do_commíts
 = 
TRUE
;

3406 i‡(
nch¨
 ='D' || !
	`föd∑r
(
BACKWARD
, 1L, '}', 
FALSE
))

3408 
	`£çcm¨k
();

3409 
curwö
->
w_curs‹
.
 um
 = 1;

3412 (
t
 = 
	`£¨chô
(&
curwö
->
w_curs‹
, 
FORWARD
, 
∑t
, 1L, 0, 
RE_LAST
))

3413 =
OK
 &&

3414 
	`gë_Àadî_Àn
(
	`ml_gë_cuæöe
(), 
NULL
) &&

3415 
ﬁd_pos
.
 um
 > 
curwö
->
w_curs‹
.lnum)

3416 ++
curwö
->
w_curs‹
.
 um
;

3417 i‡(
t
 =
FAIL
 || 
ﬁd_pos
.
 um
 <
curwö
->
w_curs‹
.lnum)

3419 
	`˛ór›bìp
();

3420 
curwö
->
w_curs‹
 = 
ﬁd_pos
;

3423 
curwö
->
w_£t_cursw™t
 = 
TRUE
;

3425 
	`vim_‰ì
(
∑t
);

3426 
p_ws
 = 
ßve_p_ws
;

3427 
p_scs
 = 
ßve_p_scs
;

3428 
fo_do_commíts
 = 
FALSE
;

3429 
	}
}

	@src/ops.c

14 
	~"vim.h
"

15 
	~"globÆs.h
"

16 
	~"¥Ÿo.h
"

17 
	~"›ti⁄.h
"

18 
	~"›s.h
"

28 #ifde‡
USE_GUI


29 
	#NUM_REGISTERS
 38

	)

31 
	#NUM_REGISTERS
 37

	)

37 
	#DELETION_REGISTER
 36

	)

38 #ifde‡
USE_GUI


39 
	#GUI_SELECTION_REGISTER
 37

	)

45 
	sy™kbuf


47 
ch¨_u
 **
	my_¨øy
;

48 
löír_t
 
	my_size
;

49 
ch¨_u
 
	my_ty≥
;

50 } 
	gy_buf
[
NUM_REGISTERS
];

52 
y™kbuf
 *
	gy_cuºít
;

53 
	gy™k≠≥nd
;

54 
y™kbuf
 *
	gy_¥evious
 = 
NULL
;

59 
	sblock_def


61 
	m°¨t•a˚s
;

62 
	míd•a˚s
;

63 
	mãxéí
;

64 
ch¨_u
 *
	mãxt°¨t
;

65 
cﬁƒ_t
 
	mãxtcﬁ
;

68 
gë_y™k_buf„r
 
__ARGS
(());

69 
°uff_y™k
 
__ARGS
((, 
ch¨_u
 *));

70 
‰ì_y™k
 
__ARGS
(());

71 
‰ì_y™k_Æl
 
__ARGS
(());

72 
block_¥ï
 
__ARGS
((
block_def
 *, 
löír_t
, ));

73 
ßme_Àadî
 
__ARGS
((, 
ch¨_u
 *, , char_u *));

74 
fmt_íd_block
 
__ARGS
((
löír_t
, *, 
ch¨_u
 **));

80 
	$do_shi·
(
›
, 
curs_t›
, 
amou¡
)

81 
›
;

82 
curs_t›
;

83 
amou¡
;

85 
i
;

86 
fú°_ch¨
;

88 i‡(
	`u_ßve
((
löír_t
)(
curwö
->
w_curs‹
.
 um
 - 1),

89 (
löír_t
)(
curwö
->
w_curs‹
.
 um
 + 
›_löe_cou¡
)Ë=
FAIL
)

91 
i
 = 
›_löe_cou¡
; --i >= 0; )

93 
fú°_ch¨
 = *
	`ml_gë_cuæöe
();

94 i‡(
fú°_ch¨
 =
NUL
)

95 
curwö
->
w_curs‹
.
cﬁ
 = 0;

100 #i‡
	`deföed
(
SMARTINDENT
Ë|| deföed(
CINDENT
)

101 i‡(
fú°_ch¨
 != '#' || (

102 #ifde‡
SMARTINDENT


103 !
curbuf
->
b_p_si


105 #i‡
	`deföed
(
SMARTINDENT
Ë&& deföed(
CINDENT
)

108 #ifde‡
CINDENT


109 (!
curbuf
->
b_p_cö
 || !
	`ö_cökeys
('#', ' ', 
TRUE
))

117 
	`shi·_löe
(
›
 =
LSHIFT
, 
p_§
, 
amou¡
);

119 ++
curwö
->
w_curs‹
.
 um
;

122 i‡(
curs_t›
)

124 
curwö
->
w_curs‹
.
 um
 -
›_löe_cou¡
;

125 
	`begölöe
(
MAYBE
);

128 --
curwö
->
w_curs‹
.
 um
;

129 
	`upd©eS¸ìn
(
CURSUPD
);

131 i‡(
›_löe_cou¡
 > 
p_ªp‹t
)

132 
	`smsg
((
ch¨_u
 *)"%ldÜöe%†%˚d %dÅime%s", 
›_löe_cou¡
,

133 
	`∂uøl
(
›_löe_cou¡
), (
›
 =
RSHIFT
) ? '>' : '<',

134 
amou¡
, 
	`∂uøl
(()amount));

135 
	}
}

142 
	$shi·_löe
(
À·
, 
round
, 
amou¡
)

143 
À·
;

144 
round
;

145 
amou¡
;

147 
cou¡
;

148 
i
, 
j
;

149 
p_sw
 = ()
curbuf
->
b_p_sw
;

151 
cou¡
 = 
	`gë_ödít
();

153 i‡(
round
)

155 
i
 = 
cou¡
 / 
p_sw
;

156 
j
 = 
cou¡
 % 
p_sw
;

157 i‡(
j
 && 
À·
)

158 --
amou¡
;

159 i‡(
À·
)

161 
i
 -
amou¡
;

162 i‡(
i
 < 0)

163 
i
 = 0;

166 
i
 +
amou¡
;

167 
cou¡
 = 
i
 * 
p_sw
;

171 i‡(
À·
)

173 
cou¡
 -
p_sw
 * 
amou¡
;

174 i‡(
cou¡
 < 0)

175 
cou¡
 = 0;

178 
cou¡
 +
p_sw
 * 
amou¡
;

180 
	`£t_ödít
(
cou¡
, 
TRUE
);

181 
	}
}

183 #i‡
deföed
(
LISPINDENT
Ë|| deföed(
CINDENT
)

190 
	$do_ªödít
(
how
)

191 (*
how
Ë
	`__ARGS
(());

193 
i
;

194 
ch¨_u
 *
l
;

195 
cou¡
;

197 i‡(
	`u_ßve
((
löír_t
)(
curwö
->
w_curs‹
.
 um
 - 1),

198 (
löír_t
)(
curwö
->
w_curs‹
.
 um
 + 
›_löe_cou¡
)Ë=
FAIL
)

201 
i
 = 
›_löe_cou¡
; --ò>0 && !
gŸ_öt
; )

206 i‡((
i
 % 50 =0 || i =
›_löe_cou¡
 - 1Ë&& op_löe_cou¡ > 
p_ªp‹t
)

207 
	`smsg
((
ch¨_u
 *)"%ldÜöe%†tÿödít... ", 
i
, 
	`∂uøl
(i));

213 #ifde‡
LISPINDENT


214 i‡(
i
 !
›_löe_cou¡
 - 1 || op_line_count == 1 ||

215 
how
 !
gë_li•_ödít
)

218 
l
 = 
	`skùwhôe
(
	`ml_gë_cuæöe
());

219 i‡(*
l
 =
NUL
)

220 
cou¡
 = 0;

222 
cou¡
 = 
	`how
();

224 
	`£t_ödít
(
cou¡
, 
TRUE
);

226 ++
curwö
->
w_curs‹
.
 um
;

230 
curwö
->
w_curs‹
.
 um
 -
›_löe_cou¡
;

231 
	`begölöe
(
MAYBE
);

233 
	`upd©eS¸ìn
(
CURSUPD
);

235 i‡(
›_löe_cou¡
 > 
p_ªp‹t
)

237 
i
 = 
›_löe_cou¡
 - (i + 1);

238 
	`smsg
((
ch¨_u
 *)"%ldÜöe%†ödíãd ", 
i
, 
	`∂uøl
(i));

240 
	}
}

248 
	$is_y™k_buf„r
(
c
, 
wrôög
)

249 
c
;

250 
wrôög
;

252 i‡(
c
 > '~')

253  
FALSE
;

254 i‡(
	`iß um
(
c
Ë|| (!
wrôög
 && 
	`vim_°rchr
((
ch¨_u
 *)".%:", cË!
NULL
) ||

255 
c
 == '"' || c == '-'

256 #ifde‡
USE_GUI


257 || (
gui
.
ö_u£
 && 
c
 == '*')

260  
TRUE
;

261  
FALSE
;

262 
	}
}

271 
	$gë_y™k_buf„r
(
wrôög
)

272 
wrôög
;

274 
i
;

276 
y™k≠≥nd
 = 
FALSE
;

277 i‡(((
y™kbuf„r
 =0 && !
wrôög
) || yankbuffer == '"') &&

278 
y_¥evious
 !
NULL
)

280 
y_cuºít
 = 
y_¥evious
;

283 
i
 = 
y™kbuf„r
;

284 i‡(
	`isdigô
(
i
))

285 
i
 -= '0';

286 i‡(
	`i¶owî
(
i
))

287 
i
 -= 'a' - 10;

288 i‡(
	`isuµî
(
i
))

290 
i
 -= 'A' - 10;

291 
y™k≠≥nd
 = 
TRUE
;

293 i‡(
y™kbuf„r
 == '-')

294 
i
 = 
DELETION_REGISTER
;

295 #ifde‡
USE_GUI


296 i‡(
gui
.
ö_u£
 && 
y™kbuf„r
 == '*')

297 
i
 = 
GUI_SELECTION_REGISTER
;

300 
i
 = 0;

301 
y_cuºít
 = &(
y_buf
[
i
]);

302 i‡(
wrôög
)

303 
y_¥evious
 = 
y_cuºít
;

304 
	}
}

310 
	$y™k_buf„r_mlöe
()

312 i‡(
y™kbuf„r
 !0 && !
	`is_y™k_buf„r
(y™kbuf„r, 
FALSE
))

313  
FALSE
;

314 
	`gë_y™k_buf„r
(
FALSE
);

315  (
y_cuºít
->
y_ty≥
 =
MLINE
);

316 
	}
}

324 
	$do_ªc‹d
(
c
)

325 
c
;

327 
ch¨_u
 *
p
;

328 
bu‚ame
;

329 
ªtvÆ
;

331 i‡(
Rec‹dög
 =
FALSE
)

334 i‡(
c
 > '~' || (!
	`iß um
(c) && c != '"'))

335 
ªtvÆ
 = 
FAIL
;

338 
Rec‹dög
 = 
TRUE
;

339 
	`showmode
();

340 
bu‚ame
 = 
c
;

341 
ªtvÆ
 = 
OK
;

346 
Rec‹dög
 = 
FALSE
;

347 
	`MSG
("");

348 
p
 = 
	`gë_ªc‹ded
();

349 i‡(
p
 =
NULL
)

350 
ªtvÆ
 = 
FAIL
;

352 
ªtvÆ
 = (
	`°uff_y™k
(
bu‚ame
, 
p
));

354  
ªtvÆ
;

355 
	}
}

364 
	$°uff_y™k
(
bu‚ame
, 
p
)

365 
bu‚ame
;

366 
ch¨_u
 *
p
;

368 
ch¨_u
 *
Õ
;

369 
ch¨_u
 **
µ
;

371 
y™kbuf„r
 = 
bu‚ame
;

373 i‡(
y™kbuf„r
 !0 && !
	`is_y™k_buf„r
(y™kbuf„r, 
TRUE
))

374  
FAIL
;

375 
	`gë_y™k_buf„r
(
TRUE
);

376 i‡(
y™k≠≥nd
 && 
y_cuºít
->
y_¨øy
 !
NULL
)

378 
µ
 = &(
y_cuºít
->
y_¨øy
[y_cuºít->
y_size
 - 1]);

379 
Õ
 = 
	`œŒoc
((
l⁄g_u
)(
	`STRLEN
(*
µ
Ë+ STRLEN(
p
Ë+ 1), 
TRUE
);

380 i‡(
Õ
 =
NULL
)

382 
	`vim_‰ì
(
p
);

383  
FAIL
;

385 
	`STRCPY
(
Õ
, *
µ
);

386 
	`STRCAT
(
Õ
, 
p
);

387 
	`vim_‰ì
(
p
);

388 
	`vim_‰ì
(*
µ
);

389 *
µ
 = 
Õ
;

393 
	`‰ì_y™k_Æl
();

394 i‡((
y_cuºít
->
y_¨øy
 =

395 (
ch¨_u
 **)
	`Æloc
(()(ch¨_u *))Ë=
NULL
)

397 
	`vim_‰ì
(
p
);

398  
FAIL
;

400 
y_cuºít
->
y_¨øy
[0] = 
p
;

401 
y_cuºít
->
y_size
 = 1;

402 
y_cuºít
->
y_ty≥
 = 
MCHAR
;

404  
OK
;

405 
	}
}

413 
	$do_execbuf
(
c
, 
cﬁ⁄
, 
add¸
)

414 
c
;

415 
cﬁ⁄
;

416 
add¸
;

418 
œ°c
 = 
NUL
;

419 
i
;

420 
ch¨_u
 *
p
;

421 
åunˇãd
;

422 
ªtvÆ
;

425 i‡(
c
 == '@')

426 
c
 = 
œ°c
;

427 i‡(
c
 ='%' || !
	`is_y™k_buf„r
(c, 
FALSE
))

428  
FAIL
;

429 
œ°c
 = 
c
;

431 i‡(
c
 == ':')

433 i‡(
œ°_cmdlöe
 =
NULL
)

435 
	`EMSG
(
e_nﬁa°cmd
);

436  
FAIL
;

438 
	`vim_‰ì
(
√w_œ°_cmdlöe
);

439 
√w_œ°_cmdlöe
 = 
NULL
;

440 i‡(
	`ös_ty≥buf
((
ch¨_u
 *)"\n", 
FALSE
, 0, 
TRUE
Ë=
FAIL
)

441  
FAIL
;

442 i‡(
	`ös_ty≥buf
(
œ°_cmdlöe
, 
FALSE
, 0, 
TRUE
Ë=
FAIL
)

443  
FAIL
;

444 i‡(
	`ös_ty≥buf
((
ch¨_u
 *)":", 
FALSE
, 0, 
TRUE
Ë=
FAIL
)

445  
FAIL
;

447 i‡(
c
 == '.')

449 
p
 = 
	`gë_œ°_ö£π
();

450 i‡(
p
 =
NULL
)

452 
	`EMSG
(
e_noö°ext
);

453  
FAIL
;

455 
i
 = 
	`STRLEN
(
p
);

456 i‡(
i
 > 0 && 
p
[ò- 1] =
ESC
)

458 
p
[
i
 - 1] = 
NUL
;

459 
åunˇãd
 = 
TRUE
;

462 
åunˇãd
 = 
FALSE
;

463 
ªtvÆ
 = 
	`ös_ty≥buf
(
p
, 
FALSE
, 0, 
TRUE
);

464 i‡(
åunˇãd
)

465 
p
[
i
 - 1] = 
ESC
;

466  
ªtvÆ
;

470 
y™kbuf„r
 = 
c
;

471 
	`gë_y™k_buf„r
(
FALSE
);

472 i‡(
y_cuºít
->
y_¨øy
 =
NULL
)

473  
FAIL
;

478 
i
 = 
y_cuºít
->
y_size
; --i >= 0; )

481 i‡(
y_cuºít
->
y_ty≥
 =
MLINE
 || 
i
 < y_cuºít->
y_size
 - 1

482 || 
add¸
)

484 i‡(
	`ös_ty≥buf
((
ch¨_u
 *)"\n", 
FALSE
, 0, 
TRUE
Ë=
FAIL
)

485  
FAIL
;

487 i‡(
	`ös_ty≥buf
(
y_cuºít
->
y_¨øy
[
i
], 
FALSE
, 0, 
TRUE
Ë=
FAIL
)

488  
FAIL
;

489 i‡(
cﬁ⁄
 && 
	`ös_ty≥buf
((
ch¨_u
 *)":", 
FALSE
, 0, 
TRUE
Ë=
FAIL
)

490  
FAIL
;

492 
Exec_ªg
 = 
TRUE
;

494  
OK
;

495 
	}
}

504 
	$ö£πbuf
(
c
)

505 
c
;

507 
i
;

508 
ªtvÆ
 = 
OK
;

515 
	`mch_bªakcheck
();

516 i‡(
gŸ_öt
)

517  
FAIL
;

520 i‡(
c
 !
NUL
 && !
	`is_y™k_buf„r
(c, 
FALSE
))

521  
FAIL
;

523 #ifde‡
USE_GUI


524 i‡(
c
 == '*')

525 
	`gui_gë_£À˘i⁄
();

528 i‡(
c
 == '.')

529 
ªtvÆ
 = 
	`°uff_ö£πed
(
NUL
, 1L, 
TRUE
);

530 i‡(
c
 == '%')

532 i‡(
	`check_‚ame
(Ë=
FAIL
)

533  
FAIL
;

534 
	`°uffRódbuff
(
curbuf
->
b_xfûíame
);

536 i‡(
c
 == ':')

538 i‡(
œ°_cmdlöe
 =
NULL
)

540 
	`EMSG
(
e_nﬁa°cmd
);

541  
FAIL
;

543 
	`°uffRódbuff
(
œ°_cmdlöe
);

547 
y™kbuf„r
 = 
c
;

548 
	`gë_y™k_buf„r
(
FALSE
);

549 i‡(
y_cuºít
->
y_¨øy
 =
NULL
)

550 
ªtvÆ
 = 
FAIL
;

554 
i
 = 0; i < 
y_cuºít
->
y_size
; ++i)

556 
	`°uffRódbuff
(
y_cuºít
->
y_¨øy
[
i
]);

559 i‡(
y_cuºít
->
y_ty≥
 =
MLINE
 || 
i
 < y_cuºít->
y_size
 - 1)

560 
	`°uffRódbuff
((
ch¨_u
 *)"\n");

565  
ªtvÆ
;

566 
	}
}

577 
	$cmdlöe_∑°e
(
c
)

578 
c
;

580 
i
;

582 i‡(!
	`is_y™k_buf„r
(
c
, 
FALSE
))

583  
FAIL
;

585 #ifde‡
USE_GUI


586 i‡(
c
 == '*')

587 
	`gui_gë_£À˘i⁄
();

590 i‡(
c
 == '.')

591  
FAIL
;

593 i‡(
c
 == '%')

595 i‡(
	`check_‚ame
(Ë=
FAIL
)

596  
FAIL
;

597  
	`put_⁄_cmdlöe
(
curbuf
->
b_xfûíame
, -1, 
TRUE
);

600 i‡(
c
 == ':')

602 i‡(
œ°_cmdlöe
 =
NULL
)

603  
FAIL
;

604  
	`put_⁄_cmdlöe
(
œ°_cmdlöe
, -1, 
TRUE
);

607 
y™kbuf„r
 = 
c
;

608 
	`gë_y™k_buf„r
(
FALSE
);

609 i‡(
y_cuºít
->
y_¨øy
 =
NULL
)

610  
FAIL
;

612 
i
 = 0; i < 
y_cuºít
->
y_size
; ++i)

614 
	`put_⁄_cmdlöe
(
y_cuºít
->
y_¨øy
[
i
], -1, 
FALSE
);

617 i‡(
y_cuºít
->
y_ty≥
 =
MLINE
 || 
i
 < y_cuºít->
y_size
 - 1)

618 
	`put_⁄_cmdlöe
((
ch¨_u
 *)"\r", 1, 
FALSE
);

620  
OK
;

621 
	}
}

627 
	$do_dñëe
()

629 
n
;

630 
löír_t
 
 um
;

631 
ch¨_u
 *
±r
;

632 
ch¨_u
 *
√wp
, *
ﬁdp
;

633 
löír_t
 
ﬁd_lcou¡
 = 
curbuf
->
b_ml
.
ml_löe_cou¡
;

634 
did_y™k
 = 
FALSE
;

635 
block_def
 
bd
;

637 i‡(
curbuf
->
b_ml
.
ml_Êags
 & 
ML_EMPTY
)

645 i‡(
›_mŸi⁄_ty≥
 =
MCHAR
 && 
›_löe_cou¡
 > 1 && 
›_ty≥
 =
DELETE
)

647 
±r
 = 
	`ml_gë
(
curbuf
->
b_›_íd
.
 um
Ë+ curbuf->b_›_íd.
cﬁ
 +

648 
›_ö˛usive
;

649 
±r
 = 
	`skùwhôe
(ptr);

650 i‡(*
±r
 =
NUL
 && 
	`öödít
(0))

651 
›_mŸi⁄_ty≥
 = 
MLINE
;

658 i‡(
›_mŸi⁄_ty≥
 =
MCHAR
 && 
›_löe_cou¡
 == 1 &&

659 
›_ty≥
 =
DELETE
 && *
	`ml_gë
(
curbuf
->
b_›_°¨t
.
 um
Ë=
NUL
)

661 
	`bìp_Êush
();

669 i‡(
y™kbuf„r
 != 0)

672 i‡(!
	`is_y™k_buf„r
(
y™kbuf„r
, 
TRUE
))

674 
	`bìp_Êush
();

677 
	`gë_y™k_buf„r
(
TRUE
);

678 i‡(
	`do_y™k
(
TRUE
, 
FALSE
Ë=
OK
)

679 
did_y™k
 = 
TRUE
;

686 i‡(
y™kbuf„r
 !0 || 
›_mŸi⁄_ty≥
 =
MLINE
 || 
›_löe_cou¡
 > 1)

688 
y_cuºít
 = &
y_buf
[9];

689 
	`‰ì_y™k_Æl
();

690 
n
 = 9;Ç > 1; --n)

691 
y_buf
[
n
] = y_buf[n - 1];

692 
y_¥evious
 = 
y_cuºít
 = &
y_buf
[1];

693 
y_buf
[1].
y_¨øy
 = 
NULL
;

694 
y™kbuf„r
 = 0;

696 i‡(
y™kbuf„r
 == 0)

698 
y™kbuf„r
 = '-';

699 
	`gë_y™k_buf„r
(
TRUE
);

700 
y™kbuf„r
 = 0;

703 i‡(
y™kbuf„r
 =0 && 
	`do_y™k
(
TRUE
, 
FALSE
Ë=
OK
)

704 
did_y™k
 = 
TRUE
;

711 i‡(!
did_y™k
)

713 i‡(
	`ask_ye¢o
((
ch¨_u
 *)"ˇ¬Ÿ y™k; dñëê™yway", 
TRUE
) != 'y')

715 
	`emsg
(
e_ab‹t
);

723 i‡(
›_block_mode
)

725 i‡(
	`u_ßve
((
löír_t
)(
curbuf
->
b_›_°¨t
.
 um
 - 1),

726 (
löír_t
)(
curbuf
->
b_›_íd
.
 um
 + 1)Ë=
FAIL
)

729 
 um
 = 
curwö
->
w_curs‹
.lnum;

730 
curwö
->
w_curs‹
.
 um
 <
curbuf
->
b_›_íd
.lnum;

731 ++
curwö
->
w_curs‹
.
 um
)

733 
	`block_¥ï
(&
bd
, 
curwö
->
w_curs‹
.
 um
, 
TRUE
);

734 i‡(
bd
.
ãxéí
 == 0)

741 
n
 = 
bd
.
ãxéí
 - bd.
°¨t•a˚s
 - bd.
íd•a˚s
;

742 
ﬁdp
 = 
	`ml_gë_cuæöe
();

743 
√wp
 = 
	`Æloc_check
(()
	`STRLEN
(
ﬁdp
Ë+ 1 - 
n
);

744 i‡(
√wp
 =
NULL
)

747 
	`vim_memmove
(
√wp
, 
ﬁdp
, (
size_t
)
bd
.
ãxtcﬁ
);

749 
	`c›y_•a˚s
(
√wp
 + 
bd
.
ãxtcﬁ
, (
size_t
)(bd.
°¨t•a˚s
 + bd.
íd•a˚s
));

751 
ﬁdp
 +
bd
.
ãxtcﬁ
 + bd.
ãxéí
;

752 
	`vim_memmove
(
√wp
 + 
bd
.
ãxtcﬁ
 + bd.
°¨t•a˚s
 + bd.
íd•a˚s
,

753 
ﬁdp
, 
	`STRLEN
(oldp) + 1);

755 
	`ml_ª∂a˚
(
curwö
->
w_curs‹
.
 um
, 
√wp
, 
FALSE
);

757 
curwö
->
w_curs‹
.
 um
 =Ünum;

758 
CHANGED
;

759 
	`upd©eS¸ìn
(
VALID_TO_CURSCHAR
);

760 
›_löe_cou¡
 = 0;

762 i‡(
›_mŸi⁄_ty≥
 =
MLINE
)

764 i‡(
›_ty≥
 =
CHANGE
)

771 i‡(
›_löe_cou¡
 > 1)

773 
 um
 = 
curwö
->
w_curs‹
.lnum;

774 ++
curwö
->
w_curs‹
.
 um
;

775 
	`dñlöes
(()(
›_löe_cou¡
 - 1), 
TRUE
, TRUE);

776 
curwö
->
w_curs‹
.
 um
 =Ünum;

778 i‡(
	`u_ßve_curs‹
(Ë=
FAIL
)

780 i‡(
curbuf
->
b_p_ai
)

782 
	`begölöe
(
TRUE
);

783 
did_ai
 = 
TRUE
;

785 
	`åunˇã_löe
(
FALSE
);

786 i‡(
curwö
->
w_curs‹
.
cﬁ
 > 0)

787 --
curwö
->
w_curs‹
.
cﬁ
;

791 
	`dñlöes
(
›_löe_cou¡
, 
TRUE
, TRUE);

793 
	`u_˛óæöe
();

794 
	`begölöe
(
TRUE
);

796 i‡(
›_löe_cou¡
 == 1)

798 i‡(
	`u_ßve_curs‹
(Ë=
FAIL
)

801 i‡(
	`vim_°rchr
(
p_˝o
, 
CPO_DOLLAR
Ë!
NULL
 && 
›_ty≥
 =
CHANGE
 &&

802 
curbuf
->
b_›_íd
.
 um
 =
curwö
->
w_curs‹
. um && !
›_is_VIsuÆ
)

803 
	`di•œy_dﬁœr
(
curbuf
->
b_›_íd
.
cﬁ
 - !
›_ö˛usive
);

804 
n
 = 
curbuf
->
b_›_íd
.
cﬁ
 - curbuf->
b_›_°¨t
.cﬁ + 1 - !
›_ö˛usive
;

805 
n
-- > 0)

806 i‡(
	`dñch¨
(
TRUE
Ë=
FAIL
)

811 i‡(
	`u_ßve_curs‹
(Ë=
FAIL
)

813 
	`åunˇã_löe
(
TRUE
);

815 
curbuf
->
b_›_°¨t
 = 
curwö
->
w_curs‹
;

816 ++
curwö
->
w_curs‹
.
 um
;

818 
	`dñlöes
(()(
›_löe_cou¡
 - 2), 
TRUE
, TRUE);

820 i‡(
	`u_ßve_curs‹
(Ë=
FAIL
)

822 
n
 = 
curbuf
->
b_›_íd
.
cﬁ
 - !
›_ö˛usive
;

823 
curwö
->
w_curs‹
.
cﬁ
 = 0;

824 
n
-- >= 0)

825 i‡(
	`dñch¨
(
TRUE
Ë=
FAIL
)

827 
curwö
->
w_curs‹
 = 
curbuf
->
b_›_°¨t
;

828 ()
	`do_joö
(
FALSE
, 
	`curs_rows
(Ë=
OK
);

831 i‡((
›_mŸi⁄_ty≥
 =
MCHAR
 && 
›_löe_cou¡
 =1Ë|| 
›_ty≥
 =
CHANGE
)

833 i‡(
dﬁœr_vcﬁ
)

834 
mu°_ªdøw
 = 0;

835 
	`cursupd©e
();

836 i‡(!
dﬁœr_vcﬁ
)

837 
	`upd©ñöe
();

839 i‡(!
globÆ_busy
)

840 
	`upd©eS¸ìn
(
CURSUPD
);

842 
	`msgm‹e
(
curbuf
->
b_ml
.
ml_löe_cou¡
 - 
ﬁd_lcou¡
);

845 i‡(
›_block_mode
)

846 
curbuf
->
b_›_íd
.
cﬁ
 = curbuf->
b_›_°¨t
.col;

848 
curbuf
->
b_›_íd
 = curbuf->
b_›_°¨t
;

849 
	}
}

855 
	$do_tûde
()

857 
FPOS
 
pos
;

858 
block_def
 
bd
;

860 i‡(
	`u_ßve
((
löír_t
)(
curbuf
->
b_›_°¨t
.
 um
 - 1),

861 (
löír_t
)(
curbuf
->
b_›_íd
.
 um
 + 1)Ë=
FAIL
)

864 
pos
 = 
curbuf
->
b_›_°¨t
;

865 i‡(
›_block_mode
)

867 ; 
pos
.
 um
 <
curbuf
->
b_›_íd
.lnum; ++pos.lnum)

869 
	`block_¥ï
(&
bd
, 
pos
.
 um
, 
FALSE
);

870 
pos
.
cﬁ
 = 
bd
.
ãxtcﬁ
;

871 --
bd
.
ãxéí
 >= 0)

873 
	`sw≠ch¨
(&
pos
);

874 i‡(
	`öc
(&
pos
) == -1)

881 i‡(
›_mŸi⁄_ty≥
 =
MLINE
)

883 
pos
.
cﬁ
 = 0;

884 
curbuf
->
b_›_íd
.
cﬁ
 = 
	`STRLEN
(
	`ml_gë
(curbuf->b_›_íd.
 um
));

885 i‡(
curbuf
->
b_›_íd
.
cﬁ
)

886 --
curbuf
->
b_›_íd
.
cﬁ
;

888 i‡(!
›_ö˛usive
)

889 
	`dec
(&(
curbuf
->
b_›_íd
));

891 
	`…‹eq
(
pos
, 
curbuf
->
b_›_íd
))

893 
	`sw≠ch¨
(&
pos
);

894 i‡(
	`öc
(&
pos
) == -1)

899 i‡(
›_mŸi⁄_ty≥
 =
MCHAR
 && 
›_löe_cou¡
 =1 && !
›_block_mode
)

901 
	`cursupd©e
();

902 
	`upd©ñöe
();

905 
	`upd©eS¸ìn
(
CURSUPD
);

907 i‡(
›_löe_cou¡
 > 
p_ªp‹t
)

908 
	`smsg
((
ch¨_u
 *)"%ldÜine%s ~ed",

909 
›_löe_cou¡
, 
	`∂uøl
(op_line_count));

910 
	}
}

918 
	$sw≠ch¨
(
pos
)

919 
FPOS
 *
pos
;

921 
c
;

923 
c
 = 
	`gch¨
(
pos
);

924 i‡(
	`i¶owî
(
c
Ë&& 
›_ty≥
 !
LOWER
)

926 
	`pch¨
(*
pos
, 
	`touµî
(
c
));

927 
CHANGED
;

929 i‡(
	`isuµî
(
c
Ë&& 
›_ty≥
 !
UPPER
)

931 
	`pch¨
(*
pos
, 
	`tﬁowî
(
c
));

932 
CHANGED
;

934 
	}
}

942 
	$do_ch™ge
()

944 
cﬁƒ_t
 
l
;

946 
l
 = 
curbuf
->
b_›_°¨t
.
cﬁ
;

947 i‡(
›_mŸi⁄_ty≥
 =
MLINE
)

949 
l
 = 0;

950 
ˇn_si
 = 
TRUE
;

953 i‡(!
›_em±y
)

954 
	`do_dñëe
();

956 i‡((
l
 > 
curwö
->
w_curs‹
.
cﬁ
Ë&& !
	`löìm±y
(curwö->w_curs‹.
 um
))

957 
	`öc_curs‹
();

959 #ifde‡
LISPINDENT


960 i‡(
›_mŸi⁄_ty≥
 =
MLINE
)

962 i‡(
curbuf
->
b_p_li•
 && curbuf->
b_p_ai
)

963 
	`fixthi¶öe
(
gë_li•_ödít
);

964 #ifde‡
CINDENT


965 i‡(
curbuf
->
b_p_cö
)

966 
	`fixthi¶öe
(
gë_c_ödít
);

971  
	`edô
(
NUL
, 
FALSE
, (
löír_t
)1);

972 
	}
}

978 
	$öô_y™k
()

980 
i
;

982 
i
 = 0; i < 
NUM_REGISTERS
; ++i)

983 
y_buf
[
i
].
y_¨øy
 = 
NULL
;

984 
	}
}

991 
	$‰ì_y™k
(
n
)

992 
n
;

994 i‡(
y_cuºít
->
y_¨øy
 !
NULL
)

996 
i
;

998 
i
 = 
n
; --i >= 0; )

1000 i‡((
i
 & 1023) == 1023)

1006 ++
no_waô_ªtu∫
;

1007 
	`smsg
((
ch¨_u
 *)"‰ìög %ldÜöes", 
i
 + 1);

1008 --
no_waô_ªtu∫
;

1009 
msg_didout
 = 
FALSE
;

1010 
msg_cﬁ
 = 0;

1012 
	`vim_‰ì
(
y_cuºít
->
y_¨øy
[
i
]);

1014 
	`vim_‰ì
(
y_cuºít
->
y_¨øy
);

1015 
y_cuºít
->
y_¨øy
 = 
NULL
;

1016 i‡(
n
 >= 1000)

1017 
	`MSG
("");

1019 
	}
}

1022 
	$‰ì_y™k_Æl
()

1024 
	`‰ì_y™k
(
y_cuºít
->
y_size
);

1025 
	}
}

1036 
	$do_y™k
(
dñëög
, 
mess
)

1037 
dñëög
;

1038 
mess
;

1040 
i
;

1041 
y™kbuf
 *
cuº
;

1042 
y™kbuf
 
√wbuf
;

1043 
ch¨_u
 **
√w_±r
;

1044 
löír_t
 
 um
;

1045 
j
;

1046 
y™kty≥
 = 
›_mŸi⁄_ty≥
;

1047 
y™klöes
 = 
›_löe_cou¡
;

1048 
löír_t
 
y™kíd um
 = 
curbuf
->
b_›_íd
.
 um
;

1050 
ch¨_u
 *
≤ew
;

1051 
block_def
 
bd
;

1054 i‡(
y™kbuf„r
 !0 && !
	`is_y™k_buf„r
(y™kbuf„r, 
TRUE
))

1056 
	`bìp_Êush
();

1057  
FAIL
;

1059 i‡(!
dñëög
)

1060 
	`gë_y™k_buf„r
(
TRUE
);

1062 
cuº
 = 
y_cuºít
;

1064 i‡(
y™k≠≥nd
 && 
y_cuºít
->
y_¨øy
 !
NULL
)

1065 
y_cuºít
 = &
√wbuf
;

1067 
	`‰ì_y™k_Æl
();

1073 i‡(
›_mŸi⁄_ty≥
 =
MCHAR
 && 
curbuf
->
b_›_°¨t
.
cﬁ
 == 0 &&

1074 !
›_ö˛usive
 && 
curbuf
->
b_›_íd
.
cﬁ
 =0 && 
y™klöes
 > 1)

1076 
y™kty≥
 = 
MLINE
;

1077 --
y™kíd um
;

1078 --
y™klöes
;

1081 
y_cuºít
->
y_size
 = 
y™klöes
;

1082 
y_cuºít
->
y_ty≥
 = 
y™kty≥
;

1083 
y_cuºít
->
y_¨øy
 = (
ch¨_u
 **)
	`œŒoc
((
l⁄g_u
)((char_u *) *

1084 
y™klöes
), 
TRUE
);

1086 i‡(
y_cuºít
->
y_¨øy
 =
NULL
)

1088 
y_cuºít
 = 
cuº
;

1089  
FAIL
;

1092 
i
 = 0;

1093 
 um
 = 
curbuf
->
b_›_°¨t
.lnum;

1098 i‡(
›_block_mode
)

1100 
y_cuºít
->
y_ty≥
 = 
MBLOCK
;

1101  ; 
 um
 <
y™kíd um
; ++lnum)

1103 
	`block_¥ï
(&
bd
, 
 um
, 
FALSE
);

1105 i‡((
≤ew
 = 
	`Æloc
(
bd
.
°¨t•a˚s
 + bd.
íd•a˚s
 +

1106 
bd
.
ãxéí
 + 1)Ë=
NULL
)

1107 
Áû
;

1108 
y_cuºít
->
y_¨øy
[
i
++] = 
≤ew
;

1110 
	`c›y_•a˚s
(
≤ew
, (
size_t
)
bd
.
°¨t•a˚s
);

1111 
≤ew
 +
bd
.
°¨t•a˚s
;

1113 
	`vim_memmove
(
≤ew
, 
bd
.
ãxt°¨t
, (
size_t
)bd.
ãxéí
);

1114 
≤ew
 +
bd
.
ãxéí
;

1116 
	`c›y_•a˚s
(
≤ew
, (
size_t
)
bd
.
íd•a˚s
);

1117 
≤ew
 +
bd
.
íd•a˚s
;

1119 *
≤ew
 = 
NUL
;

1131 i‡(
y™kty≥
 !
MLINE
)

1133 i‡(
y™klöes
 == 1)

1135 
j
 = 
curbuf
->
b_›_íd
.
cﬁ
 - curbuf->
b_›_°¨t
.col +

1136 1 - !
›_ö˛usive
;

1137 i‡((
y_cuºít
->
y_¨øy
[0] = 
	`°∫ßve
(
	`ml_gë
(
 um
) +

1138 
curbuf
->
b_›_°¨t
.
cﬁ
, ()
j
)Ë=
NULL
)

1140 
Áû
:

1141 
	`‰ì_y™k
(
i
);

1142 
y_cuºít
 = 
cuº
;

1143  
FAIL
;

1145 
suc˚ss
;

1147 i‡((
y_cuºít
->
y_¨øy
[0] = 
	`°rßve
(
	`ml_gë
(
 um
++) +

1148 
curbuf
->
b_›_°¨t
.
cﬁ
)Ë=
NULL
)

1149 
Áû
;

1150 ++
i
;

1153 
y™kty≥
 =
MLINE
 ? (
 um
 <
y™kíd um
) : (lnum < yankendlnum))

1155 i‡((
y_cuºít
->
y_¨øy
[
i
] = 
	`°rßve
(
	`ml_gë
(
 um
++))Ë=
NULL
)

1156 
Áû
;

1157 ++
i
;

1159 i‡(
y™kty≥
 !
MLINE
)

1161 i‡((
y_cuºít
->
y_¨øy
[
i
] = 
	`°∫ßve
(
	`ml_gë
(
y™kíd um
),

1162 
curbuf
->
b_›_íd
.
cﬁ
 + 1 - !
›_ö˛usive
)Ë=
NULL
)

1163 
Áû
;

1167 
suc˚ss
:

1168 i‡(
cuº
 !
y_cuºít
)

1170 
√w_±r
 = (
ch¨_u
 **)
	`œŒoc
((
l⁄g_u
)((char_u *) *

1171 (
cuº
->
y_size
 + 
y_cuºít
->y_size)), 
TRUE
);

1172 i‡(
√w_±r
 =
NULL
)

1173 
Áû
;

1174 
j
 = 0; j < 
cuº
->
y_size
; ++j)

1175 
√w_±r
[
j
] = 
cuº
->
y_¨øy
[j];

1176 
	`vim_‰ì
(
cuº
->
y_¨øy
);

1177 
cuº
->
y_¨øy
 = 
√w_±r
;

1179 i‡(
y™kty≥
 =
MLINE
)

1180 
cuº
->
y_ty≥
 = 
MLINE
;

1184 i‡(
cuº
->
y_ty≥
 =
MCHAR
)

1186 
≤ew
 = 
	`œŒoc
((
l⁄g_u
)(
	`STRLEN
(
cuº
->
y_¨øy
[cuº->
y_size
 - 1])

1187 + 
	`STRLEN
(
y_cuºít
->
y_¨øy
[0]Ë+ 1), 
TRUE
);

1188 i‡(
≤ew
 =
NULL
)

1190 
i
 = 
y_cuºít
->
y_size
 - 1;

1191 
Áû
;

1193 
	`STRCPY
(
≤ew
, 
cuº
->
y_¨øy
[--
j
]);

1194 
	`STRCAT
(
≤ew
, 
y_cuºít
->
y_¨øy
[0]);

1195 
	`vim_‰ì
(
cuº
->
y_¨øy
[
j
]);

1196 
	`vim_‰ì
(
y_cuºít
->
y_¨øy
[0]);

1197 
cuº
->
y_¨øy
[
j
++] = 
≤ew
;

1198 
i
 = 1;

1201 
i
 = 0;

1202 
i
 < 
y_cuºít
->
y_size
)

1203 
cuº
->
y_¨øy
[
j
++] = 
y_cuºít
->y_¨øy[
i
++];

1204 
cuº
->
y_size
 = 
j
;

1205 
	`vim_‰ì
(
y_cuºít
->
y_¨øy
);

1206 
y_cuºít
 = 
cuº
;

1208 i‡(
mess
)

1210 i‡(
y™kty≥
 =
MCHAR
 && !
›_block_mode
)

1211 --
y™klöes
;

1212 i‡(
y™klöes
 > 
p_ªp‹t
)

1214 
	`cursupd©e
();

1215 
	`smsg
((
ch¨_u
 *)"%ldÜöe%†y™ked", 
y™klöes
, 
	`∂uøl
(yanklines));

1219  
OK
;

1220 
	}
}

1227 
	$do_put
(
dú
, 
cou¡
, 
fix_ödít
)

1228 
dú
;

1229 
cou¡
;

1230 
fix_ödít
;

1232 
ch¨_u
 *
±r
;

1233 
ch¨_u
 *
√wp
, *
ﬁdp
;

1234 
y™kÀn
;

1235 
ﬁdÀn
;

1236 
tŸÀn
 = 0;

1237 
löír_t
 
 um
;

1238 
cﬁƒ_t
 
cﬁ
;

1239 
i
;

1240 
y_ty≥
;

1241 
y_size
;

1242 
ch¨_u
 **
y_¨øy
;

1243 
ƒ_löes
 = 0;

1244 
cﬁƒ_t
 
vcﬁ
;

1245 
dñcou¡
;

1246 
ö¸
 = 0;

1247 
j
;

1248 
FPOS
 
√w_curs‹
;

1249 
ch¨_u
 
ãmp
[2];

1250 
ödít
;

1251 
‹ig_ödít
 = 0;

1252 
ödít_diff
 = 0;

1253 
fú°_ödít
 = 
TRUE
;

1254 
FPOS
 
ﬁd_pos
;

1255 
block_def
 
bd
;

1256 
ch¨_u
 *
ö£π_°rög
 = 
NULL
;

1258 #ifde‡
USE_GUI


1259 i‡(
y™kbuf„r
 == '*')

1260 
	`gui_gë_£À˘i⁄
();

1263 i‡(
fix_ödít
)

1264 
‹ig_ödít
 = 
	`gë_ödít
();

1266 
curbuf
->
b_›_°¨t
 = 
curwö
->
w_curs‹
;

1267 i‡(
dú
 =
FORWARD
)

1268 
curbuf
->
b_›_°¨t
.
cﬁ
++;

1269 
curbuf
->
b_›_íd
 = 
curwö
->
w_curs‹
;

1275 i‡(
y™kbuf„r
 == '.')

1277 ()
	`°uff_ö£πed
((
dú
 =
FORWARD
 ? (
cou¡
 == -1 ? 'o' : 'a') :

1278 (
cou¡
 =-1 ? 'O' : 'i')), cou¡, 
FALSE
);

1286 i‡(
y™kbuf„r
 == '%')

1288 i‡(
	`check_‚ame
(Ë=
FAIL
)

1290 
ö£π_°rög
 = 
curbuf
->
b_xfûíame
;

1292 i‡(
y™kbuf„r
 == ':')

1294 i‡(
œ°_cmdlöe
 =
NULL
)

1296 
	`EMSG
(
e_nﬁa°cmd
);

1299 
ö£π_°rög
 = 
œ°_cmdlöe
;

1302 i‡(
ö£π_°rög
 !
NULL
)

1304 
y_ty≥
 = 
MCHAR
;

1305 
y_size
 = 1;

1306 
y_¨øy
 = &
ö£π_°rög
;

1310 
	`gë_y™k_buf„r
(
FALSE
);

1312 
y_ty≥
 = 
y_cuºít
->y_type;

1313 
y_size
 = 
y_cuºít
->y_size;

1314 
y_¨øy
 = 
y_cuºít
->y_array;

1317 i‡(
cou¡
 == -1)

1319 
y_ty≥
 = 
MLINE
;

1320 
cou¡
 = 1;

1323 i‡(
y_size
 =0 || 
y_¨øy
 =
NULL
)

1325 
ãmp
[0] = 
y™kbuf„r
;

1326 
ãmp
[1] = 
NUL
;

1327 
	`EMSG2
("NŸhög i¿ªgi°î %s", 
ãmp
);

1331 i‡(
y_ty≥
 =
MBLOCK
)

1333 
 um
 = 
curwö
->
w_curs‹
. um + 
y_size
 + 1;

1334 i‡(
 um
 > 
curbuf
->
b_ml
.
ml_löe_cou¡
)

1335 
 um
 = 
curbuf
->
b_ml
.
ml_löe_cou¡
 + 1;

1336 i‡(
	`u_ßve
(
curwö
->
w_curs‹
.
 um
 - 1,ÜnumË=
FAIL
)

1339 i‡(
	`u_ßve_curs‹
(Ë=
FAIL
)

1342 
y™kÀn
 = 
	`STRLEN
(
y_¨øy
[0]);

1343 
CHANGED
;

1345 
 um
 = 
curwö
->
w_curs‹
.lnum;

1346 
cﬁ
 = 
curwö
->
w_curs‹
.col;

1351 i‡(
y_ty≥
 =
MBLOCK
)

1353 i‡(
dú
 =
FORWARD
 && 
	`gch¨_curs‹
(Ë!
NUL
)

1355 
	`gëvcﬁ
(
curwö
, &curwö->
w_curs‹
, 
NULL
, NULL, &
cﬁ
);

1356 ++
cﬁ
;

1357 ++
curwö
->
w_curs‹
.
cﬁ
;

1360 
	`gëvcﬁ
(
curwö
, &curwö->
w_curs‹
, &
cﬁ
, 
NULL
, NULL);

1361 
i
 = 0; i < 
y_size
; ++i)

1363 
bd
.
°¨t•a˚s
 = 0;

1364 
bd
.
íd•a˚s
 = 0;

1365 
bd
.
ãxtcﬁ
 = 0;

1366 
vcﬁ
 = 0;

1367 
dñcou¡
 = 0;

1370 i‡(
curwö
->
w_curs‹
.
 um
 > 
curbuf
->
b_ml
.
ml_löe_cou¡
)

1372 
	`ml_≠≥nd
(
curbuf
->
b_ml
.
ml_löe_cou¡
, (
ch¨_u
 *)"",

1373 (
cﬁƒ_t
)1, 
FALSE
);

1374 ++
ƒ_löes
;

1376 
ﬁdp
 = 
	`ml_gë_cuæöe
();

1377 
ﬁdÀn
 = 
	`STRLEN
(
ﬁdp
);

1378 
±r
 = 
ﬁdp
; 
vcﬁ
 < 
cﬁ
 && *ptr; ++ptr)

1381 
ö¸
 = 
	`lbr_ch¨èbsize
(
±r
, (
cﬁƒ_t
)
vcﬁ
);

1382 
vcﬁ
 +
ö¸
;

1383 ++
bd
.
ãxtcﬁ
;

1385 i‡(
vcﬁ
 < 
cﬁ
)

1387 
bd
.
°¨t•a˚s
 = 
cﬁ
 - 
vcﬁ
;

1389 i‡(
vcﬁ
 > 
cﬁ
)

1391 
bd
.
íd•a˚s
 = 
vcﬁ
 - 
cﬁ
;

1392 
bd
.
°¨t•a˚s
 = 
ö¸
 - bd.
íd•a˚s
;

1393 --
bd
.
ãxtcﬁ
;

1394 
dñcou¡
 = 1;

1396 
y™kÀn
 = 
	`STRLEN
(
y_¨øy
[
i
]);

1397 
tŸÀn
 = 
cou¡
 * 
y™kÀn
 + 
bd
.
°¨t•a˚s
 + bd.
íd•a˚s
;

1398 
√wp
 = 
	`Æloc_check
(()
tŸÀn
 + 
ﬁdÀn
 + 1);

1399 i‡(
√wp
 =
NULL
)

1402 
±r
 = 
√wp
;

1403 
	`vim_memmove
(
±r
, 
ﬁdp
, (
size_t
)
bd
.
ãxtcﬁ
);

1404 
±r
 +
bd
.
ãxtcﬁ
;

1406 
	`c›y_•a˚s
(
±r
, (
size_t
)
bd
.
°¨t•a˚s
);

1407 
±r
 +
bd
.
°¨t•a˚s
;

1409 
j
 = 0; j < 
cou¡
; ++j)

1411 
	`vim_memmove
(
±r
, 
y_¨øy
[
i
], (
size_t
)
y™kÀn
);

1412 
±r
 +
y™kÀn
;

1415 
	`c›y_•a˚s
(
±r
, (
size_t
)
bd
.
íd•a˚s
);

1416 
±r
 +
bd
.
íd•a˚s
;

1418 
	`vim_memmove
(
±r
, 
ﬁdp
 + 
bd
.
ãxtcﬁ
 + 
dñcou¡
,

1419 (
size_t
)(
ﬁdÀn
 - 
bd
.
ãxtcﬁ
 - 
dñcou¡
 + 1));

1420 
	`ml_ª∂a˚
(
curwö
->
w_curs‹
.
 um
, 
√wp
, 
FALSE
);

1422 ++
curwö
->
w_curs‹
.
 um
;

1423 i‡(
i
 == 0)

1424 
curwö
->
w_curs‹
.
cﬁ
 +
bd
.
°¨t•a˚s
;

1427 
curbuf
->
b_›_íd
.
 um
 = 
curwö
->
w_curs‹
.lnum - 1;

1428 
curbuf
->
b_›_íd
.
cﬁ
 = 
bd
.
ãxtcﬁ
 + 
tŸÀn
 - 1;

1429 
curwö
->
w_curs‹
.
 um
 =Ünum;

1430 
	`cursupd©e
();

1431 
	`upd©eS¸ìn
(
VALID_TO_CURSCHAR
);

1435 i‡(
y_ty≥
 =
MCHAR
)

1438 i‡(
dú
 =
FORWARD
 && 
	`gch¨_curs‹
(Ë!
NUL
)

1440 ++
cﬁ
;

1441 i‡(
y™kÀn
)

1443 ++
curwö
->
w_curs‹
.
cﬁ
;

1444 ++
curbuf
->
b_›_íd
.
cﬁ
;

1447 
√w_curs‹
 = 
curwö
->
w_curs‹
;

1449 i‡(
dú
 =
BACKWARD
)

1451 --
 um
;

1456 i‡(
y_ty≥
 =
MCHAR
 && 
y_size
 == 1)

1458 
tŸÀn
 = 
cou¡
 * 
y™kÀn
;

1459 i‡(
tŸÀn
)

1461 
ﬁdp
 = 
	`ml_gë
(
 um
);

1462 
√wp
 = 
	`Æloc_check
(()(
	`STRLEN
(
ﬁdp
Ë+ 
tŸÀn
 + 1));

1463 i‡(
√wp
 =
NULL
)

1465 
	`vim_memmove
(
√wp
, 
ﬁdp
, (
size_t
)
cﬁ
);

1466 
±r
 = 
√wp
 + 
cﬁ
;

1467 
i
 = 0; i < 
cou¡
; ++i)

1469 
	`vim_memmove
(
±r
, 
y_¨øy
[0], (
size_t
)
y™kÀn
);

1470 
±r
 +
y™kÀn
;

1472 
	`vim_memmove
(
±r
, 
ﬁdp
 + 
cﬁ
, 
	`STRLEN
(oldp + col) + 1);

1473 
	`ml_ª∂a˚
(
 um
, 
√wp
, 
FALSE
);

1475 
curwö
->
w_curs‹
.
cﬁ
 +(
cﬁƒ_t
)(
tŸÀn
 - 1);

1477 
curbuf
->
b_›_íd
 = 
curwö
->
w_curs‹
;

1478 
	`upd©ñöe
();

1482 --
cou¡
 >= 0)

1484 
i
 = 0;

1485 i‡(
y_ty≥
 =
MCHAR
)

1492 
±r
 = 
	`ml_gë
(
 um
Ë+ 
cﬁ
;

1493 
tŸÀn
 = 
	`STRLEN
(
y_¨øy
[
y_size
 - 1]);

1494 
√wp
 = 
	`Æloc_check
(()(
	`STRLEN
(
±r
Ë+ 
tŸÀn
 + 1));

1495 i‡(
√wp
 =
NULL
)

1496 
îr‹
;

1497 
	`STRCPY
(
√wp
, 
y_¨øy
[
y_size
 - 1]);

1498 
	`STRCAT
(
√wp
, 
±r
);

1500 
	`ml_≠≥nd
(
 um
, 
√wp
, (
cﬁƒ_t
)0, 
FALSE
);

1501 
	`vim_‰ì
(
√wp
);

1503 
ﬁdp
 = 
	`ml_gë
(
 um
);

1504 
√wp
 = 
	`Æloc_check
(()(
cﬁ
 + 
y™kÀn
 + 1));

1505 i‡(
√wp
 =
NULL
)

1506 
îr‹
;

1508 
	`vim_memmove
(
√wp
, 
ﬁdp
, (
size_t
)
cﬁ
);

1510 
	`vim_memmove
(
√wp
 + 
cﬁ
, 
y_¨øy
[0], (
size_t
)(
y™kÀn
 + 1));

1511 
	`ml_ª∂a˚
(
 um
, 
√wp
, 
FALSE
);

1513 
curwö
->
w_curs‹
.
 um
 =Ünum;

1514 
i
 = 1;

1517 
i
 < 
y_size
)

1519 i‡((
y_ty≥
 !
MCHAR
 || 
i
 < 
y_size
 - 1) &&

1520 
	`ml_≠≥nd
(
 um
, 
y_¨øy
[
i
], (
cﬁƒ_t
)0, 
FALSE
Ë=
FAIL
)

1521 
îr‹
;

1522 
 um
++;

1523 
i
++;

1524 i‡(
fix_ödít
)

1526 
ﬁd_pos
 = 
curwö
->
w_curs‹
;

1527 
curwö
->
w_curs‹
.
 um
 =Ünum;

1528 
±r
 = 
	`ml_gë
(
 um
);

1529 #i‡
	`deföed
(
SMARTINDENT
Ë|| deföed(
CINDENT
)

1530 i‡(*
±r
 == '#'

1531 #ifde‡
SMARTINDENT


1532 && 
curbuf
->
b_p_si


1534 #ifde‡
CINDENT


1535 && 
curbuf
->
b_p_cö
 && 
	`ö_cökeys
('#', ' ', 
TRUE
)

1539 
ödít
 = 0;

1542 i‡(*
±r
 =
NUL
)

1543 
ödít
 = 0;

1544 i‡(
fú°_ödít
)

1546 
ödít_diff
 = 
‹ig_ödít
 - 
	`gë_ödít
();

1547 
ödít
 = 
‹ig_ödít
;

1548 
fú°_ödít
 = 
FALSE
;

1550 i‡((
ödít
 = 
	`gë_ödít
(Ë+ 
ödít_diff
) < 0)

1551 
ödít
 = 0;

1552 
	`£t_ödít
(
ödít
, 
TRUE
);

1553 
curwö
->
w_curs‹
 = 
ﬁd_pos
;

1555 ++
ƒ_löes
;

1559 
curbuf
->
b_›_íd
.
 um
 =Ünum;

1560 i‡(
y_ty≥
 =
MLINE
)

1562 
curwö
->
w_curs‹
.
cﬁ
 = 0;

1563 
curbuf
->
b_›_íd
.
cﬁ
 = 0;

1564 i‡(
dú
 =
FORWARD
)

1566 
	`upd©eS¸ìn
(
NOT_VALID
);

1567 ++
curwö
->
w_curs‹
.
 um
;

1570 
	`begölöe
(
TRUE
);

1574 
curwö
->
w_curs‹
 = 
√w_curs‹
;

1576 
cﬁ
 = 
	`STRLEN
(
y_¨øy
[
y_size
 - 1]);

1577 i‡(
cﬁ
 > 1)

1578 
curbuf
->
b_›_íd
.
cﬁ
 = col - 1;

1580 
curbuf
->
b_›_íd
.
cﬁ
 = 0;

1583 
îr‹
:

1584 i‡(
y_ty≥
 =
MLINE
)

1586 
curbuf
->
b_›_°¨t
.
cﬁ
 = 0;

1587 i‡(
dú
 =
FORWARD
)

1588 
curbuf
->
b_›_°¨t
.
 um
++;

1590 
	`m¨k_adju°
(
curbuf
->
b_›_°¨t
.
 um
 + (
y_ty≥
 =
MCHAR
),

1591 
MAXLNUM
, 
ƒ_löes
, 0L);

1592 
	`upd©eS¸ìn
(
CURSUPD
);

1596 
	`msgm‹e
(
ƒ_löes
);

1597 
curwö
->
w_£t_cursw™t
 = 
TRUE
;

1598 
	}
}

1602 
	$gë_ªgi°î_«me
(
num
)

1603 
num
;

1605 i‡(
num
 == -1)

1607 i‡(
num
 < 10)

1608  
num
 + '0';

1609 i‡(
num
 =
DELETION_REGISTER
)

1611 #ifde‡
USE_GUI


1612 i‡(
num
 =
GUI_SELECTION_REGISTER
)

1616  
num
 + 'a' - 10;

1617 
	}
}

1623 
	$do_dis
(
¨g
)

1624 
ch¨_u
 *
¨g
;

1626 
i
, 
n
;

1627 
j
;

1628 
ch¨_u
 *
p
;

1629 
y™kbuf
 *
yb
;

1630 
ch¨_u
 
«me
;

1632 i‡(
¨g
 !
NULL
 && *¨g =
NUL
)

1633 
¨g
 = 
NULL
;

1635 
	`£t_highlight
('t');

1636 
	`°¨t_highlight
();

1637 
	`MSG_OUTSTR
("\n--- Registers ---");

1638 
	`°›_highlight
();

1639 
i
 = -1; i < 
NUM_REGISTERS
; ++i)

1641 i‡(
i
 == -1)

1643 i‡(
y_¥evious
 !
NULL
)

1644 
yb
 = 
y_¥evious
;

1646 
yb
 = &(
y_buf
[0]);

1649 
yb
 = &(
y_buf
[
i
]);

1650 
«me
 = 
	`gë_ªgi°î_«me
(
i
);

1651 i‡(
yb
->
y_¨øy
 !
NULL
 && (
¨g
 == NULL ||

1652 
	`vim_°rchr
(
¨g
, 
«me
Ë!
NULL
))

1654 
	`msg_outch¨
('\n');

1655 
	`msg_outch¨
('"');

1656 
	`msg_outch¨
(
«me
);

1657 
	`MSG_OUTSTR
(" ");

1659 
n
 = ()
Cﬁumns
 - 6;

1660 
j
 = 0; j < 
yb
->
y_size
 && 
n
 > 1; ++j)

1662 i‡(
j
)

1664 
	`MSG_OUTSTR
("^J");

1665 
n
 -= 2;

1667 
p
 = 
yb
->
y_¨øy
[
j
]; *∞&& (
n
 -
	`ch¨size
(*p)) >= 0; ++p)

1668 
	`msg_ouâøns_Àn
(
p
, 1);

1670 
	`Êushbuf
();

1677 i‡((
p
 = 
	`gë_œ°_ö£π
()Ë!
NULL
 &&

1678 (
¨g
 =
NULL
 || 
	`vim_°rchr
(arg, '.') != NULL))

1680 
	`MSG_OUTSTR
("\n\". ");

1681 
	`dis_msg
(
p
, 
TRUE
);

1687 i‡(
œ°_cmdlöe
 !
NULL
 && (
¨g
 =NULL || 
	`vim_°rchr
(arg, ':') != NULL))

1689 
	`MSG_OUTSTR
("\n\": ");

1690 
	`dis_msg
(
œ°_cmdlöe
, 
FALSE
);

1696 i‡(
curbuf
->
b_xfûíame
 !
NULL
 &&

1697 (
¨g
 =
NULL
 || 
	`vim_°rchr
(arg, '%') != NULL))

1699 
	`MSG_OUTSTR
("\n\"% ");

1700 
	`dis_msg
(
curbuf
->
b_xfûíame
, 
FALSE
);

1702 
	}
}

1709 
	$dis_msg
(
p
, 
skù_esc
)

1710 
ch¨_u
 *
p
;

1711 
skù_esc
;

1713 
n
;

1715 
n
 = ()
Cﬁumns
 - 6;

1716 *
p
 && !(*∞=
ESC
 && 
skù_esc
 && *’ + 1Ë=
NUL
) &&

1717 (
n
 -
	`ch¨size
(*
p
)) >= 0)

1718 
	`msg_ouâøns_Àn
(
p
++, 1);

1719 
	}
}

1725 
	$do_do_joö
(
cou¡
, 
ö£π_•a˚
, 
ªdøw
)

1726 
cou¡
;

1727 
ö£π_•a˚
;

1728 
ªdøw
;

1730 i‡(
	`u_ßve
((
löír_t
)(
curwö
->
w_curs‹
.
 um
 - 1),

1731 (
löír_t
)(
curwö
->
w_curs‹
.
 um
 + 
cou¡
)Ë=
FAIL
)

1734 i‡(
cou¡
 > 10)

1735 
ªdøw
 = 
FALSE
;

1736 --
cou¡
 > 0)

1738 
	`löe_bªakcheck
();

1739 i‡(
gŸ_öt
 || 
	`do_joö
(
ö£π_•a˚
, 
ªdøw
Ë=
FAIL
)

1741 
	`bìp_Êush
();

1745 i‡(
ªdøw
)

1746 
	`ªdøw_œãr
(
VALID_TO_CURSCHAR
);

1748 
	`ªdøw_œãr
(
NOT_VALID
);

1754 
	`cursupd©e
();

1755 
	}
}

1763 
	$do_joö
(
ö£π_•a˚
, 
ªdøw
)

1764 
ö£π_•a˚
;

1765 
ªdøw
;

1767 
ch¨_u
 *
cuº
;

1768 
ch¨_u
 *
√xt
;

1769 
ch¨_u
 *
√wp
;

1770 
ídcuº1
, 
ídcuº2
;

1771 
cuºsize
;

1772 
√xtsize
;

1773 
•a˚s
;

1774 
rows_to_dñ
 = 0;

1775 
löír_t
 
t
;

1777 i‡(
curwö
->
w_curs‹
.
 um
 =
curbuf
->
b_ml
.
ml_löe_cou¡
)

1778  
FAIL
;

1780 i‡(
ªdøw
)

1781 
rows_to_dñ
 = 
	`∂öes_m
(
curwö
->
w_curs‹
.
 um
,

1782 
curwö
->
w_curs‹
.
 um
 + 1);

1784 
cuº
 = 
	`ml_gë_cuæöe
();

1785 
cuºsize
 = 
	`STRLEN
(
cuº
);

1786 
ídcuº1
 = 
ídcuº2
 = 
NUL
;

1787 i‡(
cuºsize
 > 0)

1789 
ídcuº1
 = *(
cuº
 + 
cuºsize
 - 1);

1790 i‡(
cuºsize
 > 1)

1791 
ídcuº2
 = *(
cuº
 + 
cuºsize
 - 2);

1794 
√xt
 = 
	`ml_gë
((
löír_t
)(
curwö
->
w_curs‹
.
 um
 + 1));

1795 
•a˚s
 = 0;

1796 i‡(
ö£π_•a˚
)

1798 
√xt
 = 
	`skùwhôe
(next);

1799 
•a˚s
 = 1;

1800 i‡(*
√xt
 =')' || 
cuºsize
 == 0)

1801 
•a˚s
 = 0;

1804 i‡(
ídcuº1
 =' ' ||Éndcuº1 =
TAB
)

1806 
•a˚s
 = 0;

1807 i‡(
cuºsize
 > 1)

1808 
ídcuº1
 = 
ídcuº2
;

1810 i‡(
p_js
 && 
	`vim_°rchr
((
ch¨_u
 *)".!?", 
ídcuº1
Ë!
NULL
)

1811 
•a˚s
 = 2;

1814 
√xtsize
 = 
	`STRLEN
(
√xt
);

1816 
√wp
 = 
	`Æloc_check
(()(
cuºsize
 + 
√xtsize
 + 
•a˚s
 + 1));

1817 i‡(
√wp
 =
NULL
)

1818  
FAIL
;

1825 
	`vim_memmove
(
√wp
 + 
cuºsize
 + 
•a˚s
, 
√xt
, (
size_t
)(
√xtsize
 + 1));

1827 
cuº
 = 
	`ml_gë_cuæöe
();

1828 
	`vim_memmove
(
√wp
, 
cuº
, (
size_t
)
cuºsize
);

1830 
	`c›y_•a˚s
(
√wp
 + 
cuºsize
, (
size_t
)
•a˚s
);

1832 
	`ml_ª∂a˚
(
curwö
->
w_curs‹
.
 um
, 
√wp
, 
FALSE
);

1839 
t
 = 
curwö
->
w_curs‹
.
 um
;

1840 ++
curwö
->
w_curs‹
.
 um
;

1841 
	`dñlöes
(1L, 
FALSE
, FALSE);

1842 
curwö
->
w_curs‹
.
 um
 = 
t
;

1848 i‡(
ªdøw
)

1850 
rows_to_dñ
 -
	`∂öes
(
curwö
->
w_curs‹
.
 um
);

1851 i‡(
rows_to_dñ
 > 0)

1852 
	`wö_dñ_löes
(
curwö
, curwö->
w_˛öe_row
 + curwö->
w_˛öe_height
,

1853 
rows_to_dñ
, 
TRUE
, TRUE);

1859 i‡(
cuºsize
 == 0)

1860 
curwö
->
w_curs‹
.
cﬁ
 = 0;

1863 
curwö
->
w_curs‹
.
cﬁ
 = 
cuºsize
 - 1;

1864 ()
	`⁄îight
();

1866 
CHANGED
;

1868  
OK
;

1869 
	}
}

1877 
	$ßme_Àadî
(
Àadî1_Àn
, 
Àadî1_Êags
, 
Àadî2_Àn
, 
Àadî2_Êags
)

1878 
Àadî1_Àn
;

1879 
ch¨_u
 *
Àadî1_Êags
;

1880 
Àadî2_Àn
;

1881 
ch¨_u
 *
Àadî2_Êags
;

1883 
idx1
 = 0, 
idx2
 = 0;

1884 
ch¨_u
 *
p
;

1885 
ch¨_u
 *
löe1
;

1886 
ch¨_u
 *
löe2
;

1888 i‡(
Àadî1_Àn
 == 0)

1889  (
Àadî2_Àn
 == 0);

1898 i‡(
Àadî1_Êags
 !
NULL
)

1900 
p
 = 
Àadî1_Êags
; *p && *p != ':'; ++p)

1902 i‡(*
p
 =
COM_FIRST
)

1903  (
Àadî2_Àn
 == 0);

1904 i‡(*
p
 =
COM_END
)

1905  
FALSE
;

1906 i‡(*
p
 =
COM_START
)

1908 i‡(*(
	`ml_gë_cuæöe
(Ë+ 
Àadî1_Àn
Ë=
NUL
)

1909  
FALSE
;

1910 i‡(
Àadî2_Êags
 =
NULL
 || 
Àadî2_Àn
 == 0)

1911  
FALSE
;

1912 
p
 = 
Àadî2_Êags
; *p && *p != ':'; ++p)

1913 i‡(*
p
 =
COM_MIDDLE
)

1914  
TRUE
;

1915  
FALSE
;

1924 
löe1
 = 
	`°rßve
(
	`ml_gë_cuæöe
());

1925 i‡(
löe1
 !
NULL
)

1927 
idx1
 = 0; 
	`vim_iswhôe
(
löe1
[idx1]); ++idx1)

1929 
löe2
 = 
	`ml_gë
(
curwö
->
w_curs‹
.
 um
 + 1);

1930 
idx2
 = 0; idx2 < 
Àadî2_Àn
; ++idx2)

1932 i‡(!
	`vim_iswhôe
(
löe2
[
idx2
]))

1934 i‡(
löe1
[
idx1
++] !
löe2
[
idx2
])

1938 
	`vim_iswhôe
(
löe1
[
idx1
]))

1939 ++
idx1
;

1941 
	`vim_‰ì
(
löe1
);

1943  (
idx2
 =
Àadî2_Àn
 && 
idx1
 =
Àadî1_Àn
);

1944 
	}
}

1950 
	$do_f‹m©
()

1952 
ﬁd_löe_cou¡
 = 
curbuf
->
b_ml
.
ml_löe_cou¡
;

1953 
¥ev_is_bœnk
 = 
FALSE
;

1954 
is_íd_block
 = 
TRUE
;

1955 
√xt_is_íd_block
;

1956 
Àadî_Àn
 = 0;

1957 
√xt_Àadî_Àn
;

1958 
ch¨_u
 *
Àadî_Êags
 = 
NULL
;

1959 
ch¨_u
 *
√xt_Àadî_Êags
;

1960 
adv™˚
 = 
TRUE
;

1961 
£c⁄d_ödít
 = -1;

1962 
do_£c⁄d_ödít
;

1963 
fú°_∑r_löe
 = 
TRUE
;

1965 i‡(
	`u_ßve
((
löír_t
)(
curwö
->
w_curs‹
.
 um
 - 1),

1966 (
löír_t
)(
curwö
->
w_curs‹
.
 um
 + 
›_löe_cou¡
)Ë=
FAIL
)

1970 
fo_do_commíts
 = 
	`has_f‹m©_›ti⁄
(
FO_Q_COMS
);

1971 
do_£c⁄d_ödít
 = 
	`has_f‹m©_›ti⁄
(
FO_Q_SECOND
);

1976 i‡(
curwö
->
w_curs‹
.
 um
 > 1)

1977 
is_íd_block
 = 
	`fmt_íd_block
(
curwö
->
w_curs‹
.
 um
 - 1,

1978 &
√xt_Àadî_Àn
, &
√xt_Àadî_Êags
);

1979 
√xt_is_íd_block
 = 
	`fmt_íd_block
(
curwö
->
w_curs‹
.
 um
,

1980 &
√xt_Àadî_Àn
, &
√xt_Àadî_Êags
);

1982 
curwö
->
w_curs‹
.
 um
--;

1983 --
›_löe_cou¡
 >= 0)

1988 i‡(
adv™˚
)

1990 
curwö
->
w_curs‹
.
 um
++;

1991 
¥ev_is_bœnk
 = 
is_íd_block
;

1992 
is_íd_block
 = 
√xt_is_íd_block
;

1993 
Àadî_Àn
 = 
√xt_Àadî_Àn
;

1994 
Àadî_Êags
 = 
√xt_Àadî_Êags
;

2000 i‡(
›_löe_cou¡
 == 0)

2002 
√xt_is_íd_block
 = 
TRUE
;

2003 
√xt_Àadî_Àn
 = 0;

2004 
√xt_Àadî_Êags
 = 
NULL
;

2007 
√xt_is_íd_block
 = 
	`fmt_íd_block
(
curwö
->
w_curs‹
.
 um
 + 1,

2008 &
√xt_Àadî_Àn
, &
√xt_Àadî_Êags
);

2009 
adv™˚
 = 
TRUE
;

2015 i‡(
fú°_∑r_löe
 && 
do_£c⁄d_ödít
 &&

2016 
¥ev_is_bœnk
 && !
is_íd_block
 &&

2017 
curwö
->
w_curs‹
.
 um
 < 
curbuf
->
b_ml
.
ml_löe_cou¡
 &&

2018 
Àadî_Àn
 =0 && 
√xt_Àadî_Àn
 == 0 &&

2019 !
	`löìm±y
(
curwö
->
w_curs‹
.
 um
 + 1))

2020 
£c⁄d_ödít
 = 
	`gë_ödít_ um
(
curwö
->
w_curs‹
.
 um
 + 1);

2025 i‡(
is_íd_block
)

2031 i‡(
√xt_is_íd_block
 || !
	`ßme_Àadî
(
Àadî_Àn
, 
Àadî_Êags
,

2032 
√xt_Àadî_Àn
, 
√xt_Àadî_Êags
))

2036 
	`£t_ödít
(
	`gë_ödít
(), 
TRUE
);

2039 
	`cﬁadv™˚
(
MAXCOL
);

2040 
curwö
->
w_curs‹
.
cﬁ
 && 
	`vim_is•a˚
(
	`gch¨_curs‹
()))

2041 
	`dec_curs‹
();

2042 
	`curs_cﬁumns
(
FALSE
);

2045 
Sèã
 = 
INSERT
;

2046 
	`ö£πch¨
(
NUL
, 
TRUE
, 
£c⁄d_ödít
);

2047 
Sèã
 = 
NORMAL
;

2048 
fú°_∑r_löe
 = 
TRUE
;

2049 
£c⁄d_ödít
 = -1;

2057 
adv™˚
 = 
FALSE
;

2058 
curwö
->
w_curs‹
.
 um
++;

2059 
curwö
->
w_curs‹
.
cﬁ
 = 0;

2060 
√xt_Àadî_Àn
--)

2061 
	`dñch¨
(
FALSE
);

2062 
curwö
->
w_curs‹
.
 um
--;

2063 i‡(
	`do_joö
(
TRUE
, 
FALSE
Ë=
FAIL
)

2065 
	`bìp_Êush
();

2068 
fú°_∑r_löe
 = 
FALSE
;

2071 
fo_do_commíts
 = 
FALSE
;

2077 i‡(
›_íd_adju°ed
 && 
curwö
->
w_curs‹
.
 um
 < 
curbuf
->
b_ml
.
ml_löe_cou¡
)

2078 ++
curwö
->
w_curs‹
.
 um
;

2079 
	`begölöe
(
TRUE
);

2080 
	`upd©eS¸ìn
(
NOT_VALID
);

2081 
	`msgm‹e
(
curbuf
->
b_ml
.
ml_löe_cou¡
 - 
ﬁd_löe_cou¡
);

2082 
	}
}

2093 
	$fmt_íd_block
(
 um
, 
Àadî_Àn
, 
Àadî_Êags
)

2094 
löír_t
 
 um
;

2095 *
Àadî_Àn
;

2096 
ch¨_u
 **
Àadî_Êags
;

2098 
ch¨_u
 *
Êags
 = 
NULL
;

2099 
ch¨_u
 *
±r
;

2101 
±r
 = 
	`ml_gë
(
 um
);

2102 *
Àadî_Àn
 = 
	`gë_Àadî_Àn
(
±r
, 
Àadî_Êags
);

2104 i‡(*
Àadî_Àn
 > 0)

2109 
Êags
 = *
Àadî_Êags
;

2110 *
Êags
 && *Êag†!':' && *Êag†!
COM_END
)

2111 ++
Êags
;

2114  (
±r
[*
Àadî_Àn
] =
NUL
 ||

2115 (*
Àadî_Àn
 > 0 && *
Êags
 =
COM_END
) ||

2116 
	`°¨tPS
(
 um
, 
NUL
, 
FALSE
));

2117 
	}
}

2132 
	$block_¥ï
(
bd
, 
 um
, 
is_dñ
)

2133 
block_def
 *
bd
;

2134 
löír_t
 
 um
;

2135 
is_dñ
;

2137 
cﬁƒ_t
 
vcﬁ
;

2138 
ö¸
 = 0;

2139 
ch¨_u
 *
≥nd
;

2140 
ch¨_u
 *
p°¨t
;

2142 
bd
->
°¨t•a˚s
 = 0;

2143 
bd
->
íd•a˚s
 = 0;

2144 
bd
->
ãxéí
 = 0;

2145 
bd
->
ãxtcﬁ
 = 0;

2146 
vcﬁ
 = 0;

2147 
p°¨t
 = 
	`ml_gë
(
 um
);

2148 
vcﬁ
 < 
›_°¨t_vcﬁ
 && *
p°¨t
)

2151 
ö¸
 = 
	`lbr_ch¨èbsize
(
p°¨t
, (
cﬁƒ_t
)
vcﬁ
);

2152 
vcﬁ
 +
ö¸
;

2153 ++
p°¨t
;

2154 ++
bd
->
ãxtcﬁ
;

2156 i‡(
vcﬁ
 < 
›_°¨t_vcﬁ
)

2158 i‡(!
is_dñ
)

2159 
bd
->
íd•a˚s
 = 
›_íd_vcﬁ
 - 
›_°¨t_vcﬁ
 + 1;

2163 
bd
->
°¨t•a˚s
 = 
vcﬁ
 - 
›_°¨t_vcﬁ
;

2164 i‡(
is_dñ
 && 
vcﬁ
 > 
›_°¨t_vcﬁ
)

2165 
bd
->
°¨t•a˚s
 = 
ö¸
 - bd->startspaces;

2166 
≥nd
 = 
p°¨t
;

2167 i‡(
vcﬁ
 > 
›_íd_vcﬁ
)

2169 
bd
->
°¨t•a˚s
 = 
›_íd_vcﬁ
 - 
›_°¨t_vcﬁ
 + 1;

2170 i‡(
is_dñ
)

2171 
bd
->
°¨t•a˚s
 = 
ö¸
 - bd->startspaces;

2175 
vcﬁ
 <
›_íd_vcﬁ
 && *
≥nd
)

2178 
ö¸
 = 
	`lbr_ch¨èbsize
(
≥nd
, (
cﬁƒ_t
)
vcﬁ
);

2179 
vcﬁ
 +
ö¸
;

2180 ++
≥nd
;

2182 i‡(
vcﬁ
 < 
›_íd_vcﬁ
 && !
is_dñ
)

2184 
bd
->
íd•a˚s
 = 
›_íd_vcﬁ
 - 
vcﬁ
;

2186 i‡(
vcﬁ
 > 
›_íd_vcﬁ
)

2188 
bd
->
íd•a˚s
 = 
vcﬁ
 - 
›_íd_vcﬁ
 - 1;

2189 i‡(!
is_dñ
 && 
≥nd
 !
p°¨t
 && 
bd
->
íd•a˚s
)

2190 --
≥nd
;

2193 i‡(
is_dñ
 && 
bd
->
°¨t•a˚s
)

2195 --
p°¨t
;

2196 --
bd
->
ãxtcﬁ
;

2198 
bd
->
ãxéí
 = ()(
≥nd
 - 
p°¨t
);

2200 
bd
->
ãxt°¨t
 = 
p°¨t
;

2201 
	}
}

2203 
	#NUMBUFLEN
 30

	)

2212 
	$do_addsub
(
comm™d
, 
Pªnum1
)

2213 
comm™d
;

2214 
löír_t
 
Pªnum1
;

2216 
cﬁ
;

2217 
ch¨_u
 
buf
[
NUMBUFLEN
];

2218 
hex
;

2219 
hexuµî
 = 
FALSE
;

2220 
n
;

2221 
ch¨_u
 *
±r
;

2222 
i
;

2223 
c
;

2224 
zîos
 = 0;

2225 
digôs
 = 0;

2227 
±r
 = 
	`ml_gë_cuæöe
();

2228 
cﬁ
 = 
curwö
->
w_curs‹
.col;

2231 
cﬁ
 > 0 && 
	`isxdigô
(
±r
[col]))

2232 --
cﬁ
;

2233 i‡(
cﬁ
 > 0 && (
±r
[col] == 'X' ||Ötr[col] == 'x') &&

2234 
±r
[
cﬁ
 - 1] ='0' && 
	`isxdigô
(ptr[col + 1]))

2235 --
cﬁ
;

2239 
cﬁ
 = 
curwö
->
w_curs‹
.col;

2241 
±r
[
cﬁ
] !
NUL
 && !
	`isdigô
(ptr[col]))

2242 ++
cﬁ
;

2244 
cﬁ
 > 0 && 
	`isdigô
(
±r
[col - 1]))

2245 --
cﬁ
;

2248 i‡(
	`isdigô
(
±r
[
cﬁ
]Ë&& 
	`u_ßve_curs‹
(Ë=
OK
)

2250 
±r
 = 
	`ml_gë_cuæöe
();

2252 
curwö
->
w_£t_cursw™t
 = 
TRUE
;

2254 
hex
 = 0;

2255 i‡(
±r
[
cﬁ
] == '0')

2257 
hex
 = 
	`TO_UPPER
(
±r
[
cﬁ
 + 1]);

2258 i‡(
hex
 !'X' || !
	`isxdigô
(
±r
[
cﬁ
 + 2]))

2260 i‡(
	`isdigô
(
hex
))

2261 
hex
 = '0';

2263 
hex
 = 0;

2267 i‡(!
hex
 && 
cﬁ
 > 0 && 
±r
[col - 1] == '-')

2268 --
cﬁ
;

2270 
±r
 +
cﬁ
;

2276 
i
 = 0; *
±r
 && !(*±∏& 0x80Ë&& i < 
NUMBUFLEN
 - 1; ++i)

2277 
buf
[
i
] = *
±r
++;

2278 
buf
[
i
] = 
NUL
;

2280 i‡(
hex
 == '0')

2281 
	`ssˇnf
((*)
buf
, "%lo", &
n
);

2282 i‡(
hex
)

2283 
	`ssˇnf
((*)
buf
 + 2, "%lx", &
n
);

2285 
n
 = 
	`©ﬁ
((*)
buf
);

2287 i‡(
comm™d
 =
	`Cål
('A'))

2288 
n
 +
Pªnum1
;

2290 
n
 -
Pªnum1
;

2292 i‡(
hex
 == 'X')

2293 
cﬁ
 += 2;

2294 i‡(
hex
 == '0')

2295 
cﬁ
++;

2296 
curwö
->
w_curs‹
.
cﬁ
 = col;

2298 
c
 = 
	`gch¨_curs‹
();

2301 i‡(
digôs
 =0 && 
c
 == '0')

2302 ++
zîos
;

2304 ++
digôs
;

2305 i‡(
	`ißÕha
(
c
))

2307 i‡(
	`isuµî
(
c
))

2308 
hexuµî
 = 
TRUE
;

2310 
hexuµî
 = 
FALSE
;

2312 ()
	`dñch¨
(
FALSE
);

2313 
c
 = 
	`gch¨_curs‹
();

2315 
hex
 ? (hex ='0' ? 
c
 >= '0' && c <= '7' :

2316 
	`isxdigô
(
c
)Ë: 
	`isdigô
(c));

2318 i‡(
hex
 == 0)

2319 
	`•rötf
((*)
buf
, "%ld", 
n
);

2322 i‡(
hex
 == '0')

2323 
	`•rötf
((*)
buf
, "%lo", 
n
);

2324 i‡(
hex
 && 
hexuµî
)

2325 
	`•rötf
((*)
buf
, "%lX", 
n
);

2326 i‡(
hex
)

2327 
	`•rötf
((*)
buf
, "%lx", 
n
);

2330 i‡(
zîos
)

2332 
zîos
 +
digôs
 - 
	`STRLEN
(
buf
);

2333 i‡(
zîos
 > 0)

2335 
	`vim_memmove
(
buf
 + 
zîos
, buf, 
	`STRLEN
(buf) + 1);

2336 
cﬁ
 = 0; 
zîos
 > 0; --zeros)

2337 
buf
[
cﬁ
++] = '0';

2341 
	`ös_°r
(
buf
);

2342 --
curwö
->
w_curs‹
.
cﬁ
;

2343 
	`upd©ñöe
();

2344  
OK
;

2348 
	`bìp_Êush
();

2349  
FAIL
;

2351 
	}
}

2353 #ifde‡
VIMINFO


2355 
	$ªad_vimöfo_ªgi°î
(
löe
, 
Â
, 
f‹˚
)

2356 
ch¨_u
 *
löe
;

2357 
FILE
 *
Â
;

2358 
f‹˚
;

2360 
eof
;

2361 
do_ô
 = 
TRUE
;

2362 
size
;

2363 
limô
;

2364 
i
;

2365 
£t_¥ev
 = 
FALSE
;

2366 
ch¨_u
 *
°r
;

2367 
ch¨_u
 **
¨øy
 = 
NULL
;

2370 
°r
 = 
löe
 + 1;

2371 i‡(*
°r
 == '"')

2373 
£t_¥ev
 = 
TRUE
;

2374 
°r
++;

2376 i‡(!
	`iß um
(*
°r
) && *str != '-')

2378 
	`EMSG2
("vimöfo: IŒegÆÑegi°îÇamêöÜöê%s", 
löe
);

2379 
do_ô
 = 
FALSE
;

2381 
y™kbuf„r
 = *
°r
++;

2382 
	`gë_y™k_buf„r
(
FALSE
);

2383 
y™kbuf„r
 = 0;

2384 i‡(!
f‹˚
 && 
y_cuºít
->
y_¨øy
 !
NULL
)

2385 
do_ô
 = 
FALSE
;

2386 
size
 = 0;

2387 
limô
 = 100;

2388 i‡(
do_ô
)

2390 i‡(
£t_¥ev
)

2391 
y_¥evious
 = 
y_cuºít
;

2392 
	`vim_‰ì
(
y_cuºít
->
y_¨øy
);

2393 
¨øy
 = 
y_cuºít
->
y_¨øy
 =

2394 (
ch¨_u
 **)
	`Æloc
(()(
limô
 * (char_u *)));

2395 
°r
 = 
	`skùwhôe
(str);

2396 i‡(
	`STRNCMP
(
°r
, "CHAR", 4) == 0)

2397 
y_cuºít
->
y_ty≥
 = 
MCHAR
;

2398 i‡(
	`STRNCMP
(
°r
, "BLOCK", 5) == 0)

2399 
y_cuºít
->
y_ty≥
 = 
MBLOCK
;

2401 
y_cuºít
->
y_ty≥
 = 
MLINE
;

2403 !(
eof
 = 
	`vim_fgës
(
löe
, 
LSIZE
, 
Â
)Ë&&Üöe[0] =
TAB
)

2405 i‡(
do_ô
)

2407 i‡(
size
 >
limô
)

2409 
y_cuºít
->
y_¨øy
 = (
ch¨_u
 **)

2410 
	`Æloc
(()(
limô
 * 2 * (
ch¨_u
 *)));

2411 
i
 = 0; i < 
limô
; i++)

2412 
y_cuºít
->
y_¨øy
[
i
] = 
¨øy
[i];

2413 
	`vim_‰ì
(
¨øy
);

2414 
limô
 *= 2;

2415 
¨øy
 = 
y_cuºít
->
y_¨øy
;

2417 
	`vimöfo_ªad°rög
(
löe
);

2418 
°r
 = 
	`°rßve
(
löe
 + 1);

2419 i‡(
°r
 !
NULL
)

2420 
¨øy
[
size
++] = 
°r
;

2422 
do_ô
 = 
FALSE
;

2425 i‡(
do_ô
)

2427 i‡(
size
 == 0)

2429 
	`vim_‰ì
(
¨øy
);

2430 
y_cuºít
->
y_¨øy
 = 
NULL
;

2432 i‡(
size
 < 
limô
)

2434 
y_cuºít
->
y_¨øy
 =

2435 (
ch¨_u
 **)
	`Æloc
(()(
size
 * (char_u *)));

2436 
i
 = 0; i < 
size
; i++)

2437 
y_cuºít
->
y_¨øy
[
i
] = 
¨øy
[i];

2438 
	`vim_‰ì
(
¨øy
);

2440 
y_cuºít
->
y_size
 = 
size
;

2442  
eof
;

2443 
	}
}

2446 
	$wrôe_vimöfo_ªgi°îs
(
Â
)

2447 
FILE
 *
Â
;

2449 
i
, 
j
;

2450 
ch¨_u
 *
ty≥
;

2451 
ch¨_u
 
c
;

2452 
num_löes
;

2453 
max_num_löes
;

2455 
	`Ârötf
(
Â
, "\n# Registers:\n");

2457 
max_num_löes
 = 
	`gë_vimöfo_∑ømëî
('"');

2458 i‡(
max_num_löes
 == 0)

2460 
i
 = 0; i < 
NUM_REGISTERS
; i++)

2462 i‡(
y_buf
[
i
].
y_¨øy
 =
NULL
)

2464 #ifde‡
USE_GUI


2466 i‡(
i
 =
GUI_SELECTION_REGISTER
)

2469 
y_buf
[
i
].
y_ty≥
)

2471 
MLINE
:

2472 
ty≥
 = (
ch¨_u
 *)"LINE";

2474 
MCHAR
:

2475 
ty≥
 = (
ch¨_u
 *)"CHAR";

2477 
MBLOCK
:

2478 
ty≥
 = (
ch¨_u
 *)"BLOCK";

2481 
	`•rötf
((*)
IObuff
, "UnknownÑegisterÅype %d",

2482 
y_buf
[
i
].
y_ty≥
);

2483 
	`emsg
(
IObuff
);

2484 
ty≥
 = (
ch¨_u
 *)"LINE";

2487 i‡(
y_¥evious
 =&
y_buf
[
i
])

2488 
	`Ârötf
(
Â
, "\"");

2489 i‡(
i
 =
DELETION_REGISTER
)

2490 
c
 = '-';

2491 i‡(
i
 < 10)

2492 
c
 = '0' + 
i
;

2494 
c
 = 'a' + 
i
 - 10;

2495 
	`Ârötf
(
Â
, "\"%c\t%s\n", 
c
, 
ty≥
);

2496 
num_löes
 = 
y_buf
[
i
].
y_size
;

2499 i‡(
max_num_löes
 > 0 && 
num_löes
 > max_num_lines)

2500 
num_löes
 = 
max_num_löes
;

2501 
j
 = 0; j < 
num_löes
; j++)

2503 
	`putc
('\t', 
Â
);

2504 
	`vimöfo_wrôe°rög
(
Â
, 
y_buf
[
i
].
y_¨øy
[
j
]);

2507 
	}
}

2510 #i‡
deföed
(
USE_GUI
Ë|| deföed(
PROTO
)

2519 
	$gui_‰ì_£À˘i⁄
()

2521 
y™kbuf
 *
y_±r
 = 
y_cuºít
;

2523 
y_cuºít
 = &
y_buf
[
GUI_SELECTION_REGISTER
];

2524 
	`‰ì_y™k_Æl
();

2525 
y_cuºít
->
y_size
 = 0;

2526 
y_cuºít
 = 
y_±r
;

2527 
	}
}

2533 
	$gui_gë_£À˘i⁄
()

2535 
y™kbuf
 *
ﬁd_y_¥evious
, *
ﬁd_y_cuºít
;

2536 
ch¨_u
 
ﬁd_y™kbuf„r
;

2537 
FPOS
 
ﬁd_curs‹
, 
ﬁd_visuÆ
;

2538 
ﬁd_›_ty≥
;

2540 i‡(
gui
.
£À˘i⁄
.
ow√d
)

2542 i‡(
y_buf
[
GUI_SELECTION_REGISTER
].
y_¨øy
 !
NULL
)

2546 
ﬁd_y_¥evious
 = 
y_¥evious
;

2547 
ﬁd_y_cuºít
 = 
y_cuºít
;

2548 
ﬁd_y™kbuf„r
 = 
y™kbuf„r
;

2549 
ﬁd_curs‹
 = 
curwö
->
w_curs‹
;

2550 
ﬁd_visuÆ
 = 
VIsuÆ
;

2551 
ﬁd_›_ty≥
 = 
›_ty≥
;

2552 
y™kbuf„r
 = '*';

2553 
›_ty≥
 = 
YANK
;

2554 
	`do_≥ndög_›î©‹
('y', 
NUL
, 
FALSE
, 
NULL
, NULL, 0, 
TRUE
, TRUE);

2555 
y_¥evious
 = 
ﬁd_y_¥evious
;

2556 
y_cuºít
 = 
ﬁd_y_cuºít
;

2557 
y™kbuf„r
 = 
ﬁd_y™kbuf„r
;

2558 
curwö
->
w_curs‹
 = 
ﬁd_curs‹
;

2559 
VIsuÆ
 = 
ﬁd_visuÆ
;

2560 
›_ty≥
 = 
ﬁd_›_ty≥
;

2564 
	`gui_‰ì_£À˘i⁄
();

2567 
	`gui_ªque°_£À˘i⁄
();

2569 
	}
}

2573 
	$gui_y™k_£À˘i⁄
(
ty≥
, 
°r
, 
Àn
)

2574 
ty≥
;

2575 
ch¨_u
 *
°r
;

2576 
l⁄g_u
 
Àn
;

2578 
y™kbuf
 *
y_±r
 = &
y_buf
[
GUI_SELECTION_REGISTER
];

2579 
 um
;

2580 
°¨t
;

2581 
i
;

2583 
	`gui_‰ì_£À˘i⁄
();

2586 
y_±r
->
y_size
 = 1;

2587 
i
 = 0; i < 
Àn
; i++)

2588 i‡(
°r
[
i
] == '\n')

2589 
y_±r
->
y_size
++;

2591 i‡(
ty≥
 !
MCHAR
 && 
i
 > 0 && 
°r
[i - 1] == '\n')

2592 
y_±r
->
y_size
--;

2594 
y_±r
->
y_¨øy
 = (
ch¨_u
 **)
	`œŒoc
(y_±r->
y_size
 * (ch¨_u *), 
TRUE
);

2595 i‡(
y_±r
->
y_¨øy
 =
NULL
)

2597 
y_±r
->
y_ty≥
 = 
ty≥
;

2598 
 um
 = 0;

2599 
°¨t
 = 0;

2600 
i
 = 0; i < 
Àn
; i++)

2602 i‡(
°r
[
i
] =
NUL
)

2603 
°r
[
i
] = '\n';

2604 i‡(
°r
[
i
] == '\n')

2606 
°r
[
i
] = 
NUL
;

2607 i‡(
ty≥
 =
MCHAR
 || 
i
 !
Àn
 - 1)

2609 i‡((
y_±r
->
y_¨øy
[
 um
] = 
	`°rßve
(
°r
 + 
°¨t
)Ë=
NULL
)

2611 
y_±r
->
y_size
 = 
 um
;

2614 
 um
++;

2615 
°¨t
 = 
i
 + 1;

2619 i‡((
y_±r
->
y_¨øy
[
 um
] = 
	`Æloc
(
i
 - 
°¨t
 + 1)Ë=
NULL
)

2621 i‡(
i
 - 
°¨t
 > 0)

2622 
	`STRNCPY
(
y_±r
->
y_¨øy
[
 um
], 
°r
 + 
°¨t
, 
i
 - start);

2623 
y_±r
->
y_¨øy
[
 um
][
i
 - 
°¨t
] = 
NUL
;

2624 
y_±r
->
y_size
 = 
 um
 + 1;

2625 
	}
}

2632 
	$gui_c⁄vît_£À˘i⁄
(
°r
, 
Àn
)

2633 
ch¨_u
 **
°r
;

2634 
l⁄g_u
 *
Àn
;

2636 
y™kbuf
 *
y_±r
 = &
y_buf
[
GUI_SELECTION_REGISTER
];

2637 
ch¨_u
 *
p
;

2638 
 um
;

2639 
i
, 
j
;

2641 *
°r
 = 
NULL
;

2642 *
Àn
 = 0;

2643 i‡(
y_±r
->
y_¨øy
 =
NULL
)

2646 
i
 = 0; i < 
y_±r
->
y_size
; i++)

2647 *
Àn
 +
	`STRLEN
(
y_±r
->
y_¨øy
[
i
]) + 1;

2652 i‡(
y_±r
->
y_ty≥
 =
MCHAR
 && *
Àn
 > 1)

2653 (*
Àn
)--;

2655 
p
 = *
°r
 = 
	`œŒoc
(*
Àn
, 
TRUE
);

2656 i‡(
p
 =
NULL
)

2658 
 um
 = 0;

2659 
i
 = 0, 
j
 = 0; i < *
Àn
; i++, j++)

2661 i‡(
y_±r
->
y_¨øy
[
 um
][
j
] == '\n')

2662 
p
[
i
] = 
NUL
;

2663 i‡(
y_±r
->
y_¨øy
[
 um
][
j
] =
NUL
)

2665 
p
[
i
] = '\n';

2666 
 um
++;

2667 
j
 = -1;

2670 
p
[
i
] = 
y_±r
->
y_¨øy
[
 um
][
j
];

2672  
y_±r
->
y_ty≥
;

2673 
	}
}

	@src/ops.h

16 
	#NOP
 0

	)

17 
	#DELETE
 1

	)

18 
	#YANK
 2

	)

19 
	#CHANGE
 3

	)

20 
	#LSHIFT
 4

	)

21 
	#RSHIFT
 5

	)

22 
	#FILTER
 6

	)

23 
	#TILDE
 7

	)

24 
	#INDENT
 8

	)

25 
	#FORMAT
 9

	)

26 
	#COLON
 10

	)

27 
	#UPPER
 11

	)

28 
	#LOWER
 12

	)

29 
	#JOIN
 13

	)

34 
EXTERN
 
ch¨_u
 *
›ch¨s
 
INIT
(= (char_u *)"dyc<>!~=Q:UuJ");

51 
	#MCHAR
 0

	)

52 
	#MLINE
 1

	)

53 
	#MBLOCK
 2

	)

55 
EXTERN
 
›_ty≥
 
INIT
(
NOP
);

56 
EXTERN
 
	g›_mŸi⁄_ty≥
;

57 
EXTERN
 
	g›_ö˛usive
;

58 
EXTERN
 
›_block_mode
 
INIT
(
FALSE
);

60 
EXTERN
 
cﬁƒ_t
 
	g›_°¨t_vcﬁ
;

61 
EXTERN
 
cﬁƒ_t
 
	g›_íd_vcﬁ
;

62 
EXTERN
 
	g›_íd_adju°ed
;

63 
EXTERN
 
	g›_löe_cou¡
;

65 
EXTERN
 
	g›_em±y
;

66 
EXTERN
 
	g›_is_VIsuÆ
;

68 
EXTERN
 
y™kbuf„r
 
INIT
(= 0);

	@src/option.c

16 
	~"vim.h
"

17 
	~"globÆs.h
"

18 
	~"¥Ÿo.h
"

19 
	~"›ti⁄.h
"

21 
	s›ti⁄


23 *
	mfuŒ«me
;

24 *
	msh‹äame
;

25 
	mÊags
;

26 
ch¨_u
 *
	mv¨
;

27 
ch¨_u
 *
	mdef_vÆ
;

37 
	#P_BOOL
 0x01

	)

38 
	#P_NUM
 0x02

	)

39 
	#P_STRING
 0x04

	)

40 
	#P_ALLOCED
 0x08

	)

43 
	#P_EXPAND
 0x10

	)

44 
	#P_IND
 0x20

	)

45 
	#P_NODEFAULT
 0x40

	)

46 
	#P_DEF_ALLOCED
 0x80

	)

48 
	#P_WAS_SET
 0x100

	)

49 
	#P_NO_MKRC
 0x200

	)

55 
	#PV_LIST
 1

	)

56 
	#PV_NU
 2

	)

57 
	#PV_SCROLL
 3

	)

58 
	#PV_WRAP
 4

	)

59 
	#PV_LBR
 5

	)

61 
	#PV_AI
 6

	)

62 
	#PV_BIN
 7

	)

63 
	#PV_CIN
 8

	)

64 
	#PV_CINK
 9

	)

65 
	#PV_CINO
 10

	)

66 
	#PV_CINW
 11

	)

67 
	#PV_COM
 12

	)

68 
	#PV_EOL
 13

	)

69 
	#PV_ET
 14

	)

70 
	#PV_FO
 15

	)

71 
	#PV_LISP
 16

	)

72 
	#PV_ML
 17

	)

73 
	#PV_MOD
 18

	)

74 
	#PV_RO
 20

	)

75 
	#PV_SI
 21

	)

76 
	#PV_SN
 22

	)

77 
	#PV_SW
 23

	)

78 
	#PV_TS
 24

	)

79 
	#PV_TW
 25

	)

80 
	#PV_TX
 26

	)

81 
	#PV_WM
 27

	)

82 
	#PV_ISK
 28

	)

83 
	#PV_INF
 29

	)

84 
	#PV_RL
 30

	)

92 
›ti⁄
 
	g›ti⁄s
[] =

94 #ifde‡
RIGHTLEFT


95 {"Æïh", "Æ", 
P_NUM
, (
ch¨_u
 *)&
p_Æïh
,

96 #i‡
deföed
(
MSDOS
Ë|| deföed(
WIN32
Ë|| deföed(
OS2
)

97 (
ch¨_u
 *)128L},

99 (
ch¨_u
 *)224L},

102 {"autoödít", "ai", 
P_BOOL
|
P_IND
, (
ch¨_u
 *)
PV_AI
,

103 (
ch¨_u
 *)
FALSE
},

104 {"aut›röt", "≠", 
P_BOOL
, (
ch¨_u
 *)
NULL
,

105 (
ch¨_u
 *)
FALSE
},

106 {"autowrôe", "aw", 
P_BOOL
, (
ch¨_u
 *)&
p_aw
,

107 (
ch¨_u
 *)
FALSE
},

108 {"back•a˚", "bs", 
P_NUM
, (
ch¨_u
 *)&
p_bs
,

109 (
ch¨_u
 *)0L},

110 {"backup", "bk", 
P_BOOL
, (
ch¨_u
 *)&
p_bk
,

111 (
ch¨_u
 *)
FALSE
},

112 {"backupdú", "bdú", 
P_STRING
|
P_EXPAND
,

113 (
ch¨_u
 *)&
p_bdú
,

114 (
ch¨_u
 *)
DEF_BDIR
},

115 {"backu≥xt", "bex", 
P_STRING
, (
ch¨_u
 *)&
p_bex
,

116 #ifde‡
VMS


117 (
ch¨_u
 *)"_"},

119 (
ch¨_u
 *)"~"},

121 {"bóutify", "bf", 
P_BOOL
, (
ch¨_u
 *)
NULL
,

122 (
ch¨_u
 *)
FALSE
},

123 {"bö¨y", "bö", 
P_BOOL
|
P_IND
, (
ch¨_u
 *)
PV_BIN
,

124 (
ch¨_u
 *)
FALSE
},

125 {"bioskey", "biosk",
P_BOOL
,

126 #ifde‡
MSDOS


127 (
ch¨_u
 *)&
p_biosk
,

129 (
ch¨_u
 *)
NULL
,

131 (
ch¨_u
 *)
TRUE
},

132 {"bªak©", "brk", 
P_STRING
, (
ch¨_u
 *)&
p_bªak©
,

133 (
ch¨_u
 *)" \t!@*-+_;:,./?"},

134 #ifde‡
CINDENT


135 {"cödít", "cö", 
P_BOOL
|
P_IND
, (
ch¨_u
 *)
PV_CIN
,

136 (
ch¨_u
 *)
FALSE
},

137 {"cökeys", "cök", 
P_STRING
|
P_IND
|
P_ALLOCED
, (
ch¨_u
 *)
PV_CINK
,

138 (
ch¨_u
 *)"0{,0},:,0#,!^F,o,O,e"},

139 {"cö›ti⁄s", "cöo", 
P_STRING
|
P_IND
|
P_ALLOCED
, (
ch¨_u
 *)
PV_CINO
,

140 (
ch¨_u
 *)""},

142 #i‡
deföed
(
SMARTINDENT
Ë|| deföed(
CINDENT
)

143 {"cöw‹ds", "cöw", 
P_STRING
|
P_IND
|
P_ALLOCED
, (
ch¨_u
 *)
PV_CINW
,

144 (
ch¨_u
 *)"if,else,while,do,for,switch"},

146 {"cmdheight", "ch", 
P_NUM
, (
ch¨_u
 *)&
p_ch
,

147 (
ch¨_u
 *)1L},

148 {"cﬁumns", "co", 
P_NUM
|
P_NODEFAULT
|
P_NO_MKRC
, (
ch¨_u
 *)&
Cﬁumns
,

149 (
ch¨_u
 *)80L},

150 {"commíts", "com", 
P_STRING
|
P_IND
|
P_ALLOCED
, (
ch¨_u
 *)
PV_COM
,

151 (
ch¨_u
 *)"sr:/*,mb:*,el:*/,://,b:#,:%,:XCOMM,n:>,fb:-"},

152 {"com∑tibÀ", "˝", 
P_BOOL
, (
ch¨_u
 *)&
p_˝
,

153 (
ch¨_u
 *)
FALSE
},

154 {"˝›ti⁄s", "˝o", 
P_STRING
, (
ch¨_u
 *)&
p_˝o
,

155 #ifde‡
COMPATIBLE


156 (
ch¨_u
 *)
CPO_ALL
},

158 (
ch¨_u
 *)
CPO_DEFAULT
},

160 {"deföe", "def", 
P_STRING
, (
ch¨_u
 *)&
p_def
,

161 (
ch¨_u
 *)"^#[ \\t]*define"},

162 {"di˘i⁄¨y", "di˘", 
P_STRING
|
P_EXPAND
, (
ch¨_u
 *)&
p_di˘
,

163 (
ch¨_u
 *)""},

164 {"digøph", "dg", 
P_BOOL
,

165 #ifde‡
DIGRAPHS


166 (
ch¨_u
 *)&
p_dg
,

168 (
ch¨_u
 *)
NULL
,

170 (
ch¨_u
 *)
FALSE
},

171 {"dúe˘‹y", "dú", 
P_STRING
|
P_EXPAND
, (
ch¨_u
 *)&
p_dú
,

172 (
ch¨_u
 *)
DEF_DIR
},

173 {"edcom∑tibÀ","ed", 
P_BOOL
, (
ch¨_u
 *)&
p_ed
,

174 (
ch¨_u
 *)
FALSE
},

175 {"ídoÊöe", "eﬁ", 
P_BOOL
|
P_IND
|
P_NO_MKRC
, (
ch¨_u
 *)
PV_EOL
,

176 (
ch¨_u
 *)
FALSE
},

177 {"equÆÆways", "ó", 
P_BOOL
, (
ch¨_u
 *)&
p_ó
,

178 (
ch¨_u
 *)
TRUE
},

179 {"equÆ¥g", "ï", 
P_STRING
|
P_EXPAND
, (
ch¨_u
 *)&
p_ï
,

180 (
ch¨_u
 *)""},

181 {"îr‹bñls", "eb", 
P_BOOL
, (
ch¨_u
 *)&
p_eb
,

182 (
ch¨_u
 *)
FALSE
},

183 {"îr‹fûe", "ef", 
P_STRING
|
P_EXPAND
, (
ch¨_u
 *)&
p_ef
,

184 #ifde‡
AMIGA


185 (
ch¨_u
 *)"AztecC.Err"},

187 (
ch¨_u
 *)"errors.vim"},

189 {"îr‹f‹m©", "efm", 
P_STRING
, (
ch¨_u
 *)&
p_efm
,

190 #ifde‡
AMIGA


192 (
ch¨_u
 *)"%f>%l:%c:%t:%n:%m,%f:%l: %t%*[^0123456789]%n: %m,%f %l %t%*[^0123456789]%n: %m,%*[^\"]\"%f\"%*[^0123456789]%l: %m,%f:%l:%m"},

194 #i‡
deföed
 
MSDOS
 || deföed 
WIN32


195 (
ch¨_u
 *)"%*[^\"]\"%f\"%*[^0-9]%l: %m,%f(%l) : %m,%*[^ ] %f %l: %m,%f:%l:%m"},

196 #ñi‡
deföed
(
__EMX__
)

197 (
ch¨_u
 *)"%f:%l:%m,%*[^\"]\"%f\"%*[^0-9]%l: %m,\"%f\"%*[^0-9]%l: %m"},

199 (
ch¨_u
 *)"%*[^\"]\"%f\"%*[^0-9]%l: %m,\"%f\"%*[^0-9]%l: %m,%f:%l:%m"},

202 {"esckeys", "ek", 
P_BOOL
, (
ch¨_u
 *)&
p_ek
,

203 #ifde‡
COMPATIBLE


204 (
ch¨_u
 *)
FALSE
},

206 (
ch¨_u
 *)
TRUE
},

208 {"ex∑ndèb", "ë", 
P_BOOL
|
P_IND
, (
ch¨_u
 *)
PV_ET
,

209 (
ch¨_u
 *)
FALSE
},

210 {"exrc", 
NULL
, 
P_BOOL
, (
ch¨_u
 *)&
p_exrc
,

211 (
ch¨_u
 *)
FALSE
},

212 {"Êash", "Ê", 
P_BOOL
, (
ch¨_u
 *)
NULL
,

213 (
ch¨_u
 *)
FALSE
},

214 {"f‹m©›ti⁄s","fo", 
P_STRING
|
P_IND
|
P_ALLOCED
, (
ch¨_u
 *)
PV_FO
,

215 #ifde‡
COMPATIBLE


216 (
ch¨_u
 *)
FO_DFLT_VI
},

218 (
ch¨_u
 *)
FO_DFLT
},

220 {"f‹m©¥g", "Â", 
P_STRING
|
P_EXPAND
, (
ch¨_u
 *)&
p_Â
,

221 (
ch¨_u
 *)""},

222 {"gdeÁu…", "gd", 
P_BOOL
, (
ch¨_u
 *)&
p_gd
,

223 (
ch¨_u
 *)
FALSE
},

224 {"gøphic", "gr", 
P_BOOL
, (
ch¨_u
 *)
NULL
,

225 (
ch¨_u
 *)
FALSE
},

226 {"guif⁄t", "g‚", 
P_STRING
,

227 #ifde‡
USE_GUI


228 (
ch¨_u
 *)&
p_guif⁄t
,

229 (
ch¨_u
 *)""},

231 (
ch¨_u
 *)
NULL
,

232 (
ch¨_u
 *)
NULL
},

234 {"gui›ti⁄s", "go", 
P_STRING
,

235 #ifde‡
USE_GUI


236 (
ch¨_u
 *)&
p_gui›ti⁄s
,

237 #ifde‡
UNIX


238 (
ch¨_u
 *)"aAgmr"},

240 (
ch¨_u
 *)"Agmr"},

243 (
ch¨_u
 *)
NULL
,

244 (
ch¨_u
 *)
NULL
},

246 #i‡
deföed
(
USE_GUI
)

247 {"guùty", 
NULL
, 
P_BOOL
, (
ch¨_u
 *)&
p_guùty
,

248 (
ch¨_u
 *)
FALSE
},

250 {"h¨dèbs", "ht", 
P_NUM
, (
ch¨_u
 *)
NULL
,

251 (
ch¨_u
 *)0L},

252 {"hñpfûe", "hf", 
P_STRING
|
P_EXPAND
, (
ch¨_u
 *)&
p_hf
,

253 (
ch¨_u
 *)""},

254 {"hñpheight", "hh", 
P_NUM
, (
ch¨_u
 *)&
p_hh
,

255 (
ch¨_u
 *)20L},

256 {"hiddí", "hid", 
P_BOOL
, (
ch¨_u
 *)&
p_hid
,

257 (
ch¨_u
 *)
FALSE
},

258 {"highlight", "hl", 
P_STRING
, (
ch¨_u
 *)&
p_hl
,

259 (
ch¨_u
 *)"8b,db,es,hs,mb,Mn,nu,rs,sr,tb,vr,ws"},

260 {"hi°‹y", "hi", 
P_NUM
, (
ch¨_u
 *)&
p_hi
,

261 #ifde‡
COMPATIBLE


262 (
ch¨_u
 *)0L},

264 (
ch¨_u
 *)20L},

266 #ifde‡
RIGHTLEFT


267 {"hkm≠", "hk", 
P_BOOL
, (
ch¨_u
 *)&
p_hkm≠
,

268 (
ch¨_u
 *)
FALSE
},

270 {"ic⁄", 
NULL
, 
P_BOOL
, (
ch¨_u
 *)&
p_ic⁄
,

271 (
ch¨_u
 *)
FALSE
},

272 {"ign‹eˇ£", "ic", 
P_BOOL
, (
ch¨_u
 *)&
p_ic
,

273 (
ch¨_u
 *)
FALSE
},

274 {"ö˛ude", "öc", 
P_STRING
, (
ch¨_u
 *)&
p_öc
,

275 (
ch¨_u
 *)"^#[ \\t]*include"},

276 {"öc£¨ch", "is", 
P_BOOL
, (
ch¨_u
 *)&
p_is
,

277 (
ch¨_u
 *)
FALSE
},

278 {"ö„rˇ£", "öf", 
P_BOOL
|
P_IND
, (
ch¨_u
 *)
PV_INF
,

279 (
ch¨_u
 *)
FALSE
},

280 {"ö£πmode", "im", 
P_BOOL
, (
ch¨_u
 *)&
p_im
,

281 (
ch¨_u
 *)
FALSE
},

282 {"is‚ame", "isf", 
P_STRING
, (
ch¨_u
 *)&
p_isf
,

283 #ifde‡
BACKSLASH_IN_FILENAME


284 (
ch¨_u
 *)"@,48-57,/,.,-,_,+,,,$,:,\\"},

286 #ifde‡
AMIGA


287 (
ch¨_u
 *)"@,48-57,/,.,-,_,+,,,$,:"},

289 (
ch¨_u
 *)"@,48-57,/,.,-,_,+,,,$,:,~"},

292 {"isidít", "isi", 
P_STRING
, (
ch¨_u
 *)&
p_isi
,

293 #i‡
deföed
(
MSDOS
Ë|| deföed(
WIN32
Ë|| deföed(
OS2
)

294 (
ch¨_u
 *)"@,48-57,_,128-167,224-235"},

296 (
ch¨_u
 *)"@,48-57,_,192-255"},

298 {"iskeyw‹d", "isk", 
P_STRING
|
P_IND
|
P_ALLOCED
, (
ch¨_u
 *)
PV_ISK
,

299 #ifde‡
COMPATIBLE


300 (
ch¨_u
 *)"@,48-57,_"},

302 #i‡
deföed
 
MSDOS
 || deföed 
WIN32


303 (
ch¨_u
 *)"@,48-57,_,128-167,224-235"},

305 (
ch¨_u
 *)"@,48-57,_,192-255"},

308 {"i•röt", "i•", 
P_STRING
, (
ch¨_u
 *)&
p_i•
,

309 #i‡
deföed
 
MSDOS
 || deföed 
WIN32


310 (
ch¨_u
 *)"@,~-255"},

312 (
ch¨_u
 *)"@,161-255"},

314 {"joö•a˚s", "js", 
P_BOOL
, (
ch¨_u
 *)&
p_js
,

315 (
ch¨_u
 *)
TRUE
},

316 {"keyw‹d¥g", "kp", 
P_STRING
|
P_EXPAND
, (
ch¨_u
 *)&
p_kp
,

317 #i‡
deföed
(
MSDOS
Ë|| deföed(
WIN32
)

318 (
ch¨_u
 *)""},

320 (
ch¨_u
 *)"man"},

322 {"œngm≠", "lm≠", 
P_STRING
,

323 #ifde‡
HAVE_LANGMAP


324 (
ch¨_u
 *)&
p_œngm≠
,

325 (
ch¨_u
 *)""},

327 (
ch¨_u
 *)
NULL
,

328 (
ch¨_u
 *)
NULL
},

330 {"œ°°©us", "ls", 
P_NUM
, (
ch¨_u
 *)&
p_ls
,

331 (
ch¨_u
 *)1L},

332 {"löebªak", "lbr", 
P_BOOL
|
P_IND
, (
ch¨_u
 *)
PV_LBR
,

333 (
ch¨_u
 *)
FALSE
},

334 {"löes", 
NULL
, 
P_NUM
|
P_NODEFAULT
|
P_NO_MKRC
, (
ch¨_u
 *)&
Rows
,

335 #i‡
deföed
 
MSDOS
 || deföed 
WIN32


336 (
ch¨_u
 *)25L},

338 (
ch¨_u
 *)24L},

340 {"li•", 
NULL
, 
P_BOOL
|
P_IND
, (
ch¨_u
 *)
PV_LISP
,

341 (
ch¨_u
 *)
FALSE
},

342 {"li°", 
NULL
, 
P_BOOL
|
P_IND
, (
ch¨_u
 *)
PV_LIST
,

343 (
ch¨_u
 *)
FALSE
},

344 {"magic", 
NULL
, 
P_BOOL
, (
ch¨_u
 *)&
p_magic
,

345 (
ch¨_u
 *)
TRUE
},

346 {"makïrg", "mp", 
P_STRING
|
P_EXPAND
, (
ch¨_u
 *)&
p_mp
,

347 (
ch¨_u
 *)"make"},

348 {"maxm≠dïth", "mmd", 
P_NUM
, (
ch¨_u
 *)&
p_mmd
,

349 (
ch¨_u
 *)1000L},

350 {"maxmem", "mm", 
P_NUM
, (
ch¨_u
 *)&
p_mm
,

351 (
ch¨_u
 *)
MAXMEM
},

352 {"maxmemtŸ", "mmt", 
P_NUM
, (
ch¨_u
 *)&
p_mmt
,

353 (
ch¨_u
 *)
MAXMEMTOT
},

354 {"mesg", 
NULL
, 
P_BOOL
, (
ch¨_u
 *)NULL,

355 (
ch¨_u
 *)
FALSE
},

356 {"modñöe", "ml", 
P_BOOL
|
P_IND
, (
ch¨_u
 *)
PV_ML
,

357 #ifde‡
COMPATIBLE


358 (
ch¨_u
 *)
FALSE
},

360 (
ch¨_u
 *)
TRUE
},

362 {"modñöes", "mls", 
P_NUM
, (
ch¨_u
 *)&
p_mls
,

363 (
ch¨_u
 *)5L},

364 {"modifõd", "mod", 
P_BOOL
|
P_IND
, (
ch¨_u
 *)
PV_MOD
,

365 (
ch¨_u
 *)
FALSE
},

366 {"m‹e", 
NULL
, 
P_BOOL
, (
ch¨_u
 *)&
p_m‹e
,

367 #ifde‡
COMPATIBLE


368 (
ch¨_u
 *)
FALSE
},

370 (
ch¨_u
 *)
TRUE
},

372 {"mou£", 
NULL
, 
P_STRING
, (
ch¨_u
 *)&
p_mou£
,

373 #i‡
deföed
(
MSDOS
Ë|| deföed(
WIN32
)

374 (
ch¨_u
 *)"a"},

376 (
ch¨_u
 *)""},

378 {"mou£time", "mou£t", 
P_NUM
, (
ch¨_u
 *)&
p_mou£t
,

379 (
ch¨_u
 *)500L},

380 {"novi˚", 
NULL
, 
P_BOOL
, (
ch¨_u
 *)NULL,

381 (
ch¨_u
 *)
FALSE
},

382 {"numbî", "nu", 
P_BOOL
|
P_IND
, (
ch¨_u
 *)
PV_NU
,

383 (
ch¨_u
 *)
FALSE
},

384 {"›í", 
NULL
, 
P_BOOL
, (
ch¨_u
 *)NULL,

385 (
ch¨_u
 *)
FALSE
},

386 {"›timize", "›t", 
P_BOOL
, (
ch¨_u
 *)
NULL
,

387 (
ch¨_u
 *)
FALSE
},

388 {"∑øgøphs", "∑ø", 
P_STRING
, (
ch¨_u
 *)&
p_∑ø
,

389 (
ch¨_u
 *)"IPLPPPQPP LIpplpipbp"},

390 {"∑°e", 
NULL
, 
P_BOOL
, (
ch¨_u
 *)&
p_∑°e
,

391 (
ch¨_u
 *)
FALSE
},

392 {"∑tchmode", "pm", 
P_STRING
, (
ch¨_u
 *)&
p_pm
,

393 (
ch¨_u
 *)""},

394 {"∑th", "∑", 
P_STRING
|
P_EXPAND
, (
ch¨_u
 *)&
p_∑th
,

395 #i‡
deföed
 
AMIGA
 || deföed 
MSDOS
 || deföed 
WIN32


396 (
ch¨_u
 *)".,,"},

397 #ñi‡
deföed
(
__EMX__
)

398 (
ch¨_u
 *)".,/emx/include,,"},

400 (
ch¨_u
 *)".,/usr/include,,"},

402 {"¥om±", 
NULL
, 
P_BOOL
, (
ch¨_u
 *)NULL,

403 (
ch¨_u
 *)
FALSE
},

404 {"ªad⁄ly", "ro", 
P_BOOL
|
P_IND
, (
ch¨_u
 *)
PV_RO
,

405 (
ch¨_u
 *)
FALSE
},

406 {"ªdøw", 
NULL
, 
P_BOOL
, (
ch¨_u
 *)NULL,

407 (
ch¨_u
 *)
FALSE
},

408 {"ªm≠", 
NULL
, 
P_BOOL
, (
ch¨_u
 *)&
p_ªm≠
,

409 (
ch¨_u
 *)
TRUE
},

410 {"ªp‹t", 
NULL
, 
P_NUM
, (
ch¨_u
 *)&
p_ªp‹t
,

411 (
ch¨_u
 *)2L},

412 #ifde‡
WIN32


413 {"ª°‹es¸ìn", "rs", 
P_BOOL
, (
ch¨_u
 *)&
p_rs
,

414 (
ch¨_u
 *)
TRUE
},

416 #ifde‡
RIGHTLEFT


417 {"ªvös", "ri", 
P_BOOL
, (
ch¨_u
 *)&
p_ri
,

418 (
ch¨_u
 *)
FALSE
},

419 {"righée·", "æ", 
P_BOOL
|
P_IND
, (
ch¨_u
 *)
PV_RL
,

420 (
ch¨_u
 *)
FALSE
},

422 {"ruÀr", "ru", 
P_BOOL
, (
ch¨_u
 *)&
p_ru
,

423 (
ch¨_u
 *)
FALSE
},

424 {"s¸ﬁl", "s¸", 
P_NUM
|
P_IND
|
P_NO_MKRC
, (
ch¨_u
 *)
PV_SCROLL
,

425 (
ch¨_u
 *)12L},

426 {"s¸ﬁljump", "sj", 
P_NUM
, (
ch¨_u
 *)&
p_sj
,

427 (
ch¨_u
 *)1L},

428 {"s¸ﬁloff", "so", 
P_NUM
, (
ch¨_u
 *)&
p_so
,

429 (
ch¨_u
 *)0L},

430 {"£˘i⁄s", "£˘", 
P_STRING
, (
ch¨_u
 *)&
p_£˘i⁄s
,

431 (
ch¨_u
 *)"SHNHH HUnhsh"},

432 {"£cuª", 
NULL
, 
P_BOOL
, (
ch¨_u
 *)&
p_£cuª
,

433 (
ch¨_u
 *)
FALSE
},

434 {"shñl", "sh", 
P_STRING
|
P_EXPAND
, (
ch¨_u
 *)&
p_sh
,

435 #i‡ 
deföed
(
MSDOS
)

436 (
ch¨_u
 *)"command"},

437 #ñi‡
deföed
(
WIN32
)

438 (
ch¨_u
 *)""},

439 #ñi‡
deföed
(
__EMX__
)

440 (
ch¨_u
 *)"cmd"},

441 #ñi‡
deföed
(
ARCHIE
)

442 (
ch¨_u
 *)"gos"},

444 (
ch¨_u
 *)"sh"},

446 {"shñÕùe", "•", 
P_STRING
, (
ch¨_u
 *)&
p_•
,

447 #i‡
deföed
(
UNIX
Ë|| deföed(
OS2
)

448 #ifde‡
ARCHIE


449 (
ch¨_u
 *)"2>"},

451 (
ch¨_u
 *)"|Åee"},

454 (
ch¨_u
 *)">"},

456 {"shñÃedú", "§r", 
P_STRING
, (
ch¨_u
 *)&
p_§r
,

457 (
ch¨_u
 *)">"},

458 {"shñ…y≥", "°", 
P_NUM
, (
ch¨_u
 *)&
p_°
,

459 (
ch¨_u
 *)0L},

460 {"shi·round", "§", 
P_BOOL
, (
ch¨_u
 *)&
p_§
,

461 (
ch¨_u
 *)
FALSE
},

462 {"shi·width", "sw", 
P_NUM
|
P_IND
, (
ch¨_u
 *)
PV_SW
,

463 (
ch¨_u
 *)8L},

464 {"sh‹tmess", "shm", 
P_STRING
, (
ch¨_u
 *)&
p_shm
,

465 (
ch¨_u
 *)""},

466 {"sh‹äame", "¢", 
P_BOOL
|
P_IND
,

467 #ifde‡
SHORT_FNAME


468 (
ch¨_u
 *)
NULL
,

470 (
ch¨_u
 *)
PV_SN
,

472 (
ch¨_u
 *)
FALSE
},

473 {"showbªak", "sbr", 
P_STRING
, (
ch¨_u
 *)&
p_sbr
,

474 (
ch¨_u
 *)""},

475 {"showcmd", "sc", 
P_BOOL
, (
ch¨_u
 *)&
p_sc
,

476 #i‡
deföed
(
COMPATIBLE
Ë|| deföed(
UNIX
)

477 (
ch¨_u
 *)
FALSE
},

479 (
ch¨_u
 *)
TRUE
},

481 {"showm©ch", "sm", 
P_BOOL
, (
ch¨_u
 *)&
p_sm
,

482 (
ch¨_u
 *)
FALSE
},

483 {"showmode", "smd", 
P_BOOL
, (
ch¨_u
 *)&
p_smd
,

484 #i‡
deföed
(
COMPATIBLE
)

485 (
ch¨_u
 *)
FALSE
},

487 (
ch¨_u
 *)
TRUE
},

489 {"sides¸ﬁl", "ss", 
P_NUM
, (
ch¨_u
 *)&
p_ss
,

490 (
ch¨_u
 *)0L},

491 {"¶ow›í", "¶ow", 
P_BOOL
, (
ch¨_u
 *)
NULL
,

492 (
ch¨_u
 *)
FALSE
},

493 {"sm¨tˇ£", "scs", 
P_BOOL
, (
ch¨_u
 *)&
p_scs
,

494 (
ch¨_u
 *)
FALSE
},

495 #ifde‡
SMARTINDENT


496 {"sm¨tödít", "si", 
P_BOOL
|
P_IND
, (
ch¨_u
 *)
PV_SI
,

497 (
ch¨_u
 *)
FALSE
},

499 {"sm¨âab", "°a", 
P_BOOL
, (
ch¨_u
 *)&
p_°a
,

500 (
ch¨_u
 *)
FALSE
},

501 {"sour˚™y", 
NULL
, 
P_BOOL
, (
ch¨_u
 *)NULL,

502 (
ch¨_u
 *)
FALSE
},

503 {"•lôbñow", "sb", 
P_BOOL
, (
ch¨_u
 *)&
p_sb
,

504 (
ch¨_u
 *)
FALSE
},

505 {"°¨toÊöe", "sﬁ", 
P_BOOL
, (
ch¨_u
 *)&
p_sﬁ
,

506 (
ch¨_u
 *)
TRUE
},

507 {"suffixes", "su", 
P_STRING
, (
ch¨_u
 *)&
p_su
,

508 (
ch¨_u
 *)".bak,~,.o,.h,.info,.swp"},

509 {"sw≠sync", "sws", 
P_STRING
, (
ch¨_u
 *)&
p_sws
,

510 (
ch¨_u
 *)"fsync"},

511 {"èb°›", "ts", 
P_NUM
|
P_IND
, (
ch¨_u
 *)
PV_TS
,

512 (
ch¨_u
 *)8L},

513 {"ègÀngth", "é", 
P_NUM
, (
ch¨_u
 *)&
p_é
,

514 (
ch¨_u
 *)0L},

515 {"ègªœtive", "å", 
P_BOOL
, (
ch¨_u
 *)&
p_å
,

516 #i‡
deföed
(
COMPATIBLE
)

517 (
ch¨_u
 *)
FALSE
},

519 (
ch¨_u
 *)
TRUE
},

521 {"ègs", "èg", 
P_STRING
|
P_EXPAND
, (
ch¨_u
 *)&
p_ègs
,

522 #ifde‡
EMACS_TAGS


523 (
ch¨_u
 *)"./tags,./TAGS,tags,TAGS"},

525 (
ch¨_u
 *)"./tags,tags"},

527 {"èg°ack", "tg°", 
P_BOOL
, (
ch¨_u
 *)
NULL
,

528 (
ch¨_u
 *)
FALSE
},

529 {"ãrm", 
NULL
, 
P_STRING
|
P_EXPAND
|
P_NODEFAULT
|
P_NO_MKRC
,

530 (
ch¨_u
 *)&
ãrm_°rögs
[
KS_NAME
],

531 (
ch¨_u
 *)""},

532 {"ãr£", 
NULL
, 
P_BOOL
, (
ch¨_u
 *)&
p_ãr£
,

533 (
ch¨_u
 *)
FALSE
},

534 {"ãxèuto", "è", 
P_BOOL
, (
ch¨_u
 *)&
p_è
,

535 #i‡
deföed
(
COMPATIBLE
)

536 (
ch¨_u
 *)
FALSE
},

538 (
ch¨_u
 *)
TRUE
},

540 {"ãxtmode", "tx", 
P_BOOL
|
P_IND
, (
ch¨_u
 *)
PV_TX
,

541 #ifde‡
USE_CRNL


542 (
ch¨_u
 *)
TRUE
},

544 (
ch¨_u
 *)
FALSE
},

546 {"ãxtwidth", "tw", 
P_NUM
|
P_IND
, (
ch¨_u
 *)
PV_TW
,

547 (
ch¨_u
 *)0L},

548 {"tûde›", "t›", 
P_BOOL
, (
ch¨_u
 *)&
p_to
,

549 (
ch¨_u
 *)
FALSE
},

550 {"timeout", "to", 
P_BOOL
, (
ch¨_u
 *)&
p_timeout
,

551 (
ch¨_u
 *)
TRUE
},

552 {"timeouéí", "tm", 
P_NUM
, (
ch¨_u
 *)&
p_tm
,

553 (
ch¨_u
 *)1000L},

554 {"tôÀ", 
NULL
, 
P_BOOL
, (
ch¨_u
 *)&
p_tôÀ
,

555 (
ch¨_u
 *)
FALSE
},

556 {"âimeout", 
NULL
, 
P_BOOL
, (
ch¨_u
 *)&
p_âimeout
,

557 (
ch¨_u
 *)
FALSE
},

558 {"âimeouéí", "âm", 
P_NUM
, (
ch¨_u
 *)&
p_âm
,

559 (
ch¨_u
 *)-1L},

560 {"âybuûtö", "tbi", 
P_BOOL
, (
ch¨_u
 *)&
p_tbi
,

561 (
ch¨_u
 *)
TRUE
},

562 {"âyÁ°", "tf", 
P_BOOL
|
P_NO_MKRC
, (
ch¨_u
 *)&
p_tf
,

563 (
ch¨_u
 *)
FALSE
},

564 {"âys¸ﬁl", "t¶", 
P_NUM
, (
ch¨_u
 *)&
p_âys¸ﬁl
,

565 (
ch¨_u
 *)999L},

566 {"âyty≥", "ây", 
P_STRING
|
P_EXPAND
|
P_NODEFAULT
|
P_NO_MKRC
,

567 (
ch¨_u
 *)&
ãrm_°rögs
[
KS_NAME
],

568 (
ch¨_u
 *)""},

569 {"undﬁevñs", "ul", 
P_NUM
, (
ch¨_u
 *)&
p_ul
,

570 #ifde‡
COMPATIBLE


571 (
ch¨_u
 *)0L},

573 #i‡
deföed
(
UNIX
Ë|| deföed(
WIN32
Ë|| deföed(
OS2
)

574 (
ch¨_u
 *)1000L},

576 (
ch¨_u
 *)100L},

579 {"upd©ecou¡", "uc", 
P_NUM
, (
ch¨_u
 *)&
p_uc
,

580 #ifde‡
COMPATIBLE


581 (
ch¨_u
 *)0L},

583 (
ch¨_u
 *)200L},

585 {"upd©ëime", "ut", 
P_NUM
, (
ch¨_u
 *)&
p_ut
,

586 (
ch¨_u
 *)4000L},

587 {"vimöfo", "vi", 
P_STRING
,

588 #ifde‡
VIMINFO


589 (
ch¨_u
 *)&
p_vimöfo
,

591 (
ch¨_u
 *)
NULL
,

593 (
ch¨_u
 *)""},

594 {"visuÆbñl", "vb", 
P_BOOL
, (
ch¨_u
 *)&
p_vb
,

595 (
ch¨_u
 *)
FALSE
},

596 {"w300", 
NULL
, 
P_NUM
, (
ch¨_u
 *)NULL,

597 (
ch¨_u
 *)0L},

598 {"w1200", 
NULL
, 
P_NUM
, (
ch¨_u
 *)NULL,

599 (
ch¨_u
 *)0L},

600 {"w9600", 
NULL
, 
P_NUM
, (
ch¨_u
 *)NULL,

601 (
ch¨_u
 *)0L},

602 {"w¨n", 
NULL
, 
P_BOOL
, (
ch¨_u
 *)&
p_w¨n
,

603 (
ch¨_u
 *)
TRUE
},

604 {"weúdövît", "wiv", 
P_BOOL
, (
ch¨_u
 *)&
p_wiv
,

605 (
ch¨_u
 *)
FALSE
},

606 {"whichwøp", "ww", 
P_STRING
, (
ch¨_u
 *)&
p_ww
,

607 #ifde‡
COMPATIBLE


608 (
ch¨_u
 *)""},

610 (
ch¨_u
 *)"b,s"},

612 {"wûdch¨", "wc", 
P_NUM
, (
ch¨_u
 *)&
p_wc
,

613 #ifde‡
COMPATIBLE


614 (
ch¨_u
 *)()
Cål
('E')},

616 (
ch¨_u
 *)()
TAB
},

618 {"wödow", "wi", 
P_NUM
, (
ch¨_u
 *)
NULL
,

619 (
ch¨_u
 *)0L},

620 {"wöheight", "wh", 
P_NUM
, (
ch¨_u
 *)&
p_wh
,

621 (
ch¨_u
 *)0L},

622 {"wøp", 
NULL
, 
P_BOOL
|
P_IND
, (
ch¨_u
 *)
PV_WRAP
,

623 (
ch¨_u
 *)
TRUE
},

624 {"wøpm¨gö", "wm", 
P_NUM
|
P_IND
, (
ch¨_u
 *)
PV_WM
,

625 (
ch¨_u
 *)0L},

626 {"wøpsˇn", "ws", 
P_BOOL
, (
ch¨_u
 *)&
p_ws
,

627 (
ch¨_u
 *)
TRUE
},

628 {"wrôóny", "wa", 
P_BOOL
, (
ch¨_u
 *)&
p_wa
,

629 (
ch¨_u
 *)
FALSE
},

630 {"wrôebackup", "wb", 
P_BOOL
, (
ch¨_u
 *)&
p_wb
,

631 #i‡
deföed
(
COMPATIBLE
Ë&& !deföed(
WRITEBACKUP
)

632 (
ch¨_u
 *)
FALSE
},

634 (
ch¨_u
 *)
TRUE
},

636 {"wrôedñay", "wd", 
P_NUM
, (
ch¨_u
 *)&
p_wd
,

637 (
ch¨_u
 *)0L},

640 {"t_AL", 
NULL
, 
P_STRING
, (
ch¨_u
 *)&
ãrm_°rögs
[
KS_CAL
],

641 (
ch¨_u
 *)""},

642 {"t_Æ", 
NULL
, 
P_STRING
, (
ch¨_u
 *)&
ãrm_°rögs
[
KS_AL
],

643 (
ch¨_u
 *)""},

644 {"t_cd", 
NULL
, 
P_STRING
, (
ch¨_u
 *)&
ãrm_°rögs
[
KS_CD
],

645 (
ch¨_u
 *)""},

646 {"t_˚", 
NULL
, 
P_STRING
, (
ch¨_u
 *)&
ãrm_°rögs
[
KS_CE
],

647 (
ch¨_u
 *)""},

648 {"t_˛", 
NULL
, 
P_STRING
, (
ch¨_u
 *)&
ãrm_°rögs
[
KS_CL
],

649 (
ch¨_u
 *)""},

650 {"t_cm", 
NULL
, 
P_STRING
, (
ch¨_u
 *)&
ãrm_°rögs
[
KS_CM
],

651 (
ch¨_u
 *)""},

652 {"t_CS", 
NULL
, 
P_STRING
, (
ch¨_u
 *)&
ãrm_°rögs
[
KS_CSC
],

653 (
ch¨_u
 *)""},

654 {"t_cs", 
NULL
, 
P_STRING
, (
ch¨_u
 *)&
ãrm_°rögs
[
KS_CS
],

655 (
ch¨_u
 *)""},

656 {"t_da", 
NULL
, 
P_STRING
, (
ch¨_u
 *)&
ãrm_°rögs
[
KS_DA
],

657 (
ch¨_u
 *)""},

658 {"t_db", 
NULL
, 
P_STRING
, (
ch¨_u
 *)&
ãrm_°rögs
[
KS_DB
],

659 (
ch¨_u
 *)""},

660 {"t_DL", 
NULL
, 
P_STRING
, (
ch¨_u
 *)&
ãrm_°rögs
[
KS_CDL
],

661 (
ch¨_u
 *)""},

662 {"t_dl", 
NULL
, 
P_STRING
, (
ch¨_u
 *)&
ãrm_°rögs
[
KS_DL
],

663 (
ch¨_u
 *)""},

664 {"t_ke", 
NULL
, 
P_STRING
, (
ch¨_u
 *)&
ãrm_°rögs
[
KS_KE
],

665 (
ch¨_u
 *)""},

666 {"t_ks", 
NULL
, 
P_STRING
, (
ch¨_u
 *)&
ãrm_°rögs
[
KS_KS
],

667 (
ch¨_u
 *)""},

668 {"t_md", 
NULL
, 
P_STRING
, (
ch¨_u
 *)&
ãrm_°rögs
[
KS_MD
],

669 (
ch¨_u
 *)""},

670 {"t_me", 
NULL
, 
P_STRING
, (
ch¨_u
 *)&
ãrm_°rögs
[
KS_ME
],

671 (
ch¨_u
 *)""},

672 {"t_mr", 
NULL
, 
P_STRING
, (
ch¨_u
 *)&
ãrm_°rögs
[
KS_MR
],

673 (
ch¨_u
 *)""},

674 {"t_ms", 
NULL
, 
P_STRING
, (
ch¨_u
 *)&
ãrm_°rögs
[
KS_MS
],

675 (
ch¨_u
 *)""},

676 {"t_RI", 
NULL
, 
P_STRING
, (
ch¨_u
 *)&
ãrm_°rögs
[
KS_CRI
],

677 (
ch¨_u
 *)""},

678 {"t_£", 
NULL
, 
P_STRING
, (
ch¨_u
 *)&
ãrm_°rögs
[
KS_SE
],

679 (
ch¨_u
 *)""},

680 {"t_so", 
NULL
, 
P_STRING
, (
ch¨_u
 *)&
ãrm_°rögs
[
KS_SO
],

681 (
ch¨_u
 *)""},

682 {"t_§", 
NULL
, 
P_STRING
, (
ch¨_u
 *)&
ãrm_°rögs
[
KS_SR
],

683 (
ch¨_u
 *)""},

684 {"t_ã", 
NULL
, 
P_STRING
, (
ch¨_u
 *)&
ãrm_°rögs
[
KS_TE
],

685 (
ch¨_u
 *)""},

686 {"t_ti", 
NULL
, 
P_STRING
, (
ch¨_u
 *)&
ãrm_°rögs
[
KS_TI
],

687 (
ch¨_u
 *)""},

688 {"t_ue", 
NULL
, 
P_STRING
, (
ch¨_u
 *)&
ãrm_°rögs
[
KS_UE
],

689 (
ch¨_u
 *)""},

690 {"t_us", 
NULL
, 
P_STRING
, (
ch¨_u
 *)&
ãrm_°rögs
[
KS_US
],

691 (
ch¨_u
 *)""},

692 {"t_vb", 
NULL
, 
P_STRING
, (
ch¨_u
 *)&
ãrm_°rögs
[
KS_VB
],

693 (
ch¨_u
 *)""},

694 {"t_ve", 
NULL
, 
P_STRING
, (
ch¨_u
 *)&
ãrm_°rögs
[
KS_VE
],

695 (
ch¨_u
 *)""},

696 {"t_vi", 
NULL
, 
P_STRING
, (
ch¨_u
 *)&
ãrm_°rögs
[
KS_VI
],

697 (
ch¨_u
 *)""},

698 {"t_vs", 
NULL
, 
P_STRING
, (
ch¨_u
 *)&
ãrm_°rögs
[
KS_VS
],

699 (
ch¨_u
 *)""},

700 {"t_ZH", 
NULL
, 
P_STRING
, (
ch¨_u
 *)&
ãrm_°rögs
[
KS_CZH
],

701 (
ch¨_u
 *)""},

702 {"t_ZR", 
NULL
, 
P_STRING
, (
ch¨_u
 *)&
ãrm_°rögs
[
KS_CZR
],

703 (
ch¨_u
 *)""},

707 {
NULL
, NULL, 0, NULL, NULL}

710 
	#PARAM_COUNT
 ((
›ti⁄s
Ë/ (
›ti⁄
))

	)

712 #ifde‡
AUTOCMD


717 
	sAutoCmd


719 
ch¨_u
 *
	mcmd
;

720 
AutoCmd
 *
	m√xt
;

721 } 
	tAutoCmd
;

723 
	sAutoP©


725 
ch¨_u
 *
	m∑t
;

726 
ch¨_u
 *
	mªg_∑t
;

727 
	mÆlow_dúe˘‹õs
;

728 
AutoCmd
 *
	mcmds
;

729 
AutoP©
 *
	m√xt
;

730 } 
	tAutoP©
;

732 
	sevít_«me


734 *
	m«me
;

735 
	mevít
;

736 } 
	gevít_«mes
[] =

738 {"BufE¡î", 
EVENT_BUFENTER
},

739 {"BufLóve", 
EVENT_BUFLEAVE
},

740 {"BufNewFûe", 
EVENT_BUFNEWFILE
},

741 {"BufRódPo°", 
EVENT_BUFREADPOST
},

742 {"BufRódPª", 
EVENT_BUFREADPRE
},

743 {"BufRód", 
EVENT_BUFREADPOST
},

744 {"BufWrôePo°", 
EVENT_BUFWRITEPOST
},

745 {"BufWrôePª", 
EVENT_BUFWRITEPRE
},

746 {"BufWrôe", 
EVENT_BUFWRITEPRE
},

747 {"FûeAµídPo°", 
EVENT_FILEAPPENDPOST
},

748 {"FûeAµídPª", 
EVENT_FILEAPPENDPRE
},

749 {"FûeRódPo°", 
EVENT_FILEREADPOST
},

750 {"FûeRódPª", 
EVENT_FILEREADPRE
},

751 {"FûeWrôePo°", 
EVENT_FILEWRITEPOST
},

752 {"FûeWrôePª", 
EVENT_FILEWRITEPRE
},

753 {"FûãrRódPo°", 
EVENT_FILTERREADPOST
},

754 {"FûãrRódPª", 
EVENT_FILTERREADPRE
},

755 {"FûãrWrôePo°", 
EVENT_FILTERWRITEPOST
},

756 {"FûãrWrôePª", 
EVENT_FILTERWRITEPRE
},

757 {"VimLóve", 
EVENT_VIMLEAVE
},

758 {"WöE¡î", 
EVENT_WINENTER
},

759 {"WöLóve", 
EVENT_WINLEAVE
},

760 {
NULL
, 0}

763 
AutoP©
 *
	gfú°_aut›©
[
NUM_EVENTS
] =

765 
NULL
, NULL, NULL, NULL, NULL,

766 
NULL
, NULL, NULL, NULL, NULL,

767 
NULL
, NULL, NULL, NULL, NULL,

768 
NULL
, NULL, NULL, NULL, NULL

772 
£t_›ti⁄_deÁu…
 
__ARGS
((, ));

773 
ûÀgÆ_ch¨
 
__ARGS
((
ch¨_u
 *, ));

774 
ch¨_u
 *
›ti⁄_ex∑nd
 
__ARGS
(());

775 
föd›ti⁄
 
__ARGS
((
ch¨_u
 *));

776 
föd_key_›ti⁄
 
__ARGS
((
ch¨_u
 *));

777 
show›ti⁄s
 
__ARGS
(());

778 
›ti⁄_ch™ged
 
__ARGS
((
›ti⁄
 *));

779 
show⁄e›t
 
__ARGS
((
›ti⁄
 *));

780 
i°îm›ti⁄
 
__ARGS
((
›ti⁄
 *));

781 
ch¨_u
 *
gë_v¨p
 
__ARGS
((
›ti⁄
 *));

782 
›ti⁄_vÆue2°rög
 
__ARGS
((
›ti⁄
 *));

783 #ifde‡
HAVE_LANGMAP


784 
œngm≠_öô
 
__ARGS
(());

785 
œngm≠_£t
 
__ARGS
(());

787 
∑°e_›ti⁄_ch™ged
 
__ARGS
(());

788 
p_com∑tibÀ_£t
 
__ARGS
(());

789 
fûl_bªak©_Êags
 
__ARGS
(());

797 
	$£t_öô_1
()

799 
ch¨_u
 *
p
;

800 
›t_idx
;

801 
n
;

803 #ifde‡
HAVE_LANGMAP


804 
	`œngm≠_öô
();

810 i‡((
p
 = 
	`vim_gëív
((
ch¨_u
 *)"SHELL")Ë!
NULL


811 #i‡
	`deföed
(
MSDOS
Ë|| deföed(
WIN32
)

812 || (
p
 = 
	`vim_gëív
((
ch¨_u
 *)"COMSPEC")Ë!
NULL


813 #ifde‡
WIN32


814 || (
p
 = 
	`deÁu…_shñl
()Ë!
NULL


819 
p
 = 
	`°rßve
(p);

820 i‡(
p
 !
NULL
)

822 
›t_idx
 = 
	`föd›ti⁄
((
ch¨_u
 *)"sh");

823 
›ti⁄s
[
›t_idx
].
def_vÆ
 = 
p
;

824 
›ti⁄s
[
›t_idx
].
Êags
 |
P_DEF_ALLOCED
;

832 
›t_idx
 = 
	`föd›ti⁄
((
ch¨_u
 *)"hf");

833 #i‡
	`deföed
(
HAVE_CONFIG_H
Ë|| deföed(
OS2
)

834 
›ti⁄s
[
›t_idx
].
def_vÆ
 = 
hñp_‚ame
;

836 
›ti⁄s
[
›t_idx
].
def_vÆ
 = (
ch¨_u
 *)
VIM_HLP
;

842 
›t_idx
 = 
	`föd›ti⁄
((
ch¨_u
 *)"maxmemtot");

843 i‡(
›ti⁄s
[
›t_idx
].
def_vÆ
 =(
ch¨_u
 *)0L)

845 
n
 = (
	`mch_avaû_mem
(
FALSE
) >> 11);

846 
›ti⁄s
[
›t_idx
].
def_vÆ
 = (
ch¨_u
 *)
n
;

847 
›t_idx
 = 
	`föd›ti⁄
((
ch¨_u
 *)"maxmem");

848 i‡(()
›ti⁄s
[
›t_idx
].
def_vÆ
 > 
n
 ||

849 ()
›ti⁄s
[
›t_idx
].
def_vÆ
 == 0L)

850 
›ti⁄s
[
›t_idx
].
def_vÆ
 = (
ch¨_u
 *)
n
;

856 
›t_idx
 = 0; !
	`i°îm›ti⁄
(&
›ti⁄s
[opt_idx]); opt_idx++)

857 i‡(!(
›ti⁄s
[
›t_idx
].
Êags
 & 
P_NODEFAULT
))

858 
	`£t_›ti⁄_deÁu…
(
›t_idx
, 
FALSE
);

860 
curbuf
->
b_p_öôülized
 = 
TRUE
;

861 
	`check_buf_›ti⁄s
(
curbuf
);

862 
	`check_›ti⁄s
();

868 
	`öô_ch¨èb
();

873 
	`fûl_bªak©_Êags
();

883 
›t_idx
 = 0; !
	`i°îm›ti⁄
(&
›ti⁄s
[opt_idx]); opt_idx++)

885 
p
 = 
	`›ti⁄_ex∑nd
(
›t_idx
);

886 i‡(
p
 !
NULL
)

888 *(
ch¨_u
 **)
›ti⁄s
[
›t_idx
].
v¨
 = 
p
;

889 
›ti⁄s
[
›t_idx
].
def_vÆ
 = 
p
;

890 
›ti⁄s
[
›t_idx
].
Êags
 |
P_DEF_ALLOCED
;

893 
	}
}

899 
	$£t_›ti⁄_deÁu…
(
›t_idx
, 
do‰ì
)

900 
›t_idx
;

901 
do‰ì
;

903 
ch¨_u
 *
v¨p
;

905 
v¨p
 = 
	`gë_v¨p
(&(
›ti⁄s
[
›t_idx
]));

906 i‡(
v¨p
 !
NULL
)

908 i‡(
›ti⁄s
[
›t_idx
].
Êags
 & 
P_STRING
)

911 i‡(
›ti⁄s
[
›t_idx
].
Êags
 & 
P_IND
)

912 
	`£t_°rög_›ti⁄
(
NULL
, 
›t_idx
,

913 
›ti⁄s
[
›t_idx
].
def_vÆ
, 
do‰ì
);

916 i‡(
do‰ì
 && (
›ti⁄s
[
›t_idx
].
Êags
 & 
P_ALLOCED
))

917 
	`‰ì_°rög_›ti⁄
(*(
ch¨_u
 **)(
v¨p
));

918 *(
ch¨_u
 **)
v¨p
 = 
›ti⁄s
[
›t_idx
].
def_vÆ
;

919 
›ti⁄s
[
›t_idx
].
Êags
 &~
P_ALLOCED
;

922 i‡(
›ti⁄s
[
›t_idx
].
Êags
 & 
P_NUM
)

923 *(*)
v¨p
 = ()
›ti⁄s
[
›t_idx
].
def_vÆ
;

926 *(*)
v¨p
 = ()()
›ti⁄s
[
›t_idx
].
def_vÆ
;

928 
	}
}

934 
	$£t_öô_2
()

940 
›ti⁄s
[
	`föd›ti⁄
((
ch¨_u
 *)"s¸ﬁl")].
def_vÆ
 = (ch¨_u *)(
Rows
 >> 1);

942 
	`comp_cﬁ
();

943 
	}
}

949 
	$£t_öô_3
()

951 
idx1
;

953 #i‡
	`deföed
(
UNIX
Ë|| deföed(
OS2
)

959 
ch¨_u
 *
p
;

960 
idx2
;

961 
do_•
;

962 
do_§r
;

964 
idx1
 = 
	`föd›ti⁄
((
ch¨_u
 *)"sp");

965 
idx2
 = 
	`föd›ti⁄
((
ch¨_u
 *)"srr");

966 
do_•
 = !(
›ti⁄s
[
idx1
].
Êags
 & 
P_WAS_SET
);

967 
do_§r
 = !(
›ti⁄s
[
idx2
].
Êags
 & 
P_WAS_SET
);

973 
p
 = 
	`gëèû
(
p_sh
);

974 i‡–
	`STRCMP
(
p
, "csh") == 0 ||

975 
	`STRCMP
(
p
, "tcsh") == 0)

977 i‡(
do_•
)

979 
p_•
 = (
ch¨_u
 *)"|&Åee";

980 
›ti⁄s
[
idx1
].
def_vÆ
 = 
p_•
;

982 i‡(
do_§r
)

984 
p_§r
 = (
ch¨_u
 *)">&";

985 
›ti⁄s
[
idx2
].
def_vÆ
 = 
p_§r
;

988 i‡(
	`STRCMP
(
p
, "sh") == 0 ||

989 
	`STRCMP
(
p
, "ksh") == 0 ||

990 
	`STRCMP
(
p
, "zsh") == 0 ||

991 #ifde‡
OS2


992 
	`STRCMP
(
p
, "cmd") == 0 ||

994 
	`STRCMP
(
p
, "bash") == 0)

996 i‡(
do_•
)

998 
p_•
 = (
ch¨_u
 *)"2>&1|Åee";

999 
›ti⁄s
[
idx1
].
def_vÆ
 = 
p_•
;

1001 i‡(
do_§r
)

1003 
p_§r
 = (
ch¨_u
 *)">%s 2>&1";

1004 
›ti⁄s
[
idx2
].
def_vÆ
 = 
p_§r
;

1016 
idx1
 = 
	`föd›ti⁄
((
ch¨_u
 *)"title");

1017 i‡(!(
›ti⁄s
[
idx1
].
Êags
 & 
P_WAS_SET
Ë&& 
	`mch_ˇn_ª°‹e_tôÀ
())

1019 
›ti⁄s
[
idx1
].
def_vÆ
 = (
ch¨_u
 *)
TRUE
;

1020 
p_tôÀ
 = 
TRUE
;

1022 
idx1
 = 
	`föd›ti⁄
((
ch¨_u
 *)"icon");

1023 i‡(!(
›ti⁄s
[
idx1
].
Êags
 & 
P_WAS_SET
Ë&& 
	`mch_ˇn_ª°‹e_ic⁄
())

1025 
›ti⁄s
[
idx1
].
def_vÆ
 = (
ch¨_u
 *)
TRUE
;

1026 
p_ic⁄
 = 
TRUE
;

1028 
	}
}

1039 
	$do_£t
(
¨g
)

1040 
ch¨_u
 *
¨g
;

1042 
›t_idx
;

1043 
ch¨_u
 *
îrmsg
;

1044 
ch¨_u
 
îrbuf
[80];

1045 
ch¨_u
 *
°¨èrg
;

1046 
¥efix
;

1047 
√xtch¨
;

1048 
Àn
;

1049 
i
;

1050 
key
;

1051 
Êags
;

1052 
ch¨_u
 *
v¨p
 = 
NULL
;

1053 
ch¨_u
 *
ﬁdvÆ
;

1054 
îr˙t
 = 0;

1055 
ﬁdRows
 = 
Rows
;

1056 
ﬁdCﬁumns
 = 
Cﬁumns
;

1057 
ﬁdbö
;

1058 
ﬁdch
 = 
p_ch
;

1059 
ﬁdó
 = 
p_ó
;

1060 
ﬁduc
 = 
p_uc
;

1061 
did_show
 = 
FALSE
;

1062 
WIN
 *
wp
;

1064 i‡(*
¨g
 =
NUL
)

1066 
	`show›ti⁄s
(0);

1067  
OK
;

1070 *
¨g
)

1072 
îrmsg
 = 
NULL
;

1073 
°¨èrg
 = 
¨g
;

1075 i‡(
	`STRNCMP
(
¨g
, "Æl", (
size_t
)3) == 0)

1077 
	`show›ti⁄s
(1);

1078 
¨g
 += 3;

1080 i‡(
	`STRNCMP
(
¨g
, "ãrmˇp", (
size_t
)7) == 0)

1082 
	`show›ti⁄s
(2);

1083 
	`show_ãrmcodes
();

1084 
¨g
 += 7;

1088 
¥efix
 = 1;

1089 i‡(
	`STRNCMP
(
¨g
, "no", (
size_t
)2) == 0)

1091 
¥efix
 = 0;

1092 
¨g
 += 2;

1094 i‡(
	`STRNCMP
(
¨g
, "öv", (
size_t
)3) == 0)

1096 
¥efix
 = 2;

1097 
¨g
 += 3;

1100 i‡(*
¨g
 == '<')

1102 
›t_idx
 = -1;

1104 i‡(
¨g
[1] == 't' &&árg[2] == '_' &&árg[3] &&árg[4])

1105 
Àn
 = 5;

1108 
Àn
 = 1;

1109 
¨g
[
Àn
] !
NUL
 &&árg[len] != '>')

1110 ++
Àn
;

1112 i‡(
¨g
[
Àn
] != '>')

1114 
îrmsg
 = 
e_öv¨g
;

1115 
skù
;

1117 
√xtch¨
 = 
¨g
[
Àn
];

1118 
¨g
[
Àn
] = 
NUL
;

1119 i‡(
¨g
[1] == 't' &&árg[2] == '_')

1120 
›t_idx
 = 
	`föd›ti⁄
(
¨g
 + 1);

1121 
key
 = 0;

1122 i‡(
›t_idx
 == -1)

1123 
key
 = 
	`föd_key_›ti⁄
(
¨g
 + 1);

1124 
¨g
[
Àn
++] = 
√xtch¨
;

1125 
√xtch¨
 = 
¨g
[
Àn
];

1129 
Àn
 = 0;

1133 i‡(
¨g
[0] == 't' &&árg[1] == '_' &&árg[2] &&árg[3])

1135 
Àn
 = 4;

1139 
	`iß um
(
¨g
[
Àn
]) ||árg[len] == '_')

1140 ++
Àn
;

1142 
√xtch¨
 = 
¨g
[
Àn
];

1143 
¨g
[
Àn
] = 
NUL
;

1144 
›t_idx
 = 
	`föd›ti⁄
(
¨g
);

1145 
key
 = 0;

1146 i‡(
›t_idx
 == -1)

1147 
key
 = 
	`föd_key_›ti⁄
(
¨g
);

1148 
¨g
[
Àn
] = 
√xtch¨
;

1151 i‡(
›t_idx
 =-1 && 
key
 == 0)

1153 
îrmsg
 = (
ch¨_u
 *)"Unknown option";

1154 
skù
;

1157 i‡(
›t_idx
 >= 0)

1159 i‡(
›ti⁄s
[
›t_idx
].
v¨
 =
NULL
)

1160 
skù
;

1162 
Êags
 = 
›ti⁄s
[
›t_idx
].flags;

1163 
v¨p
 = 
	`gë_v¨p
(&(
›ti⁄s
[
›t_idx
]));

1166 
Êags
 = 
P_STRING
;

1169 
	`vim_iswhôe
(
√xtch¨
))

1170 
√xtch¨
 = 
¨g
[++
Àn
];

1172 i‡(
	`vim_°rchr
((
ch¨_u
 *)"?=:!&", 
√xtch¨
Ë!
NULL
)

1174 
¨g
 +
Àn
;

1175 
Àn
 = 0;

1182 i‡(
√xtch¨
 ='?' || (
¥efix
 =1 && 
	`vim_°rchr
((
ch¨_u
 *)"=:&",

1183 
√xtch¨
Ë=
NULL
 && !(
Êags
 & 
P_BOOL
)))

1185 i‡(
did_show
)

1186 
	`msg_outch¨
('\n');

1189 
	`gŸocmdlöe
(
TRUE
);

1190 
did_show
 = 
TRUE
;

1192 i‡(
›t_idx
 >= 0)

1193 
	`show⁄e›t
(&
›ti⁄s
[
›t_idx
]);

1196 
ch¨_u
 
«me
[2];

1197 
ch¨_u
 *
p
;

1199 
«me
[0] = 
	`KEY2TERMCAP0
(
key
);

1200 
«me
[1] = 
	`KEY2TERMCAP1
(
key
);

1201 
p
 = 
	`föd_ãrmcode
(
«me
);

1202 i‡(
p
 =
NULL
)

1204 
îrmsg
 = (
ch¨_u
 *)"Unknown option";

1205 
skù
;

1208 ()
	`show_⁄e_ãrmcode
(
«me
, 
p
, 
TRUE
);

1210 i‡(
√xtch¨
 !'?' &&Çextch¨ !
NUL
 &&

1211 !
	`vim_iswhôe
(
√xtch¨
))

1212 
îrmsg
 = 
e_åaûög
;

1216 i‡(
Êags
 & 
P_BOOL
)

1218 i‡(
√xtch¨
 == '=' ||Çextchar == ':')

1220 
îrmsg
 = 
e_öv¨g
;

1221 
skù
;

1228 i‡(
£cuª
 && (*)
v¨p
 =&
p_£cuª
)

1230 
îrmsg
 = (
ch¨_u
 *)"notállowed here";

1231 
skù
;

1234 
ﬁdbö
 = 
curbuf
->
b_p_bö
;

1241 i‡(
¥efix
 =2 || 
√xtch¨
 == '!')

1242 *(*)(
v¨p
) ^= 1;

1243 i‡(
√xtch¨
 == '&')

1245 *(*)(
v¨p
Ë()()
›ti⁄s
[
›t_idx
].
def_vÆ
;

1247 *(*)(
v¨p
Ë
¥efix
;

1250 i‡((*)
v¨p
 =&
p_˝
 &&Ö_cp)

1252 
	`p_com∑tibÀ_£t
();

1255 i‡((*)
v¨p
 =&
curbuf
->
b_p_ro
 && !curbuf->b_p_ro)

1256 
ªad⁄lymode
 = 
FALSE
;

1259 i‡((*)
v¨p
 =&
curbuf
->
b_p_bö
)

1261 
	`£t_›ti⁄s_bö
(
ﬁdbö
, 
curbuf
->
b_p_bö
);

1264 i‡((*)
v¨p
 =&
p_ãr£
)

1266 
ch¨_u
 *
p
;

1268 
p
 = 
	`vim_°rchr
(
p_shm
, 
SHM_SEARCH
);

1271 i‡(
p_ãr£
 && 
p
 =
NULL
)

1273 
	`STRCPY
(
IObuff
, 
p_shm
);

1274 
	`STRCAT
(
IObuff
, "s");

1275 
	`£t_°rög_›ti⁄
((
ch¨_u
 *)"shm", -1,

1276 
IObuff
, 
TRUE
);

1279 i‡(!
p_ãr£
 && 
p
 !
NULL
)

1280 
	`vim_memmove
(
p
,Ö + 1, 
	`STRLEN
(p));

1283 i‡((*)
v¨p
 =&
p_∑°e
)

1285 
	`∑°e_›ti⁄_ch™ged
();

1291 i‡(
v¨p
 =(
ch¨_u
 *)&(
curbuf
->
b_p_li•
))

1292 
	`öô_ch¨èb
();

1294 i‡(!
°¨tög
 && ((*)
v¨p
 =&
p_tôÀ
 ||

1295 (*)
v¨p
 =&
p_ic⁄
))

1304 
	`makëôÀ
();

1305 i‡(!*(*)
v¨p
)

1306 
	`mch_ª°‹e_tôÀ
((*)
v¨p
 =&
p_tôÀ
 ? 1 : 2);

1311 i‡(
	`vim_°rchr
((
ch¨_u
 *)"=:&", 
√xtch¨
Ë=
NULL
 ||

1312 
¥efix
 != 1)

1314 
îrmsg
 = 
e_öv¨g
;

1315 
skù
;

1317 i‡(
Êags
 & 
P_NUM
)

1327 
¨g
 +
Àn
 + 1;

1328 i‡(
√xtch¨
 == '&')

1329 *(*)(
v¨p
Ë()
›ti⁄s
[
›t_idx
].
def_vÆ
;

1330 i‡((*)
v¨p
 =&
p_wc
 &&

1331 (*
¨g
 == '<' || *arg == '^' ||

1332 ((!
¨g
[1] || 
	`vim_iswhôe
(arg[1])) &&

1333 !
	`isdigô
(*
¨g
))))

1335 i‡(*
¨g
 == '<')

1337 
i
 = 
	`gë_•ecül_key_code
(
¨g
 + 1);

1338 i‡(
i
 == 0)

1339 
i
 = 
	`föd_key_›ti⁄
(
¨g
 + 1);

1341 i‡(*
¨g
 == '^')

1342 
i
 = 
¨g
[1] ^ 0x40;

1344 
i
 = *
¨g
;

1345 i‡(
i
 == 0)

1347 
îrmsg
 = 
e_öv¨g
;

1348 
skù
;

1350 
p_wc
 = 
i
;

1353 i‡(*
¨g
 ='-' || 
	`isdigô
(*arg))

1355 
i
 = 0;

1356 i‡(*
¨g
 == '-')

1357 
i
 = 1;

1358 #ifde‡
HAVE_STRTOL


1359 *(*)(
v¨p
Ë
	`°πﬁ
((*)
¨g
, 
NULL
, 0);

1360 i‡(
¨g
[
i
] ='0' && 
	`TO_UPPER
(arg[i + 1]) == 'X')

1361 
i
 += 2;

1363 *(*)(
v¨p
Ë
	`©ﬁ
((*)
¨g
);

1365 
	`isdigô
(
¨g
[
i
]))

1366 ++
i
;

1367 i‡(
¨g
[
i
] !
NUL
 && !
	`vim_iswhôe
(arg[i]))

1369 
îrmsg
 = 
e_öv¨g
;

1370 
skù
;

1375 
îrmsg
 = (
ch¨_u
 *)"NumberÑequiredáfter =";

1376 
skù
;

1382 i‡((*)
v¨p
 =&
p_wh
 || (*)v¨∞=&
p_hh
)

1384 i‡(
p_wh
 < 0)

1386 
îrmsg
 = 
e_posôive
;

1387 
p_wh
 = 0;

1389 i‡(
p_hh
 < 0)

1391 
îrmsg
 = 
e_posôive
;

1392 
p_hh
 = 0;

1395 i‡(
p_wh
 && 
œ°wö
 !
fú°wö
)

1397 
	`wö_equÆ
(
curwö
, 
FALSE
);

1398 
mu°_ªdøw
 = 
CLEAR
;

1402 i‡((*)
v¨p
 =&
p_ls
)

1403 
	`œ°_°©us
();

1405 i‡(
›t_idx
 >= 0)

1407 
ch¨_u
 *
ßve_¨g
 = 
NULL
;

1408 
ch¨_u
 *
s
, *
p
;

1409 
√w_vÆue_Ælo˚d
;

1416 
ﬁdvÆ
 = *(
ch¨_u
 **)(
v¨p
);

1417 i‡(
√xtch¨
 == '&')

1419 
	`£t_›ti⁄_deÁu…
(
›t_idx
, 
FALSE
);

1420 
√w_vÆue_Ælo˚d
 =

1421 (
›ti⁄s
[
›t_idx
].
Êags
 & 
P_ALLOCED
);

1425 
¨g
 +
Àn
 + 1;

1432 i‡(
v¨p
 =(
ch¨_u
 *)&
p_ww
 && 
	`isdigô
(*
¨g
))

1434 *
îrbuf
 = 
NUL
;

1435 
i
 = 
	`gëdigôs
(&
¨g
);

1436 i‡(
i
 & 1)

1437 
	`STRCAT
(
îrbuf
, "b,");

1438 i‡(
i
 & 2)

1439 
	`STRCAT
(
îrbuf
, "s,");

1440 i‡(
i
 & 4)

1441 
	`STRCAT
(
îrbuf
, "h,l,");

1442 i‡(
i
 & 8)

1443 
	`STRCAT
(
îrbuf
, "<,>,");

1444 i‡(
i
 & 16)

1445 
	`STRCAT
(
îrbuf
, "[,],");

1446 i‡(*
îrbuf
 !
NUL
)

1447 
îrbuf
[
	`STRLEN
”ºbufË- 1] = 
NUL
;

1448 
ßve_¨g
 = 
¨g
;

1449 
¨g
 = 
îrbuf
;

1455 i‡(*
¨g
 ='>' && (
v¨p
 =(
ch¨_u
 *)&
p_dú
 ||

1456 
v¨p
 =(
ch¨_u
 *)&
p_bdú
))

1458 ++
¨g
;

1467 
s
 = 
	`Æloc
(()(
	`STRLEN
(
¨g
) + 1));

1468 i‡(
s
 =
NULL
)

1470 *(
ch¨_u
 **)(
v¨p
Ë
s
;

1477 *
¨g
 && !
	`vim_iswhôe
(*arg))

1479 i‡(*
¨g
 ='\\' &&árg[1] !
NUL


1480 #ifde‡
BACKSLASH_IN_FILENAME


1481 && !((
Êags
 & 
P_EXPAND
)

1482 && 
	`isfûech¨
(
¨g
[1])

1483 && 
¨g
[1] != '\\')

1486 ++
¨g
;

1487 *
s
++ = *
¨g
++;

1489 *
s
 = 
NUL
;

1490 i‡(
ßve_¨g
 !
NULL
)

1491 
¨g
 = 
ßve_¨g
;

1492 
√w_vÆue_Ælo˚d
 = 
TRUE
;

1496 
s
 = 
	`›ti⁄_ex∑nd
(
›t_idx
);

1497 i‡(
s
 !
NULL
)

1499 i‡(
√w_vÆue_Ælo˚d
)

1500 
	`vim_‰ì
(*(
ch¨_u
 **)(
v¨p
));

1501 *(
ch¨_u
 **)(
v¨p
Ë
s
;

1502 
√w_vÆue_Ælo˚d
 = 
TRUE
;

1509 i‡(
v¨p
 =(
ch¨_u
 *)&
ãrm_°rögs
[
KS_NAME
])

1511 i‡(
ãrm_°rögs
[
KS_NAME
][0] =
NUL
)

1512 
îrmsg
 = (
ch¨_u
 *)"Cannot set 'term'ÅoÉmpty string";

1513 i‡(
	`£t_ãrm«me
(
ãrm_°rögs
[
KS_NAME
]) ==

1514 
FAIL
)

1515 
îrmsg
 = (
ch¨_u
 *)"Not found inÅermcap";

1519 
	`out°r
(
T_ME
);

1520 
	`upd©eS¸ìn
(
CLEAR
);

1524 i‡((
v¨p
 =(
ch¨_u
 *)&
p_bex
 ||

1525 
v¨p
 =(
ch¨_u
 *)&
p_pm
))

1527 i‡(
	`STRCMP
(*
p_bex
 == '.' ?Ö_bex + 1 :Ö_bex,

1528 *
p_pm
 == '.' ?Ö_pm + 1 :Ö_pm) == 0)

1529 
îrmsg
 = (
ch¨_u
 *)"'backupext'ánd 'patchmode'áreÉqual";

1537 i‡(
v¨p
 =(
ch¨_u
 *)&
p_isi
 ||

1538 
v¨p
 =(
ch¨_u
 *)&(
curbuf
->
b_p_isk
) ||

1539 
v¨p
 =(
ch¨_u
 *)&
p_i•
 ||

1540 
v¨p
 =(
ch¨_u
 *)&
p_isf
)

1542 i‡(
	`öô_ch¨èb
(Ë=
FAIL
)

1543 
îrmsg
 = 
e_öv¨g
;

1545 i‡(
v¨p
 =(
ch¨_u
 *)&
p_hl
)

1548 
s
 = 
p_hl
; *s; )

1550 i‡(
	`vim_°rchr
((
ch¨_u
 *)"8dehmMnrstvw",

1551 (
i
 = 
s
[0])Ë=
NULL
 ||

1552 
	`vim_°rchr
((
ch¨_u
 *)"bsnuir",

1553 (
i
 = 
s
[1])Ë=
NULL
 ||

1554 ((
i
 = 
s
[2]Ë!
NUL
 && i != ','))

1556 
	`ûÀgÆ_ch¨
(
îrbuf
, 
i
);

1557 
îrmsg
 = 
îrbuf
;

1560 i‡(
s
[2] =
NUL
)

1562 
s
 = 
	`skùwhôe
(s + 3);

1565 i‡(
v¨p
 =(
ch¨_u
 *)&(
curbuf
->
b_p_com
))

1567 
s
 = 
curbuf
->
b_p_com
; *s; )

1569 *
s
 && *s != ':')

1571 i‡(
	`vim_°rchr
((
ch¨_u
 *)
COM_ALL
, *
s
Ë=
NULL
)

1573 
îrmsg
 = (
ch¨_u
 *)"Illegal flag";

1576 ++
s
;

1578 i‡(*
s
++ =
NUL
)

1579 
îrmsg
 = (
ch¨_u
 *)"Missing colon";

1580 i‡(*
s
 == ',')

1581 
îrmsg
 = (
ch¨_u
 *)"ZeroÜength string";

1582 i‡(
îrmsg
 !
NULL
)

1584 *
s
 && *s != ',')

1586 i‡(*
s
 ='\\' && s[1] !
NUL
)

1587 ++
s
;

1588 ++
s
;

1590 
s
 = 
	`skù_to_›ti⁄_∑π
(s);

1593 #ifde‡
VIMINFO


1594 i‡(
v¨p
 =(
ch¨_u
 *)&(
p_vimöfo
))

1596 
s
 = 
p_vimöfo
; *s;)

1599 i‡(
	`vim_°rchr
((
ch¨_u
 *)"\"'‰:/", *
s
Ë=
NULL
)

1601 
	`ûÀgÆ_ch¨
(
îrbuf
, *
s
);

1602 
îrmsg
 = 
îrbuf
;

1605 i‡(*
s
 == 'r')

1607 *++
s
 && *s != ',')

1612 
	`isdigô
(*++
s
))

1616 i‡(!
	`isdigô
(*(
s
 - 1)))

1618 
	`•rötf
((*)
îrbuf
,

1620 
	`å™sch¨
(*(
s
 - 1)));

1621 
îrmsg
 = 
îrbuf
;

1625 
s
 = 
	`skù_to_›ti⁄_∑π
(s);

1627 i‡(*
p_vimöfo
 && 
îrmsg
 =
NULL


1628 && 
	`gë_vimöfo_∑ømëî
('\'') < 0)

1629 
îrmsg
 = (
ch¨_u
 *)"Must specifyá ' value";

1632 i‡(
	`i°îm›ti⁄
(&
›ti⁄s
[
›t_idx
]Ë&& 
fuŒ_s¸ìn
)

1634 
	`âe°
(
FALSE
);

1635 i‡(
v¨p
 =(
ch¨_u
 *)&
ãrm_°rögs
[
KS_ME
])

1637 
	`out°r
(
T_ME
);

1638 
	`upd©eS¸ìn
(
CLEAR
);

1641 i‡(
v¨p
 =(
ch¨_u
 *)&
p_sbr
)

1643 
s
 = 
p_sbr
; *s; ++s)

1644 i‡(
	`ch¨size
(*
s
) != 1)

1645 
îrmsg
 = (
ch¨_u
 *)"contains unprintable character";

1647 #ifde‡
USE_GUI


1648 i‡(
v¨p
 =(
ch¨_u
 *)&
p_guif⁄t
)

1650 
	`gui_öô_f⁄t
();

1653 #ifde‡
HAVE_LANGMAP


1654 i‡(
v¨p
 =(
ch¨_u
 *)&
p_œngm≠
)

1655 
	`œngm≠_£t
();

1657 i‡(
v¨p
 =(
ch¨_u
 *)&
p_bªak©
)

1658 
	`fûl_bªak©_Êags
();

1664 
p
 = 
NULL
;

1665 i‡(
v¨p
 =(
ch¨_u
 *)&
p_ww
)

1666 
p
 = (
ch¨_u
 *)
WW_ALL
;

1667 i‡(
v¨p
 =(
ch¨_u
 *)&
p_shm
)

1668 
p
 = (
ch¨_u
 *)
SHM_ALL
;

1669 i‡(
v¨p
 =(
ch¨_u
 *)&(
p_˝o
))

1670 
p
 = (
ch¨_u
 *)
CPO_ALL
;

1671 i‡(
v¨p
 =(
ch¨_u
 *)&(
curbuf
->
b_p_fo
))

1672 
p
 = (
ch¨_u
 *)
FO_ALL
;

1673 i‡(
v¨p
 =(
ch¨_u
 *)&
p_mou£
)

1675 #ifde‡
USE_MOUSE


1676 
p
 = (
ch¨_u
 *)
MOUSE_ALL
;

1678 i‡(*
p_mou£
 !
NUL
)

1679 
îrmsg
 = (
ch¨_u
 *)"No mouse support";

1682 #ifde‡
USE_GUI


1683 i‡(
v¨p
 =(
ch¨_u
 *)&
p_gui›ti⁄s
)

1684 
p
 = (
ch¨_u
 *)
GO_ALL
;

1686 i‡(
p
 !
NULL
)

1688 
s
 = *(
ch¨_u
 **)(
v¨p
); *s; ++s)

1689 i‡(
	`vim_°rchr
(
p
, *
s
Ë=
NULL
)

1691 
	`ûÀgÆ_ch¨
(
îrbuf
, *
s
);

1692 
îrmsg
 = 
îrbuf
;

1697 i‡(
îrmsg
 !
NULL
)

1699 i‡(
√w_vÆue_Ælo˚d
)

1700 
	`vim_‰ì
(*(
ch¨_u
 **)(
v¨p
));

1701 *(
ch¨_u
 **)(
v¨p
Ë
ﬁdvÆ
;

1702 ()
	`öô_ch¨èb
();

1703 
skù
;

1706 #ifde‡
USE_GUI


1707 i‡(
v¨p
 =(
ch¨_u
 *)&
p_gui›ti⁄s
)

1708 
	`gui_öô_which_comp⁄íts
(
ﬁdvÆ
);

1714 i‡(
Êags
 & 
P_ALLOCED
)

1715 
	`‰ì_°rög_›ti⁄
(
ﬁdvÆ
);

1716 i‡(
√w_vÆue_Ælo˚d
)

1717 
›ti⁄s
[
›t_idx
].
Êags
 |
P_ALLOCED
;

1721 
ch¨_u
 
«me
[2];

1722 
ch¨_u
 *
p
;

1724 
«me
[0] = 
	`KEY2TERMCAP0
(
key
);

1725 
«me
[1] = 
	`KEY2TERMCAP1
(
key
);

1726 i‡(
√xtch¨
 == '&')

1728 i‡(
	`add_ãrmˇp_íåy
(
«me
, 
TRUE
Ë=
FAIL
)

1729 
îrmsg
 = (
ch¨_u
 *)"Not found inÅermcap";

1733 
¨g
 +
Àn
 + 1;

1734 
p
 = 
¨g
; *∞&& !
	`vim_iswhôe
(*p); ++p)

1736 i‡(*
p
 == '\\' && *(p + 1))

1737 ++
p
;

1739 
√xtch¨
 = *
p
;

1740 *
p
 = 
NUL
;

1741 
	`add_ãrmcode
(
«me
, 
¨g
);

1742 *
p
 = 
√xtch¨
;

1744 i‡(
fuŒ_s¸ìn
)

1745 
	`âe°
(
FALSE
);

1748 i‡(
›t_idx
 >= 0)

1749 
›ti⁄s
[
›t_idx
].
Êags
 |
P_WAS_SET
;

1752 
skù
:

1756 i‡(
Rows
 < 
	`mö_rows
(Ë&& 
fuŒ_s¸ìn
)

1758 
	`•rötf
((*)
îrbuf
, "NìdáàÀa° %dÜöes", 
	`mö_rows
());

1759 
îrmsg
 = 
îrbuf
;

1760 
Rows
 = 
	`mö_rows
();

1762 i‡(
Cﬁumns
 < 
MIN_COLUMNS
 && 
fuŒ_s¸ìn
)

1764 
	`•rötf
((*)
îrbuf
, "NeedátÜeast %d columns",

1765 
MIN_COLUMNS
);

1766 
îrmsg
 = 
îrbuf
;

1767 
Cﬁumns
 = 
MIN_COLUMNS
;

1773 i‡((
ﬁdRows
 !
Rows
 || 
ﬁdCﬁumns
 !
Cﬁumns
Ë&& 
fuŒ_s¸ìn
)

1775 
	`mch_£t_wösize
();

1776 
	`check_wösize
();

1777 #ifde‡
MSDOS


1778 
	`£t_wödow
();

1782 i‡(
curbuf
->
b_p_ts
 <= 0)

1784 
îrmsg
 = 
e_posôive
;

1785 
curbuf
->
b_p_ts
 = 8;

1787 i‡(
p_tm
 < 0)

1789 
îrmsg
 = 
e_posôive
;

1790 
p_tm
 = 0;

1792 i‡((
curwö
->
w_p_s¸ﬁl
 <= 0 ||

1793 
curwö
->
w_p_s¸ﬁl
 > curwö->
w_height
Ë&& 
fuŒ_s¸ìn
)

1795 i‡(
curwö
->
w_p_s¸ﬁl
 != 0)

1796 
îrmsg
 = 
e_s¸ﬁl
;

1797 
	`wö_comp_s¸ﬁl
(
curwö
);

1799 i‡(
p_ªp‹t
 < 0)

1801 
îrmsg
 = 
e_posôive
;

1802 
p_ªp‹t
 = 1;

1804 i‡((
p_sj
 < 0 ||Ö_sj >
Rows
Ë&& 
fuŒ_s¸ìn
)

1806 i‡(
Rows
 !
ﬁdRows
)

1807 
p_sj
 = 
Rows
 / 2;

1810 
îrmsg
 = 
e_s¸ﬁl
;

1811 
p_sj
 = 1;

1814 i‡(
p_so
 < 0 && 
fuŒ_s¸ìn
)

1816 
îrmsg
 = 
e_s¸ﬁl
;

1817 
p_so
 = 0;

1819 i‡(
p_uc
 < 0)

1821 
îrmsg
 = 
e_posôive
;

1822 
p_uc
 = 100;

1824 i‡(
p_ch
 < 1)

1826 
îrmsg
 = 
e_posôive
;

1827 
p_ch
 = 1;

1829 i‡(
p_ut
 < 0)

1831 
îrmsg
 = 
e_posôive
;

1832 
p_ut
 = 2000;

1834 i‡(
p_ss
 < 0)

1836 
îrmsg
 = 
e_posôive
;

1837 
p_ss
 = 0;

1845 *
¨g
 !
NUL
 && !
	`vim_iswhôe
(*arg))

1846 i‡(*
¨g
++ ='\\' && *¨g !
NUL
)

1847 ++
¨g
;

1849 
¨g
 = 
	`skùwhôe
(arg);

1851 i‡(
îrmsg
)

1853 ++
no_waô_ªtu∫
;

1854 #ifde‡
SLEEP_IN_EMSG


1855 ++
d⁄t_¶ìp
;

1857 
	`emsg
(
îrmsg
);

1858 #ifde‡
SLEEP_IN_EMSG


1859 --
d⁄t_¶ìp
;

1861 
	`MSG_OUTSTR
(": ");

1863 
°¨èrg
 < 
¨g
)

1864 
	`msg_out°r
(
	`å™sch¨
(*
°¨èrg
++));

1865 
	`msg_íd
();

1866 --
no_waô_ªtu∫
;

1868 ++
îr˙t
;

1869 
did_show
 = 
TRUE
;

1870 i‡(
sourcög_«me
 !
NULL
)

1878 i‡(
p_uc
 && !
ﬁduc
)

1879 
	`ml_›í_fûes
();

1881 i‡(
p_ch
 !
ﬁdch
)

1882 
	`comm™d_height
();

1883 #ifde‡
USE_MOUSE


1884 i‡(*
p_mou£
 =
NUL
)

1885 
	`mch_£tmou£
(
FALSE
);

1887 
	`£tmou£
();

1889 
	`comp_cﬁ
();

1890 
curwö
->
w_£t_cursw™t
 = 
TRUE
;

1897 
wp
 = 
fú°wö
; wp; w∞wp->
w_√xt
)

1898 
wp
->
w_ªdr_°©us
 = 
TRUE
;

1899 i‡(
p_ó
 && !
ﬁdó
)

1900 
	`wö_equÆ
(
curwö
, 
FALSE
);

1901 
	`upd©eS¸ìn
(
CURSUPD
);

1902  (
îr˙t
 =0 ? 
OK
 : 
FAIL
);

1903 
	}
}

1906 
	$ûÀgÆ_ch¨
(
îrbuf
, 
c
)

1907 
ch¨_u
 *
îrbuf
;

1908 
c
;

1910 
	`•rötf
((*)
îrbuf
, "IŒegÆ ch¨a˘î <%s>", (*)
	`å™sch¨
(
c
));

1911 
	}
}

1917 
	$£t_›ti⁄s_bö
(
ﬁdvÆ
, 
√wvÆ
)

1918 
ﬁdvÆ
;

1919 
√wvÆ
;

1925 i‡(
√wvÆ
)

1927 i‡(!
ﬁdvÆ
)

1929 
curbuf
->
b_p_tw_nobö
 = curbuf->
b_p_tw
;

1930 
curbuf
->
b_p_wm_nobö
 = curbuf->
b_p_wm
;

1931 
curbuf
->
b_p_tx_nobö
 = curbuf->
b_p_tx
;

1932 
curbuf
->
b_p_è_nobö
 = 
p_è
;

1933 
curbuf
->
b_p_ml_nobö
 = curbuf->
b_p_ml
;

1934 
curbuf
->
b_p_ë_nobö
 = curbuf->
b_p_ë
;

1937 
curbuf
->
b_p_tw
 = 0;

1938 
curbuf
->
b_p_wm
 = 0;

1939 
curbuf
->
b_p_tx
 = 0;

1940 
p_è
 = 0;

1941 
curbuf
->
b_p_ml
 = 0;

1942 
curbuf
->
b_p_ë
 = 0;

1944 i‡(
ﬁdvÆ
)

1946 
curbuf
->
b_p_tw
 = curbuf->
b_p_tw_nobö
;

1947 
curbuf
->
b_p_wm
 = curbuf->
b_p_wm_nobö
;

1948 
curbuf
->
b_p_tx
 = curbuf->
b_p_tx_nobö
;

1949 
p_è
 = 
curbuf
->
b_p_è_nobö
;

1950 
curbuf
->
b_p_ml
 = curbuf->
b_p_ml_nobö
;

1951 
curbuf
->
b_p_ë
 = curbuf->
b_p_ë_nobö
;

1953 
	}
}

1955 #ifde‡
VIMINFO


1962 
	$gë_vimöfo_∑ømëî
(
ty≥
)

1963 
ty≥
;

1965 
ch¨_u
 *
p
;

1967 
p
 = 
	`vim_°rchr
(
p_vimöfo
, 
ty≥
);

1968 i‡(
p
 !
NULL
 && 
	`isdigô
(*++p))

1969  ()
	`©ﬁ
((*)
p
);

1971 
	}
}

1979 
ch¨_u
 *

1980 
	$›ti⁄_ex∑nd
(
›t_idx
)

1981 
›t_idx
;

1983 
ch¨_u
 *
p
;

1986 i‡(!(
›ti⁄s
[
›t_idx
].
Êags
 & 
P_EXPAND
Ë|| o±i⁄s[›t_idx].
v¨
 =
NULL
)

1987  
NULL
;

1989 
p
 = *(
ch¨_u
 **)(
›ti⁄s
[
›t_idx
].
v¨
);

1994 
	`ex∑nd_ív
(
p
, 
NameBuff
, 
MAXPATHL
);

1995 i‡(
	`STRCMP
(
NameBuff
, 
p
) == 0)

1996  
NULL
;

1998  
	`°rßve
(
NameBuff
);

1999 
	}
}

2005 
	$check_›ti⁄s
()

2007 
›t_idx
;

2008 
ch¨_u
 **
p
;

2010 
›t_idx
 = 0; 
›ti⁄s
[›t_idx].
fuŒ«me
 !
NULL
; opt_idx++)

2011 i‡((
›ti⁄s
[
›t_idx
].
Êags
 & 
P_STRING
Ë&& o±i⁄s[›t_idx].
v¨
 !
NULL
)

2013 
p
 = (
ch¨_u
 **)
	`gë_v¨p
(&(
›ti⁄s
[
›t_idx
]));

2014 i‡(*
p
 =
NULL
)

2015 *
p
 = 
em±y_›ti⁄
;

2017 
	}
}

2023 
	$check_buf_›ti⁄s
(
buf
)

2024 
BUF
 *
buf
;

2026 i‡(
buf
->
b_p_fo
 =
NULL
)

2027 
buf
->
b_p_fo
 = 
em±y_›ti⁄
;

2028 i‡(
buf
->
b_p_isk
 =
NULL
)

2029 
buf
->
b_p_isk
 = 
em±y_›ti⁄
;

2030 i‡(
buf
->
b_p_com
 =
NULL
)

2031 
buf
->
b_p_com
 = 
em±y_›ti⁄
;

2032 #ifde‡
CINDENT


2033 i‡(
buf
->
b_p_cök
 =
NULL
)

2034 
buf
->
b_p_cök
 = 
em±y_›ti⁄
;

2035 i‡(
buf
->
b_p_cöo
 =
NULL
)

2036 
buf
->
b_p_cöo
 = 
em±y_›ti⁄
;

2038 #i‡
	`deföed
(
SMARTINDENT
Ë|| deföed(
CINDENT
)

2039 i‡(
buf
->
b_p_cöw
 =
NULL
)

2040 
buf
->
b_p_cöw
 = 
em±y_›ti⁄
;

2042 
	}
}

2052 
	$‰ì_°rög_›ti⁄
(
p
)

2053 
ch¨_u
 *
p
;

2055 i‡(
p
 !
em±y_›ti⁄
)

2056 
	`vim_‰ì
(
p
);

2057 
	}
}

2066 
	$£t_°rög_›ti⁄
(
«me
, 
›t_idx
, 
vÆ
, 
do‰ì
)

2067 
ch¨_u
 *
«me
;

2068 
›t_idx
;

2069 
ch¨_u
 *
vÆ
;

2070 
do‰ì
;

2072 
ch¨_u
 *
s
;

2073 
ch¨_u
 **
v¨p
;

2075 i‡(
›t_idx
 == -1)

2077 
›t_idx
 = 
	`föd›ti⁄
(
«me
);

2078 i‡(
›t_idx
 == -1)

2082 i‡(
›ti⁄s
[
›t_idx
].
v¨
 =
NULL
)

2085 
s
 = 
	`°rßve
(
vÆ
);

2086 i‡(
s
 !
NULL
)

2088 
v¨p
 = (
ch¨_u
 **)
	`gë_v¨p
(&(
›ti⁄s
[
›t_idx
]));

2089 i‡(
do‰ì
 && (
›ti⁄s
[
›t_idx
].
Êags
 & 
P_ALLOCED
))

2090 
	`‰ì_°rög_›ti⁄
(*
v¨p
);

2091 *
v¨p
 = 
s
;

2093 i‡(
v¨p
 =&(
ãrm_°rögs
[
KS_NAME
]) &&

2094 *(
›ti⁄s
[
›t_idx
].
def_vÆ
Ë=
NUL
)

2096 
›ti⁄s
[
›t_idx
].
def_vÆ
 = 
s
;

2097 
›ti⁄s
[
›t_idx
].
Êags
 |
P_DEF_ALLOCED
;

2100 
›ti⁄s
[
›t_idx
].
Êags
 |
P_ALLOCED
;

2102 
	}
}

2109 
	$föd›ti⁄
(
¨g
)

2110 
ch¨_u
 *
¨g
;

2112 
›t_idx
;

2113 *
s
;

2115 
›t_idx
 = 0; (
s
 = 
›ti⁄s
[›t_idx].
fuŒ«me
Ë!
NULL
; opt_idx++)

2117 i‡(
	`STRCMP
(
¨g
, 
s
) == 0)

2120 i‡(
s
 =
NULL
)

2122 
›t_idx
 = 0; 
›ti⁄s
[›t_idx].
fuŒ«me
 !
NULL
; opt_idx++)

2124 
s
 = 
›ti⁄s
[
›t_idx
].
sh‹äame
;

2125 i‡(
s
 !
NULL
 && 
	`STRCMP
(
¨g
, s) == 0)

2127 
s
 = 
NULL
;

2130 i‡(
s
 =
NULL
)

2131 
›t_idx
 = -1;

2132  
›t_idx
;

2133 
	}
}

2135 
ch¨_u
 *

2136 
	$gë_highlight_deÁu…
()

2138 
i
;

2140 
i
 = 
	`föd›ti⁄
((
ch¨_u
 *)"hl");

2141 i‡(
i
 >= 0)

2142  
›ti⁄s
[
i
].
def_vÆ
;

2143  (
ch¨_u
 *)
NULL
;

2144 
	}
}

2147 
	$föd_key_›ti⁄
(
¨g
)

2148 
ch¨_u
 *
¨g
;

2150 
key
;

2151 
c
;

2155 i‡(
¨g
[0] == 't' &&árg[1] == '_' &&árg[2] &&árg[3])

2156 
key
 = 
	`TERMCAP2KEY
(
¨g
[2],árg[3]);

2159 i‡(
	`vim_°∫icmp
(
¨g
, (
ch¨_u
 *)"S-Tab", (
size_t
)5) == 0)

2160 
key
 = 
K_S_TAB
;

2164 
mod_mask
 = 0;

2165 i‡(
	`TO_LOWER
(
¨g
[0]) == 's' &&árg[1] == '-')

2167 
mod_mask
 = 
MOD_MASK_SHIFT
;

2168 
¨g
 += 2;

2170 
c
 = 
	`gë_•ecül_key_code
(
¨g
);

2171 
key
 = 
	`check_shi·ed_•ec_key
(
c
);

2172 i‡(
mod_mask
 && 
c
 =
key
)

2173 
key
 = 0;

2175  
key
;

2176 
	}
}

2184 
	$show›ti⁄s
(
Æl
)

2185 
Æl
;

2187 
›ti⁄
 *
p
;

2188 
cﬁ
;

2189 
i°îm
;

2190 
ch¨_u
 *
v¨p
;

2191 
›ti⁄
 **
ôems
;

2192 
ôem_cou¡
;

2193 
run
;

2194 
row
, 
rows
;

2195 
cﬁs
;

2196 
i
;

2197 
Àn
;

2199 
	#INC
 20

	)

2200 
	#GAP
 3

	)

2202 
ôems
 = (
›ti⁄
 **)
	`Æloc
(()((option *) *

2203 
PARAM_COUNT
));

2204 i‡(
ôems
 =
NULL
)

2207 
	`£t_highlight
('t');

2208 
	`°¨t_highlight
();

2209 i‡(
Æl
 == 2)

2210 
	`MSG_OUTSTR
("\n--- Terminal codes ---");

2212 
	`MSG_OUTSTR
("\n--- Options ---");

2213 
	`°›_highlight
();

2220 
run
 = 1;Ñu¿<2 && !
gŸ_öt
; ++run)

2225 
ôem_cou¡
 = 0;

2226 
p
 = &
›ti⁄s
[0];Ö->
fuŒ«me
 !
NULL
;Ö++)

2228 
i°îm
 = 
	`i°îm›ti⁄
(
p
);

2229 
v¨p
 = 
	`gë_v¨p
(
p
);

2230 i‡(
v¨p
 !
NULL
 && (

2231 (
Æl
 =2 && 
i°îm
) ||

2232 (
Æl
 =1 && !
i°îm
) ||

2233 (
Æl
 =0 && 
	`›ti⁄_ch™ged
(
p
))))

2235 i‡(
p
->
Êags
 & 
P_BOOL
)

2236 
Àn
 = 1;

2239 
	`›ti⁄_vÆue2°rög
(
p
);

2240 
Àn
 = 
	`STRLEN
(
p
->
fuŒ«me
Ë+ 
	`°rsize
(
NameBuff
) + 1;

2242 i‡((
Àn
 <
INC
 - 
GAP
 && 
run
 == 1) ||

2243 (
Àn
 > 
INC
 - 
GAP
 && 
run
 == 2))

2244 
ôems
[
ôem_cou¡
++] = 
p
;

2251 i‡(
run
 == 1)

2253 
cﬁs
 = (
Cﬁumns
 + 
GAP
 - 3Ë/ 
INC
;

2254 i‡(
cﬁs
 == 0)

2255 
cﬁs
 = 1;

2256 
rows
 = (
ôem_cou¡
 + 
cﬁs
 - 1) / cols;

2259 
rows
 = 
ôem_cou¡
;

2260 
row
 = 0;Ñow < 
rows
 && !
gŸ_öt
; ++row)

2262 
	`msg_outch¨
('\n');

2263 i‡(
gŸ_öt
)

2265 
cﬁ
 = 0;

2266 
i
 = 
row
; i < 
ôem_cou¡
; i +
rows
)

2268 
	`msg_pos
(-1, 
cﬁ
);

2269 
	`show⁄e›t
(
ôems
[
i
]);

2270 
cﬁ
 +
INC
;

2272 
	`Êushbuf
();

2273 
	`mch_bªakcheck
();

2276 
	`vim_‰ì
(
ôems
);

2277 
	}
}

2283 
	$›ti⁄_ch™ged
(
p
)

2284 
›ti⁄
 *
p
;

2286 
ch¨_u
 *
v¨p
;

2288 
v¨p
 = 
	`gë_v¨p
(
p
);

2289 i‡(
v¨p
 =
NULL
)

2290  
FALSE
;

2292 i‡(
p
->
Êags
 & 
P_NUM
)

2293  (*(*)
v¨p
 !()
p
->
def_vÆ
);

2294 i‡(
p
->
Êags
 & 
P_BOOL
)

2296  (*(*)
v¨p
 !()()
p
->
def_vÆ
);

2298  
	`STRCMP
(*(
ch¨_u
 **)
v¨p
, 
p
->
def_vÆ
);

2299 
	}
}

2306 
	$show⁄e›t
(
p
)

2307 
›ti⁄
 *
p
;

2309 
ch¨_u
 *
v¨p
;

2311 
v¨p
 = 
	`gë_v¨p
(
p
);

2313 i‡((
p
->
Êags
 & 
P_BOOL
Ë&& !*(*)
v¨p
)

2314 
	`MSG_OUTSTR
("no");

2316 
	`MSG_OUTSTR
(" ");

2317 
	`MSG_OUTSTR
(
p
->
fuŒ«me
);

2318 i‡(!(
p
->
Êags
 & 
P_BOOL
))

2320 
	`msg_outch¨
('=');

2321 
	`›ti⁄_vÆue2°rög
(
p
);

2322 
	`msg_ouâøns
(
NameBuff
);

2324 
	}
}

2331 
	$make£t
(
fd
)

2332 
FILE
 *
fd
;

2334 
›ti⁄
 *
p
;

2335 
ch¨_u
 *
s
;

2336 
e
;

2337 
ch¨_u
 *
v¨p
;

2343 
p
 = &
›ti⁄s
[0]; !
	`i°îm›ti⁄
(p);Ö++)

2344 i‡(!(
p
->
Êags
 & 
P_NO_MKRC
Ë&& !
	`i°îm›ti⁄
(p) &&

2345 (
	`›ti⁄_ch™ged
(
p
)))

2347 
v¨p
 = 
	`gë_v¨p
(
p
);

2348 i‡(
p
->
Êags
 & 
P_BOOL
)

2349 
	`Ârötf
(
fd
, "£à%s%s", *(*)(
v¨p
) ? "" : "no",

2350 
p
->
fuŒ«me
);

2351 i‡(
p
->
Êags
 & 
P_NUM
)

2352 
	`Ârötf
(
fd
, "£à%s=%ld", 
p
->
fuŒ«me
, *(*)(
v¨p
));

2355 
	`Ârötf
(
fd
, "£à%s=", 
p
->
fuŒ«me
);

2356 
s
 = *(
ch¨_u
 **)(
v¨p
);

2359 i‡(
s
 !
NULL
 && 
	`puãsc°r
(
fd
, s, 
TRUE
Ë=
FAIL
)

2360  
FAIL
;

2362 #ifde‡
USE_CRNL


2363 
	`putc
('\r', 
fd
);

2369 
e
 = 
	`putc
('\n', 
fd
);

2370 i‡(
e
 < 0)

2371  
FAIL
;

2373  
OK
;

2374 
	}
}

2382 
	$˛ór_ãrm›ti⁄s
()

2384 
›ti⁄
 *
p
;

2391 #ifde‡
USE_MOUSE


2392 
	`mch_£tmou£
(
FALSE
);

2394 
	`mch_ª°‹e_tôÀ
(3);

2395 #ifde‡
WIN32


2399 i‡(
	`ˇn_íd_ãrmˇp_mode
(
FALSE
Ë=
TRUE
)

2401 
	`°›ãrmˇp
();

2403 
p
 = &
›ti⁄s
[0];Ö->
fuŒ«me
 !
NULL
;Ö++)

2404 i‡(
	`i°îm›ti⁄
(
p
))

2406 i‡(
p
->
Êags
 & 
P_ALLOCED
)

2407 
	`‰ì_°rög_›ti⁄
(*(
ch¨_u
 **)(
p
->
v¨
));

2408 i‡(
p
->
Êags
 & 
P_DEF_ALLOCED
)

2409 
	`‰ì_°rög_›ti⁄
(
p
->
def_vÆ
);

2410 *(
ch¨_u
 **)(
p
->
v¨
Ë
em±y_›ti⁄
;

2411 
p
->
def_vÆ
 = 
em±y_›ti⁄
;

2412 
p
->
Êags
 &~(
P_ALLOCED
|
P_DEF_ALLOCED
);

2414 
	`˛ór_ãrmcodes
();

2415 
	}
}

2422 
	$£t_ãrm_deÁu…s
()

2424 
›ti⁄
 *
p
;

2426 
p
 = &
›ti⁄s
[0];Ö->
fuŒ«me
 !
NULL
;Ö++)

2427 i‡(
	`i°îm›ti⁄
(
p
Ë&&Ö->
def_vÆ
 !*(
ch¨_u
 **)’->
v¨
))

2429 i‡(
p
->
Êags
 & 
P_DEF_ALLOCED
)

2431 
	`‰ì_°rög_›ti⁄
(
p
->
def_vÆ
);

2432 
p
->
Êags
 &~
P_DEF_ALLOCED
;

2434 
p
->
def_vÆ
 = *(
ch¨_u
 **)’->
v¨
);

2435 i‡(
p
->
Êags
 & 
P_ALLOCED
)

2437 
p
->
Êags
 |
P_DEF_ALLOCED
;

2438 
p
->
Êags
 &~
P_ALLOCED
;

2441 
	}
}

2447 
	$i°îm›ti⁄
(
p
)

2448 
›ti⁄
 *
p
;

2450  (
p
->
fuŒ«me
[0] == 't' &&Ö->fullname[1] == '_');

2451 
	}
}

2460 
	#COL_RULER
 17

	)

2463 
	$comp_cﬁ
()

2465 
œ°_has_°©us
 = (
p_ls
 =2 || (p_l†=1 && 
fú°wö
 !
œ°wö
));

2467 
sc_cﬁ
 = 0;

2468 
ru_cﬁ
 = 0;

2469 i‡(
p_ru
)

2471 
ru_cﬁ
 = 
COL_RULER
 + 1;

2473 i‡(!
œ°_has_°©us
)

2474 
sc_cﬁ
 = 
ru_cﬁ
;

2476 i‡(
p_sc
)

2478 
sc_cﬁ
 +
SHOWCMD_COLS
;

2479 i‡(!
p_ru
 || 
œ°_has_°©us
)

2480 ++
sc_cﬁ
;

2482 
sc_cﬁ
 = 
Cﬁumns
 - sc_col;

2483 
ru_cﬁ
 = 
Cﬁumns
 -Ñu_col;

2484 i‡(
sc_cﬁ
 <= 0)

2485 
sc_cﬁ
 = 1;

2486 i‡(
ru_cﬁ
 <= 0)

2487 
ru_cﬁ
 = 1;

2488 
	}
}

2490 
ch¨_u
 *

2491 
	$gë_v¨p
(
p
)

2492 
›ti⁄
 *
p
;

2494 i‡(!(
p
->
Êags
 & 
P_IND
Ë||Ö->
v¨
 =
NULL
)

2495  
p
->
v¨
;

2497 ()(
p
->
v¨
))

2499 
PV_LIST
:  (
ch¨_u
 *)&(
curwö
->
w_p_li°
);

2500 
PV_NU
:  (
ch¨_u
 *)&(
curwö
->
w_p_nu
);

2501 #ifde‡
RIGHTLEFT


2502 
PV_RL
:  (
ch¨_u
 *)&(
curwö
->
w_p_æ
);

2504 
PV_SCROLL
:  (
ch¨_u
 *)&(
curwö
->
w_p_s¸ﬁl
);

2505 
PV_WRAP
:  (
ch¨_u
 *)&(
curwö
->
w_p_wøp
);

2506 
PV_LBR
:  (
ch¨_u
 *)&(
curwö
->
w_p_lbr
);

2508 
PV_AI
:  (
ch¨_u
 *)&(
curbuf
->
b_p_ai
);

2509 
PV_BIN
:  (
ch¨_u
 *)&(
curbuf
->
b_p_bö
);

2510 #ifde‡
CINDENT


2511 
PV_CIN
:  (
ch¨_u
 *)&(
curbuf
->
b_p_cö
);

2512 
PV_CINK
:  (
ch¨_u
 *)&(
curbuf
->
b_p_cök
);

2513 
PV_CINO
:  (
ch¨_u
 *)&(
curbuf
->
b_p_cöo
);

2515 #i‡
	`deföed
(
SMARTINDENT
Ë|| deföed(
CINDENT
)

2516 
PV_CINW
:  (
ch¨_u
 *)&(
curbuf
->
b_p_cöw
);

2518 
PV_COM
:  (
ch¨_u
 *)&(
curbuf
->
b_p_com
);

2519 
PV_EOL
:  (
ch¨_u
 *)&(
curbuf
->
b_p_eﬁ
);

2520 
PV_ET
:  (
ch¨_u
 *)&(
curbuf
->
b_p_ë
);

2521 
PV_FO
:  (
ch¨_u
 *)&(
curbuf
->
b_p_fo
);

2522 
PV_INF
:  (
ch¨_u
 *)&(
curbuf
->
b_p_öf
);

2523 
PV_ISK
:  (
ch¨_u
 *)&(
curbuf
->
b_p_isk
);

2524 
PV_LISP
:  (
ch¨_u
 *)&(
curbuf
->
b_p_li•
);

2525 
PV_ML
:  (
ch¨_u
 *)&(
curbuf
->
b_p_ml
);

2526 
PV_MOD
:  (
ch¨_u
 *)&(
curbuf
->
b_ch™ged
);

2527 
PV_RO
:  (
ch¨_u
 *)&(
curbuf
->
b_p_ro
);

2528 #ifde‡
SMARTINDENT


2529 
PV_SI
:  (
ch¨_u
 *)&(
curbuf
->
b_p_si
);

2531 #i‚de‡
SHORT_FNAME


2532 
PV_SN
:  (
ch¨_u
 *)&(
curbuf
->
b_p_¢
);

2534 
PV_SW
:  (
ch¨_u
 *)&(
curbuf
->
b_p_sw
);

2535 
PV_TS
:  (
ch¨_u
 *)&(
curbuf
->
b_p_ts
);

2536 
PV_TW
:  (
ch¨_u
 *)&(
curbuf
->
b_p_tw
);

2537 
PV_TX
:  (
ch¨_u
 *)&(
curbuf
->
b_p_tx
);

2538 
PV_WM
:  (
ch¨_u
 *)&(
curbuf
->
b_p_wm
);

2539 : 
	`EMSG
("get_varp ERROR");

2542  (
ch¨_u
 *)&(
curbuf
->
b_p_wm
);

2543 
	}
}

2551 
	$wö_c›y_›ti⁄s
(
wp_‰om
, 
wp_to
)

2552 
WIN
 *
wp_‰om
;

2553 
WIN
 *
wp_to
;

2555 
wp_to
->
w_p_li°
 = 
wp_‰om
->w_p_list;

2556 
wp_to
->
w_p_nu
 = 
wp_‰om
->w_p_nu;

2557 #ifde‡
RIGHTLEFT


2558 
wp_to
->
w_p_æ
 = 
wp_‰om
->w_p_rl;

2560 
wp_to
->
w_p_wøp
 = 
wp_‰om
->w_p_wrap;

2561 
wp_to
->
w_p_lbr
 = 
wp_‰om
->w_p_lbr;

2562 
	}
}

2572 
	$buf_c›y_›ti⁄s
(
bp_‰om
, 
bp_to
, 
íãrög
)

2573 
BUF
 *
bp_‰om
;

2574 
BUF
 *
bp_to
;

2575 
íãrög
;

2580 i‡(
bp_‰om
 =
NULL
 || 
bp_to
 == NULL || bp_from == bp_to)

2588 i‡((
	`vim_°rchr
(
p_˝o
, 
CPO_BUFOPTGLOB
Ë=
NULL
 || !
íãrög
) &&

2589 (
bp_to
->
b_p_öôülized
 ||

2590 (!
íãrög
 && 
	`vim_°rchr
(
p_˝o
, 
CPO_BUFOPT
Ë!
NULL
)))

2592 
	`check_buf_›ti⁄s
(
bp_to
);

2600 i‡(
bp_to
->
b_p_öôülized
)

2602 
	`‰ì_°rög_›ti⁄
(
bp_to
->
b_p_fo
);

2603 
	`‰ì_°rög_›ti⁄
(
bp_to
->
b_p_isk
);

2604 
	`‰ì_°rög_›ti⁄
(
bp_to
->
b_p_com
);

2605 #ifde‡
CINDENT


2606 
	`‰ì_°rög_›ti⁄
(
bp_to
->
b_p_cök
);

2607 
	`‰ì_°rög_›ti⁄
(
bp_to
->
b_p_cöo
);

2609 #i‡
	`deföed
(
CINDENT
Ë|| deföed(
SMARTINDENT
)

2610 
	`‰ì_°rög_›ti⁄
(
bp_to
->
b_p_cöw
);

2615 
bp_to
->
b_p_ro
 = 
FALSE
;

2616 
bp_to
->
b_p_tx
 = 
bp_‰om
->b_p_tx;

2617 
bp_to
->
b_p_tx_nobö
 = 
bp_‰om
->b_p_tx_nobin;

2620 
bp_to
->
b_p_ai
 = 
bp_‰om
->b_p_ai;

2621 
bp_to
->
b_p_ai_ßve
 = 
bp_‰om
->b_p_ai_save;

2622 
bp_to
->
b_p_sw
 = 
bp_‰om
->b_p_sw;

2623 
bp_to
->
b_p_tw
 = 
bp_‰om
->b_p_tw;

2624 
bp_to
->
b_p_tw_ßve
 = 
bp_‰om
->b_p_tw_save;

2625 
bp_to
->
b_p_tw_nobö
 = 
bp_‰om
->b_p_tw_nobin;

2626 
bp_to
->
b_p_wm
 = 
bp_‰om
->b_p_wm;

2627 
bp_to
->
b_p_wm_ßve
 = 
bp_‰om
->b_p_wm_save;

2628 
bp_to
->
b_p_wm_nobö
 = 
bp_‰om
->b_p_wm_nobin;

2629 
bp_to
->
b_p_bö
 = 
bp_‰om
->b_p_bin;

2630 
bp_to
->
b_p_ë
 = 
bp_‰om
->b_p_et;

2631 
bp_to
->
b_p_ë_nobö
 = 
bp_‰om
->b_p_et_nobin;

2632 
bp_to
->
b_p_ml
 = 
bp_‰om
->b_p_ml;

2633 
bp_to
->
b_p_ml_nobö
 = 
bp_‰om
->b_p_ml_nobin;

2634 
bp_to
->
b_p_öf
 = 
bp_‰om
->b_p_inf;

2635 #i‚de‡
SHORT_FNAME


2636 
bp_to
->
b_p_¢
 = 
bp_‰om
->b_p_sn;

2638 
bp_to
->
b_p_com
 = 
	`°rßve
(
bp_‰om
->b_p_com);

2639 
bp_to
->
b_p_fo
 = 
	`°rßve
(
bp_‰om
->b_p_fo);

2640 #ifde‡
SMARTINDENT


2641 
bp_to
->
b_p_si
 = 
bp_‰om
->b_p_si;

2642 
bp_to
->
b_p_si_ßve
 = 
bp_‰om
->b_p_si_save;

2644 #ifde‡
CINDENT


2645 
bp_to
->
b_p_cö
 = 
bp_‰om
->b_p_cin;

2646 
bp_to
->
b_p_cö_ßve
 = 
bp_‰om
->b_p_cin_save;

2647 
bp_to
->
b_p_cök
 = 
	`°rßve
(
bp_‰om
->b_p_cink);

2648 
bp_to
->
b_p_cöo
 = 
	`°rßve
(
bp_‰om
->b_p_cino);

2650 #i‡
	`deföed
(
SMARTINDENT
Ë|| deföed(
CINDENT
)

2651 
bp_to
->
b_p_cöw
 = 
	`°rßve
(
bp_‰om
->b_p_cinw);

2653 #ifde‡
LISPINDENT


2654 
bp_to
->
b_p_li•
 = 
bp_‰om
->b_p_lisp;

2655 
bp_to
->
b_p_li•_ßve
 = 
bp_‰om
->b_p_lisp_save;

2657 
bp_to
->
b_p_è_nobö
 = 
bp_‰om
->b_p_ta_nobin;

2662 i‡(!
kìp_hñp_Êag
 && 
bp_‰om
->
b_hñp
 && 
hñp_ßve_isk
 !
NULL
)

2664 
bp_to
->
b_p_isk
 = 
	`°rßve
(
hñp_ßve_isk
);

2665 i‡(
bp_to
->
b_p_isk
 !
NULL
)

2666 
	`öô_ch¨èb
();

2667 
bp_to
->
b_p_ts
 = 
hñp_ßve_ts
;

2668 
bp_to
->
b_hñp
 = 
FALSE
;

2672 
bp_to
->
b_p_isk
 = 
	`°rßve
(
bp_‰om
->b_p_isk);

2673 
	`vim_memmove
(
bp_to
->
b_ch¨èb
, 
bp_‰om
->b_ch¨èb, (
size_t
)256);

2674 
bp_to
->
b_p_ts
 = 
bp_‰om
->b_p_ts;

2675 
bp_to
->
b_hñp
 = 
bp_‰om
->b_help;

2677 
	`check_buf_›ti⁄s
(
bp_to
);

2683 
bp_to
->
b_p_öôülized
 = 
TRUE
;

2684 
	}
}

2686 
	gex∑nd_›ti⁄_idx
 = -1;

2687 
ch¨_u
 
	gex∑nd_›ti⁄_«me
[5] = {'t', '_', 
NUL
, NUL, NUL};

2690 
	$£t_c⁄ãxt_ö_£t_cmd
(
¨g
)

2691 
ch¨_u
 *
¨g
;

2693 
√xtch¨
;

2694 
Êags
 = 0;

2695 
›t_idx
 = 0;

2696 
ch¨_u
 *
p
;

2697 
ch¨_u
 *
a·î_bœnk
 = 
NULL
;

2698 
is_ãrm_›ti⁄
 = 
FALSE
;

2699 
key
;

2701 
ex∑nd_c⁄ãxt
 = 
EXPAND_SETTINGS
;

2702 i‡(*
¨g
 =
NUL
)

2704 
ex∑nd_∑âîn
 = 
¨g
;

2707 
p
 = 
¨g
 + 
	`STRLEN
(arg) - 1;

2708 i‡(*
p
 == ' ' && *(p - 1) != '\\')

2710 
ex∑nd_∑âîn
 = 
p
 + 1;

2713 
p
 !
¨g
 && (*p != ' ' || *(p - 1) == '\\'))

2716 i‡((*
p
 == ' ' || (*p == ',' && *(p - 1) != '\\')) &&

2717 
a·î_bœnk
 =
NULL
)

2718 
a·î_bœnk
 = 
p
 + 1;

2719 
p
--;

2721 i‡(
p
 !
¨g
)

2722 
p
++;

2723 i‡(
	`STRNCMP
(
p
, "no", (
size_t
) 2) == 0)

2725 
ex∑nd_c⁄ãxt
 = 
EXPAND_BOOL_SETTINGS
;

2726 
p
 += 2;

2728 i‡(
	`STRNCMP
(
p
, "öv", (
size_t
) 3) == 0)

2730 
ex∑nd_c⁄ãxt
 = 
EXPAND_BOOL_SETTINGS
;

2731 
p
 += 3;

2733 
ex∑nd_∑âîn
 = 
¨g
 = 
p
;

2734 i‡(*
¨g
 == '<')

2736 *
p
 != '>')

2737 i‡(*
p
++ =
NUL
)

2739 
key
 = 
	`gë_•ecül_key_code
(
¨g
 + 1);

2740 i‡(
key
 == 0)

2742 
ex∑nd_c⁄ãxt
 = 
EXPAND_NOTHING
;

2745 
√xtch¨
 = *++
p
;

2746 
is_ãrm_›ti⁄
 = 
TRUE
;

2747 
ex∑nd_›ti⁄_«me
[2] = 
	`KEY2TERMCAP0
(
key
);

2748 
ex∑nd_›ti⁄_«me
[3] = 
	`KEY2TERMCAP1
(
key
);

2752 i‡(
p
[0] == 't' &&Ö[1] == '_')

2754 
p
 += 2;

2755 i‡(*
p
 !
NUL
)

2756 ++
p
;

2757 i‡(*
p
 =
NUL
)

2759 
√xtch¨
 = *++
p
;

2760 
is_ãrm_›ti⁄
 = 
TRUE
;

2761 
ex∑nd_›ti⁄_«me
[2] = 
p
[-2];

2762 
ex∑nd_›ti⁄_«me
[3] = 
p
[-1];

2766 
	`iß um
(*
p
) || *p == '_' || *p == '*')

2767 
p
++;

2768 i‡(*
p
 =
NUL
)

2770 
√xtch¨
 = *
p
;

2771 *
p
 = 
NUL
;

2772 
›t_idx
 = 
	`föd›ti⁄
(
¨g
);

2773 *
p
 = 
√xtch¨
;

2774 i‡(
›t_idx
 =-1 || 
›ti⁄s
[›t_idx].
v¨
 =
NULL
)

2776 
ex∑nd_c⁄ãxt
 = 
EXPAND_NOTHING
;

2779 
Êags
 = 
›ti⁄s
[
›t_idx
].flags;

2780 i‡(
Êags
 & 
P_BOOL
)

2782 
ex∑nd_c⁄ãxt
 = 
EXPAND_NOTHING
;

2787 i‡((
√xtch¨
 != '=' &&Çextchar != ':')

2788 || 
ex∑nd_c⁄ãxt
 =
EXPAND_BOOL_SETTINGS
)

2790 
ex∑nd_c⁄ãxt
 = 
EXPAND_UNSUCCESSFUL
;

2793 i‡(
ex∑nd_c⁄ãxt
 !
EXPAND_BOOL_SETTINGS
 && 
p
[1] =
NUL
)

2795 
ex∑nd_c⁄ãxt
 = 
EXPAND_OLD_SETTING
;

2796 i‡(
is_ãrm_›ti⁄
)

2797 
ex∑nd_›ti⁄_idx
 = -1;

2799 
ex∑nd_›ti⁄_idx
 = 
›t_idx
;

2800 
ex∑nd_∑âîn
 = 
p
 + 1;

2803 
ex∑nd_c⁄ãxt
 = 
EXPAND_NOTHING
;

2804 i‡(
is_ãrm_›ti⁄
 || (
Êags
 & 
P_NUM
))

2806 i‡(
a·î_bœnk
 !
NULL
)

2807 
ex∑nd_∑âîn
 = 
a·î_bœnk
;

2809 
ex∑nd_∑âîn
 = 
p
 + 1;

2810 i‡(
Êags
 & 
P_EXPAND
)

2812 
p
 = 
›ti⁄s
[
›t_idx
].
v¨
;

2813 i‡(
p
 =(
ch¨_u
 *)&
p_bdú
 ||Ö =(ch¨_u *)&
p_dú
 ||

2814 
p
 =(
ch¨_u
 *)&
p_∑th
)

2815 
ex∑nd_c⁄ãxt
 = 
EXPAND_DIRECTORIES
;

2817 
ex∑nd_c⁄ãxt
 = 
EXPAND_FILES
;

2820 
	}
}

2823 
	$Ex∑ndSëtögs
(
¥og
, 
num_fûe
, 
fûe
)

2824 
ªgexp
 *
¥og
;

2825 *
num_fûe
;

2826 
ch¨_u
 ***
fûe
;

2828 
num_n‹mÆ
 = 0;

2829 
num_ãrm
 = 0;

2830 
›t_idx
;

2831 
m©ch
;

2832 
cou¡
 = 0;

2833 
ch¨_u
 *
°r
;

2834 
lo›
;

2835 
is_ãrm_›t
;

2836 
ch¨_u
 
«me_buf
[
MAX_KEY_NAME_LEN
];

2842 
lo›
 = 0;Üoop <= 1; ++loop)

2844 i‡(
ex∑nd_c⁄ãxt
 !
EXPAND_BOOL_SETTINGS
)

2846 i‡(
	`vim_ªgexec
(
¥og
, (
ch¨_u
 *)"Æl", 
TRUE
))

2848 i‡(
lo›
 == 0)

2849 
num_n‹mÆ
++;

2851 (*
fûe
)[
cou¡
++] = 
	`°rßve
((
ch¨_u
 *)"all");

2853 i‡(
	`vim_ªgexec
(
¥og
, (
ch¨_u
 *)"ãrmˇp", 
TRUE
))

2855 i‡(
lo›
 == 0)

2856 
num_n‹mÆ
++;

2858 (*
fûe
)[
cou¡
++] = 
	`°rßve
((
ch¨_u
 *)"termcap");

2861 
›t_idx
 = 0; (
°r
 = (
ch¨_u
 *)
›ti⁄s
[›t_idx].
fuŒ«me
Ë!
NULL
;

2862 
›t_idx
++)

2864 i‡(
›ti⁄s
[
›t_idx
].
v¨
 =
NULL
)

2866 i‡(
ex∑nd_c⁄ãxt
 =
EXPAND_BOOL_SETTINGS


2867 && !(
›ti⁄s
[
›t_idx
].
Êags
 & 
P_BOOL
))

2869 
is_ãrm_›t
 = 
	`i°îm›ti⁄
(&
›ti⁄s
[
›t_idx
]);

2870 i‡(
is_ãrm_›t
 && 
num_n‹mÆ
 > 0)

2872 
m©ch
 = 
FALSE
;

2873 i‡(
	`vim_ªgexec
(
¥og
, 
°r
, 
TRUE
) ||

2874 (
›ti⁄s
[
›t_idx
].
sh‹äame
 !
NULL
 &&

2875 
	`vim_ªgexec
(
¥og
,

2876 (
ch¨_u
 *)
›ti⁄s
[
›t_idx
].
sh‹äame
, 
TRUE
)))

2877 
m©ch
 = 
TRUE
;

2878 i‡(
is_ãrm_›t
)

2880 
«me_buf
[0] = '<';

2881 
«me_buf
[1] = 't';

2882 
«me_buf
[2] = '_';

2883 
«me_buf
[3] = 
°r
[2];

2884 
«me_buf
[4] = 
°r
[3];

2885 
«me_buf
[5] = '>';

2886 
«me_buf
[6] = 
NUL
;

2887 i‡(
	`vim_ªgexec
(
¥og
, 
«me_buf
, 
TRUE
))

2889 
m©ch
 = 
TRUE
;

2890 
°r
 = 
«me_buf
;

2893 i‡(
m©ch
)

2895 i‡(
lo›
 == 0)

2897 i‡(
is_ãrm_›t
)

2898 
num_ãrm
++;

2900 
num_n‹mÆ
++;

2903 (*
fûe
)[
cou¡
++] = 
	`°rßve
(
°r
);

2909 i‡(
ex∑nd_c⁄ãxt
 !
EXPAND_BOOL_SETTINGS
 && 
num_n‹mÆ
 == 0)

2911 
›t_idx
 = 0; (
°r
 = 
	`gë_ãrmcode
(›t_idx)Ë!
NULL
; opt_idx++)

2913 i‡(!
	`i•röt
(
°r
[0]) || !isprint(str[1]))

2916 
«me_buf
[0] = 't';

2917 
«me_buf
[1] = '_';

2918 
«me_buf
[2] = 
°r
[0];

2919 
«me_buf
[3] = 
°r
[1];

2920 
«me_buf
[4] = 
NUL
;

2922 
m©ch
 = 
FALSE
;

2923 i‡(
	`vim_ªgexec
(
¥og
, 
«me_buf
, 
TRUE
))

2924 
m©ch
 = 
TRUE
;

2927 
«me_buf
[0] = '<';

2928 
«me_buf
[1] = 't';

2929 
«me_buf
[2] = '_';

2930 
«me_buf
[3] = 
°r
[0];

2931 
«me_buf
[4] = 
°r
[1];

2932 
«me_buf
[5] = '>';

2933 
«me_buf
[6] = 
NUL
;

2935 i‡(
	`vim_ªgexec
(
¥og
, 
«me_buf
, 
TRUE
))

2936 
m©ch
 = 
TRUE
;

2938 i‡(
m©ch
)

2940 i‡(
lo›
 == 0)

2941 
num_ãrm
++;

2943 (*
fûe
)[
cou¡
++] = 
	`°rßve
(
«me_buf
);

2949 
›t_idx
 = 0; (
°r
 = 
	`gë_key_«me
(›t_idx)Ë!
NULL
; opt_idx++)

2951 
«me_buf
[0] = '<';

2952 
	`STRCPY
(
«me_buf
 + 1, 
°r
);

2953 
	`STRCAT
(
«me_buf
, ">");

2955 
ªg_ic
 = 
TRUE
;

2956 i‡(
	`vim_ªgexec
(
¥og
, 
«me_buf
, 
TRUE
))

2958 i‡(
lo›
 == 0)

2959 
num_ãrm
++;

2961 (*
fûe
)[
cou¡
++] = 
	`°rßve
(
«me_buf
);

2965 i‡(
lo›
 == 0)

2967 i‡(
num_n‹mÆ
 > 0)

2968 *
num_fûe
 = 
num_n‹mÆ
;

2969 i‡(
num_ãrm
 > 0)

2970 *
num_fûe
 = 
num_ãrm
;

2972  
OK
;

2973 *
fûe
 = (
ch¨_u
 **Ë
	`Æloc
(()(*
num_fûe
 * (char_u *)));

2974 i‡(*
fûe
 =
NULL
)

2976 *
fûe
 = (
ch¨_u
 **)"";

2977  
FAIL
;

2981  
OK
;

2982 
	}
}

2985 
	$Ex∑ndOldSëtög
(
num_fûe
, 
fûe
)

2986 *
num_fûe
;

2987 
ch¨_u
 ***
fûe
;

2989 
ch¨_u
 *
v¨
 = 
NULL
;

2990 
ch¨_u
 *
buf
;

2992 *
num_fûe
 = 0;

2993 *
fûe
 = (
ch¨_u
 **)
	`Æloc
(()(char_u *));

2994 i‡(*
fûe
 =
NULL
)

2995  
FAIL
;

3000 i‡(
ex∑nd_›ti⁄_idx
 < 0)

3002 
v¨
 = 
	`föd_ãrmcode
(
ex∑nd_›ti⁄_«me
 + 2);

3003 i‡(
v¨
 =
NULL
)

3004 
ex∑nd_›ti⁄_idx
 = 
	`föd›ti⁄
(
ex∑nd_›ti⁄_«me
);

3007 i‡(
ex∑nd_›ti⁄_idx
 >= 0)

3010 
	`›ti⁄_vÆue2°rög
(&
›ti⁄s
[
ex∑nd_›ti⁄_idx
]);

3011 
v¨
 = 
NameBuff
;

3013 i‡(
v¨
 =
NULL
)

3014 
v¨
 = (
ch¨_u
 *)"";

3017 
buf
 = 
	`°rßve_esˇ≥d
(
v¨
, 
esˇ≥_ch¨s
);

3019 i‡(
buf
 =
NULL
)

3021 
	`vim_‰ì
(*
fûe
);

3022 *
fûe
 = 
NULL
;

3023  
FAIL
;

3026 *
fûe
[0] = 
buf
;

3027 *
num_fûe
 = 1;

3028  
OK
;

3029 
	}
}

3036 
	$›ti⁄_vÆue2°rög
(
›
)

3037 
›ti⁄
 *
›
;

3039 
ch¨_u
 *
v¨p
;

3041 
v¨p
 = 
	`gë_v¨p
(
›
);

3042 i‡(
›
->
Êags
 & 
P_NUM
)

3044 i‡((*)
v¨p
 =&
p_wc
)

3046 i‡(
	`IS_SPECIAL
(
p_wc
Ë|| 
	`föd_•ecül_key_ö_èbÀ
(()p_wc) >= 0)

3047 
	`STRCPY
(
NameBuff
, 
	`gë_•ecül_key_«me
(()
p_wc
, 0));

3049 
	`STRCPY
(
NameBuff
, 
	`å™sch¨
(()
p_wc
));

3052 
	`•rötf
((*)
NameBuff
, "%ld", *(*)
v¨p
);

3056 
v¨p
 = *(
ch¨_u
 **)(varp);

3057 i‡(
v¨p
 =
NULL
)

3058 
NameBuff
[0] = 
NUL
;

3059 i‡(
›
->
Êags
 & 
P_EXPAND
)

3060 
	`home_ª∂a˚
(
NULL
, 
v¨p
, 
NameBuff
, 
MAXPATHL
);

3062 
	`STRNCPY
(
NameBuff
, 
v¨p
, 
MAXPATHL
);

3064 
	}
}

3072 
ch¨_u
 *

3073 
	$fûe_∑t_to_ªg_∑t
(
∑t
, 
∑t_íd
, 
Ælow_dúe˘‹õs
)

3074 
ch¨_u
 *
∑t
;

3075 
ch¨_u
 *
∑t_íd
;

3076 *
Ælow_dúe˘‹õs
;

3078 
size
;

3079 
ch¨_u
 *
ídp
;

3080 
ch¨_u
 *
ªg_∑t
;

3081 
ch¨_u
 *
p
;

3082 
i
;

3083 
√°ed
 = 0;

3084 
add_dﬁœr
 = 
TRUE
;

3086 i‡(
Ælow_dúe˘‹õs
 !
NULL
)

3087 *
Ælow_dúe˘‹õs
 = 
FALSE
;

3089 
size
 = 2;

3090 
p
 = 
∑t
;Ö < 
∑t_íd
;Ö++)

3092 *
p
)

3100 #ifde‡
BACKSLASH_IN_FILENAME


3103 
size
 += 2;

3106 
size
++;

3110 
ªg_∑t
 = 
	`Æloc
(
size
 + 1);

3111 i‡(
ªg_∑t
 =
NULL
)

3112  
NULL
;

3113 
i
 = 0;

3114 i‡(
∑t
[0] == '*')

3115 
∑t
[0] ='*' &&Ö© < 
∑t_íd
 - 1)

3116 
∑t
++;

3118 
ªg_∑t
[
i
++] = '^';

3119 
ídp
 = 
∑t_íd
 - 1;

3120 i‡(*
ídp
 == '*')

3122 
ídp
 - 
∑t
 > 0 && *endp == '*')

3123 
ídp
--;

3124 
add_dﬁœr
 = 
FALSE
;

3126 
p
 = 
∑t
; *∞&& 
√°ed
 >0 &&Ö <
ídp
;Ö++)

3128 *
p
)

3131 
ªg_∑t
[
i
++] = '.';

3132 
ªg_∑t
[
i
++] = '*';

3136 
ªg_∑t
[
i
++] = '\\';

3137 
ªg_∑t
[
i
++] = *
p
;

3140 
ªg_∑t
[
i
++] = '.';

3143 i‡(
p
[1] =
NUL
)

3145 i‡(*++
p
 == '?')

3146 
ªg_∑t
[
i
++] = '?';

3147 i‡(*
p
 == ',')

3148 
ªg_∑t
[
i
++] = ',';

3151 i‡(
Ælow_dúe˘‹õs
 !
NULL
 && 
	`i•©h£p
(*
p
))

3152 *
Ælow_dúe˘‹õs
 = 
TRUE
;

3153 
ªg_∑t
[
i
++] = '\\';

3154 #ifde‡
BACKSLASH_IN_FILENAME


3155 i‡(
	`isfûech¨
(*
p
))

3156 
ªg_∑t
[
i
++] = '\\';

3158 
ªg_∑t
[
i
++] = *
p
;

3162 
ªg_∑t
[
i
++] = '\\';

3163 
ªg_∑t
[
i
++] = '(';

3164 
√°ed
++;

3167 
ªg_∑t
[
i
++] = '\\';

3168 
ªg_∑t
[
i
++] = ')';

3169 --
√°ed
;

3172 i‡(
√°ed
)

3174 
ªg_∑t
[
i
++] = '\\';

3175 
ªg_∑t
[
i
++] = '|';

3178 
ªg_∑t
[
i
++] = ',';

3181 i‡(
Ælow_dúe˘‹õs
 !
NULL
 && 
	`i•©h£p
(*
p
))

3182 *
Ælow_dúe˘‹õs
 = 
TRUE
;

3183 
ªg_∑t
[
i
++] = *
p
;

3187 i‡(
add_dﬁœr
)

3188 
ªg_∑t
[
i
++] = '$';

3189 
ªg_∑t
[
i
] = 
NUL
;

3190 i‡(
√°ed
 != 0)

3192 i‡(
√°ed
 < 0)

3193 
	`EMSG
("Missing {.");

3195 
	`EMSG
("Missing }.");

3196 
	`vim_‰ì
(
ªg_∑t
);

3197 
ªg_∑t
 = 
NULL
;

3199  
ªg_∑t
;

3200 
	}
}

3202 #ifde‡
AUTOCMD


3207 
show_autocmd
 
__ARGS
((
AutoP©
 *
≠
, 
evít
));

3208 
dñ_autocmd
 
__ARGS
((
AutoP©
 *
≠
));

3209 
dñ_autocmd_cmds
 
__ARGS
((
AutoP©
 *
≠
));

3210 
evít_«me2ƒ
 
__ARGS
((
ch¨_u
 *
°¨t
, ch¨_u **
íd
));

3211 *
evít_ƒ2«me
 
__ARGS
((
evít
));

3212 
ch¨_u
 *
föd_íd_evít
 
__ARGS
((ch¨_u *
¨g
));

3213 
do_autocmd_evít
 
__ARGS
((
evít
, 
ch¨_u
 *
∑t
,

3214 
ch¨_u
 *
cmd
, 
f‹˚
));

3217 
	$show_autocmd
(
≠
, 
evít
)

3218 
AutoP©
 *
≠
;

3219 
evít
;

3221 
AutoCmd
 *
ac
;

3223 
	`msg_outch¨
('\n');

3224 i‡(
gŸ_öt
)

3226 
	`msg_outch¨
('\n');

3227 i‡(
gŸ_öt
)

3229 
	`MSG_OUTSTR
(
	`evít_ƒ2«me
(
evít
));

3230 
	`MSG_OUTSTR
(" ");

3231 
	`msg_out°r
(
≠
->
∑t
);

3232 
ac
 = 
≠
->
cmds
;á¯!
NULL
;á¯ac->
√xt
)

3234 
	`MSG_OUTSTR
("\n ");

3235 i‡(
gŸ_öt
)

3237 
	`msg_ouâøns
(
ac
->
cmd
);

3239 
	}
}

3245 
	$dñ_autocmd
(
≠
)

3246 
AutoP©
 *
≠
;

3248 
	`vim_‰ì
(
≠
->
∑t
);

3249 
	`vim_‰ì
(
≠
->
ªg_∑t
);

3250 
	`dñ_autocmd_cmds
(
≠
);

3251 
	`vim_‰ì
(
≠
);

3252 
	}
}

3258 
	$dñ_autocmd_cmds
(
≠
)

3259 
AutoP©
 *
≠
;

3261 
AutoCmd
 *
ac
;

3263 
≠
->
cmds
 !
NULL
)

3265 
ac
 = 
≠
->
cmds
;

3266 
≠
->
cmds
 = 
ac
->
√xt
;

3267 
	`vim_‰ì
(
ac
->
cmd
);

3268 
	`vim_‰ì
(
ac
);

3270 
	}
}

3278 
	$evít_«me2ƒ
(
°¨t
, 
íd
)

3279 
ch¨_u
 *
°¨t
;

3280 
ch¨_u
 **
íd
;

3282 
ch¨_u
 *
p
;

3283 
i
;

3284 
Àn
;

3287 
p
 = 
°¨t
; *∞&& !
	`vim_iswhôe
(*p) && *p != ','; ++p)

3289 
i
 = 0; 
evít_«mes
[i].
«me
 !
NULL
; ++i)

3291 
Àn
 = 
	`°æí
(
evít_«mes
[
i
].
«me
);

3292 i‡(
Àn
 =
p
 - 
°¨t
 &&

3293 
	`vim_°∫icmp
((
ch¨_u
 *)
evít_«mes
[
i
].
«me
, (ch¨_u *)
°¨t
, (
size_t
)
Àn
) == 0)

3296 i‡(*
p
 == ',')

3297 ++
p
;

3298 *
íd
 = 
p
;

3299 i‡(
evít_«mes
[
i
].
«me
 =
NULL
)

3301  
evít_«mes
[
i
].
evít
;

3302 
	}
}

3308 
	$evít_ƒ2«me
(
evít
)

3309 
evít
;

3311 
i
;

3313 
i
 = 0; 
evít_«mes
[i].
«me
 !
NULL
; ++i)

3314 i‡(
evít_«mes
[
i
].
evít
 ==Évent)

3315  
evít_«mes
[
i
].
«me
;

3317 
	}
}

3322 
ch¨_u
 *

3323 
	$föd_íd_evít
(
¨g
)

3324 
ch¨_u
 *
¨g
;

3326 
ch¨_u
 *
∑t
;

3327 
ch¨_u
 *
p
;

3329 i‡(*
¨g
 == '*')

3331 i‡(
¨g
[1] && !
	`vim_iswhôe
(arg[1]))

3333 
	`EMSG2
("IŒegÆ ch¨a˘îá·î *: %s", 
¨g
);

3334  
NULL
;

3336 
∑t
 = 
¨g
 + 1;

3340 
∑t
 = 
¨g
; *∑à&& !
	`vim_iswhôe
(*∑t);Ö© = 
p
)

3342 i‡(
	`evít_«me2ƒ
(
∑t
, &
p
) < 0)

3344 
	`EMSG2
("NÿsuchÉvít: %s", 
∑t
);

3345  
NULL
;

3349  
∑t
;

3350 
	}
}

3381 
	$do_autocmd
(
¨g
, 
f‹˚
)

3382 
ch¨_u
 *
¨g
;

3383 
f‹˚
;

3385 
ch¨_u
 *
∑t
;

3386 
ch¨_u
 *
cmd
;

3387 
evít
;

3392 i‡(
autocmd_busy
)

3399 
∑t
 = 
	`föd_íd_evít
(
¨g
);

3400 i‡(
∑t
 =
NULL
)

3406 
∑t
 = 
	`skùwhôe
(pat);

3407 
cmd
 = 
∑t
;

3408 *
cmd
 && (!
	`vim_iswhôe
(*cmd) || cmd[-1] == '\\'))

3409 
cmd
++;

3410 i‡(*
cmd
)

3411 *
cmd
++ = 
NUL
;

3416 
cmd
 = 
	`skùwhôe
(cmd);

3421 i‡(!
f‹˚
 && *
cmd
 =
NUL
)

3423 
	`£t_highlight
('t');

3424 
	`°¨t_highlight
();

3425 
	`MSG_OUTSTR
("\n--- Auto-Commands ---");

3426 
	`°›_highlight
();

3432 i‡(*
¨g
 ='*' || *¨g =
NUL
)

3434 
evít
 = 0;Évíà< 
NUM_EVENTS
; ++event)

3435 i‡(
	`do_autocmd_evít
(
evít
, 
∑t
, 
cmd
, 
f‹˚
Ë=
FAIL
)

3440 *
¨g
 && !
	`vim_iswhôe
(*arg))

3441 i‡(
	`do_autocmd_evít
(
	`evít_«me2ƒ
(
¨g
, &¨g), 
∑t
,

3442 
cmd
, 
f‹˚
Ë=
FAIL
)

3445 
	}
}

3454 
	$do_autocmd_evít
(
evít
, 
∑t
, 
cmd
, 
f‹˚
)

3455 
evít
;

3456 
ch¨_u
 *
∑t
;

3457 
ch¨_u
 *
cmd
;

3458 
f‹˚
;

3460 
AutoP©
 *
≠
;

3461 
AutoP©
 *
≠2
;

3462 
AutoP©
 **
föÆ_≠
;

3463 
AutoCmd
 *
ac
;

3464 
AutoCmd
 **
föÆ_ac
;

3465 
√°ed
;

3466 
ch¨_u
 *
íd∑t
;

3467 
Àn
;

3472 i‡(*
∑t
 =
NUL
)

3474 
≠
 = 
fú°_aut›©
[
evít
];á∞!
NULL
;á∞
≠2
)

3476 
≠2
 = 
≠
->
√xt
;

3477 i‡(
f‹˚
)

3478 
	`dñ_autocmd
(
≠
);

3480 
	`show_autocmd
(
≠
, 
evít
);

3482 i‡(
f‹˚
)

3483 
fú°_aut›©
[
evít
] = 
NULL
;

3489  ; *
∑t
;Ö© = (*
íd∑t
 == ',' ?Éndpat + 1 :Éndpat))

3495 
√°ed
 = 0;

3496 
íd∑t
 = 
∑t
;

3497 *
íd∑t
 && (*íd∑à!',' || 
√°ed
 ||Éndpat[-1] == '\\');

3498 ++
íd∑t
)

3500 i‡(*
íd∑t
 == '{')

3501 
√°ed
++;

3502 i‡(*
íd∑t
 == '}')

3503 
√°ed
--;

3505 i‡(
∑t
 =
íd∑t
)

3511 
föÆ_≠
 = &
fú°_aut›©
[
evít
];

3512 
≠
 = 
fú°_aut›©
[
evít
];á∞!
NULL
;á∞*
föÆ_≠
)

3514 
Àn
 = 
	`STRLEN
(
≠
->
∑t
);

3515 i‡(
Àn
 =
íd∑t
 - 
∑t
 && 
	`STRNCMP
’©, 
≠
->pat,Üen) == 0)

3517 
föÆ_≠
 = &
≠
->
√xt
;

3524 i‡(
≠
 =
NULL
)

3526 i‡(*
cmd
 =
NUL
)

3530 
≠
 = (
AutoP©
 *)
	`Æloc
(()(AutoPat));

3531 i‡(
≠
 =
NULL
)

3532  
FAIL
;

3533 
≠
->
∑t
 = 
	`°∫ßve
’©, ()(
íd∑t
 -Öat));

3534 i‡(
≠
->
∑t
 =
NULL
)

3536 
	`vim_‰ì
(
≠
);

3537  
FAIL
;

3539 
≠
->
ªg_∑t
 = 
	`fûe_∑t_to_ªg_∑t
(
∑t
, 
íd∑t
,

3540 &
≠
->
Ælow_dúe˘‹õs
);

3541 i‡(
≠
->
ªg_∑t
 =
NULL
)

3543 
	`vim_‰ì
(
≠
->
∑t
);

3544 
	`vim_‰ì
(
≠
);

3545  
FAIL
;

3547 
≠
->
cmds
 = 
NULL
;

3548 *
föÆ_≠
 = 
≠
;

3549 
≠
->
√xt
 = 
NULL
;

3557 i‡(
f‹˚
)

3559 
	`dñ_autocmd_cmds
(
≠
);

3560 i‡(*
cmd
 =
NUL
)

3562 i‡(
≠
 =
fú°_aut›©
[
evít
])

3563 
fú°_aut›©
[
evít
] = 
≠
->
√xt
;

3566 
≠2
 = 
fú°_aut›©
[
evít
];

3567 
≠2
->
√xt
 !
≠
;

3568 
≠2
 =áp2->
√xt
)

3570 
≠2
->
√xt
 = 
≠
->next;

3572 
	`dñ_autocmd
(
≠
);

3579 i‡(*
cmd
 =
NUL
 && !
f‹˚
)

3581 
	`show_autocmd
(
≠
, 
evít
);

3587 i‡(*
cmd
 !
NUL
)

3589 
föÆ_ac
 = &(
≠
->
cmds
);

3590 
ac
 = 
≠
->
cmds
;

3591 
ac
 !
NULL
 && 
	`STRCMP
(
cmd
,ác->cmd) != 0;

3592 
ac
 =ác->
√xt
)

3593 
föÆ_ac
 = &
ac
->
√xt
;

3594 i‡(
ac
 =
NULL
)

3596 
ac
 = (
AutoCmd
 *)
	`Æloc
(()(AutoCmd));

3597 i‡(
ac
 =
NULL
)

3598  
FAIL
;

3599 
ac
->
cmd
 = 
	`°rßve
(cmd);

3600 i‡(
ac
->
cmd
 =
NULL
)

3602 
	`vim_‰ì
(
ac
);

3603  
FAIL
;

3605 
ac
->
√xt
 = 
NULL
;

3606 *
föÆ_ac
 = 
ac
;

3610  
OK
;

3611 
	}
}

3617 
	$do_dﬂutocmd
(
¨g
)

3618 
ch¨_u
 *
¨g
;

3620 
ch¨_u
 *
‚ame
;

3621 
nŸhög_d⁄e
 = 
TRUE
;

3623 i‡(*
¨g
 == '*')

3625 
	`EMSG
("Can'tÉxecuteáutocommands for ALLÉvents");

3633 
‚ame
 = 
	`föd_íd_evít
(
¨g
);

3634 i‡(
‚ame
 =
NULL
)

3637 
‚ame
 = 
	`skùwhôe
(fname);

3642 *
¨g
 && !
	`vim_iswhôe
(*arg))

3643 i‡(
	`≠∂y_autocmds
(
	`evít_«me2ƒ
(
¨g
, &¨g), 
‚ame
, 
NULL
))

3644 
nŸhög_d⁄e
 = 
FALSE
;

3646 i‡(
nŸhög_d⁄e
)

3647 
	`MSG
("No matchingáutocommands");

3648 
	}
}

3655 
	$≠∂y_autocmds
(
evít
, 
‚ame
, 
‚ame_io
)

3656 
evít
;

3657 
ch¨_u
 *
‚ame
;

3658 
ch¨_u
 *
‚ame_io
;

3660 
ªgexp
 *
¥og
;

3661 
ch¨_u
 *
èû
;

3662 
AutoP©
 *
≠
;

3663 
AutoCmd
 *
ac
;

3664 
ãmp
;

3665 
ßve_ch™ged
 = 
curbuf
->
b_ch™ged
;

3666 
ch¨_u
 *
ßve_«me
;

3667 
ch¨_u
 *
fuŒ_‚ame
 = 
NULL
;

3668 
ªtvÆ
 = 
FALSE
;

3670 i‡(
autocmd_busy
)

3671  
ªtvÆ
;

3674 
ãmp
 = 
RedøwögDißbÀd
;

3675 
RedøwögDißbÀd
 = 
TRUE
;

3676 
ßve_«me
 = 
sourcög_«me
;

3677 
autocmd_‚ame
 = 
‚ame_io
;

3683 
autocmd_busy
 = 
TRUE
;

3690 i‡(
‚ame
 =
NULL
 || *‚amê=
NUL
)

3692 
‚ame
 = 
curbuf
->
b_fûíame
;

3693 i‡(
‚ame
 =
NULL
)

3694 
‚ame
 = (
ch¨_u
 *)"";

3698 
fuŒ_‚ame
 = 
	`FuŒName_ßve
(
‚ame
);

3699 
‚ame
 = 
fuŒ_‚ame
;

3702 
èû
 = 
	`gëèû
(
‚ame
);

3704 
≠
 = 
fú°_aut›©
[
evít
];á∞!
NULL
;á∞≠->
√xt
)

3706 
ªg_ic
 = 
FALSE
;

3707 
ªg_magic
 = 
TRUE
;

3708 
¥og
 = 
	`vim_ªgcomp
(
≠
->
ªg_∑t
);

3710 i‡(
¥og
 !
NULL
 &&

3711 ((
≠
->
Ælow_dúe˘‹õs
 && 
	`vim_ªgexec
(
¥og
, 
‚ame
, 
TRUE
)) ||

3712 (!
≠
->
Ælow_dúe˘‹õs
 && 
	`vim_ªgexec
(
¥og
, 
èû
, 
TRUE
))))

3714 
	`•rötf
((*)
IObuff
, "%s Auto commands for \"%s\"",

3715 
	`evít_ƒ2«me
(
evít
), (*)
≠
->
∑t
);

3716 
sourcög_«me
 = 
	`°rßve
(
IObuff
);

3717 
ac
 = 
≠
->
cmds
;á¯!
NULL
;á¯ac->
√xt
)

3719 
	`do_cmdlöe
(
ac
->
cmd
, 
TRUE
, TRUE);

3720 
ªtvÆ
 = 
TRUE
;

3722 
	`vim_‰ì
(
sourcög_«me
);

3724 
	`vim_‰ì
(
¥og
);

3726 
RedøwögDißbÀd
 = 
ãmp
;

3727 
autocmd_busy
 = 
FALSE
;

3728 
sourcög_«me
 = 
ßve_«me
;

3729 
autocmd_‚ame
 = 
NULL
;

3730 
	`vim_‰ì
(
fuŒ_‚ame
);

3733 i‡(
evít
 =
EVENT_BUFREADPOST
 ||Évíà=
EVENT_BUFWRITEPOST
 ||

3734 
evít
 =
EVENT_FILEAPPENDPOST
 ||Évíà=
EVENT_VIMLEAVE
)

3735 
curbuf
->
b_ch™ged
 = 
ßve_ch™ged
;

3737  
ªtvÆ
;

3738 
	}
}

3740 
ch¨_u
 *

3741 
	$£t_c⁄ãxt_ö_autocmd
(
¨g
, 
dﬂutocmd
)

3742 
ch¨_u
 *
¨g
;

3743 
dﬂutocmd
;

3745 
ch¨_u
 *
p
;

3748 
p
 = 
¨g
; *∞&& !
	`vim_iswhôe
(*p); ++p)

3749 i‡(*
p
 == ',')

3750 
¨g
 = 
p
 + 1;

3751 i‡(*
p
 =
NUL
)

3753 
ex∑nd_c⁄ãxt
 = 
EXPAND_EVENTS
;

3754 
ex∑nd_∑âîn
 = 
¨g
;

3755  
NULL
;

3759 
¨g
 = 
	`skùwhôe
(
p
);

3760 *
¨g
 && (!
	`vim_iswhôe
(*arg) ||árg[-1] == '\\'))

3761 
¨g
++;

3762 i‡(*
¨g
)

3763  
¨g
;

3765 i‡(
dﬂutocmd
)

3766 
ex∑nd_c⁄ãxt
 = 
EXPAND_FILES
;

3768 
ex∑nd_c⁄ãxt
 = 
EXPAND_NOTHING
;

3769  
NULL
;

3770 
	}
}

3773 
	$Ex∑ndEvíts
(
¥og
, 
num_fûe
, 
fûe
)

3774 
ªgexp
 *
¥og
;

3775 *
num_fûe
;

3776 
ch¨_u
 ***
fûe
;

3778 
i
;

3779 
cou¡
;

3780 
round
;

3786 
round
 = 1;Ñound <= 2; ++round)

3788 
cou¡
 = 0;

3789 
i
 = 0; 
evít_«mes
[i].
«me
 !
NULL
; i++)

3790 i‡(
	`vim_ªgexec
(
¥og
, (
ch¨_u
 *)
evít_«mes
[
i
].
«me
, 
TRUE
))

3792 i‡(
round
 == 1)

3793 
cou¡
++;

3795 (*
fûe
)[
cou¡
++] = 
	`°rßve
((
ch¨_u
 *)
evít_«mes
[
i
].
«me
);

3797 i‡(
round
 == 1)

3799 *
num_fûe
 = 
cou¡
;

3800 i‡(
cou¡
 =0 || (*
fûe
 = (
ch¨_u
 **)

3801 
	`Æloc
(()(
cou¡
 * (
ch¨_u
 *)))Ë=
NULL
)

3802  
FAIL
;

3805  
OK
;

3806 
	}
}

3810 #ifde‡
HAVE_LANGMAP


3825 
	$œngm≠_öô
()

3827 
i
;

3829 
i
 = 0; i < 256; i++)

3830 
œngm≠_m≠ch¨
[
i
] = i;

3831 
	}
}

3838 
	$œngm≠_£t
()

3840 
ch¨_u
 *
p
;

3841 
ch¨_u
 *
p2
;

3842 
‰om
, 
to
;

3844 
	`œngm≠_öô
();

3846 
p
 = 
p_œngm≠
;Ö[0]; )

3848 
p2
 = 
p
;Ö2[0] &&Ö2[0] != ',' &&Ö2[0] != ';'; ++p2)

3849 i‡(
p2
[0] == '\\' &&Ö2[1])

3850 ++
p2
;

3851 i‡(
p2
[0] == ';')

3852 ++
p2
;

3854 
p2
 = 
NULL
;

3855 
p
[0])

3857 i‡(
p
[0] == '\\' &&Ö[1])

3858 ++
p
;

3859 
‰om
 = 
p
[0];

3860 i‡(
p2
 =
NULL
)

3862 i‡(
p
[1] == '\\')

3863 ++
p
;

3864 
to
 = 
p
[1];

3868 i‡(
p2
[0] == '\\')

3869 ++
p2
;

3870 
to
 = 
p2
[0];

3872 i‡(
to
 =
NUL
)

3874 
	`EMSG2
("'œngm≠': M©chög ch¨a˘î missög f‹ %c", 
‰om
);

3877 
œngm≠_m≠ch¨
[
‰om
] = 
to
;

3880 i‡(
p2
 =
NULL
)

3882 
p
 += 2;

3883 i‡(
p
[0] == ',')

3885 ++
p
;

3891 ++
p
;

3892 ++
p2
;

3893 i‡(*
p
 == ';')

3895 
p
 = 
p2
;

3896 i‡(
p
[0])

3898 i‡(
p
[0] != ',')

3900 
	`EMSG2
("'œngm≠': Exå®ch¨a˘î†a·î semicﬁ⁄: %s", 
p
);

3903 ++
p
;

3910 
	}
}

3918 
	$has_f‹m©_›ti⁄
(
x
)

3919 
x
;

3921 i‡(
p_∑°e
)

3922  
FALSE
;

3923  (
	`vim_°rchr
(
curbuf
->
b_p_fo
, 
x
Ë!
NULL
);

3924 
	}
}

3931 
	$sh‹tmess
(
x
)

3932 
x
;

3934  (
	`vim_°rchr
(
p_shm
, 
x
Ë!
NULL
 || (vim_strchr(p_shm, 'a') != NULL &&

3935 
	`vim_°rchr
((
ch¨_u
 *)
SHM_A
, 
x
Ë!
NULL
));

3936 
	}
}

3942 
	$∑°e_›ti⁄_ch™ged
()

3944 
ﬁd_p_∑°e
 = 
FALSE
;

3945 
ßve_sm
 = 0;

3946 
ßve_ru
 = 0;

3947 #ifde‡
RIGHTLEFT


3948 
ßve_ri
 = 0;

3949 
ßve_hkm≠
 = 0;

3951 
BUF
 *
buf
;

3953 i‡(
p_∑°e
)

3959 i‡(!
ﬁd_p_∑°e
)

3962 
buf
 = 
fú°buf
; bu‡!
NULL
; bu‡buf->
b_√xt
)

3964 
buf
->
b_p_tw_ßve
 = buf->
b_p_tw
;

3965 
buf
->
b_p_wm_ßve
 = buf->
b_p_wm
;

3966 
buf
->
b_p_ai_ßve
 = buf->
b_p_ai
;

3967 #ifde‡
SMARTINDENT


3968 
buf
->
b_p_si_ßve
 = buf->
b_p_si
;

3970 #ifde‡
CINDENT


3971 
buf
->
b_p_cö_ßve
 = buf->
b_p_cö
;

3973 #ifde‡
LISPINDENT


3974 
buf
->
b_p_li•_ßve
 = buf->
b_p_li•
;

3979 
ßve_sm
 = 
p_sm
;

3980 
ßve_ru
 = 
p_ru
;

3981 #ifde‡
RIGHTLEFT


3982 
ßve_ri
 = 
p_ri
;

3983 
ßve_hkm≠
 = 
p_hkm≠
;

3992 
buf
 = 
fú°buf
; bu‡!
NULL
; bu‡buf->
b_√xt
)

3994 
buf
->
b_p_tw
 = 0;

3995 
buf
->
b_p_wm
 = 0;

3996 
buf
->
b_p_ai
 = 0;

3997 #ifde‡
SMARTINDENT


3998 
buf
->
b_p_si
 = 0;

4000 #ifde‡
CINDENT


4001 
buf
->
b_p_cö
 = 0;

4003 #ifde‡
LISPINDENT


4004 
buf
->
b_p_li•
 = 0;

4009 
p_sm
 = 0;

4010 
p_ru
 = 0;

4011 #ifde‡
RIGHTLEFT


4012 
p_ri
 = 0;

4013 
p_hkm≠
 = 0;

4020 i‡(
ﬁd_p_∑°e
)

4023 
buf
 = 
fú°buf
; bu‡!
NULL
; bu‡buf->
b_√xt
)

4025 
buf
->
b_p_tw
 = buf->
b_p_tw_ßve
;

4026 
buf
->
b_p_wm
 = buf->
b_p_wm_ßve
;

4027 
buf
->
b_p_ai
 = buf->
b_p_ai_ßve
;

4028 #ifde‡
SMARTINDENT


4029 
buf
->
b_p_si
 = buf->
b_p_si_ßve
;

4031 #ifde‡
CINDENT


4032 
buf
->
b_p_cö
 = buf->
b_p_cö_ßve
;

4034 #ifde‡
LISPINDENT


4035 
buf
->
b_p_li•
 = buf->
b_p_li•_ßve
;

4040 
p_sm
 = 
ßve_sm
;

4041 
p_ru
 = 
ßve_ru
;

4042 #ifde‡
RIGHTLEFT


4043 
p_ri
 = 
ßve_ri
;

4044 
p_hkm≠
 = 
ßve_hkm≠
;

4048 
ﬁd_p_∑°e
 = 
p_∑°e
;

4049 
	}
}

4055 
	$p_com∑tibÀ_£t
()

4057 
p_bs
 = 0;

4059 
	`£t_°rög_›ti⁄
((
ch¨_u
 *)"ww", -1, (ch¨_u *)"", 
TRUE
);

4060 
p_bk
 = 0;

4062 
	`£t_°rög_›ti⁄
((
ch¨_u
 *)"fo", -1, (ch¨_u *)
FO_DFLT_VI
, 
TRUE
);

4064 
	`£t_°rög_›ti⁄
((
ch¨_u
 *)"˝o", -1, (ch¨_u *)
CPO_ALL
, 
TRUE
);

4065 
	`£t_°rög_›ti⁄
((
ch¨_u
 *)"isk", -1, (ch¨_u *)"@,48-57,_", 
TRUE
);

4067 
	`£t_°rög_›ti⁄
((
ch¨_u
 *)"shm", -1, (ch¨_u *)"", 
TRUE
);

4068 #ifde‡
DIGRAPHS


4069 
p_dg
 = 0;

4071 
p_ek
 = 0;

4072 
curbuf
->
b_p_ë
 = 0;

4073 
p_gd
 = 0;

4074 
p_hi
 = 0;

4075 
p_scs
 = 0;

4076 
p_im
 = 0;

4077 
p_js
 = 1;

4078 
curbuf
->
b_p_ml
 = 0;

4079 
p_m‹e
 = 0;

4080 
p_ru
 = 0;

4081 #ifde‡
RIGHTLEFT


4082 
p_ri
 = 0;

4083 
p_hkm≠
 = 0;

4085 
p_sj
 = 1;

4086 
p_so
 = 0;

4087 
p_§
 = 0;

4088 
p_sc
 = 0;

4089 
p_smd
 = 0;

4090 #ifde‡
SMARTINDENT


4091 
curbuf
->
b_p_si
 = 0;

4093 #ifde‡
CINDENT


4094 
curbuf
->
b_p_cö
 = 0;

4096 
p_°a
 = 0;

4097 
p_sﬁ
 = 
TRUE
;

4098 
p_è
 = 0;

4099 
curbuf
->
b_p_tw
 = 0;

4100 
p_to
 = 0;

4101 
p_âimeout
 = 0;

4102 
p_å
 = 0;

4103 
p_ul
 = 0;

4104 
p_uc
 = 0;

4105 
p_wb
 = 0;

4106 i‡(
p_wc
 =
TAB
)

4107 
p_wc
 = 
	`Cål
('E');

4108 
	`öô_ch¨èb
();

4109 
	}
}

4115 
	$fûl_bªak©_Êags
()

4117 
ch¨_u
 *
c
;

4118 
i
;

4120 
i
 = 0; i < 256; i++)

4121 
bªak©_Êags
[
i
] = 
FALSE
;

4123 i‡(
p_bªak©
 !
NULL
)

4124 
c
 = 
p_bªak©
; *c; c++)

4125 
bªak©_Êags
[*
c
] = 
TRUE
;

4126 
	}
}

	@src/option.h

15 #i‚de‡
EXTERN


16 
	#EXTERN
 

	)

17 
	#INIT
(
x
)

	)

19 #i‚de‡
INIT


20 
	#INIT
(
x
Ë
	)
x

25 
	#FO_WRAP
 't'

	)

26 
	#FO_WRAP_COMS
 'c'

	)

27 
	#FO_RET_COMS
 'r'

	)

28 
	#FO_OPEN_COMS
 'o'

	)

29 
	#FO_Q_COMS
 'q'

	)

30 
	#FO_Q_SECOND
 '2'

	)

31 
	#FO_INS_VI
 'v'

	)

32 
	#FO_INS_LONG
 'l'

	)

33 
	#FO_INS_BLANK
 'b'

	)

35 
	#FO_DFLT_VI
 "vt"

	)

36 
	#FO_DFLT
 "tcq"

	)

37 
	#FO_ALL
 "t¸oq2vlb,"

	)

40 
	#CPO_BAR
 'b'

	)

41 
	#CPO_BSLASH
 'B'

	)

42 
	#CPO_SEARCH
 'c'

	)

43 
	#CPO_EXECBUF
 'e'

	)

44 
	#CPO_FNAMER
 'f'

	)

45 
	#CPO_FNAMEW
 'F'

	)

46 
	#CPO_SHOWMATCH
 'm'

	)

47 
	#CPO_LINEOFF
 'o'

	)

48 
	#CPO_REDO
 'r'

	)

49 
	#CPO_BUFOPT
 's'

	)

50 
	#CPO_BUFOPTGLOB
 'S'

	)

51 
	#CPO_TAGPAT
 't'

	)

52 
	#CPO_ESC
 'x'

	)

53 
	#CPO_DOLLAR
 '$'

	)

54 
	#CPO_FILTER
 '!'

	)

55 
	#CPO_MATCH
 '%'

	)

56 
	#CPO_SPECI
 '<'

	)

57 
	#CPO_DEFAULT
 "B˚Fs"

	)

58 
	#CPO_ALL
 "bB˚fFm‹sStx$!%<"

	)

61 
	#WW_ALL
 "bshl<>[],"

	)

64 
	#MOUSE_NORMAL
 'n'

	)

65 
	#MOUSE_VISUAL
 'v'

	)

66 
	#MOUSE_INSERT
 'i'

	)

67 
	#MOUSE_COMMAND
 'c'

	)

68 
	#MOUSE_HELP
 'h'

	)

69 
	#MOUSE_RETURN
 'r'

	)

70 
	#MOUSE_A
 "nvich"

	)

71 
	#MOUSE_ALL
 "™vi¸h"

	)

74 
	#SHM_RO
 'r'

	)

75 
	#SHM_MOD
 'm'

	)

76 
	#SHM_FILE
 'f'

	)

77 
	#SHM_LAST
 'i'

	)

78 
	#SHM_TEXT
 'x'

	)

79 
	#SHM_LINES
 'l'

	)

80 
	#SHM_NEW
 'n'

	)

81 
	#SHM_WRI
 'w'

	)

82 
	#SHM_A
 "rmfix w"

	)

83 
	#SHM_WRITE
 'W'

	)

84 
	#SHM_TRUNC
 't'

	)

85 
	#SHM_OVER
 'o'

	)

86 
	#SHM_SEARCH
 's'

	)

87 
	#SHM_ALL
 "rmfix waWtos"

	)

90 
	#GO_ASEL
 'a'

	)

91 
	#GO_BOT
 'b'

	)

92 
	#GO_FORG
 'f'

	)

93 
	#GO_GREY
 'g'

	)

94 
	#GO_LEFT
 'l'

	)

95 
	#GO_MENUS
 'm'

	)

96 
	#GO_RIGHT
 'r'

	)

97 
	#GO_ALL
 "abfglmr"

	)

100 
	#COM_NEST
 'n'

	)

101 
	#COM_BLANK
 'b'

	)

102 
	#COM_START
 's'

	)

103 
	#COM_MIDDLE
 'm'

	)

104 
	#COM_END
 'e'

	)

105 
	#COM_FIRST
 'f'

	)

106 
	#COM_LEFT
 'l'

	)

107 
	#COM_RIGHT
 'r'

	)

108 
	#COM_ALL
 "nbsmeÊr"

	)

109 
	#COM_MAX_LEN
 50

	)

115 #ifde‡
RIGHTLEFT


116 
EXTERN
 
p_Æïh
;

118 
EXTERN
 
	gp_aw
;

119 
EXTERN
 
	gp_bs
;

120 
EXTERN
 
	gp_bk
;

121 
EXTERN
 
ch¨_u
 *
	gp_bdú
;

122 
EXTERN
 
ch¨_u
 *
	gp_bex
;

123 #ifde‡
MSDOS


124 
EXTERN
 
	gp_biosk
;

126 
EXTERN
 
ch¨_u
 *
	gp_bªak©
;

127 
EXTERN
 
	gp_ch
;

128 
EXTERN
 
	gp_˝
;

129 
EXTERN
 
ch¨_u
 *
	gp_˝o
;

130 
EXTERN
 
ch¨_u
 *
	gp_def
;

131 
EXTERN
 
ch¨_u
 *
	gp_di˘
;

132 #ifde‡
DIGRAPHS


133 
EXTERN
 
	gp_dg
;

135 
EXTERN
 
ch¨_u
 *
	gp_dú
;

136 
EXTERN
 
	gp_ed
;

137 
EXTERN
 
	gp_ó
;

138 
EXTERN
 
ch¨_u
 *
	gp_ï
;

139 
EXTERN
 
	gp_eb
;

140 
EXTERN
 
ch¨_u
 *
	gp_ef
;

141 
EXTERN
 
ch¨_u
 *
	gp_efm
;

142 
EXTERN
 
	gp_ek
;

143 
EXTERN
 
	gp_exrc
;

144 
EXTERN
 
ch¨_u
 *
	gp_Â
;

145 
EXTERN
 
	gp_gd
;

146 #ifde‡
USE_GUI


147 
EXTERN
 
ch¨_u
 *
	gp_guif⁄t
;

148 
EXTERN
 
ch¨_u
 *
	gp_gui›ti⁄s
;

149 
EXTERN
 
	gp_guùty
;

151 
EXTERN
 
ch¨_u
 *
	gp_hf
;

152 
EXTERN
 
	gp_hh
;

153 
EXTERN
 
	gp_hid
;

154 
EXTERN
 
ch¨_u
 *
	gp_hl
;

155 
EXTERN
 
	gp_hi
;

156 #ifde‡
RIGHTLEFT


157 
EXTERN
 
	gp_hkm≠
;

159 
EXTERN
 
	gp_ic⁄
;

160 
EXTERN
 
	gp_ic
;

161 
EXTERN
 
	gp_is
;

162 
EXTERN
 
	gp_im
;

163 
EXTERN
 
ch¨_u
 *
	gp_öc
;

164 
EXTERN
 
ch¨_u
 *
	gp_isf
;

165 
EXTERN
 
ch¨_u
 *
	gp_isi
;

166 
EXTERN
 
ch¨_u
 *
	gp_i•
;

167 
EXTERN
 
	gp_js
;

168 
EXTERN
 
ch¨_u
 *
	gp_kp
;

169 #ifde‡
HAVE_LANGMAP


170 
EXTERN
 
ch¨_u
 *
	gp_œngm≠
;

172 
EXTERN
 
	gp_ls
;

173 
EXTERN
 
	gp_magic
;

174 
EXTERN
 
ch¨_u
 *
	gp_mp
;

175 
EXTERN
 
	gp_mmd
;

176 
EXTERN
 
	gp_mm
;

177 
EXTERN
 
	gp_mmt
;

178 
EXTERN
 
	gp_mls
;

179 
EXTERN
 
ch¨_u
 *
	gp_mou£
;

180 
EXTERN
 
	gp_mou£t
;

181 
EXTERN
 
	gp_m‹e
;

182 
EXTERN
 
ch¨_u
 *
	gp_∑ø
;

183 
EXTERN
 
	gp_∑°e
;

184 
EXTERN
 
ch¨_u
 *
	gp_pm
;

185 
EXTERN
 
ch¨_u
 *
	gp_∑th
;

186 
EXTERN
 
	gp_ªm≠
;

187 
EXTERN
 
	gp_ªp‹t
;

188 #ifde‡
WIN32


189 
EXTERN
 
	gp_rs
;

191 #ifde‡
RIGHTLEFT


192 
EXTERN
 
	gp_ri
;

194 
EXTERN
 
	gp_ru
;

195 
EXTERN
 
	gp_sj
;

196 
EXTERN
 
	gp_so
;

197 
EXTERN
 
ch¨_u
 *
	gp_£˘i⁄s
;

198 
EXTERN
 
	gp_£cuª
;

199 
EXTERN
 
ch¨_u
 *
	gp_sh
;

200 
EXTERN
 
ch¨_u
 *
	gp_•
;

201 
EXTERN
 
ch¨_u
 *
	gp_§r
;

202 
EXTERN
 
	gp_°
;

203 
EXTERN
 
	gp_§
;

204 
EXTERN
 
ch¨_u
 *
	gp_shm
;

205 
EXTERN
 
ch¨_u
 *
	gp_sbr
;

206 
EXTERN
 
	gp_sc
;

207 
EXTERN
 
	gp_sm
;

208 
EXTERN
 
	gp_smd
;

209 
EXTERN
 
	gp_ss
;

210 
EXTERN
 
	gp_scs
;

211 
EXTERN
 
	gp_°a
;

212 
EXTERN
 
	gp_sb
;

213 
EXTERN
 
	gp_sﬁ
;

214 
EXTERN
 
ch¨_u
 *
	gp_su
;

215 
EXTERN
 
ch¨_u
 *
	gp_sws
;

216 
EXTERN
 
	gp_é
;

217 
EXTERN
 
	gp_å
;

218 
EXTERN
 
ch¨_u
 *
	gp_ègs
;

219 
EXTERN
 
	gp_ãr£
;

220 
EXTERN
 
	gp_è
;

221 
EXTERN
 
	gp_to
;

222 
EXTERN
 
	gp_timeout
;

223 
EXTERN
 
	gp_tm
;

224 
EXTERN
 
	gp_tôÀ
;

225 
EXTERN
 
	gp_âimeout
;

226 
EXTERN
 
	gp_âm
;

227 
EXTERN
 
	gp_tbi
;

228 
EXTERN
 
	gp_tf
;

229 
EXTERN
 
	gp_âys¸ﬁl
;

230 
EXTERN
 
	gp_ul
;

231 
EXTERN
 
	gp_uc
;

232 
EXTERN
 
	gp_ut
;

233 #ifde‡
VIMINFO


234 
EXTERN
 
ch¨_u
 *
	gp_vimöfo
;

236 
EXTERN
 
	gp_vb
;

237 
EXTERN
 
	gp_w¨n
;

238 
EXTERN
 
	gp_wiv
;

239 
EXTERN
 
ch¨_u
 *
	gp_ww
;

240 
EXTERN
 
	gp_wc
;

241 
EXTERN
 
	gp_wh
;

242 
EXTERN
 
	gp_ws
;

243 
EXTERN
 
	gp_wa
;

244 
EXTERN
 
	gp_wb
;

245 
EXTERN
 
	gp_wd
;

	@src/osdef.h

18 #i‚de‡
„º‹


20 #i‡
deföed
(
sun
Ë|| deföed(
_SEQUENT_
)

22 
_Êsbuf
 
__ARGS
((, 
FILE
 *));

23 
_fûbuf
 
__ARGS
((
FILE
 *));

26 #i‡!
deföed
(
HAVE_SELECT
)

27 
	gpﬁlfd
;

28 
pﬁl
 
__ARGS
((
pﬁlfd
 *, , ));

31 #ifde‡
HAVE_MEMSET


33 #ifde‡
HAVE_STRCSPN


35 #ifde‡
USEBCOPY


37 #ifde‡
USEMEMCPY


39 #ifde‡
USEMEMMOVE


44 #ifde‡
HAVE_STRTOL


47 #i‚de‡
USE_SYSTEM


51 #ifde‡
HAVE_SIGSET


52 
RETSIGTYPE
 (*
sig£t
 
__ARGS
((, 
	$RETSIGTYPE
 (*
func
Ë
SIGPROTOARG
))Ë
	`__PARMS
(SIGPROTOARG);

56 #i‡
	`deföed
(
HAVE_GETCWD
Ë&& !deföed(
sun
)

64 #ifde‡
HAVE_TERMIOS_H


67 #ifde‡
HAVE_SYS_STATFS_H


68 
°©fs
;

69 
f°©fs
 
	`__ARGS
((, 
°©fs
 *, , ));

72 #ifde‡
HAVE_GETTIMEOFDAY


75 #ifde‡
HAVE_GETPWNAM


	@src/pathdef.c

4 
	~"vim.h
"

5 #i‚de‡
SYS_VIMRC_FILE


6 
ch¨_u
 *
	gsys_vimrc_‚ame
 = (char_u *)"/usr/local/share/vim/vimrc";

8 
ch¨_u
 *
	gsys_vimrc_‚ame
 = (ch¨_u *)
SYS_VIMRC_FILE
;

10 #i‚de‡
SYS_GVIMRC_FILE


11 
ch¨_u
 *
	gsys_gvimrc_‚ame
 = (char_u *)"/usr/local/share/vim/gvimrc";

13 
ch¨_u
 *
	gsys_gvimrc_‚ame
 = (ch¨_u *)
SYS_GVIMRC_FILE
;

15 #i‚de‡
VIM_HLP


16 
ch¨_u
 *
	ghñp_‚ame
 = (char_u *)"/usr/local/share/vim/vim_help.txt";

18 
ch¨_u
 *
	ghñp_‚ame
 = (ch¨_u *)
VIM_HLP
;

20 
ch¨_u
 *
	gÆl_cÊags
 = (char_u *)"gcc -c -I. -DHAVE_CONFIG_H -g -I/usr/X11R6/include ";

	@src/proto.h

16 
	~"ªgexp.h
"

22 #i‚de‡
PROTO


27 #ifde‡
AMIGA


28 
	~"¥Ÿo/amiga.¥o
"

30 #i‡
deföed
(
UNIX
Ë|| deföed(
__EMX__
)

31 
	~"¥Ÿo/unix.¥o
"

32 #i‚de‡
HAVE_RENAME


33 
ª«me
 
__PARMS
((const *, const *));

36 #ifde‡
MSDOS


37 
	~"¥Ÿo/msdos.¥o
"

39 #ifde‡
WIN32


40 
	~"¥Ÿo/wö32.¥o
"

42 #ifde‡
VMS


43 
	~"¥Ÿo/vms.¥o
"

46 
	~"¥Ÿo/Æloc.¥o
"

47 
	~"¥Ÿo/buf„r.¥o
"

48 
	~"¥Ÿo/ch¨£t.¥o
"

49 
	~"¥Ÿo/cmdcmds.¥o
"

50 
	~"¥Ÿo/cmdlöe.¥o
"

51 
	~"¥Ÿo/c£¨ch.¥o
"

52 
	~"¥Ÿo/digøph.¥o
"

53 
	~"¥Ÿo/edô.¥o
"

54 
	~"¥Ÿo/fûeio.¥o
"

55 
	~"¥Ÿo/gëch¨.¥o
"

56 
	~"¥Ÿo/hñp.¥o
"

57 
	~"¥Ÿo/löefunc.¥o
"

58 
	~"¥Ÿo/maö.¥o
"

59 
	~"¥Ÿo/m¨k.¥o
"

60 #i‚de‡
MESSAGE


61 
smsg
 
__PARMS
((
ch¨_u
 *, ...));

63 
	~"¥Ÿo/memfûe.¥o
"

64 
	~"¥Ÿo/memlöe.¥o
"

65 
	~"¥Ÿo/mesßge.¥o
"

66 
	~"¥Ÿo/misccmds.¥o
"

67 
	~"¥Ÿo/n‹mÆ.¥o
"

68 
	~"¥Ÿo/›s.¥o
"

69 
	~"¥Ÿo/›ti⁄.¥o
"

70 
	~"¥Ÿo/quickfix.¥o
"

71 
	~"¥Ÿo/ªgexp.¥o
"

72 
	~"¥Ÿo/ªgsub.¥o
"

73 
	~"¥Ÿo/s¸ìn.¥o
"

74 
	~"¥Ÿo/£¨ch.¥o
"

75 
	~"¥Ÿo/èbÀs.¥o
"

76 
	~"¥Ÿo/èg.¥o
"

77 
	~"¥Ÿo/ãrm.¥o
"

78 #i‡
deföed
(
HAVE_TGETENT
Ë&& (deföed(
AMIGA
Ë|| deföed(
VMS
))

79 
	~"¥Ÿo/ãrmlib.¥o
"

81 
	~"¥Ÿo/undo.¥o
"

82 
	~"¥Ÿo/vîsi⁄.¥o
"

83 
	~"¥Ÿo/wödow.¥o
"

85 #ifde‡
USE_GUI


86 
	~"¥Ÿo/gui.¥o
"

87 #ifde‡
USE_GUI_MOTIF


88 
	~"¥Ÿo/gui_mŸif.¥o
"

90 #ifde‡
USE_GUI_ATHENA


91 
	~"¥Ÿo/gui_©hía.¥o
"

93 #i‡
deföed
(
USE_GUI_MOTIF
Ë|| deföed(
USE_GUI_ATHENA
)

94 
	~"¥Ÿo/gui_x11.¥o
"

96 #i‡!
deföed
(
HAVE_SETENV
Ë&& !deföed(
HAVE_PUTENV
)

97 
puãnv
 
__ARGS
((*
°rög
));

100 #i‡
deföed
(
USE_GUI
)

101 
O≥nPTY
 
__ARGS
((**
âyn
));

	@src/pty.c

42 
	~"vim.h
"

43 
	~"¥Ÿo.h
"

45 
	#debug
(
x
)

	)

46 
	#debug1
(
x
, 
y
)

	)

50 #ifde‡
HAVE_FCNTL_H


51 
	~<f˙é.h
>

53 
	~<sig«l.h
>

58 #i‚de‡
sun


59 
	~<sys/io˘l.h
>

62 #i‡
deföed
(
sun
Ë&& deföed(
LOCKPTY
Ë&& !deföed(
TIOCEXCL
)

63 
	~<sys/âﬁd.h
>

66 #ifde‡
ISC


67 
	~<sys/ây.h
>

68 
	~<sys/sio˘l.h
>

69 
	~<sys/±y.h
>

72 #ifde‡
sgi


73 
	~<sys/sysma¸os.h
>

78 #i‡
deföed
(
_INCLUDE_HPUX_SOURCE
Ë&& !deföed(
hpux
)

79 
	#hpux


	)

85 #i‚de‡
PTYRANGE0


86 
	#PTYRANGE0
 "q¥"

	)

88 #i‚de‡
PTYRANGE1


89 
	#PTYRANGE1
 "0123456789abcdef"

	)

94 #i‡!(
deföed
(
£quít
Ë|| deföed(
_SEQUENT_
Ë|| deföed(
SVR4
))

95 #ifde‡
hpux


96 
	gPtyPrŸo
[] = "/dev/ptym/ptyXY";

97 
	gTtyPrŸo
[] = "/dev/pty/ttyXY";

99 
	gPtyPrŸo
[] = "/dev/ptyXY";

100 
	gTtyPrŸo
[] = "/dev/ttyXY";

104 
öô±y
 
__ARGS
(());

110 #i‚de‡
O_NOCTTY


111 
	#O_NOCTTY
 0

	)

117 
	$öô±y
(
f
)

118 
f
;

120 #ifde‡
POSIX


121 
	`tcÊush
(
f
, 
TCIOFLUSH
);

123 #ifde‡
TIOCFLUSH


124 (Ë
	`io˘l
(
f
, 
TIOCFLUSH
, (*) 0);

127 #ifde‡
LOCKPTY


128 (Ë
	`io˘l
(
f
, 
TIOCEXCL
, (*) 0);

130 
	}
}

134 #i‡
deföed
(
OSX
Ë&& !deföed(
PTY_DONE
)

135 
	#PTY_DONE


	)

137 
	$O≥nPTY
(
âyn
)

138 **
âyn
;

140 
f
;

141 
TtyName
[32];

143 i‡((
f
 = 
	`›í_c⁄åﬁlög_±y
(
TtyName
)) < 0)

145 
	`öô±y
(
f
);

146 *
âyn
 = 
TtyName
;

147  
f
;

148 
	}
}

153 #i‡(
deföed
(
£quít
Ë|| deföed(
_SEQUENT_
)Ë&& !deföed(
PTY_DONE
)

154 
	#PTY_DONE


	)

156 
	$O≥nPTY
(
âyn
)

157 **
âyn
;

159 *
m
, *
s
;

160 
f
;

162 
PtyName
[32];

163 
TtyName
[32];

165 i‡((
f
 = 
	`gëp£udŸty
(&
s
, &
m
)) < 0)

167 #ifde‡
_SEQUENT_


168 
	`fvh™gup
(
s
);

170 
	`°∫˝y
(
PtyName
, 
m
, (PtyName));

171 
	`°∫˝y
(
TtyName
, 
s
, (TtyName));

172 
	`öô±y
(
f
);

173 *
âyn
 = 
TtyName
;

174  
f
;

175 
	}
}

180 #i‡
deföed
(
__sgi
Ë&& !deföed(
PTY_DONE
)

181 
	#PTY_DONE


	)

183 
	$O≥nPTY
(
âyn
)

184 **
âyn
;

186 
f
;

187 *
«me
;

188 
	`RETSIGTYPE
 (*
sig˛d
)
	`__ARGS
(
SIGPROTOARG
);

194 
sig˛d
 = 
	`sig«l
(
SIGCHLD
, 
SIG_DFL
);

195 
«me
 = 
	`_gë±y
(&
f
, 
O_RDWR
 | 
O_NONBLOCK
 | 
O_EXTRA
, 0600, 0);

196 
	`sig«l
(
SIGCHLD
, 
sig˛d
);

198 i‡(
«me
 == 0)

200 
	`öô±y
(
f
);

201 *
âyn
 = 
«me
;

202  
f
;

203 
	}
}

208 #i‡
deföed
(
MIPS
Ë&& deföed(
HAVE_DEV_PTC
Ë&& !deföed(
PTY_DONE
)

209 
	#PTY_DONE


	)

211 
	$O≥nPTY
(
âyn
)

212 **
âyn
;

214 
f
;

215 
°©
 
buf
;

217 
PtyName
[32];

218 
TtyName
[32];

220 
	`°r˝y
(
PtyName
, "/dev/ptc");

221 i‡((
f
 = 
	`›í
(
PtyName
, 
O_RDWR
 | 
O_NOCTTY
 | 
O_NONBLOCK
 | 
O_EXTRA
)) < 0)

223 i‡(
	`f°©
(
f
, &
buf
) < 0)

225 
	`˛o£
(
f
);

228 
	`•rötf
(
TtyName
, "/dev/âyq%d", 
	`mö‹
(
buf
.
°_rdev
));

229 
	`öô±y
(
f
);

230 *
âyn
 = 
TtyName
;

231  
f
;

232 
	}
}

237 #i‡
deföed
(
SVR4
Ë&& !deföed(
PTY_DONE
)

238 
	#PTY_DONE


	)

240 
	$O≥nPTY
(
âyn
)

241 **
âyn
;

243 
f
;

244 *
m
, *
	`±¢ame
();

245 
u∆ock±
 
	`__ARGS
(()), 
gø¡±
 __ARGS(());

246 
	`RETSIGTYPE
 (*
sig˛d
)
	`__ARGS
(
SIGPROTOARG
);

248 
PtyName
[32];

249 
TtyName
[32];

251 
	`°r˝y
(
PtyName
, "/dev/ptmx");

252 i‡((
f
 = 
	`›í
(
PtyName
, 
O_RDWR
 | 
O_NOCTTY
 | 
O_EXTRA
)) == -1)

259 
sig˛d
 = 
	`sig«l
(
SIGCHLD
, 
SIG_DFL
);

260 i‡((
m
 = 
	`±¢ame
(
f
)Ë=
NULL
 || 
	`gø¡±
(fË|| 
	`u∆ock±
(f))

262 
	`sig«l
(
SIGCHLD
, 
sig˛d
);

263 
	`˛o£
(
f
);

266 
	`sig«l
(
SIGCHLD
, 
sig˛d
);

267 
	`°∫˝y
(
TtyName
, 
m
, (TtyName));

268 
	`öô±y
(
f
);

269 *
âyn
 = 
TtyName
;

270  
f
;

271 
	}
}

276 #i‡
deföed
(
_AIX
Ë&& deföed(
HAVE_DEV_PTC
Ë&& !deföed(
PTY_DONE
)

277 
	#PTY_DONE


	)

279 #ifde‡
_IBMR2


280 
	gaixhack
 = -1;

284 
	$O≥nPTY
(
âyn
)

285 **
âyn
;

287 
f
;

289 
PtyName
[32];

290 
TtyName
[32];

293 
	`°r˝y
 (
PtyName
, "/dev/ptc");

294 i‡((
f
 = 
	`›í
 (
PtyName
, 
O_RDWR
 | 
O_NOCTTY
 | 
O_EXTRA
)) < 0)

296 
	`°∫˝y
(
TtyName
, 
	`ây«me
(
f
), (TtyName));

297 i‡(
	`gëeuid
(Ë&& 
	`ac˚ss
(
TtyName
, 
R_OK
 | 
W_OK
))

299 
	`˛o£
(
f
);

302 
	`öô±y
(
f
);

303 #ifde‡
_IBMR2


304 i‡(
aixhack
 >= 0)

305 
	`˛o£
(
aixhack
);

306 i‡((
aixhack
 = 
	`›í
(
TtyName
, 
O_RDWR
 | 
O_NOCTTY
 | 
O_EXTRA
)) < 0)

308 
	`˛o£
(
f
);

312 *
âyn
 = 
TtyName
;

313  
f
;

314 
	}
}

319 #i‚de‡
PTY_DONE


321 
	$O≥nPTY
(
âyn
)

322 **
âyn
;

324 *
p
, *
q
, *
l
, *
d
;

325 
f
;

327 
PtyName
[32];

328 
TtyName
[32];

330 
	`debug
("OpenPTY: Using BSD styleÖtys.\n");

331 
	`°r˝y
(
PtyName
, 
PtyPrŸo
);

332 
	`°r˝y
(
TtyName
, 
TtyPrŸo
);

333 
p
 = 
PtyName
; *p != 'X';Ö++)

335 
q
 = 
TtyName
; *q != 'X'; q++)

337 
l
 = 
PTYRANGE0
; (*
p
 = *l) != '\0';Ü++)

339 
d
 = 
PTYRANGE1
; (
p
[1] = *d) != '\0'; d++)

341 
	`debug1
("O≥nPTYÅrõ†'%s'\n", 
PtyName
);

342 i‡((
f
 = 
	`›í
(
PtyName
, 
O_RDWR
 | 
O_NOCTTY
 | 
O_EXTRA
)) == -1)

344 
q
[0] = *
l
;

345 
q
[1] = *
d
;

346 i‡(
	`gëeuid
(Ë&& 
	`ac˚ss
(
TtyName
, 
R_OK
 | 
W_OK
))

348 
	`˛o£
(
f
);

351 #i‡
	`deföed
(
sun
Ë&& deföed(
TIOCGPGRP
Ë&& !deföed(
SUNOS3
)

356 
pgΩ
;

359 i‡(
	`io˘l
(
f
, 
TIOCGPGRP
, (*)&
pgΩ
Ë!-1 || 
î∫o
 !
EIO
)

361 
	`˛o£
(
f
);

366 
	`öô±y
(
f
);

367 *
âyn
 = 
TtyName
;

368  
f
;

372 
	}
}

437 #i‡!
deföed
(
HAVE_SETENV
Ë&& !deföed(
HAVE_PUTENV
)

440 *
mÆloc
 
__ARGS
(());

441 *
ªÆloc
 
__ARGS
((*, ));

442 
‰ì
 
__ARGS
((*));

443 
•rötf
 
__ARGS
((*, *, ...));

446 
	#EXTRASIZE
 5

	)

448 
	gívsize
 = -1;

449 **
ívú⁄
;

451 
födív
();

452 
√wív
();

453 
m‹ìnv
();

456 
	$puãnv
(
°rög
)

457 *
°rög
;

459 
i
;

460 *
p
;

462 i‡(
ívsize
 < 0)

464 i‡(
	`√wív
() < 0)

468 
i
 = 
	`födív
(
°rög
);

470 i‡(
i
 < 0)

472 
i
 = 0; 
ívú⁄
[i]; i++);

473 i‡(
i
 >(
ívsize
 - 1))

475 i‡(
	`m‹ìnv
() < 0)

478 
p
 = 
	`mÆloc
(
	`°æí
(
°rög
) + 1);

479 i‡(
p
 == 0)

481 
ívú⁄
[
i
 + 1] = 0;

485 
p
 = 
	`ªÆloc
(
ívú⁄
[
i
], 
	`°æí
(
°rög
) + 1);

486 i‡(
p
 == 0)

489 
	`•rötf
(
p
, "%s", 
°rög
);

490 
ívú⁄
[
i
] = 
p
;

493 
	}
}

496 
	$födív
(
«me
)

497 *
«me
;

499 *
«mech¨
, *
ívch¨
;

500 
i
, 
found
;

502 
found
 = 0;

503 
i
 = 0; 
ívú⁄
[i] && !
found
; i++)

505 
ívch¨
 = 
ívú⁄
[
i
];

506 
«mech¨
 = 
«me
;

507 *
«mech¨
 && *«mech¨ !'=' && (*«mech¨ =*
ívch¨
))

509 
«mech¨
++;

510 
ívch¨
++;

512 
found
 = ((*
«mech¨
 ='\0' || *«mech¨ ='='Ë&& *
ívch¨
 == '=');

514  
found
 ? 
i
 - 1 : -1;

515 
	}
}

518 
	$√wív
()

520 **
ív
, *
ñem
;

521 
i
, 
esize
;

523 
i
 = 0; 
ívú⁄
[i]; i++)

525 
esize
 = 
i
 + 
EXTRASIZE
 + 1;

526 
ív
 = (**)
	`mÆloc
(
esize
 *  (
ñem
));

527 i‡(
ív
 == 0)

530 
i
 = 0; 
ívú⁄
[i]; i++)

532 
ñem
 = 
	`mÆloc
(
	`°æí
(
ívú⁄
[
i
]) + 1);

533 i‡(
ñem
 == 0)

535 
ív
[
i
] = 
ñem
;

536 
	`°r˝y
(
ñem
, 
ívú⁄
[
i
]);

539 
ív
[
i
] = 0;

540 
ívú⁄
 = 
ív
;

541 
ívsize
 = 
esize
;

543 
	}
}

546 
	$m‹ìnv
()

548 
esize
;

549 **
ív
;

551 
esize
 = 
ívsize
 + 
EXTRASIZE
;

552 
ív
 = (**)
	`ªÆloc
((*)
ívú⁄
, 
esize
 *  (*env));

553 i‡(
ív
 == 0)

555 
ívú⁄
 = 
ív
;

556 
ívsize
 = 
esize
;

558 
	}
}

	@src/quickfix.c

13 
	~"vim.h
"

14 
	~"globÆs.h
"

15 
	~"¥Ÿo.h
"

16 
	~"›ti⁄.h
"

18 
qf_‰ì
 
__ARGS
(());

19 
ch¨_u
 *
qf_ty≥s
 
__ARGS
((, ));

24 
	sqf_löe


26 
qf_löe
 *
	mqf_√xt
;

27 
qf_löe
 *
	mqf_¥ev
;

28 
löír_t
 
	mqf_ um
;

29 
	mqf_‚um
;

30 
	mqf_cﬁ
;

31 
	mqf_ƒ
;

32 
ch¨_u
 *
	mqf_ãxt
;

33 
ch¨_u
 
	mqf_˛óªd
;

34 
ch¨_u
 
	mqf_ty≥
;

35 
ch¨_u
 
	mqf_vÆid
;

38 
qf_löe
 *
	gqf_°¨t
;

39 
qf_löe
 *
	gqf_±r
;

41 
	gqf_cou¡
 = 0;

42 
	gqf_ödex
;

43 
	gqf_n⁄evÆid
;

45 
	#MAX_ADDR
 7

	)

51 
	sef‹m©


53 
ch¨_u
 *
	mfmt°r
;

54 #ifde‡
UTS2


55 
	mch¨_u
 *(
	madr
[
MAX_ADDR
]);

57 *(
	madr
[
MAX_ADDR
]);

59 
	madr_˙t
;

60 
ef‹m©
 *
	m√xt
;

68 
	$qf_öô
()

70 
ch¨_u
 *
«mebuf
;

71 
ch¨_u
 *
îrmsg
;

72 
cﬁ
;

73 
ty≥
;

74 
vÆid
;

75 
 um
;

76 
ír
;

77 
FILE
 *
fd
;

78 
qf_löe
 *
qÂ
 = 
NULL
;

79 
qf_löe
 *
qÂªv
 = 
NULL
;

80 
ch¨_u
 *
efmp
;

81 
ef‹m©
 *
fmt_fú°
 = 
NULL
;

82 
ef‹m©
 *
fmt_œ°
 = 
NULL
;

83 
ef‹m©
 *
fmt_±r
;

84 
ch¨_u
 *
efm
;

85 
maxÀn
;

86 
Àn
;

87 
i
, 
j
;

88 
ªtvÆ
 = 
FAIL
;

90 i‡(*
p_ef
 =
NUL
)

92 
	`emsg
(
e_îr‹f
);

93  
FAIL
;

96 
«mebuf
 = 
	`Æloc
(
CMDBUFFSIZE
 + 1);

97 
îrmsg
 = 
	`Æloc
(
CMDBUFFSIZE
 + 1);

98 i‡(
«mebuf
 =
NULL
 || 
îrmsg
 == NULL)

99 
qf_öô_íd
;

101 i‡((
fd
 = 
	`f›í
((*)
p_ef
, "r")Ë=
NULL
)

103 
	`emsg2
(
e_›íîrf
, 
p_ef
);

104 
qf_öô_íd
;

106 
	`qf_‰ì
();

107 
qf_ödex
 = 0;

113 
efm
 = 
p_efm
;

114 
efm
[0])

119 
fmt_±r
 = (
ef‹m©
 *)
	`Æloc
(()(eformat));

120 i‡(
fmt_±r
 =
NULL
)

121 
îr‹2
;

122 i‡(
fmt_fú°
 =
NULL
)

123 
fmt_fú°
 = 
fmt_±r
;

125 
fmt_œ°
->
√xt
 = 
fmt_±r
;

126 
fmt_œ°
 = 
fmt_±r
;

127 
fmt_±r
->
√xt
 = 
NULL
;

128 
fmt_±r
->
adr_˙t
 = 0;

133 
Àn
 = 0; 
efm
[Àn] !
NUL
 &&Éfm[len] != ','; ++len)

134 i‡(
efm
[
Àn
] ='\\' &&Éfm[À¿+ 1] !
NUL
)

135 ++
Àn
;

141 
maxÀn
 = 
Àn
 + 
MAX_ADDR
 * 3 + 4;

142 i‡((
fmt_±r
->
fmt°r
 = 
	`Æloc
(
maxÀn
)Ë=
NULL
)

143 
îr‹2
;

145 
i
 = 0; i < 
MAX_ADDR
; ++i)

146 
fmt_±r
->
adr
[
i
] = 
NULL
;

148 
efmp
 = 
efm
, 
i
 = 0;Éfm∞<Éfm + 
Àn
; ++efmp, ++i)

150 i‡(
efmp
[0] != '%')

152 i‡(
efmp
[0] ='\\' &&Éfm∞+ 1 < 
efm
 + 
Àn
)

153 ++
efmp
;

154 
fmt_±r
->
fmt°r
[
i
] = 
efmp
[0];

158 
fmt_±r
->
fmt°r
[
i
++] = '%';

159 
efmp
[1])

162 
fmt_±r
->
adr
[fmt_±r->
adr_˙t
++] = 
«mebuf
;

166 i‡(
efmp
[1] == 'm')

167 
fmt_±r
->
adr
[fmt_±r->
adr_˙t
++] = 
îrmsg
;

168 
fmt_±r
->
fmt°r
[
i
++] = '[';

169 
fmt_±r
->
fmt°r
[
i
++] = '^';

170 #ifde‡
__EMX__


175 i‡(
efmp
[1] == 'f')

176 
fmt_±r
->
fmt°r
[
i
++] = ' ';

178 i‡(
efmp
[2] == '\\')

179 
j
 = 3;

181 
j
 = 2;

182 i‡(
efmp
 + 
j
 < 
efm
 + 
Àn
)

183 
fmt_±r
->
fmt°r
[
i
++] = 
efmp
[
j
];

190 #ifde‡
USE_CRNL


191 
fmt_±r
->
fmt°r
[
i
++] = '\r';

193 
fmt_±r
->
fmt°r
[
i
++] = '\n';

195 
fmt_±r
->
fmt°r
[
i
] = ']';

198 
fmt_±r
->
adr
[fmt_±r->
adr_˙t
++] = &
cﬁ
;

199 
fmt_±r
->
fmt°r
[
i
] = 'd';

202 
fmt_±r
->
adr
[fmt_±r->
adr_˙t
++] = &
 um
;

203 
fmt_±r
->
fmt°r
[
i
++] = 'l';

204 
fmt_±r
->
fmt°r
[
i
] = 'd';

207 
fmt_±r
->
adr
[fmt_±r->
adr_˙t
++] = &
ír
;

208 
fmt_±r
->
fmt°r
[
i
] = 'd';

211 
fmt_±r
->
adr
[fmt_±r->
adr_˙t
++] = &
ty≥
;

212 
fmt_±r
->
fmt°r
[
i
] = 'c';

216 
fmt_±r
->
fmt°r
[
i
] = 
efmp
[1];

219 
	`EMSG
("invalid % in format string");

220 
îr‹2
;

222 i‡(
fmt_±r
->
adr_˙t
 =
MAX_ADDR
)

224 
	`EMSG
("too many % in format string");

225 
îr‹2
;

227 ++
efmp
;

229 i‡(
i
 >
maxÀn
 - 6)

231 
	`EMSG
("invalid format string");

232 
îr‹2
;

235 
fmt_±r
->
fmt°r
[
i
] = 
NUL
;

240 
efm
 = 
	`skù_to_›ti⁄_∑π
”fm + 
Àn
);

242 i‡(
fmt_fú°
 =
NULL
)

244 
	`EMSG
("'errorformat' containsÇoÖattern");

245 
îr‹2
;

252 
	`fgës
((*)
IObuff
, 
CMDBUFFSIZE
, 
fd
Ë!
NULL
 && !
gŸ_öt
)

254 i‡((
qÂ
 = (
qf_löe
 *)
	`Æloc
(()(qf_line)))

255 =
NULL
)

256 
îr‹2
;

258 
IObuff
[
CMDBUFFSIZE
] = 
NUL
;

264 
vÆid
 = 
TRUE
;

265 
fmt_±r
 = 
fmt_fú°
; fmt_±∏!
NULL
; fmt_±∏fmt_±r->
√xt
)

267 
«mebuf
[0] = 
NUL
;

268 
îrmsg
[0] = 
NUL
;

269 
 um
 = 0;

270 
cﬁ
 = 0;

271 
ír
 = -1;

272 
ty≥
 = 0;

280 i‡(
fmt_±r
->
fmt°r
[0] !'%' && fmt_±r->fmt°r[0] !
IObuff
[0])

283 i‡(
	`ssˇnf
((*)
IObuff
, (*)
fmt_±r
->
fmt°r
,

284 
fmt_±r
->
adr
[0], fmt_ptr->adr[1], fmt_ptr->adr[2],

285 
fmt_±r
->
adr
[3], fmt_ptr->adr[4], fmt_ptr->adr[5],

286 
fmt_±r
->
adr
[6]Ë=fmt_±r->
adr_˙t
)

289 i‡(
fmt_±r
 =
NULL
)

291 
«mebuf
[0] = 
NUL
;

292 
 um
 = 0;

293 
vÆid
 = 
FALSE
;

294 
	`STRCPY
(
îrmsg
, 
IObuff
);

295 i‡((
efmp
 = 
	`vim_°ºchr
(
îrmsg
, '\n')Ë!
NULL
)

296 *
efmp
 = 
NUL
;

297 #ifde‡
USE_CRNL


298 i‡((
efmp
 = 
	`vim_°ºchr
(
îrmsg
, '\r')Ë!
NULL
)

299 *
efmp
 = 
NUL
;

303 i‡(
«mebuf
[0] =
NUL
)

304 
qÂ
->
qf_‚um
 = 0;

306 
qÂ
->
qf_‚um
 = 
	`buÊi°_add
(
«mebuf
);

307 i‡((
qÂ
->
qf_ãxt
 = 
	`°rßve
(
îrmsg
)Ë=
NULL
)

308 
îr‹1
;

309 
qÂ
->
qf_ um
 = 
 um
;

310 
qÂ
->
qf_cﬁ
 = 
cﬁ
;

311 
qÂ
->
qf_ƒ
 = 
ír
;

312 
qÂ
->
qf_ty≥
 = 
ty≥
;

313 
qÂ
->
qf_vÆid
 = 
vÆid
;

315 i‡(
qf_cou¡
 == 0)

317 
qf_°¨t
 = 
qÂ
;

318 
qÂ
->
qf_¥ev
 = qfp;

322 
qÂ
->
qf_¥ev
 = 
qÂªv
;

323 
qÂªv
->
qf_√xt
 = 
qÂ
;

325 
qÂ
->
qf_√xt
 = qfp;

326 
qÂ
->
qf_˛óªd
 = 
FALSE
;

327 
qÂªv
 = 
qÂ
;

328 ++
qf_cou¡
;

329 i‡(
qf_ödex
 =0 && 
qÂ
->
qf_vÆid
)

331 
qf_ödex
 = 
qf_cou¡
;

332 
qf_±r
 = 
qÂ
;

334 
	`löe_bªakcheck
();

336 i‡(!
	`„º‹
(
fd
))

338 i‡(
qf_ödex
 == 0)

340 
qf_±r
 = 
qf_°¨t
;

341 
qf_ödex
 = 1;

342 
qf_n⁄evÆid
 = 
TRUE
;

345 
qf_n⁄evÆid
 = 
FALSE
;

346 
ªtvÆ
 = 
OK
;

347 
qf_öô_ok
;

349 
	`emsg
(
e_ªadîrf
);

350 
îr‹1
:

351 
	`vim_‰ì
(
qÂ
);

352 
îr‹2
:

353 
	`qf_‰ì
();

354 
qf_öô_ok
:

355 
	`f˛o£
(
fd
);

356 
fmt_±r
 = 
fmt_fú°
; fmt_±∏!
NULL
; fmt_ptr = fmt_first)

358 
fmt_fú°
 = 
fmt_±r
->
√xt
;

359 
	`vim_‰ì
(
fmt_±r
->
fmt°r
);

360 
	`vim_‰ì
(
fmt_±r
);

362 
qf_öô_íd
:

363 
	`vim_‰ì
(
«mebuf
);

364 
	`vim_‰ì
(
îrmsg
);

365  
ªtvÆ
;

366 
	}
}

376 
	$qf_jump
(
dú
, 
îr‹ƒ
)

377 
dú
;

378 
îr‹ƒ
;

380 
qf_löe
 *
ﬁd_qf_±r
;

381 
ﬁd_qf_ödex
;

382 
ch¨_u
 *
e_no_m‹e_îr‹s
 = (char_u *)"No moreÉrrors";

383 
ch¨_u
 *
îr
 = 
e_no_m‹e_îr‹s
;

384 
löír_t
 
i
;

386 i‡(
qf_cou¡
 == 0)

388 
	`emsg
(
e_quickfix
);

392 
ﬁd_qf_±r
 = 
qf_±r
;

393 
ﬁd_qf_ödex
 = 
qf_ödex
;

394 i‡(
dú
 =
FORWARD
)

396 
îr‹ƒ
--)

398 
ﬁd_qf_±r
 = 
qf_±r
;

399 
ﬁd_qf_ödex
 = 
qf_ödex
;

402 i‡(
qf_ödex
 =
qf_cou¡
 || 
qf_±r
->
qf_√xt
 =
NULL
)

404 
qf_±r
 = 
ﬁd_qf_±r
;

405 
qf_ödex
 = 
ﬁd_qf_ödex
;

406 i‡(
îr
 !
NULL
)

408 
	`emsg
(
îr
);

411 
îr‹ƒ
 = 0;

414 ++
qf_ödex
;

415 
qf_±r
 = qf_±r->
qf_√xt
;

416 } !
qf_n⁄evÆid
 && !
qf_±r
->
qf_vÆid
);

417 
îr
 = 
NULL
;

420 i‡(
dú
 =
BACKWARD
)

422 
îr‹ƒ
--)

424 
ﬁd_qf_±r
 = 
qf_±r
;

425 
ﬁd_qf_ödex
 = 
qf_ödex
;

428 i‡(
qf_ödex
 =1 || 
qf_±r
->
qf_¥ev
 =
NULL
)

430 
qf_±r
 = 
ﬁd_qf_±r
;

431 
qf_ödex
 = 
ﬁd_qf_ödex
;

432 i‡(
îr
 !
NULL
)

434 
	`emsg
(
îr
);

437 
îr‹ƒ
 = 0;

440 --
qf_ödex
;

441 
qf_±r
 = qf_±r->
qf_¥ev
;

442 } !
qf_n⁄evÆid
 && !
qf_±r
->
qf_vÆid
);

443 
îr
 = 
NULL
;

446 i‡(
îr‹ƒ
 != 0)

448 
îr‹ƒ
 < 
qf_ödex
 && qf_ödex > 1 && 
qf_±r
->
qf_¥ev
 !
NULL
)

450 --
qf_ödex
;

451 
qf_±r
 = qf_±r->
qf_¥ev
;

453 
îr‹ƒ
 > 
qf_ödex
 && qf_ödex < 
qf_cou¡
 && 
qf_±r
->
qf_√xt
 !
NULL
)

455 ++
qf_ödex
;

456 
qf_±r
 = qf_±r->
qf_√xt
;

464 i‡(
qf_±r
->
qf_‚um
 =0 || 
	`buÊi°_gëfûe
(qf_ptr->qf_fnum,

465 (
löír_t
)1, 
GETF_SETMARK
Ë=
OK
)

470 
i
 = 
qf_±r
->
qf_ um
;

471 i‡(
i
 > 0)

473 i‡(
i
 > 
curbuf
->
b_ml
.
ml_löe_cou¡
)

474 
i
 = 
curbuf
->
b_ml
.
ml_löe_cou¡
;

475 
curwö
->
w_curs‹
.
 um
 = 
i
;

477 i‡(
qf_±r
->
qf_cﬁ
 > 0)

479 
curwö
->
w_curs‹
.
cﬁ
 = 
qf_±r
->
qf_cﬁ
 - 1;

480 
	`adju°_curs‹
();

483 
	`begölöe
(
TRUE
);

484 
	`cursupd©e
();

485 
	`smsg
((
ch¨_u
 *)"(%d o‡%d)%s%s: %s", 
qf_ödex
, 
qf_cou¡
,

486 
qf_±r
->
qf_˛óªd
 ? (
ch¨_u
 *)" (line deleted)" : (char_u *)"",

487 
	`qf_ty≥s
(
qf_±r
->
qf_ty≥
, qf_±r->
qf_ƒ
), qf_±r->
qf_ãxt
);

491 i‡(
	`löëabsize
(
IObuff
Ë< (()
p_ch
 - 1Ë* 
Cﬁumns
 + 
sc_cﬁ
)

492 
kìp_msg
 = 
IObuff
;

494 i‡(
qf_±r
->
qf_‚um
 != 0)

500 
qf_±r
 = 
ﬁd_qf_±r
;

501 
qf_ödex
 = 
ﬁd_qf_ödex
;

503 
	}
}

509 
	$qf_li°
(
Æl
)

510 
Æl
;

512 
BUF
 *
buf
;

513 
ch¨_u
 *
‚ame
;

514 
qf_löe
 *
qÂ
;

515 
i
;

517 i‡(
qf_cou¡
 == 0)

519 
	`emsg
(
e_quickfix
);

523 i‡(
qf_n⁄evÆid
)

524 
Æl
 = 
TRUE
;

525 
qÂ
 = 
qf_°¨t
;

526 
	`£t_highlight
('d');

527 
i
 = 1; !
gŸ_öt
 && i <
qf_cou¡
; ++i)

529 i‡(
qÂ
->
qf_vÆid
 || 
Æl
)

531 
	`msg_outch¨
('\n');

532 
	`°¨t_highlight
();

533 
‚ame
 = 
NULL
;

534 i‡(
qÂ
->
qf_‚um
 != 0 &&

535 (
buf
 = 
	`buÊi°_födƒ
(
qÂ
->
qf_‚um
)Ë!
NULL
)

536 
‚ame
 = 
buf
->
b_xfûíame
;

537 i‡(
‚ame
 =
NULL
)

538 
	`•rötf
((*)
IObuff
, "%2d", 
i
);

540 
	`•rötf
((*)
IObuff
, "%2d %s", 
i
, 
‚ame
);

541 
	`msg_ouâøns
(
IObuff
);

542 
	`°›_highlight
();

543 i‡(
qÂ
->
qf_ um
 == 0)

544 
IObuff
[0] = 
NUL
;

545 i‡(
qÂ
->
qf_cﬁ
 == 0)

546 
	`•rötf
((*)
IObuff
, ":%ld", 
qÂ
->
qf_ um
);

548 
	`•rötf
((*)
IObuff
, ":%ld, col %d",

549 
qÂ
->
qf_ um
, qÂ->
qf_cﬁ
);

550 
	`•rötf
((*)
IObuff
 + 
	`STRLEN
(IObuff), "%s: ",

551 
	`qf_ty≥s
(
qÂ
->
qf_ty≥
, qÂ->
qf_ƒ
));

552 
	`msg_out°r
(
IObuff
);

553 
	`msg_¥t_löe
(
qÂ
->
qf_ãxt
);

554 
	`Êushbuf
();

556 
qÂ
 = qÂ->
qf_√xt
;

557 
	`mch_bªakcheck
();

559 
	}
}

565 
	$qf_‰ì
()

567 
qf_löe
 *
qÂ
;

569 
qf_cou¡
)

571 
qÂ
 = 
qf_°¨t
->
qf_√xt
;

572 
	`vim_‰ì
(
qf_°¨t
->
qf_ãxt
);

573 
	`vim_‰ì
(
qf_°¨t
);

574 
qf_°¨t
 = 
qÂ
;

575 --
qf_cou¡
;

577 
	}
}

583 
	$qf_m¨k_adju°
(
löe1
, 
löe2
, 
amou¡
, 
amou¡_a·î
)

584 
löír_t
 
löe1
;

585 
löír_t
 
löe2
;

586 
amou¡
;

587 
amou¡_a·î
;

589 
i
;

590 
qf_löe
 *
qÂ
;

592 i‡(
qf_cou¡
)

593 
i
 = 0, 
qÂ
 = 
qf_°¨t
; i < 
qf_cou¡
; ++i, qÂ = qÂ->
qf_√xt
)

594 i‡(
qÂ
->
qf_‚um
 =
curbuf
->
b_‚um
)

596 i‡(
qÂ
->
qf_ um
 >
löe1
 && qÂ->qf_ um <
löe2
)

598 i‡(
amou¡
 =
MAXLNUM
)

599 
qÂ
->
qf_˛óªd
 = 
TRUE
;

601 
qÂ
->
qf_ um
 +
amou¡
;

603 i‡(
amou¡_a·î
 && 
qÂ
->
qf_ um
 > 
löe2
)

604 
qÂ
->
qf_ um
 +
amou¡_a·î
;

606 
	}
}

617 
ch¨_u
 *

618 
	$qf_ty≥s
(
c
, 
ƒ
)

619 
c
, 
ƒ
;

621 
ch¨_u
 
buf
[20];

622 
ch¨_u
 *
p1
;

624 
p1
 = (
ch¨_u
 *)"Érror";

625 i‡(
c
 == 'W' || c == 'w')

626 
p1
 = (
ch¨_u
 *)" warning";

627 i‡(
ƒ
 <0 && 
c
 != 'E' && c != 'e')

628 
p1
 = (
ch¨_u
 *)"";

630 i‡(
ƒ
 <= 0)

631  
p1
;

633 
	`•rötf
((*)
buf
, "%†%3d", 
p1
, 
ƒ
);

634  
buf
;

635 
	}
}

	@src/regexp.c

53 
	~"vim.h
"

54 
	~"globÆs.h
"

55 
	~"¥Ÿo.h
"

56 #unde‡
DEBUG


58 
	~<°dio.h
>

59 
	~"ªgexp.h
"

60 
	~"›ti⁄.h
"

99 
	#END
 0

	)

100 
	#BOL
 1

	)

101 
	#EOL
 2

	)

102 
	#ANY
 3

	)

103 
	#ANYOF
 4

	)

104 
	#ANYBUT
 5

	)

106 
	#BRANCH
 6

	)

108 
	#BACK
 7

	)

109 
	#EXACTLY
 8

	)

110 
	#NOTHING
 9

	)

111 
	#STAR
 10

	)

113 
	#PLUS
 11

	)

115 
	#BOW
 12

	)

116 
	#EOW
 13

	)

117 
	#IDENT
 14

	)

118 
	#WORD
 15

	)

119 
	#FNAME
 16

	)

120 
	#PRINT
 17

	)

121 
	#SIDENT
 18

	)

122 
	#SWORD
 19

	)

123 
	#SFNAME
 20

	)

124 
	#SPRINT
 21

	)

125 
	#MOPEN
 30

	)

128 
	#MCLOSE
 40

	)

129 
	#BACKREF
 50

	)

131 
	#Magic
(
x
Ë((x)|('\\'<<8))

	)

168 
	#OP
(
p
Ë(*’))

	)

169 
	#NEXT
(
p
Ë(((*(’)+1)&0377)<<8Ë+ (*(’)+2)&0377))

	)

170 
	#OPERAND
(
p
Ë(’Ë+ 3)

	)

175 #i‚de‡
CHARBITS


176 
	#UCHARAT
(
p
Ë(()*(*)’))

	)

178 
	#UCHARAT
(
p
Ë(()*’)&
CHARBITS
)

	)

181 
	#EMSG_RETURN
(
m
Ë{ 
	`emsg
(m); 
rc_did_emsg
 = 
TRUE
;  
NULL
; }

	)

183 
ismu…
 
__ARGS
(());

184 
ch¨_u
 *
c°rchr
 
__ARGS
((char_u *, ));

187 
	$ismu…
(
c
)

188 
c
;

190  (
c
 =
	`Magic
('*') || c == Magic('+') || c == Magic('='));

191 
	}
}

196 
	#HASWIDTH
 01

	)

197 
	#SIMPLE
 02

	)

198 
	#SPSTART
 04

	)

199 
	#WORST
 0

	)

206 #ifde‡
EMPTY_RE


207 
ch¨_u
 *
	gªg_¥ev_ª
;

210 
	#TILDE


	)

211 #ifde‡
TILDE


212 
ch¨_u
 *
	gªg_¥ev_sub
;

219 
ch¨_u
 *
	gªg∑r£
;

220 
	gªg≈¨
;

221 
ch¨_u
 
	gªgdummy
;

222 
ch¨_u
 *
	gªgcode
;

223 
	gªgsize
;

224 
ch¨_u
 **
	gªgídp
;

232 #ifde‡
TILDE


233 #ifde‡
BACKREF


234 
ch¨_u
 
	gMETA
[] = ".[()|=+*<>iIkKfFpP~123456789";

236 
ch¨_u
 
	gMETA
[] = ".[()|=+*<>iIkKfFpP~";

239 #ifde‡
BACKREF


240 
ch¨_u
 
	gMETA
[] = ".[()|=+*<>iIkKfFpP123456789";

242 
ch¨_u
 
	gMETA
[] = ".[()|=+*<>iIkKfFpP";

254 
ch¨_u
 
	gREGEXP_ABBR
[] = "rteb";

259 
öôchr
 
__ARGS
((
ch¨_u
 *));

260 
gëchr
 
__ARGS
(());

261 
≥ekchr
 
__ARGS
(());

262 
	#PìkChr
(Ë
curchr


	)

263 
	gcurchr
;

264 
skùchr
 
__ARGS
(());

265 
ungëchr
 
__ARGS
(());

266 
ch¨_u
 *
ªg
 
__ARGS
((, *));

267 
ch¨_u
 *
ªgbønch
 
__ARGS
((*));

268 
ch¨_u
 *
ªgpõ˚
 
__ARGS
((*));

269 
ch¨_u
 *
ªg©om
 
__ARGS
((*));

270 
ch¨_u
 *
ªgnode
 
__ARGS
(());

271 
ch¨_u
 *
ªg√xt
 
__ARGS
((char_u *));

272 
ªgc
 
__ARGS
(());

273 
uƒegc
 
__ARGS
(());

274 
ªgö£π
 
__ARGS
((, 
ch¨_u
 *));

275 
ªgèû
 
__ARGS
((
ch¨_u
 *, char_u *));

276 
ªg›èû
 
__ARGS
((
ch¨_u
 *, char_u *));

278 #i‚de‡
HAVE_STRCSPN


279 
size_t
 
°rc•n
 
__ARGS
((c⁄° 
ch¨_u
 *, const char_u *));

288 
ch¨_u
 *

289 
	$skù_ªgexp
(
p
, 
dúc
)

290 
ch¨_u
 *
p
;

291 
dúc
;

293 
ö_ønge
 = 
FALSE
;

295 ; 
p
[0] !
NUL
; ++p)

297 i‡(
p
[0] =
dúc
 && !
ö_ønge
)

299 i‡((
p
[0] ='[' && 
p_magic
) || (p[0] == '\\' &&Ö[1] == '[' && !p_magic))

301 
ö_ønge
 = 
TRUE
;

302 i‡(
p
[0] == '\\')

303 ++
p
;

305 i‡(
p
[1] == '^')

306 ++
p
;

307 i‡(
p
[1] == ']')

308 ++
p
;

310 i‡(
p
[0] ='\\' &&Ö[1] !
NUL
)

311 ++
p
;

312 i‡(
p
[0] == ']')

313 
ö_ønge
 = 
FALSE
;

315  
p
;

316 
	}
}

333 
ªgexp
 *

334 
	$vim_ªgcomp
(
exp
)

335 
ch¨_u
 *
exp
;

337 
ªgexp
 *
r
;

338 
ch¨_u
 *
sˇn
;

339 
ch¨_u
 *
l⁄ge°
;

340 
Àn
;

341 
Êags
;

344 i‡(
exp
 =
NULL
)

345 
	`EMSG_RETURN
(
e_nuŒ
);

347 #ifde‡
EMPTY_RE


348 i‡(*
exp
 == '\0')

350 i‡(
ªg_¥ev_ª
)

351 
exp
 = 
ªg_¥ev_ª
;

353 
	`EMSG_RETURN
(
e_n›ªvª
);

358 
	`öôchr
((
ch¨_u
 *)
exp
);

359 
ªg≈¨
 = 1;

360 
ªgsize
 = 0L;

361 
ªgcode
 = &
ªgdummy
;

362 
ªgídp
 = 
NULL
;

363 
	`ªgc
(
MAGIC
);

364 i‡(
	`ªg
(0, &
Êags
Ë=
NULL
)

365  
NULL
;

368 i‡(
ªgsize
 >= 32767L)

369 
	`EMSG_RETURN
(
e_toﬁ⁄g
);

373 
r
 = (
ªgexp
 *Ë
	`Æloc
((Ë(‘egexpË+ 
ªgsize
));

374 i‡(
r
 =
NULL
)

375  
NULL
;

377 #ifde‡
EMPTY_RE


378 i‡(
exp
 !
ªg_¥ev_ª
) {

379 
	`vim_‰ì
(
ªg_¥ev_ª
);

380 i‡(
ªg_¥ev_ª
 = 
	`Æloc
(
	`STRLEN
(
exp
) + 1))

381 
	`STRCPY
(
ªg_¥ev_ª
, 
exp
);

386 
	`öôchr
((
ch¨_u
 *)
exp
);

387 
ªg≈¨
 = 1;

388 
ªgcode
 = 
r
->
¥ogøm
;

389 
ªgídp
 = 
r
->
ídp
;

390 
	`ªgc
(
MAGIC
);

391 i‡(
	`ªg
(0, &
Êags
Ë=
NULL
) {

392 
	`vim_‰ì
(
r
);

393  
NULL
;

397 
r
->
ªg°¨t
 = '\0';

398 
r
->
ªg™ch
 = 0;

399 
r
->
ªgmu°
 = 
NULL
;

400 
r
->
ªgmÀn
 = 0;

401 
sˇn
 = 
r
->
¥ogøm
 + 1;

402 i‡(
	`OP
(
	`ªg√xt
(
sˇn
)Ë=
END
) {

403 
sˇn
 = 
	`OPERAND
(scan);

406 i‡(
	`OP
(
sˇn
Ë=
EXACTLY
)

407 
r
->
ªg°¨t
 = *
	`OPERAND
(
sˇn
);

408 i‡(
	`OP
(
sˇn
Ë=
BOL
)

409 
r
->
ªg™ch
++;

423 i‡(
Êags
 & 
SPSTART
 || 
	`OP
(
sˇn
Ë=
BOW
) {

424 
l⁄ge°
 = 
NULL
;

425 
Àn
 = 0;

426 ; 
sˇn
 !
NULL
; sˇ¿
	`ªg√xt
(scan))

427 i‡(
	`OP
(
sˇn
Ë=
EXACTLY
 && 
	`STRLEN
(
	`OPERAND
(sˇn)Ë>(
size_t
)
Àn
) {

428 
l⁄ge°
 = 
	`OPERAND
(
sˇn
);

429 
Àn
 = 
	`STRLEN
(
	`OPERAND
(
sˇn
));

431 
r
->
ªgmu°
 = 
l⁄ge°
;

432 
r
->
ªgmÀn
 = 
Àn
;

435 #ifde‡
DEBUG


436 
	`ªgdump
(
r
);

438  
r
;

439 
	}
}

450 
ch¨_u
 *

451 
	$ªg
(
∑ªn
, 
Êagp
)

452 
∑ªn
;

453 *
Êagp
;

455 
ch¨_u
 *
ªt
;

456 
ch¨_u
 *
br
;

457 
ch¨_u
 *
ídî
;

458 
∑∫o
 = 0;

459 
Êags
;

461 *
Êagp
 = 
HASWIDTH
;

464 i‡(
∑ªn
) {

465 i‡(
ªg≈¨
 >
NSUBEXP
)

466 
	`EMSG_RETURN
(
e_toombø
);

467 
∑∫o
 = 
ªg≈¨
;

468 
ªg≈¨
++;

469 
ªt
 = 
	`ªgnode
(
MOPEN
 + 
∑∫o
);

470 i‡(
ªgídp
)

471 
ªgídp
[
∑∫o
] = 
NULL
;

473 
ªt
 = 
NULL
;

476 
br
 = 
	`ªgbønch
(&
Êags
);

477 i‡(
br
 =
NULL
)

478  
NULL
;

479 i‡(
ªt
 !
NULL
)

480 
	`ªgèû
(
ªt
, 
br
);

482 
ªt
 = 
br
;

483 i‡(!(
Êags
 & 
HASWIDTH
))

484 *
Êagp
 &~
HASWIDTH
;

485 *
Êagp
 |
Êags
 & 
SPSTART
;

486 
	`≥ekchr
(Ë=
	`Magic
('|')) {

487 
	`skùchr
();

488 
br
 = 
	`ªgbønch
(&
Êags
);

489 i‡(
br
 =
NULL
)

490  
NULL
;

491 
	`ªgèû
(
ªt
, 
br
);

492 i‡(!(
Êags
 & 
HASWIDTH
))

493 *
Êagp
 &~
HASWIDTH
;

494 *
Êagp
 |
Êags
 & 
SPSTART
;

498 
ídî
 = 
	`ªgnode
((
∑ªn
Ë? 
MCLOSE
 + 
∑∫o
 : 
END
);

499 
	`ªgèû
(
ªt
, 
ídî
);

502 
br
 = 
ªt
; b∏!
NULL
; b∏
	`ªg√xt
(br))

503 
	`ªg›èû
(
br
, 
ídî
);

506 i‡(
∑ªn
 && 
	`gëchr
(Ë!
	`Magic
(')'))

507 
	`EMSG_RETURN
(
e_toombø
)

508 i‡(!
∑ªn
 && 
	`≥ekchr
() != '\0')

510 i‡(
	`PìkChr
(Ë=
	`Magic
(')'))

511 
	`EMSG_RETURN
(
e_toomkë
)

513 
	`EMSG_RETURN
(
e_åaûög
)

520 i‡(
∑ªn
 && 
ªgídp
)

521 
ªgídp
[
∑∫o
] = 
ídî
;

522  
ªt
;

523 
	}
}

530 
ch¨_u
 *

531 
	$ªgbønch
(
Êagp
)

532 *
Êagp
;

534 
ch¨_u
 *
ªt
;

535 
ch¨_u
 *
chaö
;

536 
ch¨_u
 *
œã°
;

537 
Êags
;

539 *
Êagp
 = 
WORST
;

541 
ªt
 = 
	`ªgnode
(
BRANCH
);

542 
chaö
 = 
NULL
;

543 
	`≥ekchr
(Ë!'\0' && 
	`PìkChr
(Ë!
	`Magic
('|') && PeekChr() != Magic(')')) {

544 
œã°
 = 
	`ªgpõ˚
(&
Êags
);

545 i‡(
œã°
 =
NULL
)

546  
NULL
;

547 *
Êagp
 |
Êags
 & 
HASWIDTH
;

548 i‡(
chaö
 =
NULL
)

549 *
Êagp
 |
Êags
 & 
SPSTART
;

551 
	`ªgèû
(
chaö
, 
œã°
);

552 
chaö
 = 
œã°
;

554 i‡(
chaö
 =
NULL
)

555 (Ë
	`ªgnode
(
NOTHING
);

557  
ªt
;

558 
	}
}

569 
ch¨_u
 *

570 
	$ªgpõ˚
(
Êagp
)

571 *
Êagp
;

573 
ch¨_u
 *
ªt
;

574 
›
;

575 
ch¨_u
 *
√xt
;

576 
Êags
;

578 
ªt
 = 
	`ªg©om
(&
Êags
);

579 i‡(
ªt
 =
NULL
)

580  
NULL
;

582 
›
 = 
	`≥ekchr
();

583 i‡(!
	`ismu…
(
›
)) {

584 *
Êagp
 = 
Êags
;

585  
ªt
;

587 i‡(!(
Êags
 & 
HASWIDTH
Ë&& 
›
 !
	`Magic
('='))

588 
	`EMSG_RETURN
((
ch¨_u
 *)"*+ operand could beÉmpty");

589 *
Êagp
 = (
›
 !
	`Magic
('+')Ë? (
WORST
 | 
SPSTART
Ë: (WORST | 
HASWIDTH
);

591 i‡(
›
 =
	`Magic
('*'Ë&& (
Êags
 & 
SIMPLE
))

592 
	`ªgö£π
(
STAR
, 
ªt
);

593 i‡(
›
 =
	`Magic
('*')) {

595 
	`ªgö£π
(
BRANCH
, 
ªt
);

596 
	`ªg›èû
(
ªt
, 
	`ªgnode
(
BACK
));

597 
	`ªg›èû
(
ªt
,Ñet);

598 
	`ªgèû
(
ªt
, 
	`ªgnode
(
BRANCH
));

599 
	`ªgèû
(
ªt
, 
	`ªgnode
(
NOTHING
));

600 } i‡(
›
 =
	`Magic
('+'Ë&& (
Êags
 & 
SIMPLE
))

601 
	`ªgö£π
(
PLUS
, 
ªt
);

602 i‡(
›
 =
	`Magic
('+')) {

604 
√xt
 = 
	`ªgnode
(
BRANCH
);

605 
	`ªgèû
(
ªt
, 
√xt
);

606 
	`ªgèû
(
	`ªgnode
(
BACK
), 
ªt
);

607 
	`ªgèû
(
√xt
, 
	`ªgnode
(
BRANCH
));

608 
	`ªgèû
(
ªt
, 
	`ªgnode
(
NOTHING
));

609 } i‡(
›
 =
	`Magic
('=')) {

611 
	`ªgö£π
(
BRANCH
, 
ªt
);

612 
	`ªgèû
(
ªt
, 
	`ªgnode
(
BRANCH
));

613 
√xt
 = 
	`ªgnode
(
NOTHING
);

614 
	`ªgèû
(
ªt
, 
√xt
);

615 
	`ªg›èû
(
ªt
, 
√xt
);

617 
	`skùchr
();

618 i‡(
	`ismu…
(
	`≥ekchr
()))

619 
	`EMSG_RETURN
((
ch¨_u
 *)"Nested *=+");

621  
ªt
;

622 
	}
}

631 
ch¨_u
 *

632 
	$ªg©om
(
Êagp
)

633 *
Êagp
;

635 
ch¨_u
 *
ªt
;

636 
Êags
;

638 *
Êagp
 = 
WORST
;

640 
	`gëchr
()) {

641 
	`Magic
('^'):

642 
ªt
 = 
	`ªgnode
(
BOL
);

644 
	`Magic
('$'):

645 
ªt
 = 
	`ªgnode
(
EOL
);

647 
	`Magic
('<'):

648 
ªt
 = 
	`ªgnode
(
BOW
);

650 
	`Magic
('>'):

651 
ªt
 = 
	`ªgnode
(
EOW
);

653 
	`Magic
('.'):

654 
ªt
 = 
	`ªgnode
(
ANY
);

655 *
Êagp
 |
HASWIDTH
 | 
SIMPLE
;

657 
	`Magic
('i'):

658 
ªt
 = 
	`ªgnode
(
IDENT
);

659 *
Êagp
 |
HASWIDTH
 | 
SIMPLE
;

661 
	`Magic
('k'):

662 
ªt
 = 
	`ªgnode
(
WORD
);

663 *
Êagp
 |
HASWIDTH
 | 
SIMPLE
;

665 
	`Magic
('I'):

666 
ªt
 = 
	`ªgnode
(
SIDENT
);

667 *
Êagp
 |
HASWIDTH
 | 
SIMPLE
;

669 
	`Magic
('K'):

670 
ªt
 = 
	`ªgnode
(
SWORD
);

671 *
Êagp
 |
HASWIDTH
 | 
SIMPLE
;

673 
	`Magic
('f'):

674 
ªt
 = 
	`ªgnode
(
FNAME
);

675 *
Êagp
 |
HASWIDTH
 | 
SIMPLE
;

677 
	`Magic
('F'):

678 
ªt
 = 
	`ªgnode
(
SFNAME
);

679 *
Êagp
 |
HASWIDTH
 | 
SIMPLE
;

681 
	`Magic
('p'):

682 
ªt
 = 
	`ªgnode
(
PRINT
);

683 *
Êagp
 |
HASWIDTH
 | 
SIMPLE
;

685 
	`Magic
('P'):

686 
ªt
 = 
	`ªgnode
(
SPRINT
);

687 *
Êagp
 |
HASWIDTH
 | 
SIMPLE
;

689 
	`Magic
('('):

690 
ªt
 = 
	`ªg
(1, &
Êags
);

691 i‡(
ªt
 =
NULL
)

692  
NULL
;

693 *
Êagp
 |
Êags
 & (
HASWIDTH
 | 
SPSTART
);

696 
	`Magic
('|'):

697 
	`Magic
(')'):

698 
	`EMSG_RETURN
(
e_öã∫Æ
)

700 
	`Magic
('='):

701 
	`EMSG_RETURN
((
ch¨_u
 *)"\\= followsÇothing")

703 
	`Magic
('+'):

704 
	`EMSG_RETURN
((
ch¨_u
 *)"\\+ followsÇothing")

706 
	`Magic
('*'):

707 i‡(
ªg_magic
)

708 
	`EMSG_RETURN
((
ch¨_u
 *)"* followsÇothing")

710 
	`EMSG_RETURN
((
ch¨_u
 *)"\\* followsÇothing")

712 #ifde‡
TILDE


713 
	`Magic
('~'):

714 i‡(
ªg_¥ev_sub
) {

715 
ch¨_u
 *
p
;

717 
ªt
 = 
	`ªgnode
(
EXACTLY
);

718 
p
 = 
ªg_¥ev_sub
;

719 *
p
) {

720 
	`ªgc
(*
p
++);

722 
	`ªgc
('\0');

723 i‡(
p
 - 
ªg_¥ev_sub
) {

724 *
Êagp
 |
HASWIDTH
;

725 i‡((
p
 - 
ªg_¥ev_sub
) == 1)

726 *
Êagp
 |
SIMPLE
;

729 
	`EMSG_RETURN
(
e_n›ªsub
);

732 #ifde‡
BACKREF


733 
	`Magic
('1'):

734 
	`Magic
('2'):

735 
	`Magic
('3'):

736 
	`Magic
('4'):

737 
	`Magic
('5'):

738 
	`Magic
('6'):

739 
	`Magic
('7'):

740 
	`Magic
('8'):

741 
	`Magic
('9'): {

742 
ª‚um
;

744 
	`ungëchr
();

745 
ª‚um
 = 
	`gëchr
(Ë- 
	`Magic
('0');

755 i‡(
ª‚um
 < 
ªg≈¨
 &&

756 (
ªgídp
 =
NULL
 ||Ñegídp[
ª‚um
] != NULL))

757 
ªt
 = 
	`ªgnode
(
BACKREF
 + 
ª‚um
);

759 
	`EMSG_RETURN
((
ch¨_u
 *)"Illegal backÑeference");

763 
	`Magic
('['):

765 
ch¨_u
 *
p
;

771 
p
 = 
ªg∑r£
;

772 i‡(*
p
 == '^')

773 ++
p
;

774 i‡(*
p
 == ']' || *p == '-')

775 ++
p
;

776 *
p
 != '\0' && *p != ']')

778 i‡(*
p
 == '-')

780 ++
p
;

781 i‡(*
p
 != ']' && *p != '\0')

782 ++
p
;

784 i‡(*
p
 == '\\' &&Ö[1] != '\0')

785 
p
 += 2;

787 ++
p
;

789 i‡(*
p
 == ']')

795 i‡(*
ªg∑r£
 == '^') {

796 
ªt
 = 
	`ªgnode
(
ANYBUT
);

797 
ªg∑r£
++;

799 
ªt
 = 
	`ªgnode
(
ANYOF
);

800 i‡(*
ªg∑r£
 == ']' || *regparse == '-')

801 
	`ªgc
(*
ªg∑r£
++);

802 *
ªg∑r£
 != '\0' && *regparse != ']') {

803 i‡(*
ªg∑r£
 == '-') {

804 
ªg∑r£
++;

805 i‡(*
ªg∑r£
 == ']' || *regparse == '\0')

806 
	`ªgc
('-');

808 
c˛ass
;

809 
c˛as£nd
;

811 
c˛ass
 = 
	`UCHARAT
(
ªg∑r£
 - 2) + 1;

812 
c˛as£nd
 = 
	`UCHARAT
(
ªg∑r£
);

813 i‡(
c˛ass
 > 
c˛as£nd
 + 1)

814 
	`EMSG_RETURN
(
e_övønge
);

815 ; 
c˛ass
 <
c˛as£nd
; cclass++)

816 
	`ªgc
(
c˛ass
);

817 
ªg∑r£
++;

819 } i‡(*
ªg∑r£
 == '\\' &&Ñegparse[1]) {

820 
ªg∑r£
++;

821 
	`ªgc
(*
ªg∑r£
++);

823 
	`ªgc
(*
ªg∑r£
++);

825 
	`ªgc
('\0');

826 i‡(*
ªg∑r£
 != ']')

827 
	`EMSG_RETURN
(
e_toomsbø
);

828 
	`skùchr
();

829 *
Êagp
 |
HASWIDTH
 | 
SIMPLE
;

837 
Àn
;

838 
chr
;

840 
	`ungëchr
();

841 
Àn
 = 0;

842 
ªt
 = 
	`ªgnode
(
EXACTLY
);

847 (
chr
 = 
	`≥ekchr
()Ë!'\0' && (ch∏< 
	`Magic
(0Ë|| 
Àn
 == 0))

849 
	`ªgc
(
chr
);

850 
	`skùchr
();

851 
Àn
++;

853 #ifde‡
DEBUG


854 i‡(
Àn
 == 0)

855 
	`EMSG_RETURN
((
ch¨_u
 *)"Unexpected magic character; check META.");

861 i‡(
Àn
 > 1 && 
	`ismu…
(
chr
))

863 
	`uƒegc
();

864 
	`ungëchr
();

865 --
Àn
;

867 
	`ªgc
('\0');

868 *
Êagp
 |
HASWIDTH
;

869 i‡(
Àn
 == 1)

870 *
Êagp
 |
SIMPLE
;

875  
ªt
;

876 
	}
}

881 
ch¨_u
 *

882 
	$ªgnode
(
›
)

883 
›
;

885 
ch¨_u
 *
ªt
;

886 
ch¨_u
 *
±r
;

888 
ªt
 = 
ªgcode
;

889 i‡(
ªt
 =&
ªgdummy
) {

890 
ªgsize
 += 3;

891  
ªt
;

893 
±r
 = 
ªt
;

894 *
±r
++ = 
›
;

895 *
±r
++ = '\0';

896 *
±r
++ = '\0';

897 
ªgcode
 = 
±r
;

899  
ªt
;

900 
	}
}

906 
	$ªgc
(
b
)

907 
b
;

909 i‡(
ªgcode
 !&
ªgdummy
)

910 *
ªgcode
++ = 
b
;

912 
ªgsize
++;

913 
	}
}

919 
	$uƒegc
()

921 i‡(
ªgcode
 !&
ªgdummy
)

922 
ªgcode
--;

924 
ªgsize
--;

925 
	}
}

933 
	$ªgö£π
(
›
, 
›nd
)

934 
›
;

935 
ch¨_u
 *
›nd
;

937 
ch¨_u
 *
§c
;

938 
ch¨_u
 *
d°
;

939 
ch¨_u
 *
∂a˚
;

941 i‡(
ªgcode
 =&
ªgdummy
) {

942 
ªgsize
 += 3;

945 
§c
 = 
ªgcode
;

946 
ªgcode
 += 3;

947 
d°
 = 
ªgcode
;

948 
§c
 > 
›nd
)

949 *--
d°
 = *--
§c
;

951 
∂a˚
 = 
›nd
;

952 *
∂a˚
++ = 
›
;

953 *
∂a˚
++ = '\0';

954 *
∂a˚
 = '\0';

955 
	}
}

961 
	$ªgèû
(
p
, 
vÆ
)

962 
ch¨_u
 *
p
;

963 
ch¨_u
 *
vÆ
;

965 
ch¨_u
 *
sˇn
;

966 
ch¨_u
 *
ãmp
;

967 
off£t
;

969 i‡(
p
 =&
ªgdummy
)

973 
sˇn
 = 
p
;

975 
ãmp
 = 
	`ªg√xt
(
sˇn
);

976 i‡(
ãmp
 =
NULL
)

978 
sˇn
 = 
ãmp
;

981 i‡(
	`OP
(
sˇn
Ë=
BACK
)

982 
off£t
 = ()(
sˇn
 - 
vÆ
);

984 
off£t
 = ()(
vÆ
 - 
sˇn
);

985 *(
sˇn
 + 1Ë(
ch¨_u
Ë((
off£t
 >> 8) & 0377);

986 *(
sˇn
 + 2Ë(
ch¨_u
Ë(
off£t
 & 0377);

987 
	}
}

993 
	$ªg›èû
(
p
, 
vÆ
)

994 
ch¨_u
 *
p
;

995 
ch¨_u
 *
vÆ
;

998 i‡(
p
 =
NULL
 ||Ö =&
ªgdummy
 || 
	`OP
’Ë!
BRANCH
)

1000 
	`ªgèû
(
	`OPERAND
(
p
), 
vÆ
);

1001 
	}
}

1009 
	g¥evchr
;

1010 
	g√xtchr
;

1016 
	g©_°¨t
;

1019 
	$öôchr
(
°r
)

1020 
ch¨_u
 *
°r
;

1022 
ªg∑r£
 = 
°r
;

1023 
curchr
 = 
¥evchr
 = 
√xtchr
 = -1;

1024 
©_°¨t
 = 
TRUE
;

1025 
	}
}

1028 
	$≥ekchr
()

1030 i‡(
curchr
 < 0) {

1031 
curchr
 = 
ªg∑r£
[0]) {

1037 i‡(
ªg_magic
)

1038 
curchr
 = 
	`Magic
(curchr);

1042 i‡(
ªg_magic
 && !
©_°¨t
)

1043 
curchr
 = 
	`Magic
('*');

1047 i‡(
©_°¨t
)

1048 
curchr
 = 
	`Magic
('^');

1052 i‡(
ªg∑r£
[1] =
NUL
 || (regparse[1] == '\\' &&Ñegparse[2] == '|'))

1053 
curchr
 = 
	`Magic
('$');

1056 
ªg∑r£
++;

1057 i‡(
ªg∑r£
[0] =
NUL
)

1058 
curchr
 = '\\';

1059 i‡(
	`vim_°rchr
(
META
, 
ªg∑r£
[0]))

1067 
curchr
 = -1;

1068 
©_°¨t
 = 
FALSE
;

1069 
	`≥ekchr
();

1070 
curchr
 ^
	`Magic
(0);

1072 i‡(
	`vim_°rchr
(
REGEXP_ABBR
, 
ªg∑r£
[0]))

1077 
ªg∑r£
[0])

1079 'r': 
curchr
 = 
CR
; ;

1080 't': 
curchr
 = 
TAB
; ;

1081 'e': 
curchr
 = 
ESC
; ;

1082 'b': 
curchr
 = 
	`Cål
('H'); ;

1091 
curchr
 = 
ªg∑r£
[0];

1097  
curchr
;

1098 
	}
}

1101 
	$skùchr
()

1103 
ªg∑r£
++;

1104 
©_°¨t
 = 
FALSE
;

1105 
¥evchr
 = 
curchr
;

1106 
curchr
 = 
√xtchr
;

1107 
√xtchr
 = -1;

1108 
	}
}

1111 
	$gëchr
()

1113 
chr
;

1115 
chr
 = 
	`≥ekchr
();

1116 
	`skùchr
();

1118  
chr
;

1119 
	}
}

1125 
	$ungëchr
()

1127 
√xtchr
 = 
curchr
;

1128 
curchr
 = 
¥evchr
;

1133 
ªg∑r£
--;

1134 
	}
}

1143 
ch¨_u
 *
	gªgöput
;

1144 
ch¨_u
 *
	gªgbﬁ
;

1145 
ch¨_u
 **
	gªg°¨ç
;

1151 
ªgåy
 
__ARGS
((
ªgexp
 *, 
ch¨_u
 *));

1152 
ªgm©ch
 
__ARGS
((
ch¨_u
 *));

1153 
ªgª≥©
 
__ARGS
((
ch¨_u
 *));

1155 #ifde‡
DEBUG


1156 
	gªg«º©e
 = 1;

1157 
ªgdump
 
__ARGS
((
ªgexp
 *));

1158 
ch¨_u
 *
ªg¥›
 
__ARGS
((char_u *));

1166 
	$vim_ªgexec
(
¥og
, 
°rög
, 
©_bﬁ
)

1167 
ªgexp
 *
¥og
;

1168 
ch¨_u
 *
°rög
;

1169 
©_bﬁ
;

1171 
ch¨_u
 *
s
;

1174 i‡(
¥og
 =
NULL
 || 
°rög
 == NULL) {

1175 
	`emsg
(
e_nuŒ
);

1176 
rc_did_emsg
 = 
TRUE
;

1180 i‡(
	`UCHARAT
(
¥og
->
¥ogøm
Ë!
MAGIC
) {

1181 
	`emsg
(
e_ª_c‹r
);

1182 
rc_did_emsg
 = 
TRUE
;

1186 i‡(
¥og
->
ªgmu°
 !
NULL
) {

1187 
s
 = 
°rög
;

1188 (
s
 = 
	`c°rchr
(s, 
¥og
->
ªgmu°
[0])Ë!
NULL
) {

1189 i‡(
	`c°∫cmp
(
s
, 
¥og
->
ªgmu°
,Örog->
ªgmÀn
) == 0)

1191 
s
++;

1193 i‡(
s
 =
NULL
)

1197 i‡(
©_bﬁ
)

1198 
ªgbﬁ
 = 
°rög
;

1200 
ªgbﬁ
 = 
NULL
;

1203 i‡(
¥og
->
ªg™ch
)

1204  
	`ªgåy
(
¥og
, 
°rög
);

1207 
s
 = 
°rög
;

1208 i‡(
¥og
->
ªg°¨t
 != '\0')

1210 (
s
 = 
	`c°rchr
(s, 
¥og
->
ªg°¨t
)Ë!
NULL
) {

1211 i‡(
	`ªgåy
(
¥og
, 
s
))

1213 
s
++;

1218 i‡(
	`ªgåy
(
¥og
, 
s
))

1220 } *
s
++ != '\0');

1224 
	}
}

1230 
	$ªgåy
(
¥og
, 
°rög
)

1231 
ªgexp
 *
¥og
;

1232 
ch¨_u
 *
°rög
;

1234 
i
;

1235 
ch¨_u
 **
•
;

1236 
ch¨_u
 **
ï
;

1238 
ªgöput
 = 
°rög
;

1239 
ªg°¨ç
 = 
¥og
->
°¨ç
;

1240 
ªgídp
 = 
¥og
->
ídp
;

1242 
•
 = 
¥og
->
°¨ç
;

1243 
ï
 = 
¥og
->
ídp
;

1244 
i
 = 
NSUBEXP
; i > 0; i--) {

1245 *
•
++ = 
NULL
;

1246 *
ï
++ = 
NULL
;

1248 i‡(
	`ªgm©ch
(
¥og
->
¥ogøm
 + 1)) {

1249 
¥og
->
°¨ç
[0] = 
°rög
;

1250 
¥og
->
ídp
[0] = 
ªgöput
;

1254 
	}
}

1267 
	$ªgm©ch
(
¥og
)

1268 
ch¨_u
 *
¥og
;

1270 
ch¨_u
 *
sˇn
;

1271 
ch¨_u
 *
√xt
;

1273 
sˇn
 = 
¥og
;

1274 #ifde‡
DEBUG


1275 i‡(
sˇn
 !
NULL
 && 
ªg«º©e
)

1276 
	`Ârötf
(
°dîr
, "%s(\n", 
	`ªg¥›
(
sˇn
));

1278 
sˇn
 !
NULL
) {

1279 #ifde‡
DEBUG


1280 i‡(
ªg«º©e
) {

1281 
	`Ârötf
(
°dîr
, "%s...\n", 
	`ªg¥›
(
sˇn
));

1284 
√xt
 = 
	`ªg√xt
(
sˇn
);

1285 
	`OP
(
sˇn
)) {

1286 
BOL
:

1287 i‡(
ªgöput
 !
ªgbﬁ
)

1290 
EOL
:

1291 i‡(*
ªgöput
 != '\0')

1294 
BOW
:

1295 i‡(
ªgöput
 !
ªgbﬁ
 && 
	`isw‹dch¨
(reginput[-1]))

1297 i‡(!
ªgöput
[0] || !
	`isw‹dch¨
(reginput[0]))

1300 
EOW
:

1301 i‡(
ªgöput
 =
ªgbﬁ
 || !
	`isw‹dch¨
(reginput[-1]))

1303 i‡(
ªgöput
[0] && 
	`isw‹dch¨
(reginput[0]))

1306 
ANY
:

1307 i‡(*
ªgöput
 == '\0')

1309 
ªgöput
++;

1311 
IDENT
:

1312 i‡(!
	`isidch¨
(*
ªgöput
))

1314 
ªgöput
++;

1316 
WORD
:

1317 i‡(!
	`isw‹dch¨
(*
ªgöput
))

1319 
ªgöput
++;

1321 
FNAME
:

1322 i‡(!
	`isfûech¨
(*
ªgöput
))

1324 
ªgöput
++;

1326 
PRINT
:

1327 i‡(
	`ch¨size
(*
ªgöput
) != 1)

1329 
ªgöput
++;

1331 
SIDENT
:

1332 i‡(
	`isdigô
(*
ªgöput
Ë|| !
	`isidch¨
(*reginput))

1334 
ªgöput
++;

1336 
SWORD
:

1337 i‡(
	`isdigô
(*
ªgöput
Ë|| !
	`isw‹dch¨
(*reginput))

1339 
ªgöput
++;

1341 
SFNAME
:

1342 i‡(
	`isdigô
(*
ªgöput
Ë|| !
	`isfûech¨
(*reginput))

1344 
ªgöput
++;

1346 
SPRINT
:

1347 i‡(
	`isdigô
(*
ªgöput
Ë|| 
	`ch¨size
(*reginput) != 1)

1349 
ªgöput
++;

1351 
EXACTLY
:{

1352 
Àn
;

1353 
ch¨_u
 *
›nd
;

1355 
›nd
 = 
	`OPERAND
(
sˇn
);

1357 i‡(*
›nd
 !*
ªgöput
 && (!
ªg_ic
 || 
	`TO_UPPER
(*opnd) != TO_UPPER(*reginput)))

1359 
Àn
 = 
	`STRLEN
(
›nd
);

1360 i‡(
Àn
 > 1 && 
	`c°∫cmp
(
›nd
, 
ªgöput
,Üen) != 0)

1362 
ªgöput
 +
Àn
;

1365 
ANYOF
:

1366 i‡(*
ªgöput
 ='\0' || 
	`c°rchr
(
	`OPERAND
(
sˇn
), *ªgöputË=
NULL
)

1368 
ªgöput
++;

1370 
ANYBUT
:

1371 i‡(*
ªgöput
 ='\0' || 
	`c°rchr
(
	`OPERAND
(
sˇn
), *ªgöputË!
NULL
)

1373 
ªgöput
++;

1375 
NOTHING
:

1377 
BACK
:

1379 
MOPEN
 + 1:

1380 
MOPEN
 + 2:

1381 
MOPEN
 + 3:

1382 
MOPEN
 + 4:

1383 
MOPEN
 + 5:

1384 
MOPEN
 + 6:

1385 
MOPEN
 + 7:

1386 
MOPEN
 + 8:

1387 
MOPEN
 + 9:{

1388 
no
;

1389 
ch¨_u
 *
ßve
;

1391 
no
 = 
	`OP
(
sˇn
Ë- 
MOPEN
;

1392 
ßve
 = 
ªg°¨ç
[
no
];

1393 
ªg°¨ç
[
no
] = 
ªgöput
;

1394 #ifde‡
DEBUG


1395 
	`¥ötf
("MOPEN %dÖre @'%s' ('%s' )'%s'\n",

1396 
no
, 
ßve
,

1397 
ªg°¨ç
[
no
] ?Ñegstartp[no] : "NULL",

1398 
ªgídp
[
no
] ?Ñegendp[no] : "NULL");

1401 i‡(
	`ªgm©ch
(
√xt
)) {

1402 #ifde‡
DEBUG


1403 
	`¥ötf
("MOPEN %dÖost @'%s' ('%s' )'%s'\n",

1404 
no
, 
ßve
,

1405 
ªg°¨ç
[
no
] ?Ñegstartp[no] : "NULL",

1406 
ªgídp
[
no
] ?Ñegendp[no] : "NULL");

1410 
ªg°¨ç
[
no
] = 
ßve
;

1414 
MCLOSE
 + 1:

1415 
MCLOSE
 + 2:

1416 
MCLOSE
 + 3:

1417 
MCLOSE
 + 4:

1418 
MCLOSE
 + 5:

1419 
MCLOSE
 + 6:

1420 
MCLOSE
 + 7:

1421 
MCLOSE
 + 8:

1422 
MCLOSE
 + 9:{

1423 
no
;

1424 
ch¨_u
 *
ßve
;

1426 
no
 = 
	`OP
(
sˇn
Ë- 
MCLOSE
;

1427 
ßve
 = 
ªgídp
[
no
];

1428 
ªgídp
[
no
] = 
ªgöput
;

1429 #ifde‡
DEBUG


1430 
	`¥ötf
("MCLOSE %dÖre @'%s' ('%s' )'%s'\n",

1431 
no
, 
ßve
,

1432 
ªg°¨ç
[
no
] ?Ñegstartp[no] : "NULL",

1433 
ªgídp
[
no
] ?Ñegendp[no] : "NULL");

1436 i‡(
	`ªgm©ch
(
√xt
)) {

1437 #ifde‡
DEBUG


1438 
	`¥ötf
("MCLOSE %dÖost @'%s' ('%s' )'%s'\n",

1439 
no
, 
ßve
,

1440 
ªg°¨ç
[
no
] ?Ñegstartp[no] : "NULL",

1441 
ªgídp
[
no
] ?Ñegendp[no] : "NULL");

1445 
ªgídp
[
no
] = 
ßve
;

1449 #ifde‡
BACKREF


1450 
BACKREF
 + 1:

1451 
BACKREF
 + 2:

1452 
BACKREF
 + 3:

1453 
BACKREF
 + 4:

1454 
BACKREF
 + 5:

1455 
BACKREF
 + 6:

1456 
BACKREF
 + 7:

1457 
BACKREF
 + 8:

1458 
BACKREF
 + 9:{

1459 
no
;

1460 
Àn
;

1462 
no
 = 
	`OP
(
sˇn
Ë- 
BACKREF
;

1463 i‡(
ªgídp
[
no
] !
NULL
) {

1464 
Àn
 = ()(
ªgídp
[
no
] - 
ªg°¨ç
[no]);

1465 i‡(
	`c°∫cmp
(
ªg°¨ç
[
no
], 
ªgöput
, 
Àn
) != 0)

1467 
ªgöput
 +
Àn
;

1475 
BRANCH
:{

1476 
ch¨_u
 *
ßve
;

1478 i‡(
	`OP
(
√xt
Ë!
BRANCH
)

1479 
√xt
 = 
	`OPERAND
(
sˇn
);

1482 
ßve
 = 
ªgöput
;

1483 i‡(
	`ªgm©ch
(
	`OPERAND
(
sˇn
)))

1485 
ªgöput
 = 
ßve
;

1486 
sˇn
 = 
	`ªg√xt
(scan);

1487 } 
sˇn
 !
NULL
 && 
	`OP
(sˇnË=
BRANCH
);

1493 
STAR
:

1494 
PLUS
:{

1495 
√xtch
;

1496 
no
;

1497 
ch¨_u
 *
ßve
;

1498 
mö
;

1504 
√xtch
 = '\0';

1505 i‡(
	`OP
(
√xt
Ë=
EXACTLY
)

1507 
√xtch
 = *
	`OPERAND
(
√xt
);

1508 i‡(
ªg_ic
)

1509 
√xtch
 = 
	`TO_UPPER
(nextch);

1511 
mö
 = (
	`OP
(
sˇn
Ë=
STAR
) ? 0 : 1;

1512 
ßve
 = 
ªgöput
;

1513 
no
 = 
	`ªgª≥©
(
	`OPERAND
(
sˇn
));

1514 
no
 >
mö
)

1517 i‡(
√xtch
 ='\0' || (*
ªgöput
 ==Çextch ||

1518 (
ªg_ic
 && 
	`TO_UPPER
(*
ªgöput
Ë=
√xtch
)))

1519 i‡(
	`ªgm©ch
(
√xt
))

1522 
no
--;

1523 
ªgöput
 = 
ßve
 + 
no
;

1528 
END
:

1532 
	`emsg
(
e_ª_c‹r
);

1537 
sˇn
 = 
√xt
;

1544 
	`emsg
(
e_ª_c‹r
);

1546 
	}
}

1552 
	$ªgª≥©
(
p
)

1553 
ch¨_u
 *
p
;

1555 
cou¡
 = 0;

1556 
ch¨_u
 *
sˇn
;

1557 
ch¨_u
 *
›nd
;

1559 
sˇn
 = 
ªgöput
;

1560 
›nd
 = 
	`OPERAND
(
p
);

1561 
	`OP
(
p
)) {

1562 
ANY
:

1563 
cou¡
 = 
	`STRLEN
(
sˇn
);

1564 
sˇn
 +
cou¡
;

1566 
IDENT
:

1567 
cou¡
 = 0; 
	`isidch¨
(*
sˇn
); ++count)

1568 ++
sˇn
;

1570 
WORD
:

1571 
cou¡
 = 0; 
	`isw‹dch¨
(*
sˇn
); ++count)

1572 ++
sˇn
;

1574 
FNAME
:

1575 
cou¡
 = 0; 
	`isfûech¨
(*
sˇn
); ++count)

1576 ++
sˇn
;

1578 
PRINT
:

1579 
cou¡
 = 0; 
	`ch¨size
(*
sˇn
) == 1; ++count)

1580 ++
sˇn
;

1582 
SIDENT
:

1583 
cou¡
 = 0; !
	`isdigô
(*
sˇn
Ë&& 
	`isidch¨
(*scan); ++count)

1584 ++
sˇn
;

1586 
SWORD
:

1587 
cou¡
 = 0; !
	`isdigô
(*
sˇn
Ë&& 
	`isw‹dch¨
(*scan); ++count)

1588 ++
sˇn
;

1590 
SFNAME
:

1591 
cou¡
 = 0; !
	`isdigô
(*
sˇn
Ë&& 
	`isfûech¨
(*scan); ++count)

1592 ++
sˇn
;

1594 
SPRINT
:

1595 
cou¡
 = 0; !
	`isdigô
(*
sˇn
Ë&& 
	`ch¨size
(*scan) == 1; ++count)

1596 ++
sˇn
;

1598 
EXACTLY
:

1599 *
›nd
 =*
sˇn
 || (
ªg_ic
 && 
	`TO_UPPER
(*opnd) == TO_UPPER(*scan)))

1601 
cou¡
++;

1602 
sˇn
++;

1605 
ANYOF
:

1606 *
sˇn
 !'\0' && 
	`c°rchr
(
›nd
, *sˇnË!
NULL
)

1608 
cou¡
++;

1609 
sˇn
++;

1612 
ANYBUT
:

1613 *
sˇn
 !'\0' && 
	`c°rchr
(
›nd
, *sˇnË=
NULL
) {

1614 
cou¡
++;

1615 
sˇn
++;

1619 
	`emsg
(
e_ª_c‹r
);

1620 
cou¡
 = 0;

1623 
ªgöput
 = 
sˇn
;

1625  
cou¡
;

1626 
	}
}

1631 
ch¨_u
 *

1632 
	$ªg√xt
(
p
)

1633 
ch¨_u
 *
p
;

1635 
off£t
;

1637 i‡(
p
 =&
ªgdummy
)

1638  
NULL
;

1640 
off£t
 = 
	`NEXT
(
p
);

1641 i‡(
off£t
 == 0)

1642  
NULL
;

1644 i‡(
	`OP
(
p
Ë=
BACK
)

1645  
p
 - 
off£t
;

1647  
p
 + 
off£t
;

1648 
	}
}

1650 #ifde‡
DEBUG


1656 
	$ªgdump
(
r
)

1657 
ªgexp
 *
r
;

1659 
ch¨_u
 *
s
;

1660 
›
 = 
EXACTLY
;

1661 
ch¨_u
 *
√xt
;

1664 
s
 = 
r
->
¥ogøm
 + 1;

1665 
›
 !
END
) {

1666 
›
 = 
	`OP
(
s
);

1667 
	`¥ötf
("%2d%s", 
s
 - 
r
->
¥ogøm
, 
	`ªg¥›
(s));

1668 
√xt
 = 
	`ªg√xt
(
s
);

1669 i‡(
√xt
 =
NULL
)

1670 
	`¥ötf
("(0)");

1672 
	`¥ötf
("(%d)", (
s
 - 
r
->
¥ogøm
Ë+ (
√xt
 - s));

1673 
s
 += 3;

1674 i‡(
›
 =
ANYOF
 || o∞=
ANYBUT
 || o∞=
EXACTLY
) {

1676 *
s
 != '\0') {

1677 
	`putch¨
(*
s
);

1678 
s
++;

1680 
s
++;

1682 
	`putch¨
('\n');

1686 i‡(
r
->
ªg°¨t
 != '\0')

1687 
	`¥ötf
("°¨à`%c' ", 
r
->
ªg°¨t
);

1688 i‡(
r
->
ªg™ch
)

1689 
	`¥ötf
("anchored ");

1690 i‡(
r
->
ªgmu°
 !
NULL
)

1691 
	`¥ötf
("mu° havê\"%s\"", 
r
->
ªgmu°
);

1692 
	`¥ötf
("\n");

1693 
	}
}

1698 
ch¨_u
 *

1699 
	$ªg¥›
(
›
)

1700 
ch¨_u
 *
›
;

1702 
ch¨_u
 *
p
;

1703 
ch¨_u
 
buf
[50];

1705 (Ë
	`°r˝y
(
buf
, ":");

1707 
	`OP
(
›
)) {

1708 
BOL
:

1709 
p
 = "BOL";

1711 
EOL
:

1712 
p
 = "EOL";

1714 
ANY
:

1715 
p
 = "ANY";

1717 
IDENT
:

1718 
p
 = "IDENT";

1720 
WORD
:

1721 
p
 = "WORD";

1723 
FNAME
:

1724 
p
 = "FNAME";

1726 
PRINT
:

1727 
p
 = "PRINT";

1729 
SIDENT
:

1730 
p
 = "SIDENT";

1732 
SWORD
:

1733 
p
 = "SWORD";

1735 
SFNAME
:

1736 
p
 = "SFNAME";

1738 
SPRINT
:

1739 
p
 = "SPRINT";

1741 
ANYOF
:

1742 
p
 = "ANYOF";

1744 
ANYBUT
:

1745 
p
 = "ANYBUT";

1747 
BRANCH
:

1748 
p
 = "BRANCH";

1750 
EXACTLY
:

1751 
p
 = "EXACTLY";

1753 
NOTHING
:

1754 
p
 = "NOTHING";

1756 
BACK
:

1757 
p
 = "BACK";

1759 
END
:

1760 
p
 = "END";

1762 
MOPEN
 + 1:

1763 
MOPEN
 + 2:

1764 
MOPEN
 + 3:

1765 
MOPEN
 + 4:

1766 
MOPEN
 + 5:

1767 
MOPEN
 + 6:

1768 
MOPEN
 + 7:

1769 
MOPEN
 + 8:

1770 
MOPEN
 + 9:

1771 
	`•rötf
(
buf
 + 
	`STRLEN
(buf), "MOPEN%d", 
	`OP
(
›
Ë- 
MOPEN
);

1772 
p
 = 
NULL
;

1774 
MCLOSE
 + 1:

1775 
MCLOSE
 + 2:

1776 
MCLOSE
 + 3:

1777 
MCLOSE
 + 4:

1778 
MCLOSE
 + 5:

1779 
MCLOSE
 + 6:

1780 
MCLOSE
 + 7:

1781 
MCLOSE
 + 8:

1782 
MCLOSE
 + 9:

1783 
	`•rötf
(
buf
 + 
	`STRLEN
(buf), "MCLOSE%d", 
	`OP
(
›
Ë- 
MCLOSE
);

1784 
p
 = 
NULL
;

1786 
BACKREF
 + 1:

1787 
BACKREF
 + 2:

1788 
BACKREF
 + 3:

1789 
BACKREF
 + 4:

1790 
BACKREF
 + 5:

1791 
BACKREF
 + 6:

1792 
BACKREF
 + 7:

1793 
BACKREF
 + 8:

1794 
BACKREF
 + 9:

1795 
	`•rötf
(
buf
 + 
	`STRLEN
(buf), "BACKREF%d", 
	`OP
(
›
Ë- 
BACKREF
);

1796 
p
 = 
NULL
;

1798 
STAR
:

1799 
p
 = "STAR";

1801 
PLUS
:

1802 
p
 = "PLUS";

1805 
	`•rötf
(
buf
 + 
	`STRLEN
(buf), "c‹ru± %d", 
	`OP
(
›
));

1806 
p
 = 
NULL
;

1809 i‡(
p
 !
NULL
)

1810 (Ë
	`°rˇt
(
buf
, 
p
);

1811  
buf
;

1812 
	}
}

1821 #i‚de‡
HAVE_STRCSPN


1827 
size_t


1828 
	$°rc•n
(
s1
, 
s2
)

1829 c⁄° 
ch¨_u
 *
s1
;

1830 c⁄° 
ch¨_u
 *
s2
;

1832 
ch¨_u
 *
sˇn1
;

1833 
ch¨_u
 *
sˇn2
;

1834 
cou¡
;

1836 
cou¡
 = 0;

1837 
sˇn1
 = 
s1
; *scan1 != '\0'; scan1++) {

1838 
sˇn2
 = 
s2
; *scan2 != '\0';)

1839 i‡(*
sˇn1
 =*
sˇn2
++)

1840  
cou¡
;

1841 
cou¡
++;

1843  
cou¡
;

1844 
	}
}

1852 
	$c°∫cmp
(
s1
, 
s2
, 
n
)

1853 
ch¨_u
 *
s1
, *
s2
;

1854 
n
;

1856 i‡(!
ªg_ic
)

1857  
	`STRNCMP
(
s1
, 
s2
, (
size_t
)
n
);

1859  
	`vim_°∫icmp
(
s1
, 
s2
, (
size_t
)
n
);

1860 
	}
}

1865 
ch¨_u
 *

1866 
	$c°rchr
(
s
, 
c
)

1867 
ch¨_u
 *
s
;

1868 
c
;

1870 
ch¨_u
 *
p
;

1872 i‡(!
ªg_ic
)

1873  
	`vim_°rchr
(
s
, 
c
);

1875 
c
 = 
	`TO_UPPER
(c);

1877 
p
 = 
s
; *p;Ö++)

1879 i‡(
	`TO_UPPER
(*
p
Ë=
c
)

1880  
p
;

1882  
NULL
;

1883 
	}
}

	@src/regexp.h

18 #i‚de‡
_REGEXP_H


19 
	#_REGEXP_H


	)

21 
	#NSUBEXP
 10

	)

22 
	sªgexp


24 
ch¨_u
 *
	m°¨ç
[
NSUBEXP
];

25 
ch¨_u
 *
	mídp
[
NSUBEXP
];

26 
ch¨_u
 
	mªg°¨t
;

27 
ch¨_u
 
	mªg™ch
;

28 
ch¨_u
 *
	mªgmu°
;

29 
	mªgmÀn
;

30 
ch¨_u
 
	m¥ogøm
[1];

31 } 
	tªgexp
;

38 
	#MAGIC
 0234

	)

	@src/regsub.c

49 
	~"vim.h
"

50 
	~"globÆs.h
"

51 
	~"¥Ÿo.h
"

53 #i‚de‡
__ARGS


54 
	#__ARGS
(
a
Ë
	)
a

57 
	~<°dio.h
>

58 
	~"ªgexp.h
"

60 #ifde‡
LATTICE


61 
	~<sys/ty≥s.h
>

64 #i‚de‡
CHARBITS


65 
	#UCHARAT
(
p
Ë(()*(
ch¨_u
 *)’))

	)

67 
	#UCHARAT
(
p
Ë(()*’)&
CHARBITS
)

	)

70 
ch¨_u
 *
ªg_¥ev_sub
;

73 #ifde‡
__sgi


74 #unde‡
__ARGS


75 
	#__ARGS
(
x
Ë()

	)

84 (*(*
	gÂå
Ë
	t__ARGS
((
	tch¨_u
 *, )))();

86 
Âå
 
do_uµî
 
__ARGS
((
ch¨_u
 *, ));

87 
Âå
 
do_Uµî
 
__ARGS
((
ch¨_u
 *, ));

88 
Âå
 
do_lowî
 
__ARGS
((
ch¨_u
 *, ));

89 
Âå
 
do_Lowî
 
__ARGS
((
ch¨_u
 *, ));

91 
Âå


92 
	$do_uµî
(
d
, 
c
)

93 
ch¨_u
 *
d
;

94 
c
;

96 *
d
 = 
	`TO_UPPER
(
c
);

98  (
Âå
)
NULL
;

99 
	}
}

101 
Âå


102 
	$do_Uµî
(
d
, 
c
)

103 
ch¨_u
 *
d
;

104 
c
;

106 *
d
 = 
	`TO_UPPER
(
c
);

108  (
Âå
)
do_Uµî
;

109 
	}
}

111 
Âå


112 
	$do_lowî
(
d
, 
c
)

113 
ch¨_u
 *
d
;

114 
c
;

116 *
d
 = 
	`TO_LOWER
(
c
);

118  (
Âå
)
NULL
;

119 
	}
}

121 
Âå


122 
	$do_Lowî
(
d
, 
c
)

123 
ch¨_u
 *
d
;

124 
c
;

126 *
d
 = 
	`TO_LOWER
(
c
);

128  (
Âå
)
do_Lowî
;

129 
	}
}

144 
ch¨_u
 *

145 
	$ªgtûde
(
sour˚
, 
magic
)

146 
ch¨_u
 *
sour˚
;

147 
magic
;

149 
ch¨_u
 *
√wsub
 = 
NULL
;

150 
ch¨_u
 *
tmpsub
;

151 
ch¨_u
 *
p
;

152 
Àn
;

153 
¥evÀn
;

155 
p
 = 
sour˚
; *p; ++p)

157 i‡((*
p
 ='~' && 
magic
) || (*p == '\\' && *(p + 1) == '~' && !magic))

159 i‡(
ªg_¥ev_sub
)

162 
¥evÀn
 = 
	`STRLEN
(
ªg_¥ev_sub
);

163 
tmpsub
 = 
	`Æloc
(()(
	`STRLEN
(
sour˚
Ë+ 
¥evÀn
));

164 i‡(
tmpsub
)

167 
Àn
 = ()(
p
 - 
sour˚
);

168 
	`STRNCPY
(
tmpsub
, 
sour˚
, 
Àn
);

170 
	`STRCPY
(
tmpsub
 + 
Àn
, 
ªg_¥ev_sub
);

172 i‡(!
magic
)

173 ++
p
;

174 
	`STRCAT
(
tmpsub
 + 
Àn
, 
p
 + 1);

176 
	`vim_‰ì
(
√wsub
);

177 
√wsub
 = 
tmpsub
;

178 
p
 = 
√wsub
 + 
Àn
 + 
¥evÀn
;

181 i‡(
magic
)

182 
	`STRCPY
(
p
,Ö + 1);

184 
	`STRCPY
(
p
,Ö + 2);

186 i‡(*
p
 == '\\' &&Ö[1])

187 ++
p
;

190 
	`vim_‰ì
(
ªg_¥ev_sub
);

191 i‡(
√wsub
)

193 
sour˚
 = 
√wsub
;

194 
ªg_¥ev_sub
 = 
√wsub
;

197 
ªg_¥ev_sub
 = 
	`°rßve
(
sour˚
);

198  
sour˚
;

199 
	}
}

209 
	$vim_ªgsub
(
¥og
, 
sour˚
, 
de°
, 
c›y
, 
magic
)

210 
ªgexp
 *
¥og
;

211 
ch¨_u
 *
sour˚
;

212 
ch¨_u
 *
de°
;

213 
c›y
;

214 
magic
;

216 
ch¨_u
 *
§c
;

217 
ch¨_u
 *
d°
;

218 
ch¨_u
 *
s
;

219 
c
;

220 
no
;

221 
Âå
 
func
 = (Âå)
NULL
;

223 i‡(
¥og
 =
NULL
 || 
sour˚
 =NULL || 
de°
 == NULL)

225 
	`emsg
(
e_nuŒ
);

228 i‡(
	`UCHARAT
(
¥og
->
¥ogøm
Ë!
MAGIC
)

230 
	`emsg
(
e_ª_c‹r
);

233 
§c
 = 
sour˚
;

234 
d°
 = 
de°
;

236 (
c
 = *
§c
++) != '\0')

238 
no
 = -1;

239 i‡(
c
 ='&' && 
magic
)

240 
no
 = 0;

241 i‡(
c
 ='\\' && *
§c
 !
NUL
)

243 i‡(*
§c
 ='&' && !
magic
)

245 ++
§c
;

246 
no
 = 0;

248 i‡('0' <*
§c
 && *src <= '9')

250 
no
 = *
§c
++ - '0';

252 i‡(
	`vim_°rchr
((
ch¨_u
 *)"uUlLeE", *
§c
))

254 *
§c
++)

256 'u': 
func
 = (
Âå
)
do_uµî
;

258 'U': 
func
 = (
Âå
)
do_Uµî
;

260 'l': 
func
 = (
Âå
)
do_lowî
;

262 'L': 
func
 = (
Âå
)
do_Lowî
;

265 'E': 
func
 = (
Âå
)
NULL
;

270 i‡(
no
 < 0)

272 i‡(
c
 ='\\' && *
§c
 !
NUL
)

275 *
§c
)

277 'r': 
c
 = 
CR
; ;

278 'n': 
c
 = 
NL
; ;

279 't': 
c
 = 
TAB
; ;

282 'b': 
c
 = 
	`Cål
('H'); ;

285 
c
 = *
§c
;

288 
§c
++;

290 i‡(
c›y
)

292 i‡(
func
 =(
Âå
)
NULL
)

293 *
d°
 = 
c
;

295 
func
 = (
Âå
)(
	`func
(
d°
, 
c
));

298 
d°
++;

300 i‡(
¥og
->
°¨ç
[
no
] !
NULL
 &&Örog->
ídp
[no] != NULL)

302 
s
 = 
¥og
->
°¨ç
[
no
]; s <Örog->
ídp
[no]; ++s)

304 i‡(
c›y
 && *
s
 == '\0')

306 
	`emsg
(
e_ª_damg
);

307 
exô
;

313 i‡(*
s
 =
CR
)

315 i‡(
c›y
)

317 
d°
[0] = 
	`Cål
('V');

318 
d°
[1] = 
CR
;

320 
d°
 += 2;

324 i‡(
c›y
)

326 i‡(
func
 =(
Âå
)
NULL
)

327 *
d°
 = *
s
;

329 
func
 = (
Âå
)(
	`func
(
d°
, *
s
));

332 ++
d°
;

337 i‡(
c›y
)

338 *
d°
 = '\0';

340 
exô
:

341  ()((
d°
 - 
de°
) + 1);

342 
	}
}

	@src/screen.c

13 
	~"vim.h
"

14 
	~"globÆs.h
"

15 
	~"¥Ÿo.h
"

16 
	~"›ti⁄.h
"

17 
	~"›s.h
"

19 *
tgŸo
 
__PARMS
((*
cm
, 
cﬁ
, 
löe
));

21 
	gˇn›t
;

22 
	g©åibuãs
 = 0;

23 
	ghighlight_©å
 = 0;

24 #ifde‡
RIGHTLEFT


25 
	grighée·
 = 0;

28 
wö_löe
 
__ARGS
((
WIN
 *, 
löír_t
, , ));

29 
comp_BŸlöe_sub
 
__ARGS
((
WIN
 *
wp
, 
löír_t
 
 um
, 
d⁄e
));

30 
s¸ìn_ch¨
 
__ARGS
((
ch¨_u
 *, , ));

31 
s¸ìn˛ór2
 
__ARGS
(());

32 
löe˛ór
 
__ARGS
((
ch¨_u
 *
p
));

33 
s¸ìn_ös_löes
 
__ARGS
((, , , ));

43 
	$upd©ñöe
()

45 
row
;

46 
n
;

48 i‡(!
	`s¸ìn_vÆid
(
TRUE
))

51 i‡(
mu°_ªdøw
)

53 
	`upd©eS¸ìn
(
mu°_ªdøw
);

57 i‡(
RedøwögDißbÀd
)

60 
	`curs‹_off
();

62 ()
	`£t_highlight
('v');

63 
row
 = 
	`wö_löe
(
curwö
, curwö->
w_curs‹
.
 um
,

64 
curwö
->
w_˛öe_row
, curwö->
w_height
);

66 i‡(
row
 =
curwö
->
w_height
 + 1)

69 i‡(
curwö
->
w_t›löe
 < curwö->
w_curs‹
.
 um
)

70 ++
curwö
->
w_t›löe
;

71 
	`upd©eS¸ìn
(
VALID_TO_CURSCHAR
);

72 
	`cursupd©e
();

74 i‡(!
dﬁœr_vcﬁ
)

76 
n
 = 
row
 - 
curwö
->
w_˛öe_row
;

77 i‡(
n
 !
curwö
->
w_˛öe_height
)

79 i‡(
n
 < 
curwö
->
w_˛öe_height
)

80 
	`wö_dñ_löes
(
curwö
, 
row
,

81 
curwö
->
w_˛öe_height
 - 
n
, 
FALSE
, 
TRUE
);

83 
	`wö_ös_löes
(
curwö
,

84 
curwö
->
w_˛öe_row
 + curwö->
w_˛öe_height
,

85 
n
 - 
curwö
->
w_˛öe_height
, 
FALSE
, 
TRUE
);

86 
	`upd©eS¸ìn
(
VALID_TO_CURSCHAR
);

88 i‡(
˛ór_cmdlöe
 || 
ªdøw_cmdlöe
)

89 
	`showmode
();

91 
	}
}

97 
	$upd©e_curbuf
(
ty≥
)

98 
ty≥
;

100 
WIN
 *
wp
;

102 
wp
 = 
fú°wö
; wp; w∞wp->
w_√xt
)

103 i‡(
wp
->
w_buf„r
 =
curbuf
 && wp->
w_ªdr_ty≥
 < 
ty≥
)

104 
wp
->
w_ªdr_ty≥
 = 
ty≥
;

105 
	`upd©eS¸ìn
(
ty≥
);

106 
	}
}

116 
	$upd©eS¸ìn
(
ty≥
)

117 
ty≥
;

119 
WIN
 *
wp
;

121 i‡(!
	`s¸ìn_vÆid
(
TRUE
))

124 
dﬁœr_vcﬁ
 = 0;

126 i‡(
mu°_ªdøw
)

128 i‡(
ty≥
 < 
mu°_ªdøw
)

129 
ty≥
 = 
mu°_ªdøw
;

130 
mu°_ªdøw
 = 0;

133 i‡(
ty≥
 =
CURSUPD
)

135 
curwö
->
w_lsize_vÆid
 = 0;

136 
	`cursupd©e
();

139 i‡(
curwö
->
w_lsize_vÆid
 =0 && 
ty≥
 < 
NOT_VALID
)

140 
ty≥
 = 
NOT_VALID
;

142 i‡(
RedøwögDißbÀd
)

144 
mu°_ªdøw
 = 
ty≥
;

145 
curwö
->
w_ªdr_ty≥
 = 
ty≥
;

146 
curwö
->
w_lsize_vÆid
 = 0;

153 i‡(
msg_s¸ﬁÀd
)

155 
˛ór_cmdlöe
 = 
TRUE
;

156 i‡(
msg_s¸ﬁÀd
 > 
Rows
 - 5)

157 
ty≥
 = 
CLEAR
;

158 i‡(
ty≥
 !
CLEAR
)

160 i‡(
	`s¸ìn_ös_löes
(0, 0, 
msg_s¸ﬁÀd
, ()
Rows
Ë=
FAIL
)

161 
ty≥
 = 
CLEAR
;

162 
	`wö_ª°_övÆid
(
fú°wö
);

164 
msg_s¸ﬁÀd
 = 0;

165 
√ed_waô_ªtu∫
 = 
FALSE
;

171 
	`compuã_cmdrow
();

173 i‡(
ty≥
 =
CLEAR
)

175 
	`s¸ìn˛ór
();

176 
ty≥
 = 
NOT_VALID
;

179 i‡(
˛ór_cmdlöe
)

181 i‡(
emsg_⁄_di•œy
)

183 
	`mch_dñay
(1000L, 
TRUE
);

184 
emsg_⁄_di•œy
 = 
FALSE
;

186 
msg_row
 = 
cmdlöe_row
;

187 
msg_cﬁ
 = 0;

188 
	`msg_˛r_eos
();

192 i‡(!((
ty≥
 =
VALID
 && 
curwö
->
w_t›löe
 =curwö->
w_lsize_ um
[0]) ||

193 (
ty≥
 =
INVERTED
 &&

194 
curwö
->
w_ﬁd_curs‹_ um
 =curwö->
w_curs‹
.
 um
 &&

195 
curwö
->
w_ﬁd_curs‹_vcﬁ
 =curwö->
w_vútcﬁ
 &&

196 
curwö
->
w_ﬁd_cursw™t
 =curwö->
w_cursw™t
)))

202 
curwö
->
w_ªdr_ty≥
 = 
ty≥
;

203 
	`curs‹_off
();

204 
wp
 = 
fú°wö
; wp; w∞wp->
w_√xt
)

206 i‡(
wp
->
w_ªdr_ty≥
)

207 
	`wö_upd©e
(
wp
);

208 i‡(
wp
->
w_ªdr_°©us
)

209 
	`wö_ªdr_°©us
(
wp
);

212 i‡(
ªdøw_cmdlöe
)

213 
	`showmode
();

214 
	}
}

216 #ifde‡
USE_GUI


222 
	$upd©eWödow
(
wp
)

223 
WIN
 *
wp
;

225 
	`wö_upd©e
(
wp
);

226 i‡(
wp
->
w_ªdr_°©us
)

227 
	`wö_ªdr_°©us
(
wp
);

228 i‡(
ªdøw_cmdlöe
)

229 
	`showmode
();

230 
	}
}

239 
	$wö_upd©e
(
wp
)

240 
WIN
 *
wp
;

242 
ty≥
 = 
wp
->
w_ªdr_ty≥
;

243 
row
;

244 
ídrow
;

245 
löír_t
 
 um
;

246 
löír_t
 
œ°löe
 = 0;

247 
d⁄e
;

248 
didlöe
;

249 
§ow
 = 0;

250 
idx
;

251 
i
;

252 
j
;

254 i‡(
ty≥
 =
NOT_VALID
)

256 
wp
->
w_ªdr_°©us
 = 
TRUE
;

257 
wp
->
w_lsize_vÆid
 = 0;

260 
idx
 = 0;

261 
row
 = 0;

262 
 um
 = 
wp
->
w_t›löe
;

266 
ídrow
 = 
wp
->
w_height
;

268 i‡(
ty≥
 =
VALID
 ||Åy≥ =
VALID_TO_CURSCHAR
)

275 i‡(
wp
->
w_t›löe
 < wp->
w_lsize_ um
[0])

277 
j
 = 
wp
->
w_lsize_ um
[0] - wp->
w_t›löe
;

278 i‡(
j
 < 
wp
->
w_height
 - 2)

280 
œ°löe
 = 
wp
->
w_lsize_ um
[0] - 1;

281 
i
 = 
	`∂öes_m_wö
(
wp
, wp->
w_t›löe
, 
œ°löe
);

282 i‡(
i
 < 
wp
->
w_height
 - 2)

289 i‡(
	`wö_ös_löes
(
wp
, 0, 
i
, 
FALSE
, w∞=
fú°wö
Ë=
OK
 &&

290 
wp
->
w_lsize_vÆid
)

292 
ídrow
 = 
i
;

294 i‡((
wp
->
w_lsize_vÆid
 +
j
Ë> wp->
w_height
)

295 
wp
->
w_lsize_vÆid
 = wp->
w_height
;

296 
idx
 = 
wp
->
w_lsize_vÆid
; idx - 
j
 >= 0; idx--)

298 
wp
->
w_lsize_ um
[
idx
] = wp->w_lsize_ um[idx - 
j
];

299 
wp
->
w_lsize
[
idx
] = wp->w_lsize[idx - 
j
];

301 
idx
 = 0;

304 i‡(
œ°wö
 =
fú°wö
)

305 
	`s¸ìn˛ór
();

307 i‡(
œ°wö
 =
fú°wö
)

308 
	`s¸ìn˛ór
();

312 
j
 = -1;

314 
i
 = 0; i < 
wp
->
w_lsize_vÆid
; i++)

316 i‡(
wp
->
w_lsize_ um
[
i
] =wp->
w_t›löe
)

318 
j
 = 
i
;

321 
row
 +
wp
->
w_lsize
[
i
];

323 i‡(
j
 == -1)

325 
row
 = 0;

326 i‡(
œ°wö
 =
fú°wö
)

327 
	`s¸ìn˛ór
();

335 i‡((
row
 =0 || 
	`wö_dñ_löes
(
wp
, 0,Ñow,

336 
FALSE
, 
wp
 =
fú°wö
Ë=
OK
Ë&& wp->
w_lsize_vÆid
)

338 
§ow
 = 
row
;

339 
row
 = 0;

342 i‡(
ty≥
 =
VALID_TO_CURSCHAR
 &&

343 
 um
 =
wp
->
w_curs‹
.lnum)

345 i‡(
row
 + 
§ow
 + ()
wp
->
w_lsize
[
j
] >wp->
w_height
)

347 
wp
->
w_lsize
[
idx
] = wp->w_lsize[
j
];

348 
wp
->
w_lsize_ um
[
idx
] = 
 um
++;

350 
row
 +
wp
->
w_lsize
[
idx
++];

351 i‡(()++
j
 >
wp
->
w_lsize_vÆid
)

354 
wp
->
w_lsize_vÆid
 = 
idx
;

357 
row
 = 0;

360 i‡(
ídrow
 =
wp
->
w_height
 && 
idx
 == 0)

361 
wp
->
w_lsize_vÆid
 = 0;

364 
d⁄e
 = 
didlöe
 = 
FALSE
;

366 i‡(
VIsuÆ_a˘ive
)

368 
löír_t
 
‰om
, 
to
;

371 i‡(
curwö
->
w_curs‹
.
 um
 < 
wp
->
w_ﬁd_curs‹_ um
)

373 
‰om
 = 
curwö
->
w_curs‹
.
 um
;

374 
to
 = 
wp
->
w_ﬁd_curs‹_ um
;

378 
‰om
 = 
wp
->
w_ﬁd_curs‹_ um
;

379 
to
 = 
curwö
->
w_curs‹
.
 um
;

382 i‡(
VIsuÆ
.
 um
 !
wp
->
w_ﬁd_visuÆ_ um
)

384 i‡(
wp
->
w_ﬁd_visuÆ_ um
 < 
‰om
)

385 
‰om
 = 
wp
->
w_ﬁd_visuÆ_ um
;

386 i‡(
wp
->
w_ﬁd_visuÆ_ um
 > 
to
)

387 
to
 = 
wp
->
w_ﬁd_visuÆ_ um
;

388 i‡(
VIsuÆ
.
 um
 < 
‰om
)

389 
‰om
 = 
VIsuÆ
.
 um
;

390 i‡(
VIsuÆ
.
 um
 > 
to
)

391 
to
 = 
VIsuÆ
.
 um
;

395 i‡(
VIsuÆ_mode
 =
	`Cål
('V') &&

396 (
curwö
->
w_vútcﬁ
 !
wp
->
w_ﬁd_curs‹_vcﬁ
 ||

397 
wp
->
w_cursw™t
 !wp->
w_ﬁd_cursw™t
))

399 i‡(
‰om
 > 
VIsuÆ
.
 um
)

400 
‰om
 = 
VIsuÆ
.
 um
;

401 i‡(
to
 < 
VIsuÆ
.
 um
)

402 
to
 = 
VIsuÆ
.
 um
;

405 i‡(
‰om
 < 
wp
->
w_t›löe
)

406 
‰om
 = 
wp
->
w_t›löe
;

407 i‡(
‰om
 >
wp
->
w_bŸlöe
)

408 
‰om
 = 
wp
->
w_bŸlöe
 - 1;

409 i‡(
to
 >
wp
->
w_bŸlöe
)

410 
to
 = 
wp
->
w_bŸlöe
 - 1;

413 i‡(
ty≥
 =
INVERTED
)

415 
 um
 < 
‰om
)

417 
row
 +
wp
->
w_lsize
[
idx
++];

418 ++
 um
;

420 
§ow
 = 
row
;

421 
j
 = 
idx
; j < 
wp
->
w_lsize_vÆid
; ++j)

423 i‡(
wp
->
w_lsize_ um
[
j
] =
to
 + 1)

425 
ídrow
 = 
§ow
;

428 
§ow
 +
wp
->
w_lsize
[
j
];

433 i‡(
ty≥
 =
INVERTED
 || (
 um
 <
‰om
 &&

434 (
ídrow
 =
wp
->
w_height
 || 
œ°löe
 >
to
)))

436 
wp
->
w_ﬁd_curs‹_ um
 = 
curwö
->
w_curs‹
.
 um
;

437 
wp
->
w_ﬁd_curs‹_vcﬁ
 = 
curwö
->
w_vútcﬁ
;

438 
wp
->
w_ﬁd_visuÆ_ um
 = 
VIsuÆ
.
 um
;

439 
wp
->
w_ﬁd_cursw™t
 = wp->
w_cursw™t
;

444 
wp
->
w_ﬁd_curs‹_ um
 = 0;

445 
wp
->
w_ﬁd_visuÆ_ um
 = 0;

448 ()
	`£t_highlight
('v');

456 i‡(
 um
 > 
wp
->
w_buf„r
->
b_ml
.
ml_löe_cou¡
)

458 
d⁄e
 = 
TRUE
;

461 
§ow
 = 
row
;

462 
row
 = 
	`wö_löe
(
wp
, 
 um
, 
§ow
, 
ídrow
);

463 i‡(
row
 > 
ídrow
)

465 
wp
->
w_lsize
[
idx
] = 
	`∂öes_wö
(wp, 
 um
);

466 
wp
->
w_lsize_ um
[
idx
++] = 
 um
;

470 
wp
->
w_lsize
[
idx
] = 
row
 - 
§ow
;

471 
wp
->
w_lsize_ um
[
idx
++] = 
 um
;

472 i‡(++
 um
 > 
wp
->
w_buf„r
->
b_ml
.
ml_löe_cou¡
)

474 
d⁄e
 = 
TRUE
;

478 i‡(
row
 =
ídrow
)

480 
didlöe
 = 
TRUE
;

484 i‡(
idx
 > 
wp
->
w_lsize_vÆid
)

485 
wp
->
w_lsize_vÆid
 = 
idx
;

488 i‡(
ídrow
 !
wp
->
w_height
)

490 
row
 = 0;

491 
idx
 = 0; idx < 
wp
->
w_lsize_vÆid
 && 
row
 < wp->
w_height
; idx++)

492 
row
 +
wp
->
w_lsize
[
idx
];

494 i‡(
row
 < 
wp
->
w_height
)

496 
d⁄e
 = 
TRUE
;

498 i‡(
row
 > 
wp
->
w_height
)

500 
 um
 = 
wp
->
w_lsize_ um
[
idx
 - 1];

501 
§ow
 = 
row
 - 
wp
->
w_lsize
[
idx
 - 1];

502 
didlöe
 = 
FALSE
;

506 
 um
 = 
wp
->
w_lsize_ um
[
idx
 - 1] + 1;

507 
didlöe
 = 
TRUE
;

511 
wp
->
w_em±y_rows
 = 0;

516 i‡(!
d⁄e
 && !
didlöe
)

518 i‡(
 um
 =
wp
->
w_t›löe
)

524 
	`s¸ìn_fûl
(
wp
->
w_wöpos
 + wp->
w_height
 - 1,

525 
wp
->
w_wöpos
 + wp->
w_height
, 0, ()
Cﬁumns
, '@', '@');

526 
wp
->
w_bŸlöe
 = 
 um
 + 1;

533 #ifde‡
RIGHTLEFT


534 i‡(
wp
->
w_p_æ
)

535 
righée·
 = 1;

537 
	`s¸ìn_fûl
(
wp
->
w_wöpos
 + 
§ow
,

538 
wp
->
w_wöpos
 + wp->
w_height
, 0, ()
Cﬁumns
, '@', ' ');

539 #ifde‡
RIGHTLEFT


540 
righée·
 = 0;

542 
wp
->
w_bŸlöe
 = 
 um
;

543 
wp
->
w_em±y_rows
 = wp->
w_height
 - 
§ow
;

550 #ifde‡
RIGHTLEFT


551 i‡(
wp
->
w_p_æ
)

552 
righée·
 = 1;

554 
	`s¸ìn_fûl
(
wp
->
w_wöpos
 + 
row
,

555 
wp
->
w_wöpos
 + wp->
w_height
, 0, ()
Cﬁumns
, '~', ' ');

556 #ifde‡
RIGHTLEFT


557 
righée·
 = 0;

559 
wp
->
w_em±y_rows
 = wp->
w_height
 - 
row
;

561 i‡(
d⁄e
)

562 
wp
->
w_bŸlöe
 = wp->
w_buf„r
->
b_ml
.
ml_löe_cou¡
 + 1;

564 
wp
->
w_bŸlöe
 = 
 um
;

567 
wp
->
w_ªdr_ty≥
 = 0;

568 
	}
}

574 
	$°©us_ªdøw_Æl
()

576 
WIN
 *
wp
;

578 
wp
 = 
fú°wö
; wp; w∞wp->
w_√xt
)

579 
wp
->
w_ªdr_°©us
 = 
TRUE
;

580 
	`upd©eS¸ìn
(
NOT_VALID
);

581 
	}
}

589 
	$wö_ªdr_°©us
(
wp
)

590 
WIN
 *
wp
;

592 
row
;

593 
ch¨_u
 *
p
;

594 
Àn
;

595 
fûlch¨
;

597 i‡(
wp
->
w_°©us_height
)

599 i‡(
	`£t_highlight
('s'Ë=
OK
)

601 
fûlch¨
 = ' ';

602 
	`°¨t_highlight
();

605 
fûlch¨
 = '=';

607 
p
 = 
wp
->
w_buf„r
->
b_xfûíame
;

608 i‡(
p
 =
NULL
)

609 
	`STRCPY
(
NameBuff
, "[No File]");

611 
	`home_ª∂a˚
(
wp
->
w_buf„r
, 
p
, 
NameBuff
, 
MAXPATHL
);

612 
p
 = 
NameBuff
;

613 
Àn
 = 
	`STRLEN
(
p
);

615 i‡(
wp
->
w_buf„r
->
b_hñp
 || wp->w_buf„r->
b_ch™ged
 ||

616 
wp
->
w_buf„r
->
b_p_ro
)

617 *(
p
 + 
Àn
++) = ' ';

618 i‡(
wp
->
w_buf„r
->
b_hñp
)

620 
	`STRCPY
(
p
 + 
Àn
, "[help]");

621 
Àn
 += 6;

623 i‡(
wp
->
w_buf„r
->
b_ch™ged
)

625 
	`STRCPY
(
p
 + 
Àn
, "[+]");

626 
Àn
 += 3;

628 i‡(
wp
->
w_buf„r
->
b_p_ro
)

630 
	`STRCPY
(
p
 + 
Àn
, "[RO]");

631 
Àn
 += 4;

634 i‡(
Àn
 > 
ru_cﬁ
 - 1)

636 
p
 +
Àn
 - (
ru_cﬁ
 - 1);

637 *
p
 = '<';

638 
Àn
 = 
ru_cﬁ
 - 1;

641 
row
 = 
wp
->
w_wöpos
 + wp->
w_height
;

642 
	`s¸ìn_msg
(
p
, 
row
, 0);

643 
	`s¸ìn_fûl
(
row
,Ñow + 1, 
Àn
, 
ru_cﬁ
, 
fûlch¨
, fillchar);

645 
	`°›_highlight
();

646 
	`wö_ªdr_ruÀr
(
wp
, 
TRUE
);

649 
ªdøw_cmdlöe
 = 
TRUE
;

650 
wp
->
w_ªdr_°©us
 = 
FALSE
;

651 
	}
}

660 
	$wö_löe
(
wp
, 
 um
, 
°¨åow
, 
ídrow
)

661 
WIN
 *
wp
;

662 
löír_t
 
 um
;

663 
°¨åow
;

664 
ídrow
;

666 
ch¨_u
 *
s¸ì≈
;

667 
c
;

668 
cﬁ
;

669 
vcﬁ
;

670 
row
;

671 
s¸ìn_row
;

672 
ch¨_u
 *
±r
;

673 
ch¨_u
 
exåa
[16];

674 
ch¨_u
 *
p_exåa
;

675 
ch¨_u
 *
showbªak
 = 
NULL
;

676 
n_exåa
;

677 
n_•a˚s
 = 0;

679 
‰omcﬁ
, 
tocﬁ
;

680 
noövcur
 = 
FALSE
;

681 
FPOS
 *
t›
, *
bŸ
;

683 i‡(
°¨åow
 > 
ídrow
)

684  
°¨åow
;

686 
row
 = 
°¨åow
;

687 
s¸ìn_row
 = 
row
 + 
wp
->
w_wöpos
;

688 
cﬁ
 = 0;

689 
vcﬁ
 = 0;

690 
‰omcﬁ
 = -10;

691 
tocﬁ
 = 
MAXCOL
;

692 
ˇn›t
 = 
TRUE
;

697 i‡(
VIsuÆ_a˘ive
 && 
wp
->
w_buf„r
 =
curwö
->w_buffer)

700 i‡(
	`…‹eq
(
curwö
->
w_curs‹
, 
VIsuÆ
))

702 
t›
 = &
curwö
->
w_curs‹
;

703 
bŸ
 = &
VIsuÆ
;

707 
t›
 = &
VIsuÆ
;

708 
bŸ
 = &
curwö
->
w_curs‹
;

710 i‡(
VIsuÆ_mode
 =
	`Cål
('V'))

712 i‡(
 um
 >
t›
-> um &&Ünum <
bŸ
->lnum)

714 
cﬁƒ_t
 
‰om
, 
to
;

716 
	`gëvcﬁ
(
wp
, 
t›
, (
cﬁƒ_t
 *)&
‰omcﬁ
, 
NULL
, (cﬁƒ_à*)&
tocﬁ
);

717 
	`gëvcﬁ
(
wp
, 
bŸ
, &
‰om
, 
NULL
, &
to
);

718 i‡(()
‰om
 < 
‰omcﬁ
)

719 
‰omcﬁ
 = 
‰om
;

720 i‡(()
to
 > 
tocﬁ
)

721 
tocﬁ
 = 
to
;

722 ++
tocﬁ
;

724 i‡(
wp
->
w_cursw™t
 =
MAXCOL
)

725 
tocﬁ
 = 
MAXCOL
;

730 i‡(
 um
 > 
t›
-> um &&Ünum <
bŸ
->lnum)

731 
‰omcﬁ
 = 0;

732 i‡(
 um
 =
t›
->lnum)

733 
	`gëvcﬁ
(
wp
, 
t›
, (
cﬁƒ_t
 *)&
‰omcﬁ
, 
NULL
, NULL);

734 i‡(
 um
 =
bŸ
->lnum)

736 
	`gëvcﬁ
(
wp
, 
bŸ
, 
NULL
, NULL, (
cﬁƒ_t
 *)&
tocﬁ
);

737 ++
tocﬁ
;

740 i‡(
VIsuÆ_mode
 == 'V')

742 i‡(
‰omcﬁ
 > 0)

743 
‰omcﬁ
 = 0;

744 
tocﬁ
 = 
MAXCOL
;

749 #i‚de‡
MSDOS


750 i‡(!
highlight_m©ch
 && *
T_VI
 =
NUL
 &&

751 
 um
 =
curwö
->
w_curs‹
. um && 
wp
 == curwin)

752 
noövcur
 = 
TRUE
;

755 i‡(
tocﬁ
 <()
wp
->
w_À·cﬁ
)

756 
‰omcﬁ
 = 0;

758 i‡(
‰omcﬁ
 >0 && fromcﬁ < ()
wp
->
w_À·cﬁ
)

759 
‰omcﬁ
 = 
wp
->
w_À·cﬁ
;

762 i‡(
‰omcﬁ
 >= 0)

763 
ˇn›t
 = 
FALSE
;

768 i‡(
highlight_m©ch
 && 
wp
 =
curwö
 && 
£¨ch_m©ch_Àn
)

770 i‡(
 um
 =
curwö
->
w_curs‹
.lnum)

772 
	`gëvcﬁ
(
curwö
, &(curwö->
w_curs‹
),

773 (
cﬁƒ_t
 *)&
‰omcﬁ
, 
NULL
, NULL);

774 
curwö
->
w_curs‹
.
cﬁ
 +
£¨ch_m©ch_Àn
;

775 
	`gëvcﬁ
(
curwö
, &(curwö->
w_curs‹
),

776 (
cﬁƒ_t
 *)&
tocﬁ
, 
NULL
, NULL);

777 
curwö
->
w_curs‹
.
cﬁ
 -
£¨ch_m©ch_Àn
;

778 
ˇn›t
 = 
FALSE
;

779 i‡(
‰omcﬁ
 =
tocﬁ
)

780 
tocﬁ
 = 
‰omcﬁ
 + 1;

784 
±r
 = 
	`ml_gë_buf
(
wp
->
w_buf„r
, 
 um
, 
FALSE
);

785 i‡(!
wp
->
w_p_wøp
)

787 (
cﬁƒ_t
)
vcﬁ
 < 
wp
->
w_À·cﬁ
 && *
±r
)

788 
vcﬁ
 +
	`wö_ch¨èbsize
(
wp
, *
±r
++, (
cﬁƒ_t
)vcol);

789 i‡((
cﬁƒ_t
)
vcﬁ
 > 
wp
->
w_À·cﬁ
)

791 
n_•a˚s
 = 
vcﬁ
 - 
wp
->
w_À·cﬁ
;

792 
vcﬁ
 = 
wp
->
w_À·cﬁ
;

795 
s¸ì≈
 = 
LöePoöãrs
[
s¸ìn_row
];

796 #ifde‡
RIGHTLEFT


797 i‡(
wp
->
w_p_æ
)

799 
cﬁ
 = 
Cﬁumns
 - 1;

800 
s¸ì≈
 +
Cﬁumns
 - 1;

803 i‡(
wp
->
w_p_nu
)

805 #ifde‡
RIGHTLEFT


806 i‡(
wp
->
w_p_æ
)

808 
ch¨_u
 *
c1
, *
c2
, 
t
;

810 
	`•rötf
((*)
exåa
, " %-7ld", ()
 um
);

811 
c1
 = 
exåa
, 
c2
 =Éxå®+ 
	`STRLEN
(extra) - 1; c1 < c2;

812 
c1
++, 
c2
--)

814 
t
 = *
c1
;

815 *
c1
 = *
c2
;

816 *
c2
 = 
t
;

821 
	`•rötf
((*)
exåa
, "%7ld ", ()
 um
);

822 
p_exåa
 = 
exåa
;

823 
n_exåa
 = 8;

824 
vcﬁ
 -= 8;

828 
p_exåa
 = 
NULL
;

829 
n_exåa
 = 0;

833 i‡(!
ˇn›t
)

835 i‡(((
vcﬁ
 =
‰omcﬁ
 && !(
noövcur
 &&

836 (
cﬁƒ_t
)
vcﬁ
 =
wp
->
w_vútcﬁ
)) ||

837 (
noövcur
 && (
cﬁƒ_t
)
vcﬁ
 =
wp
->
w_vútcﬁ
 + 1 &&

838 
vcﬁ
 >
‰omcﬁ
)Ë&& vcﬁ < 
tocﬁ
)

839 
	`°¨t_highlight
();

840 i‡(
©åibuãs
 && (
vcﬁ
 =
tocﬁ
 ||

841 (
noövcur
 && (
cﬁƒ_t
)
vcﬁ
 =
wp
->
w_vútcﬁ
)))

842 
	`°›_highlight
();

852 #ifde‡
RIGHTLEFT


853 (
wp
->
w_p_æ
 ? 
cﬁ
 =-1 : cﬁ =
Cﬁumns
)

855 
cﬁ
 =
Cﬁumns


857 && (*
±r
 !
NUL
 || (
wp
->
w_p_li°
 && 
n_exåa
 == 0) ||

858 (
n_exåa
 && *
p_exåa
Ë|| 
n_•a˚s
) &&

859 
vcﬁ
 !0 && 
	`STRLEN
(
p_sbr
) != 0)

860 
showbªak
 = 
p_sbr
;

861 i‡(
showbªak
 !
NULL
)

863 
c
 = *
showbªak
++;

864 i‡(*
showbªak
 =
NUL
)

865 
showbªak
 = 
NULL
;

871 i‡(
n_exåa
)

873 
c
 = *
p_exåa
++;

874 
n_exåa
--;

876 i‡(
n_•a˚s
)

878 
c
 = ' ';

879 
n_•a˚s
--;

883 
c
 = *
±r
++;

887 i‡(
wp
->
w_p_lbr
 && 
	`isbªak
(
c
Ë&& !isbªak(*
±r
Ë&& !wp->
w_p_li°
)

889 
n_•a˚s
 = 
	`wö_lbr_ch¨èbsize
(
wp
, 
±r
 - 1,

890 (
cﬁƒ_t
)
vcﬁ
, 
NULL
) - 1;

891 i‡(
	`vim_iswhôe
(
c
))

892 
c
 = ' ';

894 i‡(!
	`i•rötch¨
(
c
))

901 i‡(
c
 =
TAB
 && !
wp
->
w_p_li°
)

904 
n_•a˚s
 = ()
wp
->
w_buf„r
->
b_p_ts
 -

905 
vcﬁ
 % ()
wp
->
w_buf„r
->
b_p_ts
 - 1;

906 
c
 = ' ';

908 i‡(
c
 =
NUL
 && 
wp
->
w_p_li°
)

910 
p_exåa
 = (
ch¨_u
 *)"";

911 
n_exåa
 = 1;

912 
c
 = '$';

913 --
±r
;

915 i‡(
c
 !
NUL
)

917 
p_exåa
 = 
	`å™sch¨
(
c
);

918 
n_exåa
 = 
	`ch¨size
(
c
) - 1;

919 
c
 = *
p_exåa
++;

924 i‡(
c
 =
NUL
)

926 i‡(
©åibuãs
)

931 i‡(
vcﬁ
 =
‰omcﬁ
)

933 #ifde‡
RIGHTLEFT


934 i‡(
wp
->
w_p_æ
)

936 i‡(
cﬁ
 < 0)

938 ++
s¸ì≈
;

939 ++
cﬁ
;

945 i‡(
cﬁ
 >
Cﬁumns
)

947 --
s¸ì≈
;

948 --
cﬁ
;

951 i‡(*
s¸ì≈
 !' ' || *(s¸ì≈ + 
Cﬁumns
Ë!
©åibuãs
)

953 *
s¸ì≈
 = ' ';

954 *(
s¸ì≈
 + 
Cﬁumns
Ë
©åibuãs
;

955 
	`s¸ìn_ch¨
(
s¸ì≈
, 
s¸ìn_row
, 
cﬁ
);

957 #ifde‡
RIGHTLEFT


958 i‡(
wp
->
w_p_æ
)

960 --
s¸ì≈
;

961 --
cﬁ
;

966 ++
s¸ì≈
;

967 ++
cﬁ
;

970 
	`°›_highlight
();

975 #ifde‡
RIGHTLEFT


976 i‡(
wp
->
w_p_æ
)

978 
cﬁ
 >0 && *
s¸ì≈
 == ' ' &&

979 *(
s¸ì≈
 + 
Cﬁumns
) == 0)

981 --
s¸ì≈
;

982 --
cﬁ
;

984 i‡(
cﬁ
 >= 0)

985 
	`s¸ìn_fûl
(
s¸ìn_row
, screen_row + 1,

986 0, 
cﬁ
 + 1, ' ', ' ');

991 
cﬁ
 < 
Cﬁumns
 && *
s¸ì≈
 == ' ' &&

992 *(
s¸ì≈
 + 
Cﬁumns
) == 0)

994 ++
s¸ì≈
;

995 ++
cﬁ
;

997 i‡(
cﬁ
 < 
Cﬁumns
)

998 
	`s¸ìn_fûl
(
s¸ìn_row
, screen_row + 1,

999 
cﬁ
, ()
Cﬁumns
, ' ', ' ');

1001 
row
++;

1005 #ifde‡
RIGHTLEFT


1006 
wp
->
w_p_æ
 ? (
cﬁ
 < 0) :

1008 (
cﬁ
 >
Cﬁumns
)

1011 
cﬁ
 = 0;

1012 ++
row
;

1013 ++
s¸ìn_row
;

1014 i‡(!
wp
->
w_p_wøp
)

1016 i‡(
row
 =
ídrow
)

1018 ++
row
;

1021 
s¸ì≈
 = 
LöePoöãrs
[
s¸ìn_row
];

1022 #ifde‡
RIGHTLEFT


1023 i‡(
wp
->
w_p_æ
)

1025 
cﬁ
 = 
Cﬁumns
 - 1;

1026 
s¸ì≈
 +
Cﬁumns
 - 1;

1034 i‡(*
s¸ì≈
 !
c
 || *(s¸ì≈ + 
Cﬁumns
Ë!
©åibuãs
)

1044 i‡(
p_tf
 && 
row
 > 
°¨åow
 && 
cﬁ
 == 0 &&

1045 
LöePoöãrs
[
s¸ìn_row
 - 1][
Cﬁumns
 - 1 + Columns] ==

1046 
©åibuãs
)

1048 i‡(
s¸ìn_cur_row
 !
s¸ìn_row
 - 1 ||

1049 
s¸ìn_cur_cﬁ
 !
Cﬁumns
)

1050 
	`s¸ìn_ch¨
(
LöePoöãrs
[
s¸ìn_row
 - 1] + 
Cﬁumns
 - 1,

1051 
s¸ìn_row
 - 1, ()(
Cﬁumns
 - 1));

1052 
	`s¸ìn_ch¨
(
LöePoöãrs
[
s¸ìn_row
 - 1] + 
Cﬁumns
 - 1,

1053 
s¸ìn_row
 - 1, ()
Cﬁumns
);

1054 
	`s¸ìn_°¨t
();

1057 *
s¸ì≈
 = 
c
;

1058 *(
s¸ì≈
 + 
Cﬁumns
Ë
©åibuãs
;

1059 
	`s¸ìn_ch¨
(
s¸ì≈
, 
s¸ìn_row
, 
cﬁ
);

1061 #ifde‡
RIGHTLEFT


1062 i‡(
wp
->
w_p_æ
)

1064 --
s¸ì≈
;

1065 --
cﬁ
;

1070 ++
s¸ì≈
;

1071 ++
cﬁ
;

1073 ++
vcﬁ
;

1075 i‡(
wp
 =
curwö
 && 
dﬁœr_vcﬁ
 && 
vcﬁ
 >()wp->
w_vútcﬁ
)

1079 
	`°›_highlight
();

1080  (
row
);

1081 
	}
}

1088 
	$di•œy_dﬁœr
(
cﬁ
)

1089 
cﬁƒ_t
 
cﬁ
;

1091 
cﬁƒ_t
 
ßve_cﬁ
;

1093 i‡(
RedøwögDißbÀd
)

1096 
	`curs‹_off
();

1097 
ßve_cﬁ
 = 
curwö
->
w_curs‹
.
cﬁ
;

1098 
curwö
->
w_curs‹
.
cﬁ
 = col;

1099 
	`curs_cﬁumns
(
FALSE
);

1100 i‡(!
curwö
->
w_p_wøp
)

1101 
curwö
->
w_cﬁ
 -curwö->
w_À·cﬁ
;

1102 i‡(
curwö
->
w_cﬁ
 < 
Cﬁumns
)

1104 
	`s¸ìn_msg
((
ch¨_u
 *)"$", 
curwö
->
w_wöpos
 + curwö->
w_row
,

1105 #ifde‡
RIGHTLEFT


1106 
curwö
->
w_p_æ
 ? ()
Cﬁumns
 - 1 - curwö->
w_cﬁ
 :

1108 
curwö
->
w_cﬁ
);

1109 
dﬁœr_vcﬁ
 = 
curwö
->
w_vútcﬁ
;

1111 
curwö
->
w_curs‹
.
cﬁ
 = 
ßve_cﬁ
;

1112 
	}
}

1119 
	$undi•œy_dﬁœr
()

1121 i‡(
dﬁœr_vcﬁ
)

1123 
dﬁœr_vcﬁ
 = 0;

1124 
	`upd©ñöe
();

1126 
	}
}

1133 
	$s¸ìn_outch¨
(
c
, 
row
, 
cﬁ
)

1134 
c
;

1135 
row
, 
cﬁ
;

1137 
ch¨_u
 
buf
[2];

1139 
buf
[0] = 
c
;

1140 
buf
[1] = 
NUL
;

1141 
	`s¸ìn_msg
(
buf
, 
row
, 
cﬁ
);

1142 
	}
}

1151 
	$s¸ìn_msg
(
ãxt
, 
row
, 
cﬁ
)

1152 
ch¨_u
 *
ãxt
;

1153 
row
;

1154 
cﬁ
;

1156 
ch¨_u
 *
s¸ì≈
;

1158 i‡(
NextS¸ìn
 !
NULL
 && 
row
 < 
Rows
)

1160 
s¸ì≈
 = 
LöePoöãrs
[
row
] + 
cﬁ
;

1161 *
ãxt
 && 
cﬁ
 < 
Cﬁumns
)

1163 i‡(*
s¸ì≈
 !*
ãxt
 || *(s¸ì≈ + 
Cﬁumns
Ë!
©åibuãs
)

1165 *
s¸ì≈
 = *
ãxt
;

1166 *(
s¸ì≈
 + 
Cﬁumns
Ë
©åibuãs
;

1167 
	`s¸ìn_ch¨
(
s¸ì≈
, 
row
, 
cﬁ
);

1169 ++
s¸ì≈
;

1170 ++
cﬁ
;

1171 ++
ãxt
;

1174 
	}
}

1182 
	$s¸ìn_°¨t
()

1184 
s¸ìn_cur_row
 = 
s¸ìn_cur_cﬁ
 = 9999;

1185 
	}
}

1193 
	$£t_highlight
(
c⁄ãxt
)

1194 
c⁄ãxt
;

1196 
i
;

1197 
mode
;

1198 
ch¨_u
 *
p
;

1205 
mode
 = 'r';

1206 
i
 = 0; i < 2; ++i)

1208 i‡(
i
)

1209 
p
 = 
	`gë_highlight_deÁu…
();

1211 
p
 = 
p_hl
;

1212 i‡(
p
 =
NULL
)

1215 *
p
)

1217 i‡(*
p
 =
c⁄ãxt
)

1219 *
p
 && *p != ',')

1220 ++
p
;

1221 
p
 = 
	`skù_to_›ti⁄_∑π
(p);

1223 i‡(
p
[0] &&Ö[1])

1225 
mode
 = 
p
[1];

1230 
mode
)

1232 'b': 
highlight
 = 
T_MD
;

1233 
unhighlight
 = 
T_ME
;

1234 
highlight_©å
 = 
CHAR_BOLD
;

1236 's': 
highlight
 = 
T_SO
;

1237 
unhighlight
 = 
T_SE
;

1238 
highlight_©å
 = 
CHAR_STDOUT
;

1240 'n': 
highlight
 = 
NULL
;

1241 
unhighlight
 = 
NULL
;

1242 
highlight_©å
 = 0;

1244 'u': 
highlight
 = 
T_US
;

1245 
unhighlight
 = 
T_UE
;

1246 
highlight_©å
 = 
CHAR_UNDERL
;

1248 'i': 
highlight
 = 
T_CZH
;

1249 
unhighlight
 = 
T_CZR
;

1250 
highlight_©å
 = 
CHAR_ITALIC
;

1252 : 
highlight
 = 
T_MR
;

1253 
unhighlight
 = 
T_ME
;

1254 
highlight_©å
 = 
CHAR_INVERT
;

1257 i‡(
highlight
 =
NULL
 || *highlighà=
NUL
 ||

1258 
unhighlight
 =
NULL
 || *unhighlighà=
NUL
)

1260 
highlight
 = 
NULL
;

1261  
FAIL
;

1263  
OK
;

1264 
	}
}

1267 
	$°¨t_highlight
()

1269 i‡(
fuŒ_s¸ìn
 &&

1270 #ifde‡
WIN32


1271 
ãrmˇp_a˘ive
 &&

1273 
highlight
 !
NULL
)

1275 
	`out°r
(
highlight
);

1276 
©åibuãs
 = 
highlight_©å
;

1278 
	}
}

1281 
	$°›_highlight
()

1283 i‡(
©åibuãs
)

1285 
	`out°r
(
unhighlight
);

1286 
©åibuãs
 = 0;

1288 
	}
}

1295 
ch¨_u
 *
	gﬁd_highlight
 = 
NULL
;

1296 
ch¨_u
 *
	gﬁd_unhighlight
 = 
NULL
;

1297 
	gﬁd_highlight_©å
 = 0;

1300 
	$ªmembî_highlight
()

1302 
ﬁd_highlight
 = 
highlight
;

1303 
ﬁd_unhighlight
 = 
unhighlight
;

1304 
ﬁd_highlight_©å
 = 
highlight_©å
;

1305 
	}
}

1308 
	$ªcovî_ﬁd_highlight
()

1310 
highlight
 = 
ﬁd_highlight
;

1311 
unhighlight
 = 
ﬁd_unhighlight
;

1312 
highlight_©å
 = 
ﬁd_highlight_©å
;

1313 
	}
}

1319 
	$s¸ìn_ch¨
(
p
, 
row
, 
cﬁ
)

1320 
ch¨_u
 *
p
;

1321 
row
;

1322 
cﬁ
;

1324 
c
;

1325 
noövcurs
;

1331 i‡(
cﬁ
 =
Cﬁumns
 - 1 && 
row
 =
Rows
 - 1)

1333 i‡(
s¸ìn_cur_cﬁ
 !
cﬁ
 || 
s¸ìn_cur_row
 !
row
)

1336 i‡(
©åibuãs
 && !
p_wiv
 && *
T_MS
 =
NUL
)

1337 
noövcurs
 = 7;

1339 
noövcurs
 = 0;

1349 i‡(
s¸ìn_cur_row
 =
row
 && 
s¸ìn_cur_cﬁ
 < 
cﬁ
)

1351 
i
;

1353 
i
 = 
cﬁ
 - 
s¸ìn_cur_cﬁ
;

1354 i‡(
i
 <4 + 
noövcurs
)

1358 
i
 && *(
p
 - i + 
Cﬁumns
Ë=
©åibuãs
)

1360 
c
 = *(
p
 - 
i
--);

1361 
	`outch¨
(
c
);

1364 i‡(
i
)

1366 i‡(
noövcurs
)

1367 
	`°›_highlight
();

1369 i‡(*
T_CRI
 !
NUL
)

1370 
	`OUTSTR
(
	`tgŸo
((*)
T_CRI
, 0, 
i
));

1372 
	`wödgŸo
(
row
, 
cﬁ
);

1374 i‡(
noövcurs
)

1375 
	`°¨t_highlight
();

1384 i‡(
s¸ìn_cur_row
 + 1 =
row
 && 
cﬁ
 == 0 &&

1385 
s¸ìn_cur_cﬁ
 < 
Cﬁumns
)

1387 i‡(
noövcurs
)

1388 
	`°›_highlight
();

1389 
	`outch¨
('\n');

1390 i‡(
noövcurs
)

1391 
	`°¨t_highlight
();

1395 i‡(
noövcurs
)

1396 
	`°›_highlight
();

1397 
	`wödgŸo
(
row
, 
cﬁ
);

1398 i‡(
noövcurs
)

1399 
	`°¨t_highlight
();

1401 
s¸ìn_cur_row
 = 
row
;

1402 
s¸ìn_cur_cﬁ
 = 
cﬁ
;

1409 i‡(
p_wiv
)

1411 i‡(
©åibuãs
)

1412 
	`out°r
(
highlight
);

1413 i‡(
fuŒ_s¸ìn
)

1414 
	`out°r
(
unhighlight
);

1416 
	`outch¨
(*
p
);

1417 
s¸ìn_cur_cﬁ
++;

1418 
	}
}

1425 
	$s¸ìn_fûl
(
°¨t_row
, 
íd_row
, 
°¨t_cﬁ
, 
íd_cﬁ
, 
c1
, 
c2
)

1426 
°¨t_row
, 
íd_row
;

1427 
°¨t_cﬁ
, 
íd_cﬁ
;

1428 
c1
, 
c2
;

1430 
row
;

1431 
cﬁ
;

1432 
ch¨_u
 *
s¸ì≈
;

1433 
ch¨_u
 *
©åp
;

1434 
did_dñëe
;

1435 
c
;

1437 i‡(
íd_row
 > 
Rows
)

1438 
íd_row
 = 
Rows
;

1439 i‡(
íd_cﬁ
 > 
Cﬁumns
)

1440 
íd_cﬁ
 = 
Cﬁumns
;

1441 i‡(
NextS¸ìn
 =
NULL
 ||

1442 
°¨t_row
 >
íd_row
 || 
°¨t_cﬁ
 >
íd_cﬁ
)

1445 
row
 = 
°¨t_row
;Ñow < 
íd_row
; ++row)

1448 
did_dñëe
 = 
FALSE
;

1449 i‡(
©åibuãs
 =0 && 
c2
 =' ' && 
íd_cﬁ
 =
Cﬁumns
 && *
T_CE
 !
NUL


1450 #ifde‡
RIGHTLEFT


1451 && !
righée·


1458 
cﬁ
 = 
°¨t_cﬁ
;

1459 
s¸ì≈
 = 
LöePoöãrs
[
row
] + 
°¨t_cﬁ
;

1460 i‡(
c1
 != ' ')

1462 ++
cﬁ
;

1463 ++
s¸ì≈
;

1467 
©åp
 = 
s¸ì≈
 + 
Cﬁumns
;

1468 
cﬁ
 < 
íd_cﬁ
 && *
s¸ì≈
 =' ' && *
©åp
 == 0)

1470 ++
cﬁ
;

1471 ++
s¸ì≈
;

1472 ++
©åp
;

1474 i‡(
cﬁ
 < 
íd_cﬁ
)

1476 
	`wödgŸo
(
row
, 
cﬁ
);

1477 
	`out°r
(
T_CE
);

1478 
	`s¸ìn_°¨t
();

1479 
cﬁ
 = 
íd_cﬁ
 - col;

1480 
cﬁ
--)

1482 *
©åp
++ = 0;

1483 *
s¸ì≈
++ = ' ';

1486 
did_dñëe
 = 
TRUE
;

1489 
s¸ì≈
 = 
LöePoöãrs
[
row
] +

1490 #ifde‡
RIGHTLEFT


1491 (
righée·
 ? ()
Cﬁumns
 - 1 - 
°¨t_cﬁ
 : start_col);

1493 
°¨t_cﬁ
;

1495 
c
 = 
c1
;

1496 
cﬁ
 = 
°¨t_cﬁ
; cﬁ < 
íd_cﬁ
; ++col)

1498 i‡(*
s¸ì≈
 !
c
 || *(s¸ì≈ + 
Cﬁumns
Ë!
©åibuãs
)

1500 *
s¸ì≈
 = 
c
;

1501 *(
s¸ì≈
 + 
Cﬁumns
Ë
©åibuãs
;

1502 i‡(!
did_dñëe
 || 
c
 != ' ')

1503 
	`s¸ìn_ch¨
(
s¸ì≈
, 
row
,

1504 #ifde‡
RIGHTLEFT


1505 
righée·
 ? 
Cﬁumns
 - 1 - 
cﬁ
 :

1507 
cﬁ
);

1509 #ifde‡
RIGHTLEFT


1510 i‡(
righée·
)

1511 --
s¸ì≈
;

1514 ++
s¸ì≈
;

1515 i‡(
cﬁ
 =
°¨t_cﬁ
)

1517 i‡(
did_dñëe
)

1519 
c
 = 
c2
;

1522 i‡(
row
 =
Rows
 - 1)

1524 
ªdøw_cmdlöe
 = 
TRUE
;

1525 i‡(
c1
 =' ' && 
c2
 == ' ')

1526 
˛ór_cmdlöe
 = 
FALSE
;

1529 
	}
}

1535 
	$comp_BŸlöe_Æl
()

1537 
WIN
 *
wp
;

1539 
wp
 = 
fú°wö
; wp; w∞wp->
w_√xt
)

1540 
	`comp_BŸlöe
(
wp
);

1541 
	}
}

1547 
	$comp_BŸlöe
(
wp
)

1548 
WIN
 *
wp
;

1550 
	`comp_BŸlöe_sub
(
wp
, wp->
w_t›löe
, 0);

1551 
	}
}

1558 
	$comp_BŸlöe_sub
(
wp
, 
 um
, 
d⁄e
)

1559 
WIN
 *
wp
;

1560 
löír_t
 
 um
;

1561 
d⁄e
;

1563 
n
;

1565  ; 
 um
 <
wp
->
w_buf„r
->
b_ml
.
ml_löe_cou¡
; ++lnum)

1567 
n
 = 
	`∂öes_wö
(
wp
, 
 um
);

1568 i‡(
d⁄e
 + 
n
 > 
wp
->
w_height
)

1570 
d⁄e
 +
n
;

1574 
wp
->
w_bŸlöe
 = 
 um
;

1577 i‡(
d⁄e
 == 0)

1578 
wp
->
w_em±y_rows
 = 0;

1580 
wp
->
w_em±y_rows
 = wp->
w_height
 - 
d⁄e
;

1581 
	}
}

1584 
	$s¸ì«Œoc
(
˛ór
)

1585 
˛ór
;

1587 
√w_row
, 
ﬁd_row
;

1588 
WIN
 *
wp
;

1589 
outofmem
 = 
FALSE
;

1590 
Àn
;

1591 
ch¨_u
 *
√w_NextS¸ìn
;

1592 
ch¨_u
 **
√w_LöePoöãrs
;

1599 i‡((
NextS¸ìn
 !
NULL
 && 
Rows
 =
s¸ìn_Rows
 && 
Cﬁumns
 =
s¸ìn_Cﬁumns
)

1600 || 
Rows
 =0 || 
Cﬁumns
 =0 || !
fuŒ_s¸ìn
)

1603 
	`comp_cﬁ
();

1612 
wp
 = 
fú°wö
; wp; w∞wp->
w_√xt
)

1613 
	`wö_‰ì_lsize
(
wp
);

1615 
√w_NextS¸ìn
 = (
ch¨_u
 *)
	`mÆloc
((
size_t
Ë(
Rows
 * 
Cﬁumns
 * 2));

1616 
√w_LöePoöãrs
 = (
ch¨_u
 **)
	`mÆloc
((ch¨_u *Ë* 
Rows
);

1618 
wp
 = 
fú°wö
; wp; w∞wp->
w_√xt
)

1620 i‡(
	`wö_Æloc_lsize
(
wp
Ë=
FAIL
)

1622 
outofmem
 = 
TRUE
;

1627 i‡(
√w_NextS¸ìn
 =
NULL
 || 
√w_LöePoöãrs
 =NULL || 
outofmem
)

1629 
	`do_outofmem_msg
();

1630 
	`vim_‰ì
(
√w_NextS¸ìn
);

1631 
√w_NextS¸ìn
 = 
NULL
;

1635 
√w_row
 = 0;Çew_row < 
Rows
; ++new_row)

1637 
√w_LöePoöãrs
[
√w_row
] = 
√w_NextS¸ìn
 +Çew_row * 
Cﬁumns
 * 2;

1645 i‡(!
˛ór
)

1647 
	`löe˛ór
(
√w_LöePoöãrs
[
√w_row
]);

1648 
ﬁd_row
 = 
√w_row
 + (
s¸ìn_Rows
 - 
Rows
);

1649 i‡(
ﬁd_row
 >= 0)

1651 i‡(
s¸ìn_Cﬁumns
 < 
Cﬁumns
)

1652 
Àn
 = 
s¸ìn_Cﬁumns
;

1654 
Àn
 = 
Cﬁumns
;

1655 
	`vim_memmove
(
√w_LöePoöãrs
[
√w_row
],

1656 
LöePoöãrs
[
ﬁd_row
], (
size_t
)
Àn
);

1657 
	`vim_memmove
(
√w_LöePoöãrs
[
√w_row
] + 
Cﬁumns
,

1658 
LöePoöãrs
[
ﬁd_row
] + 
s¸ìn_Cﬁumns
, (
size_t
)
Àn
);

1664 
	`vim_‰ì
(
NextS¸ìn
);

1665 
	`vim_‰ì
(
LöePoöãrs
);

1666 
NextS¸ìn
 = 
√w_NextS¸ìn
;

1667 
LöePoöãrs
 = 
√w_LöePoöãrs
;

1669 
mu°_ªdøw
 = 
CLEAR
;

1670 i‡(
˛ór
)

1671 
	`s¸ìn˛ór2
();

1673 #ifde‡
USE_GUI


1674 i‡(
gui
.
ö_u£
 && 
NextS¸ìn
 !
NULL
 && 
Rows
 !
s¸ìn_Rows
)

1675 
	`gui_ªdøw_block
(0, 0, 
Rows
 - 1, 
Cﬁumns
 - 1);

1678 
s¸ìn_Rows
 = 
Rows
;

1679 
s¸ìn_Cﬁumns
 = 
Cﬁumns
;

1680 
	}
}

1683 
	$s¸ìn˛ór
()

1685 i‡(
emsg_⁄_di•œy
)

1687 
	`mch_dñay
(1000L, 
TRUE
);

1688 
emsg_⁄_di•œy
 = 
FALSE
;

1690 
	`s¸ì«Œoc
(
FALSE
);

1691 
	`s¸ìn˛ór2
();

1692 
	}
}

1695 
	$s¸ìn˛ór2
()

1697 
i
;

1699 i‡(
°¨tög
 || 
NextS¸ìn
 =
NULL
)

1702 
	`out°r
(
T_CL
);

1705 
i
 = 0; i < 
Rows
; ++i)

1706 
	`löe˛ór
(
LöePoöãrs
[
i
]);

1708 
s¸ìn_˛óªd
 = 
TRUE
;

1710 
	`wö_ª°_övÆid
(
fú°wö
);

1711 
˛ór_cmdlöe
 = 
FALSE
;

1712 
ªdøw_cmdlöe
 = 
TRUE
;

1713 i‡(
mu°_ªdøw
 =
CLEAR
)

1714 
mu°_ªdøw
 = 
NOT_VALID
;

1715 
	`compuã_cmdrow
();

1716 
	`msg_pos
(()
Rows
 - 1, 0);

1717 
	`s¸ìn_°¨t
();

1718 
msg_s¸ﬁÀd
 = 0;

1719 
msg_did™y
 = 
FALSE
;

1720 
msg_didout
 = 
FALSE
;

1721 
	}
}

1727 
	$löe˛ór
(
p
)

1728 
ch¨_u
 *
p
;

1730 ()
	`vim_mem£t
(
p
, ' ', (
size_t
)
Cﬁumns
);

1731 ()
	`vim_mem£t
(
p
 + 
Cﬁumns
, 0, (
size_t
)Columns);

1732 
	}
}

1738 
	$check_curs‹
()

1740 i‡(
curwö
->
w_curs‹
.
 um
 > 
curbuf
->
b_ml
.
ml_löe_cou¡
)

1741 
curwö
->
w_curs‹
.
 um
 = 
curbuf
->
b_ml
.
ml_löe_cou¡
;

1742 i‡(
curwö
->
w_curs‹
.
 um
 <= 0)

1743 
curwö
->
w_curs‹
.
 um
 = 1;

1744 
	}
}

1747 
	$cursupd©e
()

1749 
löír_t
 
 um
;

1750 
löe_cou¡
;

1751 
¶öe
;

1752 
d⁄e
;

1753 
ãmp
;

1755 i‡(!
	`s¸ìn_vÆid
(
TRUE
))

1761 
	`check_curs‹
();

1766 i‡(
	`bu„m±y
())

1768 
curwö
->
w_t›löe
 = 1;

1769 
curwö
->
w_curs‹
.
 um
 = 1;

1770 
curwö
->
w_curs‹
.
cﬁ
 = 0;

1771 
curwö
->
w_lsize
[0] = 0;

1772 i‡(
curwö
->
w_lsize_vÆid
 == 0)

1773 
	`upd©eS¸ìn
(
NOT_VALID
);

1774 
curwö
->
w_lsize_vÆid
 = 1;

1783 i‡(
curwö
->
w_curs‹
.
 um
 < curwö->
w_t›löe
 + 
p_so
 &&

1784 
curwö
->
w_t›löe
 > 1)

1786 
ãmp
 = 
curwö
->
w_height
 / 2 - 1;

1787 i‡(
ãmp
 < 2)

1788 
ãmp
 = 2;

1790 i‡(
curwö
->
w_t›löe
 + 
p_so
 - curwö->
w_curs‹
.
 um
 >
ãmp
)

1791 
	`s¸ﬁl_curs‹_hÆfway
(
FALSE
);

1793 
	`s¸ﬁl_curs‹_t›
(()
p_sj
, 
FALSE
);

1794 
	`upd©eS¸ìn
(
VALID
);

1805 i‡(()
curwö
->
w_curs‹
.
 um
 >()curwö->
w_bŸlöe
 - 
p_so
 &&

1806 
curwö
->
w_bŸlöe
 <
curbuf
->
b_ml
.
ml_löe_cou¡
)

1808 
löe_cou¡
 = 
curwö
->
w_curs‹
.
 um
 - curwö->
w_bŸlöe
 + 1 + 
p_so
;

1809 i‡(
löe_cou¡
 <
curwö
->
w_height
 + 1)

1810 
	`s¸ﬁl_curs‹_bŸ
(()
p_sj
, 
FALSE
);

1812 
	`s¸ﬁl_curs‹_hÆfway
(
FALSE
);

1813 
	`upd©eS¸ìn
(
VALID
);

1819 i‡(
curwö
->
w_lsize_vÆid
 == 0)

1820 
	`upd©eS¸ìn
(
NOT_VALID
);

1826 
curwö
->
w_row
 = 
¶öe
 = 0;

1828 i‡(
RedøwögDißbÀd
 || 
curwö
->
w_lsize_vÆid
 == 0)

1830 
d⁄e
 = 0;

1831 
 um
 = 
curwö
->
w_t›löe
;Ünum !curwö->
w_curs‹
.lnum; ++lnum)

1832 
d⁄e
 +
	`∂öes
(
 um
);

1833 
curwö
->
w_row
 = 
d⁄e
;

1839 
	`comp_BŸlöe_sub
(
curwö
, 
 um
, 
d⁄e
);

1843 
d⁄e
 = 
curwö
->
w_curs‹
.
 um
 - curwö->
w_t›löe
; done > 0; --done)

1844 
curwö
->
w_row
 +curwö->
w_lsize
[
¶öe
++];

1847 
curwö
->
w_˛öe_row
 = curwö->
w_row
;

1848 
curwö
->
w_cﬁ
 = curwö->
w_vútcﬁ
 = 0;

1849 i‡(!
RedøwögDißbÀd
 && 
¶öe
 > 
curwö
->
w_lsize_vÆid
)

1852 
curwö
->
w_˛öe_height
 = 0;

1856 i‡(
RedøwögDißbÀd
 || 
curwö
->
w_lsize_vÆid
 == 0)

1857 
curwö
->
w_˛öe_height
 = 
	`∂öes
(curwö->
w_curs‹
.
 um
);

1859 
curwö
->
w_˛öe_height
 = curwö->
w_lsize
[
¶öe
];

1861 
	`curs_cﬁumns
(!
RedøwögDißbÀd
);

1862 i‡(
mu°_ªdøw
)

1863 
	`upd©eS¸ìn
(
mu°_ªdøw
);

1866 i‡(
curwö
->
w_£t_cursw™t
)

1868 
curwö
->
w_cursw™t
 = curwö->
w_vútcﬁ
;

1869 
curwö
->
w_£t_cursw™t
 = 
FALSE
;

1871 
	}
}

1879 
	$s¸ﬁl_curs‹_t›
(
mö_s¸ﬁl
, 
Æways
)

1880 
mö_s¸ﬁl
;

1881 
Æways
;

1883 
s¸ﬁÀd
 = 0;

1884 
exåa
 = 0;

1885 
u£d
;

1886 
i
;

1887 
¶öe
;

1896 
u£d
 = 
	`∂öes
(
curwö
->
w_curs‹
.
 um
);

1897 
¶öe
 = 1; slöê< 
curwö
->
w_curs‹
.
 um
; ++sline)

1899 
i
 = 
	`∂öes
(
curwö
->
w_curs‹
.
 um
 - 
¶öe
);

1900 
u£d
 +
i
;

1901 
exåa
 +
i
;

1902 i‡(
exåa
 <
p_so
 &&

1903 
curwö
->
w_curs‹
.
 um
 + 
¶öe
 < 
curbuf
->
b_ml
.
ml_löe_cou¡
)

1904 
u£d
 +
	`∂öes
(
curwö
->
w_curs‹
.
 um
 + 
¶öe
);

1905 i‡(
u£d
 > 
curwö
->
w_height
)

1907 i‡(
curwö
->
w_curs‹
.
 um
 - 
¶öe
 < curwö->
w_t›löe
)

1908 
s¸ﬁÀd
 +
i
;

1913 i‡((
curwö
->
w_curs‹
.
 um
 - (
¶öe
 - 1Ë>curwö->
w_t›löe
 ||

1914 
s¸ﬁÀd
 >
mö_s¸ﬁl
Ë&& 
exåa
 > 
p_so
)

1923 i‡(
u£d
 > 
curwö
->
w_height
)

1924 
	`s¸ﬁl_curs‹_hÆfway
(
FALSE
);

1931 i‡(
curwö
->
w_curs‹
.
 um
 - (
¶öe
 - 1Ë< curwö->
w_t›löe
 || 
Æways
)

1932 
curwö
->
w_t›löe
 = curwö->
w_curs‹
.
 um
 - (
¶öe
 - 1);

1933 i‡(
curwö
->
w_t›löe
 > curwö->
w_curs‹
.
 um
)

1934 
curwö
->
w_t›löe
 = curwö->
w_curs‹
.
 um
;

1936 
	}
}

1945 
	$s¸ﬁl_curs‹_bŸ
(
mö_s¸ﬁl
, 
£t_t›löe
)

1946 
mö_s¸ﬁl
;

1947 
£t_t›löe
;

1949 
u£d
;

1950 
s¸ﬁÀd
 = 0;

1951 
exåa
 = 0;

1952 
¶öe
;

1953 
i
;

1954 
löír_t
 
 um
;

1955 
löír_t
 
löe_cou¡
;

1956 
löír_t
 
ﬁd_t›löe
 = 
curwö
->
w_t›löe
;

1957 
löír_t
 
ﬁd_bŸlöe
 = 
curwö
->
w_bŸlöe
;

1958 
ﬁd_em±y_rows
 = 
curwö
->
w_em±y_rows
;

1959 
löír_t
 
˛n
;

1961 
˛n
 = 
curwö
->
w_curs‹
.
 um
;

1962 i‡(
£t_t›löe
)

1964 
u£d
 = 0;

1965 
curwö
->
w_bŸlöe
 = 
˛n
 + 1;

1966 
curwö
->
w_t›löe
 = curwö->
w_bŸlöe
;

1967 
curwö
->
w_t›löe
 != 1;

1968 --
curwö
->
w_t›löe
)

1970 
i
 = 
	`∂öes
(
curwö
->
w_t›löe
 - 1);

1971 i‡(
u£d
 + 
i
 > 
curwö
->
w_height
)

1973 
u£d
 +
i
;

1975 
curwö
->
w_em±y_rows
 = curwö->
w_height
 - 
u£d
;

1978 
u£d
 = 
	`∂öes
(
˛n
);

1979 i‡(
˛n
 >
curwö
->
w_bŸlöe
)

1981 
s¸ﬁÀd
 = 
u£d
;

1982 i‡(
˛n
 =
curwö
->
w_bŸlöe
)

1983 
s¸ﬁÀd
 -
curwö
->
w_em±y_rows
;

1993 
¶öe
 = 1; slöê< 
˛n
; ++sline)

1995 i‡((((
s¸ﬁÀd
 <0 || s¸ﬁÀd >
mö_s¸ﬁl
Ë&& 
exåa
 >
p_so
) ||

1996 
˛n
 + 
¶öe
 > 
curbuf
->
b_ml
.
ml_löe_cou¡
) &&

1997 
˛n
 - 
¶öe
 < 
curwö
->
w_bŸlöe
)

1999 
i
 = 
	`∂öes
(
˛n
 - 
¶öe
);

2000 
u£d
 +
i
;

2001 i‡(
u£d
 > 
curwö
->
w_height
)

2003 i‡(
˛n
 - 
¶öe
 >
curwö
->
w_bŸlöe
)

2005 
s¸ﬁÀd
 +
i
;

2006 i‡(
˛n
 - 
¶öe
 =
curwö
->
w_bŸlöe
)

2007 
s¸ﬁÀd
 -
curwö
->
w_em±y_rows
;

2009 i‡(
˛n
 + 
¶öe
 <
curbuf
->
b_ml
.
ml_löe_cou¡
)

2011 
i
 = 
	`∂öes
(
˛n
 + 
¶öe
);

2012 
u£d
 +
i
;

2013 i‡(
u£d
 > 
curwö
->
w_height
)

2015 i‡(
exåa
 < 
p_so
)

2017 
exåa
 +
i
;

2018 i‡(
˛n
 + 
¶öe
 >
curwö
->
w_bŸlöe
)

2020 
s¸ﬁÀd
 +
i
;

2021 i‡(
˛n
 + 
¶öe
 =
curwö
->
w_bŸlöe
)

2022 
s¸ﬁÀd
 -
curwö
->
w_em±y_rows
;

2028 i‡(
s¸ﬁÀd
 <= 0)

2029 
löe_cou¡
 = 0;

2031 i‡(
u£d
 > 
curwö
->
w_height
)

2032 
löe_cou¡
 = 
u£d
;

2036 
i
 = 0, 
 um
 = 
curwö
->
w_t›löe
;

2037 
i
 < 
s¸ﬁÀd
 && 
 um
 < 
curwö
->
w_bŸlöe
; ++lnum)

2038 
i
 +
	`∂öes
(
 um
);

2039 i‡(
i
 >
s¸ﬁÀd
)

2040 
löe_cou¡
 = 
 um
 - 
curwö
->
w_t›löe
;

2042 
löe_cou¡
 = 9999;

2049 i‡(
löe_cou¡
 >
curwö
->
w_height
 &&Üöe_cou¡ > 
mö_s¸ﬁl
)

2050 
	`s¸ﬁl_curs‹_hÆfway
(
FALSE
);

2052 
	`s¸ﬁlup
(
löe_cou¡
);

2059 i‡(
curwö
->
w_t›löe
 =
ﬁd_t›löe
 && 
£t_t›löe
)

2061 
curwö
->
w_bŸlöe
 = 
ﬁd_bŸlöe
;

2062 
curwö
->
w_em±y_rows
 = 
ﬁd_em±y_rows
;

2064 
	}
}

2071 
	$s¸ﬁl_curs‹_hÆfway
(
©íd
)

2072 
©íd
;

2074 
above
 = 0;

2075 
löír_t
 
t›löe
;

2076 
bñow
 = 0;

2077 
löír_t
 
bŸlöe
;

2078 
u£d
;

2079 
i
;

2080 
löír_t
 
˛n
;

2082 
t›löe
 = 
bŸlöe
 = 
˛n
 = 
curwö
->
w_curs‹
.
 um
;

2083 
u£d
 = 
	`∂öes
(
˛n
);

2084 
t›löe
 > 1)

2086 i‡(
bñow
 <
above
)

2088 i‡(
bŸlöe
 + 1 <
curbuf
->
b_ml
.
ml_löe_cou¡
)

2090 
i
 = 
	`∂öes
(
bŸlöe
 + 1);

2091 
u£d
 +
i
;

2092 i‡(
u£d
 > 
curwö
->
w_height
)

2094 
bñow
 +
i
;

2095 ++
bŸlöe
;

2099 ++
bñow
;

2100 i‡(
©íd
)

2101 ++
u£d
;

2105 i‡(
bñow
 > 
above
)

2107 
i
 = 
	`∂öes
(
t›löe
 - 1);

2108 
u£d
 +
i
;

2109 i‡(
u£d
 > 
curwö
->
w_height
)

2111 
above
 +
i
;

2112 --
t›löe
;

2115 
curwö
->
w_t›löe
 = 
t›löe
;

2116 
	}
}

2125 
	$curs‹_c‹ª˘
()

2127 
above
 = 0;

2128 
löír_t
 
t›löe
;

2129 
bñow
 = 0;

2130 
löír_t
 
bŸlöe
;

2131 
above_w™ãd
, 
bñow_w™ãd
;

2132 
löír_t
 
˛n
;

2133 
max_off
;

2139 
above_w™ãd
 = 
p_so
;

2140 
bñow_w™ãd
 = 
p_so
;

2141 i‡(
curwö
->
w_t›löe
 == 1)

2143 
above_w™ãd
 = 0;

2144 
max_off
 = 
curwö
->
w_height
 / 2;

2145 i‡(
bñow_w™ãd
 > 
max_off
)

2146 
bñow_w™ãd
 = 
max_off
;

2148 i‡(
curwö
->
w_bŸlöe
 =
curbuf
->
b_ml
.
ml_löe_cou¡
 + 1)

2150 
bñow_w™ãd
 = 0;

2151 
max_off
 = (
curwö
->
w_height
 - 1) / 2;

2152 i‡(
above_w™ãd
 > 
max_off
)

2153 
above_w™ãd
 = 
max_off
;

2160 
˛n
 = 
curwö
->
w_curs‹
.
 um
;

2161 i‡(
˛n
 >
curwö
->
w_t›löe
 + 
above_w™ãd
 &&

2162 
˛n
 < 
curwö
->
w_bŸlöe
 - 
bñow_w™ãd
)

2171 
t›löe
 = 
curwö
->
w_t›löe
;

2172 
bŸlöe
 = 
curwö
->
w_bŸlöe
 - 1;

2173 (
above
 < 
above_w™ãd
 || 
bñow
 < 
bñow_w™ãd
Ë&& 
t›löe
 < 
bŸlöe
)

2175 i‡(
bñow
 < 
bñow_w™ãd
 && (bñow <
above
 ||ábovê>
above_w™ãd
))

2177 
bñow
 +
	`∂öes
(
bŸlöe
);

2178 --
bŸlöe
;

2180 i‡(
above
 < 
above_w™ãd
 && (abovê< 
bñow
 || bñow >
bñow_w™ãd
))

2182 
above
 +
	`∂öes
(
t›löe
);

2183 ++
t›löe
;

2186 i‡(
t›löe
 =
bŸlöe
 || botline == 0)

2187 
curwö
->
w_curs‹
.
 um
 = 
t›löe
;

2188 i‡(
t›löe
 > 
bŸlöe
)

2189 
curwö
->
w_curs‹
.
 um
 = 
bŸlöe
;

2192 i‡(
˛n
 < 
t›löe
 && 
curwö
->
w_t›löe
 > 1)

2193 
curwö
->
w_curs‹
.
 um
 = 
t›löe
;

2194 i‡(
˛n
 > 
bŸlöe
 && 
curwö
->
w_bŸlöe
 <
curbuf
->
b_ml
.
ml_löe_cou¡
)

2195 
curwö
->
w_curs‹
.
 um
 = 
bŸlöe
;

2197 
	}
}

2205 
	$curs_rows
()

2207 
löír_t
 
 um
;

2208 
i
;

2210 i‡(
curwö
->
w_curs‹
.
 um
 < curwö->
w_t›löe
 ||

2211 
curwö
->
w_curs‹
.
 um
 > 
curbuf
->
b_ml
.
ml_löe_cou¡
 ||

2212 
curwö
->
w_curs‹
.
 um
 >curwö->
w_bŸlöe
)

2213  
FAIL
;

2215 
curwö
->
w_row
 = 
i
 = 0;

2216 
 um
 = 
curwö
->
w_t›löe
;Ünum !curwö->
w_curs‹
.lnum; ++lnum)

2217 i‡(
RedøwögDißbÀd
)

2218 
curwö
->
w_row
 +
	`∂öes
(
 um
);

2220 
curwö
->
w_row
 +curwö->
w_lsize
[
i
++];

2221  
OK
;

2222 
	}
}

2228 
	$curs_cﬁumns
(
s¸ﬁl
)

2229 
s¸ﬁl
;

2231 
diff
;

2232 
exåa
;

2233 
√w_À·cﬁ
;

2234 
cﬁƒ_t
 
°¨tcﬁ
;

2235 
cﬁƒ_t
 
ídcﬁ
;

2237 
	`gëvcﬁ
(
curwö
, &curwö->
w_curs‹
,

2238 &
°¨tcﬁ
, &(
curwö
->
w_vútcﬁ
), &
ídcﬁ
);

2241 i‡(
°¨tcﬁ
 > 
dﬁœr_vcﬁ
)

2242 
dﬁœr_vcﬁ
 = 0;

2244 
curwö
->
w_cﬁ
 = curwö->
w_vútcﬁ
;

2245 i‡(
curwö
->
w_p_nu
)

2247 
curwö
->
w_cﬁ
 += 8;

2248 
ídcﬁ
 += 8;

2251 
curwö
->
w_row
 = curwö->
w_˛öe_row
;

2252 i‡(
curwö
->
w_p_wøp
)

2254 
curwö
->
w_cﬁ
 >
Cﬁumns
)

2256 
curwö
->
w_cﬁ
 -
Cﬁumns
;

2257 
curwö
->
w_row
++;

2260 i‡(
s¸ﬁl
)

2266 i‡((
exåa
 = ()
°¨tcﬁ
 - ()
curwö
->
w_À·cﬁ
) < 0 ||

2267 (
exåa
 = ()
ídcﬁ
 - ()(
curwö
->
w_À·cﬁ
 + 
Cﬁumns
) + 1) > 0)

2269 i‡(
exåa
 < 0)

2270 
diff
 = -
exåa
;

2272 
diff
 = 
exåa
;

2275 i‡(
p_ss
 =0 || 
diff
 >
Cﬁumns
 / 2)

2276 
√w_À·cﬁ
 = 
curwö
->
w_cﬁ
 - 
Cﬁumns
 / 2;

2279 i‡(
diff
 < 
p_ss
)

2280 
diff
 = 
p_ss
;

2281 i‡(
exåa
 < 0)

2282 
√w_À·cﬁ
 = 
curwö
->
w_À·cﬁ
 - 
diff
;

2284 
√w_À·cﬁ
 = 
curwö
->
w_À·cﬁ
 + 
diff
;

2286 i‡(
√w_À·cﬁ
 < 0)

2287 
curwö
->
w_À·cﬁ
 = 0;

2289 
curwö
->
w_À·cﬁ
 = 
√w_À·cﬁ
;

2291 
	`ªdøw_œãr
(
NOT_VALID
);

2293 
curwö
->
w_cﬁ
 -curwö->
w_À·cﬁ
;

2297 i‡(
curwö
->
w_row
 > curwö->
w_height
 - 1)

2298 
curwö
->
w_row
 = curwö->
w_height
 - 1;

2299 
	}
}

2302 
	$s¸ﬁldown
(
löe_cou¡
)

2303 
löe_cou¡
;

2305 
d⁄e
 = 0;

2308 
löe_cou¡
--)

2310 i‡(
curwö
->
w_t›löe
 == 1)

2312 
d⁄e
 +
	`∂öes
(--
curwö
->
w_t›löe
);

2318 
curwö
->
w_row
 +
d⁄e
;

2319 i‡(
curwö
->
w_p_wøp
)

2320 
curwö
->
w_row
 +
	`∂öes
(curwö->
w_curs‹
.
 um
) -

2321 1 - 
curwö
->
w_vútcﬁ
 / 
Cﬁumns
;

2322 
curwö
->
w_row
 >curwö->
w_height
 && curwö->
w_curs‹
.
 um
 > 1)

2323 
curwö
->
w_row
 -
	`∂öes
(curwö->
w_curs‹
.
 um
--);

2324 
	`comp_BŸlöe
(
curwö
);

2325 
	}
}

2328 
	$s¸ﬁlup
(
löe_cou¡
)

2329 
löe_cou¡
;

2331 
curwö
->
w_t›löe
 +
löe_cou¡
;

2332 i‡(
curwö
->
w_t›löe
 > 
curbuf
->
b_ml
.
ml_löe_cou¡
)

2333 
curwö
->
w_t›löe
 = 
curbuf
->
b_ml
.
ml_löe_cou¡
;

2334 i‡(
curwö
->
w_curs‹
.
 um
 < curwö->
w_t›löe
)

2335 
curwö
->
w_curs‹
.
 um
 = curwö->
w_t›löe
;

2336 
	`comp_BŸlöe
(
curwö
);

2337 
	}
}

2344 
	$s¸ﬁldown_˛amp
()

2346 
íd_row
;

2348 i‡(
curwö
->
w_t›löe
 == 1)

2356 
íd_row
 = 
curwö
->
w_row
 + 
	`∂öes
(curwö->
w_t›löe
 - 1);

2357 i‡(
curwö
->
w_p_wøp
)

2358 
íd_row
 +
	`∂öes
(
curwö
->
w_curs‹
.
 um
) - 1 -

2359 
curwö
->
w_vútcﬁ
 / 
Cﬁumns
;

2360 i‡(
íd_row
 < 
curwö
->
w_height
 - 
p_so
)

2361 --
curwö
->
w_t›löe
;

2362 
	}
}

2369 
	$s¸ﬁlup_˛amp
()

2371 
°¨t_row
;

2373 i‡(
curwö
->
w_t›löe
 =
curbuf
->
b_ml
.
ml_löe_cou¡
)

2381 
°¨t_row
 = 
curwö
->
w_row
 - 
	`∂öes
(curwö->
w_t›löe
);

2382 i‡(
curwö
->
w_p_wøp
)

2383 
°¨t_row
 -
curwö
->
w_vútcﬁ
 / 
Cﬁumns
;

2384 i‡(
°¨t_row
 >
p_so
)

2385 ++
curwö
->
w_t›löe
;

2386 
	}
}

2396 
	$wö_ös_löes
(
wp
, 
row
, 
löe_cou¡
, 
övÆid
, 
may˛ór
)

2397 
WIN
 *
wp
;

2398 
row
;

2399 
löe_cou¡
;

2400 
övÆid
;

2401 
may˛ór
;

2403 
did_dñëe
;

2404 
√xåow
;

2405 
œ°row
;

2406 
ªtvÆ
;

2408 i‡(
övÆid
)

2409 
wp
->
w_lsize_vÆid
 = 0;

2411 i‡(
RedøwögDißbÀd
 || 
löe_cou¡
 <0 || 
wp
->
w_height
 < 5)

2412  
FAIL
;

2414 i‡(
löe_cou¡
 > 
wp
->
w_height
 - 
row
)

2415 
löe_cou¡
 = 
wp
->
w_height
 - 
row
;

2417 i‡(
may˛ór
 && 
Rows
 - 
löe_cou¡
 < 5)

2419 
	`s¸ìn˛ór
();

2420  
FAIL
;

2426 i‡(
row
 + 
löe_cou¡
 >
wp
->
w_height
)

2428 
	`s¸ìn_fûl
(
wp
->
w_wöpos
 + 
row
, wp->w_wöpo†+ wp->
w_height
,

2429 0, ()
Cﬁumns
, ' ', ' ');

2430  
OK
;

2437 
˛ór_cmdlöe
 = 
TRUE
;

2442 i‡(
s¸ﬁl_ªgi⁄
)

2444 
	`s¸ﬁl_ªgi⁄_£t
(
wp
, 
row
);

2445 
ªtvÆ
 = 
	`s¸ìn_ös_löes
(
wp
->
w_wöpos
 + 
row
, 0, 
löe_cou¡
,

2446 
wp
->
w_height
 - 
row
);

2447 
	`s¸ﬁl_ªgi⁄_ª£t
();

2448  
ªtvÆ
;

2451 i‡(
wp
->
w_√xt
 && 
p_tf
)

2452  
FAIL
;

2460 
did_dñëe
 = 
FALSE
;

2461 i‡(
wp
->
w_√xt
 || wp->
w_°©us_height
)

2463 i‡(
	`s¸ìn_dñ_löes
(0, 
wp
->
w_wöpos
 + wp->
w_height
 - 
löe_cou¡
,Üöe_cou¡, ()
Rows
Ë=
OK
)

2464 
did_dñëe
 = 
TRUE
;

2465 i‡(
wp
->
w_√xt
)

2466  
FAIL
;

2471 i‡(!
did_dñëe
)

2473 
wp
->
w_ªdr_°©us
 = 
TRUE
;

2474 
ªdøw_cmdlöe
 = 
TRUE
;

2475 
√xåow
 = 
wp
->
w_wöpos
 + wp->
w_height
 + wp->
w_°©us_height
;

2476 
œ°row
 = 
√xåow
 + 
löe_cou¡
;

2477 i‡(
œ°row
 > 
Rows
)

2478 
œ°row
 = 
Rows
;

2479 
	`s¸ìn_fûl
(
√xåow
 - 
löe_cou¡
, 
œ°row
 -Üine_count,

2480 0, ()
Cﬁumns
, ' ', ' ');

2483 i‡(
	`s¸ìn_ös_löes
(0, 
wp
->
w_wöpos
 + 
row
, 
löe_cou¡
, ()
Rows
Ë=
FAIL
)

2486 i‡(
did_dñëe
)

2488 
wp
->
w_ªdr_°©us
 = 
TRUE
;

2489 
	`wö_ª°_övÆid
(
wp
->
w_√xt
);

2491  
FAIL
;

2494  
OK
;

2495 
	}
}

2505 
	$wö_dñ_löes
(
wp
, 
row
, 
löe_cou¡
, 
övÆid
, 
may˛ór
)

2506 
WIN
 *
wp
;

2507 
row
;

2508 
löe_cou¡
;

2509 
övÆid
;

2510 
may˛ór
;

2512 
ªtvÆ
;

2514 i‡(
övÆid
)

2515 
wp
->
w_lsize_vÆid
 = 0;

2517 i‡(
RedøwögDißbÀd
 || 
löe_cou¡
 <= 0)

2518  
FAIL
;

2520 i‡(
löe_cou¡
 > 
wp
->
w_height
 - 
row
)

2521 
löe_cou¡
 = 
wp
->
w_height
 - 
row
;

2524 i‡(
may˛ór
 && 
Rows
 - 
löe_cou¡
 < 5)

2526 
	`s¸ìn˛ór
();

2527  
FAIL
;

2533 i‡(
row
 + 
löe_cou¡
 >
wp
->
w_height
)

2535 
	`s¸ìn_fûl
(
wp
->
w_wöpos
 + 
row
, wp->w_wöpo†+ wp->
w_height
,

2536 0, ()
Cﬁumns
, ' ', ' ');

2537  
OK
;

2544 
˛ór_cmdlöe
 = 
TRUE
;

2549 i‡(
s¸ﬁl_ªgi⁄
)

2551 
	`s¸ﬁl_ªgi⁄_£t
(
wp
, 
row
);

2552 
ªtvÆ
 = 
	`s¸ìn_dñ_löes
(
wp
->
w_wöpos
 + 
row
, 0, 
löe_cou¡
,

2553 
wp
->
w_height
 - 
row
);

2554 
	`s¸ﬁl_ªgi⁄_ª£t
();

2555  
ªtvÆ
;

2558 i‡(
wp
->
w_√xt
 && 
p_tf
)

2559  
FAIL
;

2561 i‡(
	`s¸ìn_dñ_löes
(0, 
wp
->
w_wöpos
 + 
row
, 
löe_cou¡
, ()
Rows
Ë=
FAIL
)

2562  
FAIL
;

2568 i‡(
wp
->
w_√xt
 || wp->
w_°©us_height
 || 
cmdlöe_row
 < 
Rows
 - 1)

2570 i‡(
	`s¸ìn_ös_löes
(0, 
wp
->
w_wöpos
 + wp->
w_height
 - 
löe_cou¡
,

2571 
löe_cou¡
, ()
Rows
Ë=
FAIL
)

2573 
wp
->
w_ªdr_°©us
 = 
TRUE
;

2574 
	`wö_ª°_övÆid
(
wp
->
w_√xt
);

2582 
ªdøw_cmdlöe
 = 
TRUE
;

2583  
OK
;

2584 
	}
}

2590 
	$wö_ª°_övÆid
(
wp
)

2591 
WIN
 *
wp
;

2593 
wp
)

2595 
wp
->
w_lsize_vÆid
 = 0;

2596 
wp
->
w_ªdr_ty≥
 = 
NOT_VALID
;

2597 
wp
->
w_ªdr_°©us
 = 
TRUE
;

2598 
wp
 = wp->
w_√xt
;

2600 
ªdøw_cmdlöe
 = 
TRUE
;

2601 
	}
}

2616 
	#USE_T_CAL
 1

	)

2617 
	#USE_T_CDL
 2

	)

2618 
	#USE_T_AL
 3

	)

2619 
	#USE_T_CE
 4

	)

2620 
	#USE_T_DL
 5

	)

2621 
	#USE_T_SR
 6

	)

2622 
	#USE_NL
 7

	)

2623 
	#USE_T_CD
 8

	)

2634 
	$s¸ìn_ös_löes
(
off
, 
row
, 
löe_cou¡
, 
íd
)

2635 
off
;

2636 
row
;

2637 
löe_cou¡
;

2638 
íd
;

2640 
i
;

2641 
j
;

2642 
ch¨_u
 *
ãmp
;

2643 
curs‹_row
;

2644 
ty≥
;

2645 
ªsu…_em±y
;

2654 i‡(!
	`s¸ìn_vÆid
(
TRUE
Ë|| 
löe_cou¡
 <0 ||Üöe_cou¡ > 
p_âys¸ﬁl
)

2655  
FAIL
;

2679 
ªsu…_em±y
 = (
row
 + 
löe_cou¡
 >
íd
);

2680 i‡(*
T_CD
 !
NUL
 && 
ªsu…_em±y
)

2681 
ty≥
 = 
USE_T_CD
;

2682 i‡(*
T_CAL
 !
NUL
 && (
löe_cou¡
 > 1 || *
T_AL
 == NUL))

2683 
ty≥
 = 
USE_T_CAL
;

2684 i‡(*
T_CDL
 !
NUL
 && 
ªsu…_em±y
 && (
löe_cou¡
 > 1 || *
T_CE
 == NUL))

2685 
ty≥
 = 
USE_T_CDL
;

2686 i‡(*
T_AL
 !
NUL
)

2687 
ty≥
 = 
USE_T_AL
;

2688 i‡(*
T_CE
 !
NUL
 && 
ªsu…_em±y
)

2689 
ty≥
 = 
USE_T_CE
;

2690 i‡(*
T_DL
 !
NUL
 && 
ªsu…_em±y
)

2691 
ty≥
 = 
USE_T_DL
;

2692 i‡(*
T_SR
 !
NUL
 && 
row
 =0 && (*
T_DA
 =NUL || *
T_CE
))

2693 
ty≥
 = 
USE_T_SR
;

2695  
FAIL
;

2701 i‡(
ty≥
 =
USE_T_CD
 ||Åy≥ =
USE_T_CDL
 ||

2702 
ty≥
 =
USE_T_CE
 ||Åy≥ =
USE_T_DL
)

2703  
	`s¸ìn_dñ_löes
(
off
, 
row
, 
löe_cou¡
, 
íd
);

2710 i‡(*
T_DB
)

2711 
	`s¸ìn_dñ_löes
(
off
, 
íd
 - 
löe_cou¡
,Üine_count,Énd);

2713 i‡(*
T_CSC
 !
NUL
)

2714 
curs‹_row
 = 
row
;

2716 
curs‹_row
 = 
row
 + 
off
;

2722 
row
 +
off
;

2723 
íd
 +
off
;

2724 
i
 = 0; i < 
löe_cou¡
; ++i)

2726 
j
 = 
íd
 - 1 - 
i
;

2727 
ãmp
 = 
LöePoöãrs
[
j
];

2728 (
j
 -
löe_cou¡
Ë>
row
)

2729 
LöePoöãrs
[
j
 + 
löe_cou¡
] = LinePointers[j];

2730 
LöePoöãrs
[
j
 + 
löe_cou¡
] = 
ãmp
;

2731 
	`löe˛ór
(
ãmp
);

2734 
	`wödgŸo
(
curs‹_row
, 0);

2735 i‡(
ty≥
 =
USE_T_CAL
)

2737 
	`OUTSTR
(
	`tgŸo
((*)
T_CAL
, 0, 
löe_cou¡
));

2738 
	`s¸ìn_°¨t
();

2742 
i
 = 0; i < 
löe_cou¡
; i++)

2744 i‡(
ty≥
 =
USE_T_AL
)

2746 i‡(
i
 && 
curs‹_row
 != 0)

2747 
	`wödgŸo
(
curs‹_row
, 0);

2748 
	`out°r
(
T_AL
);

2751 
	`out°r
(
T_SR
);

2752 
	`s¸ìn_°¨t
();

2760 i‡(
ty≥
 =
USE_T_SR
 && *
T_DA
)

2762 
i
 = 0; i < 
löe_cou¡
; ++i)

2764 
	`wödgŸo
(
off
 + 
i
, 0);

2765 
	`out°r
(
T_CE
);

2766 
	`s¸ìn_°¨t
();

2770  
OK
;

2771 
	}
}

2782 
	$s¸ìn_dñ_löes
(
off
, 
row
, 
löe_cou¡
, 
íd
)

2783 
off
;

2784 
row
;

2785 
löe_cou¡
;

2786 
íd
;

2788 
j
;

2789 
i
;

2790 
ch¨_u
 *
ãmp
;

2791 
curs‹_row
;

2792 
curs‹_íd
;

2793 
ªsu…_em±y
;

2794 
ˇn_dñëe
;

2795 
ty≥
;

2804 i‡(!
	`s¸ìn_vÆid
(
TRUE
Ë|| 
löe_cou¡
 <0 ||Üöe_cou¡ > 
p_âys¸ﬁl
)

2805  
FAIL
;

2810 
ªsu…_em±y
 = 
row
 + 
löe_cou¡
 >
íd
;

2816 
ˇn_dñëe
 = (*
T_DB
 =
NUL
 || *
T_CE
);

2827 i‡(*
T_CD
 !
NUL
 && 
ªsu…_em±y
)

2828 
ty≥
 = 
USE_T_CD
;

2829 i‡(
row
 =0 && (
löe_cou¡
 =1 || *
T_CDL
 =
NUL
))

2830 
ty≥
 = 
USE_NL
;

2831 i‡(*
T_CDL
 !
NUL
 && 
löe_cou¡
 > 1 && 
ˇn_dñëe
)

2832 
ty≥
 = 
USE_T_CDL
;

2833 i‡(*
T_CE
 !
NUL
 && 
ªsu…_em±y
)

2834 
ty≥
 = 
USE_T_CE
;

2835 i‡(*
T_DL
 !
NUL
 && 
ˇn_dñëe
)

2836 
ty≥
 = 
USE_T_DL
;

2837 i‡(*
T_CDL
 !
NUL
 && 
ˇn_dñëe
)

2838 
ty≥
 = 
USE_T_CDL
;

2840  
FAIL
;

2842 i‡(*
T_CSC
 !
NUL
)

2844 
curs‹_row
 = 
row
;

2845 
curs‹_íd
 = 
íd
;

2849 
curs‹_row
 = 
row
 + 
off
;

2850 
curs‹_íd
 = 
íd
 + 
off
;

2857 
row
 +
off
;

2858 
íd
 +
off
;

2859 
i
 = 0; i < 
löe_cou¡
; ++i)

2861 
j
 = 
row
 + 
i
;

2862 
ãmp
 = 
LöePoöãrs
[
j
];

2863 (
j
 +
löe_cou¡
Ë<
íd
 - 1)

2864 
LöePoöãrs
[
j
 - 
löe_cou¡
] = LinePointers[j];

2865 
LöePoöãrs
[
j
 - 
löe_cou¡
] = 
ãmp
;

2866 
	`löe˛ór
(
ãmp
);

2870 i‡(
ty≥
 =
USE_T_CD
)

2872 
	`wödgŸo
(
curs‹_row
, 0);

2873 
	`out°r
(
T_CD
);

2874 
	`s¸ìn_°¨t
();

2876 i‡(
ty≥
 =
USE_T_CDL
)

2878 
	`wödgŸo
(
curs‹_row
, 0);

2879 
	`OUTSTR
(
	`tgŸo
((*)
T_CDL
, 0, 
löe_cou¡
));

2880 
	`s¸ìn_°¨t
();

2887 i‡(
ty≥
 =
USE_NL
)

2889 
	`wödgŸo
(
curs‹_íd
 - 1, 0);

2890 
i
 = 
löe_cou¡
; --i >= 0; )

2891 
	`outch¨
('\n');

2895 
i
 = 
löe_cou¡
; --i >= 0; )

2897 i‡(
ty≥
 =
USE_T_DL
)

2899 
	`wödgŸo
(
curs‹_row
, 0);

2900 
	`out°r
(
T_DL
);

2904 
	`wödgŸo
(
curs‹_row
 + 
i
, 0);

2905 
	`out°r
(
T_CE
);

2907 
	`s¸ìn_°¨t
();

2915 i‡(*
T_DB
 && (
ty≥
 =
USE_T_DL
 ||Åy≥ =
USE_T_CDL
))

2917 
i
 = 
löe_cou¡
; i > 0; --i)

2919 
	`wödgŸo
(
curs‹_íd
 - 
i
, 0);

2920 
	`out°r
(
T_CE
);

2921 
	`s¸ìn_°¨t
();

2924  
OK
;

2925 
	}
}

2935 
	$showmode
()

2937 
√ed_˛ór
 = 
FALSE
;

2938 
do_mode
 = (
p_smd
 &&

2939 ((
Sèã
 & 
INSERT
Ë|| 
ª°¨t_edô
 || 
VIsuÆ_a˘ive
));

2941 i‡(
do_mode
 || 
Rec‹dög
)

2943 i‡(
emsg_⁄_di•œy
)

2945 
	`mch_dñay
(1000L, 
TRUE
);

2946 
emsg_⁄_di•œy
 = 
FALSE
;

2948 
msg_didout
 = 
FALSE
;

2949 
msg_cﬁ
 = 0;

2950 
	`gŸocmdlöe
(
FALSE
);

2951 
	`£t_highlight
('M');

2952 i‡(
do_mode
)

2954 
	`°¨t_highlight
();

2955 
	`MSG_OUTSTR
("--");

2956 #ifde‡
INSERT_EXPAND


2957 i‡(
edô_submode
 !
NULL
)

2959 
	`msg_out°r
(
edô_submode
);

2960 i‡(
edô_submode_exåa
 !
NULL
)

2962 
	`msg_outch¨
(' ');

2963 i‡(
edô_submode_highl
)

2965 
	`°›_highlight
();

2966 
	`£t_highlight
('r');

2967 
	`°¨t_highlight
();

2969 
	`msg_out°r
(
edô_submode_exåa
);

2970 i‡(
edô_submode_highl
)

2972 
	`°›_highlight
();

2973 
	`£t_highlight
('M');

2974 
	`°¨t_highlight
();

2981 i‡(
Sèã
 =
INSERT
)

2983 #ifde‡
RIGHTLEFT


2984 i‡(
p_ri
)

2985 
	`MSG_OUTSTR
(" REVERSE");

2987 
	`MSG_OUTSTR
(" INSERT");

2989 i‡(
Sèã
 =
REPLACE
)

2990 
	`MSG_OUTSTR
(" REPLACE");

2991 i‡(
ª°¨t_edô
 == 'I')

2992 
	`MSG_OUTSTR
(" (insert)");

2993 i‡(
ª°¨t_edô
 == 'R')

2994 
	`MSG_OUTSTR
(" (replace)");

2995 #ifde‡
RIGHTLEFT


2996 i‡(
p_hkm≠
)

2997 
	`MSG_OUTSTR
(" Hebrew");

2999 i‡((
Sèã
 & 
INSERT
Ë&& 
p_∑°e
)

3000 
	`MSG_OUTSTR
(" (paste)");

3001 i‡(
VIsuÆ_a˘ive
)

3003 
	`MSG_OUTSTR
(" VISUAL");

3004 i‡(
VIsuÆ_mode
 =
	`Cål
('V'))

3005 
	`MSG_OUTSTR
(" BLOCK");

3006 i‡(
VIsuÆ_mode
 == 'V')

3007 
	`MSG_OUTSTR
(" LINE");

3010 
	`MSG_OUTSTR
(" --");

3011 
√ed_˛ór
 = 
TRUE
;

3013 i‡(
Rec‹dög
)

3015 i‡(!
√ed_˛ór
)

3016 
	`°¨t_highlight
();

3017 
	`MSG_OUTSTR
("recording");

3018 
√ed_˛ór
 = 
TRUE
;

3020 i‡(
√ed_˛ór
)

3021 
	`°›_highlight
();

3022 i‡(
√ed_˛ór
 || 
˛ór_cmdlöe
)

3023 
	`msg_˛r_eos
();

3024 
msg_didout
 = 
FALSE
;

3025 
msg_cﬁ
 = 0;

3027 i‡(
˛ór_cmdlöe
)

3029 
msg_row
 = 
cmdlöe_row
;

3030 
msg_cﬁ
 = 0;

3031 
	`msg_˛r_eos
();

3033 
	`wö_ªdr_ruÀr
(
œ°wö
, 
TRUE
);

3034 
ªdøw_cmdlöe
 = 
FALSE
;

3035 
	}
}

3041 
	$dñmode
()

3043 i‡(
Rec‹dög
)

3044 
	`MSG
("recording");

3046 
	`MSG
("");

3047 
	}
}

3054 
	$showruÀr
(
Æways
)

3055 
Æways
;

3057 
	`wö_ªdr_ruÀr
(
curwö
, 
Æways
);

3058 
	}
}

3061 
	$wö_ªdr_ruÀr
(
wp
, 
Æways
)

3062 
WIN
 *
wp
;

3063 
Æways
;

3065 
löír_t
 
ﬁd_ um
 = 0;

3066 
cﬁƒ_t
 
ﬁd_cﬁ
 = 0;

3067 
ch¨_u
 
buf„r
[30];

3068 
row
;

3069 
fûlch¨
;

3071 i‡(
p_ru
 && (
ªdøw_cmdlöe
 || 
Æways
 ||

3072 
wp
->
w_curs‹
.
 um
 !
ﬁd_ um
 || wp->
w_vútcﬁ
 !
ﬁd_cﬁ
))

3074 
	`curs‹_off
();

3075 i‡(
wp
->
w_°©us_height
)

3077 
row
 = 
wp
->
w_wöpos
 + wp->
w_height
;

3078 i‡(
	`£t_highlight
('s'Ë=
OK
)

3080 
fûlch¨
 = ' ';

3081 
	`°¨t_highlight
();

3084 
fûlch¨
 = '=';

3088 
row
 = 
Rows
 - 1;

3089 
fûlch¨
 = ' ';

3096 
	`•rötf
((*)
buf„r
, "%ld,",

3097 (
wp
->
w_buf„r
->
b_ml
.
ml_Êags
 & 
ML_EMPTY
) ?

3099 ()(
wp
->
w_curs‹
.
 um
));

3104 i‡(
wp
->
w_curs‹
.
 um
 <wp->
w_buf„r
->
b_ml
.
ml_löe_cou¡
)

3105 
	`cﬁ_¥öt
(
buf„r
 + 
	`STRLEN
(buffer),

3106 !(
Sèã
 & 
INSERT
) &&

3107 *
	`ml_gë_buf
(
wp
->
w_buf„r
, wp->
w_curs‹
.
 um
, 
FALSE
Ë=
NUL
 ?

3109 ()
wp
->
w_curs‹
.
cﬁ
 + 1,

3110 ()
wp
->
w_vútcﬁ
 + 1);

3112 
	`s¸ìn_msg
(
buf„r
, 
row
, 
ru_cﬁ
);

3113 
	`s¸ìn_fûl
(
row
,Ñow + 1, 
ru_cﬁ
 + ()
	`STRLEN
(
buf„r
),

3114 ()
Cﬁumns
, 
fûlch¨
, fillchar);

3115 
ﬁd_ um
 = 
wp
->
w_curs‹
.
 um
;

3116 
ﬁd_cﬁ
 = 
wp
->
w_vútcﬁ
;

3117 
	`°›_highlight
();

3119 
	}
}

3128 
	$s¸ìn_vÆid
(
˛ór
)

3129 
˛ór
;

3131 
	`s¸ì«Œoc
(
˛ór
);

3132  (
NextS¸ìn
 !
NULL
);

3133 
	}
}

3135 #ifde‡
USE_MOUSE


3157 
	$jump_to_mou£
(
Êags
)

3158 
Êags
;

3160 
⁄_°©us_löe
 = 0;

3161 
¥ev_row
 = -1;

3162 
¥ev_cﬁ
 = -1;

3164 
WIN
 *
wp
, *
ﬁd_curwö
;

3165 
FPOS
 
ﬁd_curs‹
;

3166 
cou¡
;

3167 
fú°
;

3168 
row
 = 
mou£_row
;

3169 
cﬁ
 = 
mou£_cﬁ
;

3171 
mou£_∑°_bŸtom
 = 
FALSE
;

3172 
mou£_∑°_eﬁ
 = 
FALSE
;

3174 i‡((
Êags
 & 
MOUSE_DID_MOVE
Ë&& 
¥ev_row
 =
mou£_row
 &&

3175 
¥ev_cﬁ
 =
mou£_cﬁ
)

3176  
IN_BUFFER
;

3178 
¥ev_row
 = 
mou£_row
;

3179 
¥ev_cﬁ
 = 
mou£_cﬁ
;

3181 i‡((
Êags
 & 
MOUSE_SETPOS
))

3182  
IN_BUFFER
;

3184 
ﬁd_curwö
 = 
curwö
;

3185 
ﬁd_curs‹
 = 
curwö
->
w_curs‹
;

3187 i‡(!(
Êags
 & 
MOUSE_FOCUS
))

3189 i‡(
row
 < 0 || 
cﬁ
 < 0)

3190  
IN_UNKNOWN
;

3193 
wp
 = 
fú°wö
; wp->
w_√xt
; wp = wp->w_next)

3194 i‡(
row
 < 
wp
->
w_√xt
->
w_wöpos
)

3199 
row
 -
wp
->
w_wöpos
;

3200 i‡(
row
 >
wp
->
w_height
)

3201 
⁄_°©us_löe
 = 
row
 - 
wp
->
w_height
 + 1;

3203 
⁄_°©us_löe
 = 0;

3204 
	`wö_íãr
(
wp
, 
TRUE
);

3205 i‡(
⁄_°©us_löe
)

3208 i‡(
curwö
 =
ﬁd_curwö
)

3209  
IN_STATUS_LINE
;

3211  
IN_STATUS_LINE
 | 
CURSOR_MOVED
;

3214 
curwö
->
w_curs‹
.
 um
 = curwö->
w_t›löe
;

3216 i‡(
⁄_°©us_löe
)

3219 
cou¡
 = 
row
 - 
curwö
->
w_wöpos
 - curwö->
w_height
 + 1 - 
⁄_°©us_löe
;

3220 
	`wö_døg_°©us_löe
(
cou¡
);

3221  
IN_STATUS_LINE
;

3225 
row
 -
curwö
->
w_wöpos
;

3231 i‡(
row
 < 0)

3233 
cou¡
 = 0;

3234 
fú°
 = 
TRUE
; 
curwö
->
w_t›löe
 > 1; --curwin->w_topline)

3236 
cou¡
 +
	`∂öes
(
curwö
->
w_t›löe
 - 1);

3237 i‡(!
fú°
 && 
cou¡
 > -
row
)

3239 
fú°
 = 
FALSE
;

3241 
	`ªdøw_œãr
(
VALID
);

3242 
row
 = 0;

3244 i‡(
row
 >
curwö
->
w_height
)

3246 
cou¡
 = 0;

3247 
fú°
 = 
TRUE
; 
curwö
->
w_t›löe
 < 
curbuf
->
b_ml
.
ml_löe_cou¡
;

3248 ++
curwö
->
w_t›löe
)

3250 
cou¡
 +
	`∂öes
(
curwö
->
w_t›löe
);

3251 i‡(!
fú°
 && 
cou¡
 > 
row
 - 
curwö
->
w_height
 + 1)

3253 
fú°
 = 
FALSE
;

3255 
	`ªdøw_œãr
(
VALID
);

3256 
row
 = 
curwö
->
w_height
 - 1;

3258 
curwö
->
w_curs‹
.
 um
 = curwö->
w_t›löe
;

3261 #ifde‡
RIGHTLEFT


3262 i‡(
curwö
->
w_p_æ
)

3263 
cﬁ
 = 
Cﬁumns
 - 1 - col;

3266 i‡(
curwö
->
w_p_nu
)

3267 i‡((
cﬁ
 -= 8) < 0)

3268 
cﬁ
 = 0;

3270 i‡(
curwö
->
w_p_wøp
)

3272 
row
)

3274 
cou¡
 = 
	`∂öes
(
curwö
->
w_curs‹
.
 um
);

3275 i‡(
cou¡
 > 
row
)

3277 
cﬁ
 +
row
 * 
Cﬁumns
;

3280 i‡(
curwö
->
w_curs‹
.
 um
 =
curbuf
->
b_ml
.
ml_löe_cou¡
)

3282 
mou£_∑°_bŸtom
 = 
TRUE
;

3285 
row
 -
cou¡
;

3286 ++
curwö
->
w_curs‹
.
 um
;

3291 
curwö
->
w_curs‹
.
 um
 +
row
;

3292 i‡(
curwö
->
w_curs‹
.
 um
 > 
curbuf
->
b_ml
.
ml_löe_cou¡
)

3294 
curwö
->
w_curs‹
.
 um
 = 
curbuf
->
b_ml
.
ml_löe_cou¡
;

3295 
mou£_∑°_bŸtom
 = 
TRUE
;

3297 
cﬁ
 +
curwö
->
w_À·cﬁ
;

3299 
curwö
->
w_cursw™t
 = 
cﬁ
;

3300 
curwö
->
w_£t_cursw™t
 = 
FALSE
;

3301 i‡(
	`cﬁadv™˚
(
cﬁ
Ë=
FAIL
)

3304 
›_ö˛usive
 = 
TRUE
;

3305 
mou£_∑°_eﬁ
 = 
TRUE
;

3308 
›_ö˛usive
 = 
FALSE
;

3310 i‡((
Êags
 & 
MOUSE_MAY_VIS
Ë&& !
VIsuÆ_a˘ive
)

3312 
	`°¨t_visuÆ_highlight
();

3313 
VIsuÆ
 = 
ﬁd_curs‹
;

3314 
VIsuÆ_a˘ive
 = 
TRUE
;

3315 #ifde‡
USE_MOUSE


3316 
	`£tmou£
();

3318 i‡(
p_smd
)

3319 
ªdøw_cmdlöe
 = 
TRUE
;

3322 i‡(
curwö
 =
ﬁd_curwö
 && curwö->
w_curs‹
.
 um
 =
ﬁd_curs‹
.lnum &&

3323 
curwö
->
w_curs‹
.
cﬁ
 =
ﬁd_curs‹
.col)

3324  
IN_BUFFER
;

3325  
IN_BUFFER
 | 
CURSOR_MOVED
;

3326 
	}
}

3335 
	$ªdøw_œãr
(
ty≥
)

3336 
ty≥
;

3338 i‡(
mu°_ªdøw
 < 
ty≥
)

3339 
mu°_ªdøw
 = 
ty≥
;

3340 
	}
}

	@src/search.c

12 
	~"vim.h
"

13 
	~"globÆs.h
"

14 
	~"¥Ÿo.h
"

15 
	~"›ti⁄.h
"

16 
	~"›s.h
"

19 
	~"ªgexp.h
"

21 
öma¸o
 
__ARGS
((
ch¨_u
 *, char_u *));

22 
˛s
 
__ARGS
(());

23 
skù_ch¨s
 
__ARGS
((, ));

24 
back_ö_löe
 
__ARGS
(());

25 
föd_fú°_bœnk
 
__ARGS
((
FPOS
 *));

26 
show_∑t_ö_∑th
 
__ARGS
((
ch¨_u
 *, ,

27 , , 
FILE
 *, 
löír_t
 *, ));

28 
give_w¨nög
 
__ARGS
((
ch¨_u
 *));

30 
ch¨_u
 *
	gt›_bŸ_msg
 = (char_u *)"search hit TOP, continuingát BOTTOM";

31 
ch¨_u
 *
	gbŸ_t›_msg
 = (char_u *)"search hit BOTTOM, continuingát TOP";

61 
ch¨_u
 *
	g£¨ch_∑âîn
 = 
NULL
;

62 
	g£¨ch_magic
 = 
TRUE
;

63 
	g£¨ch_no_scs
 = 
FALSE
;

64 
ch¨_u
 *
	gsub°_∑âîn
 = 
NULL
;

65 
	gsub°_magic
 = 
TRUE
;

66 
	gsub°_no_scs
 = 
FALSE
;

67 
ch¨_u
 *
	gœ°_∑âîn
 = 
NULL
;

68 
	gœ°_magic
 = 
TRUE
;

69 
	gœ°_no_scs
 = 
FALSE
;

70 
ch¨_u
 *
	gmr_∑âîn
 = 
NULL
;

72 
	gw™t_°¨t
;

78 
	sSórchedFûe


80 
FILE
 *
	mÂ
;

81 
ch¨_u
 *
	m«me
;

82 
löír_t
 
	m um
;

83 
	mm©ched
;

84 } 
	tSórchedFûe
;

99 
ªgexp
 *

100 
	$myªgcomp
(
∑t
, 
sub_cmd
, 
which_∑t
, 
›ti⁄s
)

101 
ch¨_u
 *
∑t
;

102 
sub_cmd
;

103 
which_∑t
;

104 
›ti⁄s
;

106 
rc_did_emsg
 = 
FALSE
;

107 
ªg_magic
 = 
p_magic
;

108 i‡(
∑t
 =
NULL
 || *∑à=
NUL
)

110 i‡(
which_∑t
 =
RE_SEARCH
)

112 i‡(
£¨ch_∑âîn
 =
NULL
)

114 
	`emsg
(
e_n›ªvª
);

115 
rc_did_emsg
 = 
TRUE
;

116  (
ªgexp
 *Ë
NULL
;

118 
∑t
 = 
£¨ch_∑âîn
;

119 
ªg_magic
 = 
£¨ch_magic
;

120 
no_sm¨tˇ£
 = 
£¨ch_no_scs
;

122 i‡(
which_∑t
 =
RE_SUBST
)

124 i‡(
sub°_∑âîn
 =
NULL
)

126 
	`emsg
(
e_n›ªsub
);

127 
rc_did_emsg
 = 
TRUE
;

128  (
ªgexp
 *Ë
NULL
;

130 
∑t
 = 
sub°_∑âîn
;

131 
ªg_magic
 = 
sub°_magic
;

132 
no_sm¨tˇ£
 = 
sub°_no_scs
;

136 i‡(
œ°_∑âîn
 =
NULL
)

138 
	`emsg
(
e_n›ªvª
);

139 
rc_did_emsg
 = 
TRUE
;

140  (
ªgexp
 *Ë
NULL
;

142 
∑t
 = 
œ°_∑âîn
;

143 
ªg_magic
 = 
œ°_magic
;

144 
no_sm¨tˇ£
 = 
œ°_no_scs
;

147 i‡(
›ti⁄s
 & 
SEARCH_HIS
)

148 
	`add_to_hi°‹y
(1, 
∑t
);

150 
mr_∑âîn
 = 
∑t
;

156 i‡(!(
›ti⁄s
 & 
SEARCH_KEEP
))

161 i‡(
sub_cmd
 =
RE_SEARCH
 || sub_cmd =
RE_BOTH
)

163 i‡(
£¨ch_∑âîn
 !
∑t
)

165 
	`vim_‰ì
(
£¨ch_∑âîn
);

166 
£¨ch_∑âîn
 = 
	`°rßve
(
∑t
);

167 
œ°_∑âîn
 = 
£¨ch_∑âîn
;

168 
£¨ch_magic
 = 
ªg_magic
;

169 
œ°_magic
 = 
ªg_magic
;

170 
£¨ch_no_scs
 = 
no_sm¨tˇ£
;

171 
œ°_no_scs
 = 
no_sm¨tˇ£
;

177 i‡(
sub_cmd
 =
RE_SUBST
 || sub_cmd =
RE_BOTH
)

179 i‡(
sub°_∑âîn
 !
∑t
)

181 
	`vim_‰ì
(
sub°_∑âîn
);

182 
sub°_∑âîn
 = 
	`°rßve
(
∑t
);

183 
œ°_∑âîn
 = 
sub°_∑âîn
;

184 
sub°_magic
 = 
ªg_magic
;

185 
œ°_magic
 = 
ªg_magic
;

186 
sub°_no_scs
 = 
no_sm¨tˇ£
;

187 
œ°_no_scs
 = 
no_sm¨tˇ£
;

192 
w™t_°¨t
 = (*
∑t
 == '^');

193 
	`£t_ªg_ic
(
∑t
);

194  
	`vim_ªgcomp
(
∑t
);

195 
	}
}

201 
	$£t_ªg_ic
(
∑t
)

202 
ch¨_u
 *
∑t
;

204 
ch¨_u
 *
p
;

206 
ªg_ic
 = 
p_ic
;

207 i‡(!
no_sm¨tˇ£
 && 
p_scs


208 #ifde‡
INSERT_EXPAND


209 && !(
˘æ_x_mode
 && 
curbuf
->
b_p_öf
)

214 
p
 = 
∑t
; *p; )

215 i‡(
	`isuµî
(*
p
++))

216 
ªg_ic
 = 
FALSE
;

218 
no_sm¨tˇ£
 = 
FALSE
;

219 
	}
}

237 
	$£¨chô
(
pos
, 
dú
, 
°r
, 
cou¡
, 
›ti⁄s
, 
which_∑t
)

238 
FPOS
 *
pos
;

239 
dú
;

240 
ch¨_u
 *
°r
;

241 
cou¡
;

242 
›ti⁄s
;

243 
which_∑t
;

245 
found
;

246 
löír_t
 
 um
;

247 
ªgexp
 *
¥og
;

248 
ch¨_u
 *
±r
;

249 
ch¨_u
 *
m©ch
 = 
NULL
, *
m©chíd
 = NULL;

250 
lo›
;

251 
FPOS
 
°¨t_pos
;

252 
©_fú°_löe
;

253 
exåa_cﬁ
;

254 
m©ch_ok
;

255 
ch¨_u
 *
p
;

257 i‡((
¥og
 = 
	`myªgcomp
(
°r
, 
RE_SEARCH
, 
which_∑t
,

258 (
›ti⁄s
 & (
SEARCH_HIS
 + 
SEARCH_KEEP
)))Ë=
NULL
)

260 i‡((
›ti⁄s
 & 
SEARCH_MSG
Ë&& !
rc_did_emsg
)

261 
	`emsg2
((
ch¨_u
 *)"InvÆid sórch såög: %s", 
mr_∑âîn
);

262  
FAIL
;

265 i‡(
›ti⁄s
 & 
SEARCH_START
)

266 
exåa_cﬁ
 = 0;

268 
exåa_cﬁ
 = 1;

276 
°¨t_pos
 = *
pos
;

277 
found
 = 0;

284 i‡(
dú
 =
BACKWARD
 && 
°¨t_pos
.
cﬁ
 == 0)

286 
 um
 = 
pos
->lnum - 1;

287 
©_fú°_löe
 = 
FALSE
;

291 
 um
 = 
pos
->lnum;

292 
©_fú°_löe
 = 
TRUE
;

295 
lo›
 = 0;Üoop <= 1; ++loop)

297  ; 
 um
 > 0 &&Ünum <
curbuf
->
b_ml
.
ml_löe_cou¡
;

298 
 um
 +
dú
, 
©_fú°_löe
 = 
FALSE
)

300 
±r
 = 
	`ml_gë
(
 um
);

302 i‡(
dú
 =
FORWARD
 && 
©_fú°_löe
 && 
°¨t_pos
.
cﬁ
 > 0 &&

303 
w™t_°¨t
)

309 i‡(
	`vim_ªgexec
(
¥og
, 
±r
, 
TRUE
))

311 
m©ch
 = 
¥og
->
°¨ç
[0];

312 
m©chíd
 = 
¥og
->
ídp
[0];

319 i‡(
dú
 =
FORWARD
 && 
©_fú°_löe
)

321 
m©ch_ok
 = 
TRUE
;

328 (
›ti⁄s
 & 
SEARCH_END
) ?

329 (()(
m©chíd
 - 
±r
Ë- 1 - ()(*m©chíd =
NUL
) <

330 ()
°¨t_pos
.
cﬁ
 + 
exåa_cﬁ
) :

331 (()(
m©ch
 - 
±r
Ë- ()(*m©ch =
NUL
) <

332 ()
°¨t_pos
.
cﬁ
 + 
exåa_cﬁ
))

339 i‡(
	`vim_°rchr
(
p_˝o
, 
CPO_SEARCH
Ë!
NULL
)

341 
p
 = 
m©chíd
;

342 i‡(
m©ch
 =
p
 && *∞!
NUL
)

343 ++
p
;

347 
p
 = 
m©ch
;

348 i‡(*
p
 !
NUL
)

349 ++
p
;

351 i‡(*
p
 !
NUL
 && 
	`vim_ªgexec
(
¥og
,Ö, 
FALSE
))

353 
m©ch
 = 
¥og
->
°¨ç
[0];

354 
m©chíd
 = 
¥og
->
ídp
[0];

358 
m©ch_ok
 = 
FALSE
;

362 i‡(!
m©ch_ok
)

365 i‡(
dú
 =
BACKWARD
 && !
w™t_°¨t
)

374 
m©ch_ok
 = 
FALSE
;

377 i‡(!
©_fú°_löe
 || ((
›ti⁄s
 & 
SEARCH_END
) ?

378 ((
¥og
->
ídp
[0] - 
±r
Ë- 1 + 
exåa_cﬁ


379 <()
°¨t_pos
.
cﬁ
) :

380 ((
¥og
->
°¨ç
[0] - 
±r
Ë+ 
exåa_cﬁ


381 <()
°¨t_pos
.
cﬁ
)))

383 
m©ch_ok
 = 
TRUE
;

384 
m©ch
 = 
¥og
->
°¨ç
[0];

385 
m©chíd
 = 
¥og
->
ídp
[0];

394 i‡(
	`vim_°rchr
(
p_˝o
, 
CPO_SEARCH
Ë!
NULL
)

396 
p
 = 
m©chíd
;

397 i‡(
p
 =
m©ch
 && *∞!
NUL
)

398 ++
p
;

402 
p
 = 
m©ch
;

403 i‡(*
p
 !
NUL
)

404 ++
p
;

406 i‡(*
p
 =
NUL
 || !
	`vim_ªgexec
(
¥og
,Ö, ()
FALSE
))

414 i‡(!
m©ch_ok
)

418 
pos
->
 um
 =Ünum;

419 i‡(
›ti⁄s
 & 
SEARCH_END
 && !(›ti⁄†& 
SEARCH_NOOF
))

420 
pos
->
cﬁ
 = (Ë(
m©chíd
 - 
±r
 - 1);

422 
pos
->
cﬁ
 = (Ë(
m©ch
 - 
±r
);

423 
found
 = 1;

426 
	`löe_bªakcheck
();

427 i‡(
gŸ_öt
)

430 i‡(
lo›
 && 
 um
 =
°¨t_pos
.lnum)

433 
©_fú°_löe
 = 
FALSE
;

439 i‡(!
p_ws
 || 
gŸ_öt
 || 
found
)

449 i‡(
dú
 =
BACKWARD
)

451 
 um
 = 
curbuf
->
b_ml
.
ml_löe_cou¡
;

452 i‡(!
	`sh‹tmess
(
SHM_SEARCH
Ë&& (
›ti⁄s
 & 
SEARCH_MSG
))

453 
	`give_w¨nög
(
t›_bŸ_msg
);

457 
 um
 = 1;

458 i‡(!
	`sh‹tmess
(
SHM_SEARCH
Ë&& (
›ti⁄s
 & 
SEARCH_MSG
))

459 
	`give_w¨nög
(
bŸ_t›_msg
);

462 i‡(
gŸ_öt
)

465 --
cou¡
 > 0 && 
found
);

467 
	`vim_‰ì
(
¥og
);

469 i‡(!
found
)

471 i‡(
gŸ_öt
)

472 
	`emsg
(
e_öãº
);

473 i‡((
›ti⁄s
 & 
SEARCH_MSG
) == SEARCH_MSG)

475 i‡(
p_ws
)

476 
	`EMSG2
("P©ã∫ÇŸ found: %s", 
mr_∑âîn
);

477 i‡(
 um
 == 0)

478 
	`EMSG2
("£¨ch hô TOP wôhouàm©ch f‹: %s", 
mr_∑âîn
);

480 
	`EMSG2
("£¨ch hô BOTTOM wôhouàm©ch f‹: %s", 
mr_∑âîn
);

482  
FAIL
;

484 
£¨ch_m©ch_Àn
 = 
m©chíd
 - 
m©ch
;

486  
OK
;

487 
	}
}

509 
	$do_£¨ch
(
dúc
, 
°r
, 
cou¡
, 
›ti⁄s
)

510 
dúc
;

511 
ch¨_u
 *
°r
;

512 
cou¡
;

513 
›ti⁄s
;

515 
FPOS
 
pos
;

516 
ch¨_u
 *
£¨ch°r
;

517 
œ°sdú
 = '/';

518 
œ°ofÊöe
;

519 
œ°íd
;

520 
œ°off
;

521 
ﬁd_œ°sdú
;

522 
ﬁd_œ°ofÊöe
;

523 
ﬁd_œ°íd
;

524 
ﬁd_œ°off
;

525 
ªtvÆ
;

526 
ch¨_u
 *
p
;

527 
c
;

528 
ch¨_u
 *
dú˝
;

529 
i
 = 0;

534 i‡(
œ°ofÊöe
 && 
	`vim_°rchr
(
p_˝o
, 
CPO_LINEOFF
Ë!
NULL
)

536 
œ°ofÊöe
 = 
FALSE
;

537 
œ°off
 = 0;

544 
ﬁd_œ°sdú
 = 
œ°sdú
;

545 
ﬁd_œ°ofÊöe
 = 
œ°ofÊöe
;

546 
ﬁd_œ°íd
 = 
œ°íd
;

547 
ﬁd_œ°off
 = 
œ°off
;

549 
pos
 = 
curwö
->
w_curs‹
;

554 i‡(
dúc
 == 0)

555 
dúc
 = 
œ°sdú
;

557 
œ°sdú
 = 
dúc
;

558 i‡(
›ti⁄s
 & 
SEARCH_REV
)

560 #ifde‡
WIN32


563 
dúc
 = (dirc == '/') ? '?' : '/';

565 i‡(
dúc
 == '/')

566 
dúc
 = '?';

568 
dúc
 = '/';

577 
£¨ch°r
 = 
°r
;

578 
dú˝
 = 
NULL
;

580 i‡(
°r
 =
NULL
 || *°∏=
NUL
 || *°∏=
dúc
)

582 i‡(
£¨ch_∑âîn
 =
NULL
)

584 
	`emsg
(
e_n›ªvª
);

585 
ªtvÆ
 = 0;

586 
íd_do_£¨ch
;

588 
£¨ch°r
 = (
ch¨_u
 *)"";

591 i‡(
°r
 !
NULL
 && *°∏!
NUL
)

597 
p
 = 
	`skù_ªgexp
(
°r
, 
dúc
);

598 i‡(*
p
 =
dúc
)

600 
dú˝
 = 
p
;

601 *
p
++ = 
NUL
;

603 
œ°ofÊöe
 = 
FALSE
;

604 
œ°íd
 = 
FALSE
;

605 
œ°off
 = 0;

612 i‡(*
p
 ='+' || *∞='-' || 
	`isdigô
(*p))

613 
œ°ofÊöe
 = 
TRUE
;

614 i‡((
›ti⁄s
 & 
SEARCH_OPT
) &&

615 (*
p
 == 'e' || *p == 's' || *p == 'b'))

617 i‡(*
p
 == 'e')

618 
œ°íd
 = 
SEARCH_END
;

619 ++
p
;

621 i‡(
	`isdigô
(*
p
) || *p == '+' || *p == '-')

623 i‡(
	`isdigô
(*
p
) || isdigit(*(p + 1)))

624 
œ°off
 = 
	`©ﬁ
((*)
p
);

625 i‡(*
p
 == '-')

626 
œ°off
 = -1;

628 
œ°off
 = 1;

629 ++
p
;

630 
	`isdigô
(*
p
))

631 ++
p
;

633 
£¨chcmdÀn
 = 
p
 - 
°r
;

635 
°r
 = 
p
;

638 i‡(
›ti⁄s
 & 
SEARCH_ECHO
)

640 
	`msg_°¨t
();

641 
	`msg_outch¨
(
dúc
);

642 
	`msg_ouâøns
(*
£¨ch°r
 =
NUL
 ? 
£¨ch_∑âîn
 : searchstr);

643 i‡(
œ°ofÊöe
 || 
œ°íd
 || 
œ°off
)

645 
	`msg_outch¨
(
dúc
);

646 i‡(
œ°íd
)

647 
	`msg_outch¨
('e');

648 i‡(!
œ°ofÊöe
)

649 
	`msg_outch¨
('s');

650 i‡(
œ°off
 < 0)

652 
	`msg_outch¨
('-');

653 
	`msg_ouäum
(()-
œ°off
);

655 i‡(
œ°off
 > 0 || 
œ°ofÊöe
)

657 
	`msg_outch¨
('+');

658 
	`msg_ouäum
(()
œ°off
);

661 
	`msg_˛r_eos
();

662 ()
	`msg_check
();

664 
	`gŸocmdlöe
(
FALSE
);

665 
	`Êushbuf
();

674 i‡(!
œ°ofÊöe
 && 
œ°off
)

676 i‡(
œ°off
 > 0)

678 
c
 = 
œ°off
;

679 
c
--)

680 i‡((
i
 = 
	`dec
(&
pos
)) != 0)

682 i‡(
i
 == -1)

683 
	`gŸo_ídofbuf
(&
pos
);

687 
c
 = -
œ°off
;

688 
c
--)

689 i‡((
i
 = 
	`öc
(&
pos
)) != 0)

691 i‡(
i
 == -1)

693 
pos
.
 um
 = 1;

694 
pos
.
cﬁ
 = 0;

699 
c
 = 
	`£¨chô
(&
pos
, 
dúc
 ='/' ? 
FORWARD
 : 
BACKWARD
, 
£¨ch°r
, 
cou¡
,

700 
œ°íd
 + (
›ti⁄s
 &

701 (
SEARCH_KEEP
 + 
SEARCH_HIS
 + 
SEARCH_MSG
 +

702 ((
°r
 !
NULL
 && *°∏=';'Ë? 0 : 
SEARCH_NOOF
))),

704 i‡(
dú˝
 !
NULL
)

705 *
dú˝
 = 
dúc
;

706 i‡(
c
 =
FAIL
)

708 
ªtvÆ
 = 0;

709 
íd_do_£¨ch
;

711 i‡(
œ°íd
)

712 
›_ö˛usive
 = 
TRUE
;

714 
ªtvÆ
 = 1;

719 i‡(!(
›ti⁄s
 & 
SEARCH_NOOF
Ë|| *
°r
 == ';')

721 i‡(
œ°ofÊöe
)

723 
c
 = 
pos
.
 um
 + 
œ°off
;

724 i‡(
c
 < 1)

725 
pos
.
 um
 = 1;

726 i‡(
c
 > 
curbuf
->
b_ml
.
ml_löe_cou¡
)

727 
pos
.
 um
 = 
curbuf
->
b_ml
.
ml_löe_cou¡
;

729 
pos
.
 um
 = 
c
;

730 
pos
.
cﬁ
 = 0;

732 
ªtvÆ
 = 2;

736 i‡(
œ°off
 > 0)

738 
p
 = 
	`ml_gë_pos
(&
pos
) + 1;

739 
c
 = 
œ°off
;

740 
c
-- && *
p
++ !
NUL
)

741 ++
pos
.
cﬁ
;

745 i‡((
c
 = 
pos
.
cﬁ
 + 
œ°off
) < 0)

746 
c
 = 0;

747 
pos
.
cﬁ
 = 
c
;

760 i‡(!(
›ti⁄s
 & 
SEARCH_OPT
Ë|| 
°r
 =
NULL
 || *str != ';')

763 
dúc
 = *++
°r
;

764 i‡(
dúc
 != '?' && dirc != '/')

766 
ªtvÆ
 = 0;

767 
	`EMSG
("Expected '?' or '/'áfter ';'");

768 
íd_do_£¨ch
;

770 ++
°r
;

773 i‡(
›ti⁄s
 & 
SEARCH_MARK
)

774 
	`£çcm¨k
();

775 
curwö
->
w_curs‹
 = 
pos
;

776 
curwö
->
w_£t_cursw™t
 = 
TRUE
;

778 
íd_do_£¨ch
:

779 i‡(
›ti⁄s
 & 
SEARCH_KEEP
)

781 
œ°sdú
 = 
ﬁd_œ°sdú
;

782 
œ°ofÊöe
 = 
ﬁd_œ°ofÊöe
;

783 
œ°íd
 = 
ﬁd_œ°íd
;

784 
œ°off
 = 
ﬁd_œ°off
;

786  
ªtvÆ
;

787 
	}
}

798 
	$£¨ch_f‹_exa˘_löe
(
pos
, 
dú
, 
∑t
)

799 
FPOS
 *
pos
;

800 
dú
;

801 
ch¨_u
 *
∑t
;

803 
löír_t
 
°¨t
 = 0;

804 
ch¨_u
 *
±r
;

805 
ch¨_u
 *
p
;

807 i‡(
curbuf
->
b_ml
.
ml_löe_cou¡
 == 0)

808  
FAIL
;

811 
pos
->
 um
 +
dú
;

812 i‡(
pos
->
 um
 < 1)

814 i‡(
p_ws
)

816 
pos
->
 um
 = 
curbuf
->
b_ml
.
ml_löe_cou¡
;

817 i‡(!
	`sh‹tmess
(
SHM_SEARCH
))

818 
	`give_w¨nög
(
t›_bŸ_msg
);

822 
pos
->
 um
 = 1;

826 i‡(
pos
->
 um
 > 
curbuf
->
b_ml
.
ml_löe_cou¡
)

828 i‡(
p_ws
)

830 
pos
->
 um
 = 1;

831 i‡(!
	`sh‹tmess
(
SHM_SEARCH
))

832 
	`give_w¨nög
(
bŸ_t›_msg
);

836 
pos
->
 um
 = 1;

840 i‡(
pos
->
 um
 =
°¨t
)

842 i‡(
°¨t
 == 0)

843 
°¨t
 = 
pos
->
 um
;

844 
±r
 = 
	`ml_gë
(
pos
->
 um
);

845 
p
 = 
	`skùwhôe
(
±r
);

846 
pos
->
cﬁ
 = 
p
 - 
±r
;

847 i‡(*
p
 !
NUL
 && 
	`STRNCMP
’, 
∑t
, 
	`STRLEN
(pat)) == 0)

848  
OK
;

849 i‡(*
p
 !
NUL
 && 
p_ic
)

851 
±r
 = 
∑t
;

852 *
p
 && 
	`TO_LOWER
(*pË=TO_LOWER(*
±r
))

854 ++
p
;

855 ++
±r
;

857 i‡(*
±r
 =
NUL
)

858  
OK
;

861  
FAIL
;

862 
	}
}

876 
	$£¨chc
(
c
, 
dú
, 
ty≥
, 
cou¡
)

877 
c
;

878 
dú
;

879 
ty≥
;

880 
cou¡
;

882 
œ°c
 = 
NUL
;

883 
œ°cdú
;

884 
œ°˘y≥
;

885 
cﬁ
;

886 
ch¨_u
 *
p
;

887 
Àn
;

889 i‡(
c
 !
NUL
)

891 i‡(!
KeyStuf„d
)

893 
œ°c
 = 
c
;

894 
œ°cdú
 = 
dú
;

895 
œ°˘y≥
 = 
ty≥
;

900 i‡(
œ°c
 =
NUL
)

901  
FALSE
;

902 i‡(
dú
)

903 
dú
 = -
œ°cdú
;

905 
dú
 = 
œ°cdú
;

906 
ty≥
 = 
œ°˘y≥
;

907 
c
 = 
œ°c
;

910 
p
 = 
	`ml_gë_cuæöe
();

911 
cﬁ
 = 
curwö
->
w_curs‹
.col;

912 
Àn
 = 
	`STRLEN
(
p
);

914 
cou¡
--)

918 i‡((
cﬁ
 +
dú
Ë< 0 || cﬁ >
Àn
)

919  
FALSE
;

920 i‡(
p
[
cﬁ
] =
c
)

924 i‡(
ty≥
)

925 
cﬁ
 -
dú
;

926 
curwö
->
w_curs‹
.
cﬁ
 = col;

927  
TRUE
;

928 
	}
}

939 
FPOS
 *

940 
	$födm©ch
(
öôc
)

941 
öôc
;

943  
	`födm©chlimô
(
öôc
, 0, 0);

944 
	}
}

957 
FPOS
 *

958 
	$födm©chlimô
(
öôc
, 
Êags
, 
maxåavñ
)

959 
öôc
;

960 
Êags
;

961 
maxåavñ
;

963 
FPOS
 
pos
;

964 
födc
;

965 
c
;

966 
cou¡
 = 0;

967 
idx
 = 0;

968 
ch¨_u
 
èbÀ
[6] = {'(', ')', '[', ']', '{', '}'};

969 #ifde‡
RIGHTLEFT


970 
ch¨_u
 
èbÀ_æ
[6] = {')', '(', ']', '[', '}', '{'};

972 
öquŸe
 = 
FALSE
;

973 
ch¨_u
 *
löï
;

974 
ch¨_u
 *
±r
;

975 
do_quŸes
;

976 
©_°¨t
;

977 
hash_dú
 = 0;

978 
commít_dú
 = 0;

979 
FPOS
 
m©ch_pos
;

980 
°¨t_ö_quŸes
;

981 
åavñed
 = 0;

982 
ign‹e_˚nd
 = 
FALSE
;

983 
˝o_m©ch
;

984 
dú
;

986 
pos
 = 
curwö
->
w_curs‹
;

987 
löï
 = 
	`ml_gë
(
pos
.
 um
);

989 
˝o_m©ch
 = (
	`vim_°rchr
(
p_˝o
, 
CPO_MATCH
Ë!
NULL
);

992 i‡(
Êags
 & 
FM_BACKWARD
)

993 
dú
 = 
BACKWARD
;

994 i‡(
Êags
 & 
FM_FORWARD
)

995 
dú
 = 
FORWARD
;

997 
dú
 = 0;

1005 i‡(
öôc
 == '/' || initc == '*')

1007 
commít_dú
 = 
dú
;

1008 i‡(
öôc
 == '/')

1009 
ign‹e_˚nd
 = 
TRUE
;

1010 
idx
 = (
dú
 =
FORWARD
) ? 0 : 1;

1011 
öôc
 = 
NUL
;

1013 i‡(
öôc
 !'#' && inô¯!
NUL
)

1015 
idx
 = 0; idx < 6; ++idx)

1016 #ifde‡
RIGHTLEFT


1017 i‡((
curwö
->
w_p_æ
 ? 
èbÀ_æ
 : 
èbÀ
)[
idx
] =
öôc
)

1019 
öôc
 = (
curwö
->
w_p_æ
 ? 
èbÀ_æ
 : 
èbÀ
)[
idx
 = idx ^ 1];

1022 i‡(
èbÀ
[
idx
] =
öôc
)

1024 
öôc
 = 
èbÀ
[
idx
 = idx ^ 1];

1028 i‡(
idx
 == 6)

1029  
NULL
;

1037 i‡(
öôc
 == '#')

1039 
hash_dú
 = 
dú
;

1047 i‡(
löï
[0] ='#' && 
pos
.
cﬁ
 == 0)

1051 
c
 = 1; 
	`vim_iswhôe
(
löï
[c]); c++)

1053 i‡(
	`STRNCMP
(
löï
 + 
c
, "if", (
size_t
)2) == 0 ||

1054 
	`STRNCMP
(
löï
 + 
c
, "ídif", (
size_t
)5) == 0 ||

1055 
	`STRNCMP
(
löï
 + 
c
, "ñ", (
size_t
)2) == 0)

1056 
hash_dú
 = 1;

1062 i‡(
löï
[
pos
.
cﬁ
] == '/')

1064 i‡(
löï
[
pos
.
cﬁ
 + 1] == '*')

1066 
commít_dú
 = 1;

1067 
idx
 = 0;

1068 
pos
.
cﬁ
++;

1070 i‡(
pos
.
cﬁ
 > 0 && 
löï
[pos.col - 1] == '*')

1072 
commít_dú
 = -1;

1073 
idx
 = 1;

1074 
pos
.
cﬁ
--;

1077 i‡(
löï
[
pos
.
cﬁ
] == '*')

1079 i‡(
löï
[
pos
.
cﬁ
 + 1] == '/')

1081 
commít_dú
 = -1;

1082 
idx
 = 1;

1084 i‡(
pos
.
cﬁ
 > 0 && 
löï
[pos.col - 1] == '/')

1086 
commít_dú
 = 1;

1087 
idx
 = 0;

1095 i‡(!
hash_dú
 && !
commít_dú
)

1100 
löï
 = 
	`ml_gë
(
pos
.
 um
);

1101 
idx
 = 6;

1104 
öôc
 = 
löï
[
pos
.
cﬁ
];

1105 i‡(
öôc
 =
NUL
)

1108 
idx
 = 0; idx < 6; ++idx)

1109 #ifde‡
RIGHTLEFT


1110 i‡((
curwö
->
w_p_æ
 ? 
èbÀ_æ
 : 
èbÀ
)[
idx
] =
öôc
)

1112 i‡(
èbÀ
[
idx
] =
öôc
)

1115 i‡(
idx
 != 6)

1117 ++
pos
.
cﬁ
;

1119 i‡(
idx
 == 6)

1121 i‡(
löï
[0] == '#')

1122 
hash_dú
 = 1;

1124  
NULL
;

1128 i‡(
hash_dú
)

1133 
›_mŸi⁄_ty≥
 = 
MLINE
;

1134 i‡(
öôc
 != '#')

1136 
±r
 = 
	`skùwhôe
(
löï
 + 1);

1137 i‡(
	`STRNCMP
(
±r
, "if", (
size_t
)2) == 0 ||

1138 
	`STRNCMP
(
±r
, "ñ", (
size_t
)2) == 0)

1139 
hash_dú
 = 1;

1140 i‡(
	`STRNCMP
(
±r
, "ídif", (
size_t
)5) == 0)

1141 
hash_dú
 = -1;

1143  
NULL
;

1145 
pos
.
cﬁ
 = 0;

1146 !
gŸ_öt
)

1148 i‡(
hash_dú
 > 0)

1150 i‡(
pos
.
 um
 =
curbuf
->
b_ml
.
ml_löe_cou¡
)

1153 i‡(
pos
.
 um
 == 1)

1155 
pos
.
 um
 +
hash_dú
;

1156 
löï
 = 
	`ml_gë
(
pos
.
 um
);

1157 
	`löe_bªakcheck
();

1158 i‡(
löï
[0] != '#')

1160 
±r
 = 
löï
 + 1;

1161 *
±r
 =' ' || *±∏=
TAB
)

1162 
±r
++;

1163 i‡(
hash_dú
 > 0)

1165 i‡(
	`STRNCMP
(
±r
, "if", (
size_t
)2) == 0)

1166 
cou¡
++;

1167 i‡(
	`STRNCMP
(
±r
, "ñ", (
size_t
)2) == 0)

1169 i‡(
cou¡
 == 0)

1170  &
pos
;

1172 i‡(
	`STRNCMP
(
±r
, "ídif", (
size_t
)5) == 0)

1174 i‡(
cou¡
 == 0)

1175  &
pos
;

1176 
cou¡
--;

1181 i‡(
	`STRNCMP
(
±r
, "if", (
size_t
)2) == 0)

1183 i‡(
cou¡
 == 0)

1184  &
pos
;

1185 
cou¡
--;

1187 i‡(
öôc
 ='#' && 
	`STRNCMP
(
±r
, "ñ", (
size_t
)2) == 0)

1189 i‡(
cou¡
 == 0)

1190  &
pos
;

1192 i‡(
	`STRNCMP
(
±r
, "ídif", (
size_t
)5) == 0)

1193 
cou¡
++;

1196  
NULL
;

1200 #ifde‡
RIGHTLEFT


1201 
födc
 = (
curwö
->
w_p_æ
 ? 
èbÀ_æ
 : 
èbÀ
)[
idx
 ^ 1];

1203 
födc
 = 
èbÀ
[
idx
 ^ 1];

1205 
idx
 &= 1;

1207 
do_quŸes
 = -1;

1208 
°¨t_ö_quŸes
 = 
MAYBE
;

1209 !
gŸ_öt
)

1215 i‡(
idx
)

1217 i‡(
pos
.
cﬁ
 == 0)

1219 i‡(
pos
.
 um
 == 1)

1221 --
pos
.
 um
;

1223 i‡(
maxåavñ
 && 
åavñed
++ > maxtravel)

1226 
löï
 = 
	`ml_gë
(
pos
.
 um
);

1227 
pos
.
cﬁ
 = 
	`STRLEN
(
löï
);

1228 
do_quŸes
 = -1;

1229 
	`löe_bªakcheck
();

1232 --
pos
.
cﬁ
;

1236 i‡(
löï
[
pos
.
cﬁ
] =
NUL
)

1238 i‡(
pos
.
 um
 =
curbuf
->
b_ml
.
ml_löe_cou¡
)

1240 ++
pos
.
 um
;

1242 i‡(
maxåavñ
 && 
åavñed
++ > maxtravel)

1245 
löï
 = 
	`ml_gë
(
pos
.
 um
);

1246 
pos
.
cﬁ
 = 0;

1247 
do_quŸes
 = -1;

1248 
	`löe_bªakcheck
();

1251 ++
pos
.
cﬁ
;

1257 i‡(
pos
.
cﬁ
 =0 && (
Êags
 & 
FM_BLOCKSTOP
) &&

1258 (
löï
[0] == '{' ||Üinep[0] == '}'))

1260 i‡(
löï
[0] =
födc
 && 
cou¡
 == 0)

1261  &
pos
;

1265 i‡(
commít_dú
)

1268 i‡(
commít_dú
 == 1)

1270 i‡(
löï
[
pos
.
cﬁ
] == '*' &&Üinep[pos.col + 1] == '/')

1272 
pos
.
cﬁ
++;

1273  &
pos
;

1283 i‡(
pos
.
cﬁ
 == 0)

1285 i‡(
löï
[
pos
.
cﬁ
 - 1] == '/' &&Üinep[pos.col] == '*')

1287 
cou¡
++;

1288 
m©ch_pos
 = 
pos
;

1289 
m©ch_pos
.
cﬁ
--;

1291 i‡(
löï
[
pos
.
cﬁ
 - 1] == '*' &&Üinep[pos.col] == '/')

1293 i‡(
cou¡
 > 0)

1294 
pos
 = 
m©ch_pos
;

1295 i‡(
pos
.
cﬁ
 > 1 && 
löï
[pos.col - 2] == '/')

1296 
pos
.
cﬁ
 -= 2;

1297 i‡(
ign‹e_˚nd
)

1300  
NULL
;

1301  &
pos
;

1312 i‡(
˝o_m©ch
)

1313 
do_quŸes
 = 0;

1314 i‡(
do_quŸes
 == -1)

1319 
©_°¨t
 = 
do_quŸes
;

1320 
±r
 = 
löï
; *ptr; ++ptr)

1322 i‡(
±r
 =
löï
 + 
curwö
->
w_curs‹
.
cﬁ
)

1323 
©_°¨t
 = (
do_quŸes
 & 1);

1324 i‡(*
±r
 ='"' && (±∏=
löï
 ||Ötr[-1] != '\\') &&

1325 (
±r
 =
löï
 ||Ötr[-1] != '\'' ||Ötr[1] != '\''))

1326 ++
do_quŸes
;

1328 
do_quŸes
 &= 1;

1334 i‡(!
do_quŸes
)

1336 
öquŸe
 = 
FALSE
;

1337 i‡(
±r
[-1] == '\\')

1339 
do_quŸes
 = 1;

1340 i‡(
°¨t_ö_quŸes
 =
MAYBE
)

1342 
öquŸe
 = !
©_°¨t
;

1343 i‡(
öquŸe
)

1344 
°¨t_ö_quŸes
 = 
TRUE
;

1346 i‡(
idx
)

1347 
öquŸe
 = 
TRUE
;

1349 i‡(
pos
.
 um
 > 1)

1351 
±r
 = 
	`ml_gë
(
pos
.
 um
 - 1);

1352 i‡(*
±r
 && *’å + 
	`STRLEN
(ptr) - 1) == '\\')

1354 
do_quŸes
 = 1;

1355 i‡(
°¨t_ö_quŸes
 =
MAYBE
)

1357 
öquŸe
 = 
©_°¨t
;

1358 i‡(
öquŸe
)

1359 
°¨t_ö_quŸes
 = 
TRUE
;

1361 i‡(!
idx
)

1362 
öquŸe
 = 
TRUE
;

1367 i‡(
°¨t_ö_quŸes
 =
MAYBE
)

1368 
°¨t_ö_quŸes
 = 
FALSE
;

1381 
c
 = 
löï
[
pos
.
cﬁ
])

1383 
NUL
:

1385 i‡(
pos
.
cﬁ
 =0 || 
löï
[pos.col - 1] != '\\')

1387 
öquŸe
 = 
FALSE
;

1388 
°¨t_ö_quŸes
 = 
FALSE
;

1394 i‡(
do_quŸes
 && (
pos
.
cﬁ
 =0 || 
löï
[pos.col - 1] != '\\'))

1396 
öquŸe
 = !inquote;

1397 
°¨t_ö_quŸes
 = 
FALSE
;

1408 i‡(
	`vim_°rchr
(
p_˝o
, 
CPO_MATCH
Ë=
NULL
)

1410 i‡(
idx
)

1412 i‡(
pos
.
cﬁ
 > 1)

1414 i‡(
löï
[
pos
.
cﬁ
 - 2] == '\'')

1415 
pos
.
cﬁ
 -= 2;

1416 i‡(
löï
[
pos
.
cﬁ
 - 2] == '\\' &&

1417 
pos
.
cﬁ
 > 2 && 
löï
[pos.col - 3] == '\'')

1418 
pos
.
cﬁ
 -= 3;

1421 i‡(
löï
[
pos
.
cﬁ
 + 1])

1423 i‡(
löï
[
pos
.
cﬁ
 + 1] == '\\' &&

1424 
löï
[
pos
.
cﬁ
 + 2] &&Üinep[pos.col + 3] == '\'')

1425 
pos
.
cﬁ
 += 3;

1426 i‡(
löï
[
pos
.
cﬁ
 + 2] == '\'')

1427 
pos
.
cﬁ
 += 2;

1435 i‡(!
öquŸe
 || 
°¨t_ö_quŸes
 =
TRUE
)

1437 i‡(
c
 =
öôc
)

1438 
cou¡
++;

1439 i‡(
c
 =
födc
)

1441 i‡(
cou¡
 == 0)

1442  &
pos
;

1443 
cou¡
--;

1449 i‡(
commít_dú
 =-1 && 
cou¡
 > 0)

1451 
pos
 = 
m©ch_pos
;

1452  &
pos
;

1454  (
FPOS
 *Ë
NULL
;

1455 
	}
}

1462 
	$showm©ch
()

1464 
FPOS
 *
Õos
, 
cßve
;

1465 
cﬁƒ_t
 
vcﬁ
;

1467 i‡((
Õos
 = 
	`födm©ch
(
NUL
)Ë=
NULL
)

1468 
	`bìp_Êush
();

1469 i‡(
Õos
->
 um
 >
curwö
->
w_t›löe
)

1471 i‡(!
curwö
->
w_p_wøp
)

1472 
	`gëvcﬁ
(
curwö
, 
Õos
, 
NULL
, &
vcﬁ
, NULL);

1473 i‡(
curwö
->
w_p_wøp
 || (
vcﬁ
 >curwö->
w_À·cﬁ
 &&

1474 
vcﬁ
 < 
curwö
->
w_À·cﬁ
 + 
Cﬁumns
))

1476 
	`upd©eS¸ìn
(
VALID_TO_CURSCHAR
);

1477 
cßve
 = 
curwö
->
w_curs‹
;

1478 
curwö
->
w_curs‹
 = *
Õos
;

1479 
	`cursupd©e
();

1480 
	`showruÀr
(0);

1481 
	`£tcurs‹
();

1482 
	`curs‹_⁄
();

1483 
	`Êushbuf
();

1489 i‡(
	`vim_°rchr
(
p_˝o
, 
CPO_SHOWMATCH
Ë!
NULL
)

1490 
	`mch_dñay
(500L, 
TRUE
);

1491 i‡(!
	`ch¨_avaû
())

1492 
	`mch_dñay
(500L, 
FALSE
);

1493 
curwö
->
w_curs‹
 = 
cßve
;

1494 
	`cursupd©e
();

1497 
	}
}

1506 
	$föd£¡
(
dú
, 
cou¡
)

1507 
dú
;

1508 
cou¡
;

1510 
FPOS
 
pos
, 
ços
;

1511 
c
;

1512 (*
func
Ë
	`__PARMS
((
FPOS
 *));

1513 
°¨énum
;

1514 
noskù
 = 
FALSE
;

1516 
pos
 = 
curwö
->
w_curs‹
;

1517 i‡(
dú
 =
FORWARD
)

1518 
func
 = 
ö˛
;

1520 
func
 = 
de˛
;

1522 
cou¡
--)

1527 i‡(
	`gch¨
(&
pos
Ë=
NUL
)

1530 i‡((*
func
)(&
pos
) == -1)

1532 
	`gch¨
(&
pos
Ë=
NUL
);

1533 i‡(
dú
 =
FORWARD
)

1534 
found
;

1540 i‡(
dú
 =
FORWARD
 && 
pos
.
cﬁ
 == 0 &&

1541 
	`°¨tPS
(
pos
.
 um
, 
NUL
, 
FALSE
))

1543 i‡(
pos
.
 um
 =
curbuf
->
b_ml
.
ml_löe_cou¡
)

1544  
FAIL
;

1545 ++
pos
.
 um
;

1546 
found
;

1548 i‡(
dú
 =
BACKWARD
)

1549 
	`de˛
(&
pos
);

1552 (
c
 = 
	`gch¨
(&
pos
)) == ' ' || c == '\t' ||

1553 (
dú
 =
BACKWARD
 && 
	`vim_°rchr
((
ch¨_u
 *)".!?)]\"'", 
c
Ë!
NULL
))

1555 i‡(
	`de˛
(&
pos
) == -1)

1558 i‡(
	`löìm±y
(
pos
.
 um
Ë&& 
dú
 =
FORWARD
)

1560 
	`ö˛
(&
pos
);

1561 
found
;

1566 
°¨énum
 = 
pos
.
 um
;

1570 
c
 = 
	`gch¨
(&
pos
);

1571 i‡(
c
 =
NUL
 || (
pos
.
cﬁ
 =0 && 
	`°¨tPS
’os.
 um
, NUL, 
FALSE
)))

1573 i‡(
dú
 =
BACKWARD
 && 
pos
.
 um
 !
°¨énum
)

1574 ++
pos
.
 um
;

1577 i‡(
c
 == '.' || c == '!' || c == '?')

1579 
ços
 = 
pos
;

1581 i‡((
c
 = 
	`öc
(&
ços
)) == -1)

1583 
	`vim_°rchr
((
ch¨_u
 *)")]\"'", 
c
 = 
	`gch¨
(&
ços
)Ë!
NULL
);

1584 i‡(
c
 =-1 || c =' ' || c ='\t' || c =
NUL
)

1586 
pos
 = 
ços
;

1587 i‡(
	`gch¨
(&
pos
Ë=
NUL
)

1588 
	`öc
(&
pos
);

1592 i‡((*
func
)(&
pos
) == -1)

1594 i‡(
cou¡
)

1595  
FAIL
;

1596 
noskù
 = 
TRUE
;

1600 
found
:

1602 !
noskù
 && ((
c
 = 
	`gch¨
(&
pos
)) == ' ' || c == '\t'))

1603 i‡(
	`ö˛
(&
pos
) == -1)

1607 
	`£çcm¨k
();

1608 
curwö
->
w_curs‹
 = 
pos
;

1609  
OK
;

1610 
	}
}

1620 
	$föd∑r
(
dú
, 
cou¡
, 
wh©
, 
bŸh
)

1621 
dú
;

1622 
cou¡
;

1623 
wh©
;

1624 
bŸh
;

1626 
löír_t
 
cuº
;

1627 
did_skù
;

1629 
fú°
;

1631 
cuº
 = 
curwö
->
w_curs‹
.
 um
;

1633 
cou¡
--)

1635 
did_skù
 = 
FALSE
;

1636 
fú°
 = 
TRUE
; ; fú° = 
FALSE
)

1638 i‡(*
	`ml_gë
(
cuº
Ë!
NUL
)

1639 
did_skù
 = 
TRUE
;

1641 i‡(!
fú°
 && 
did_skù
 && 
	`°¨tPS
(
cuº
, 
wh©
, 
bŸh
))

1644 i‡((
cuº
 +
dú
Ë< 1 || cuº > 
curbuf
->
b_ml
.
ml_löe_cou¡
)

1646 i‡(
cou¡
)

1647  
FALSE
;

1648 
cuº
 -
dú
;

1653 
	`£çcm¨k
();

1654 i‡(
bŸh
 && *
	`ml_gë
(
cuº
) == '}')

1655 ++
cuº
;

1656 
curwö
->
w_curs‹
.
 um
 = 
cuº
;

1657 i‡(
cuº
 =
curbuf
->
b_ml
.
ml_löe_cou¡
)

1659 i‡((
curwö
->
w_curs‹
.
cﬁ
 = 
	`STRLEN
(
	`ml_gë
(
cuº
))) != 0)

1661 --
curwö
->
w_curs‹
.
cﬁ
;

1662 
›_ö˛usive
 = 
TRUE
;

1666 
curwö
->
w_curs‹
.
cﬁ
 = 0;

1667  
TRUE
;

1668 
	}
}

1674 
	$öma¸o
(
›t
, 
s
)

1675 
ch¨_u
 *
›t
;

1676 
ch¨_u
 *
s
;

1678 
ch¨_u
 *
ma¸o
;

1680 
ma¸o
 = 
›t
; macro[0]; ++macro)

1682 i‡(
ma¸o
[0] =
s
[0] && (((s[1] =
NUL
 || s[1] == ' ') &&

1683 (
ma¸o
[1] =
NUL
 || ma¸o[1] =' ')Ë|| ma¸o[1] =
s
[1]))

1685 ++
ma¸o
;

1686 i‡(
ma¸o
[0] =
NUL
)

1689  (
ma¸o
[0] !
NUL
);

1690 
	}
}

1698 
	$°¨tPS
(
 um
, 
∑ø
, 
bŸh
)

1699 
löír_t
 
 um
;

1700 
∑ø
;

1701 
bŸh
;

1703 
ch¨_u
 *
s
;

1705 
s
 = 
	`ml_gë
(
 um
);

1706 i‡(*
s
 =
∑ø
 || *†='\f' || (
bŸh
 && *s == '}'))

1707  
TRUE
;

1708 i‡(*
s
 ='.' && (
	`öma¸o
(
p_£˘i⁄s
, s + 1) ||

1709 (!
∑ø
 && 
	`öma¸o
(
p_∑ø
, 
s
 + 1))))

1710  
TRUE
;

1711  
FALSE
;

1712 
	}
}

1730 
	g°y≥
;

1740 
	$˛s
()

1742 
c
;

1744 
c
 = 
	`gch¨_curs‹
();

1745 i‡(
c
 =' ' || c ='\t' || c =
NUL
)

1748 i‡(
	`isw‹dch¨
(
c
))

1754  (
°y≥
 == 0) ? 2 : 1;

1755 
	}
}

1765 
	$fwd_w‹d
(
cou¡
, 
ty≥
, 
eﬁ
)

1766 
cou¡
;

1767 
ty≥
;

1768 
eﬁ
;

1770 
s˛ass
;

1771 
i
;

1772 
œ°_löe
;

1774 
°y≥
 = 
ty≥
;

1775 --
cou¡
 >= 0)

1777 
s˛ass
 = 
	`˛s
();

1783 
œ°_löe
 = (
curwö
->
w_curs‹
.
 um
 =
curbuf
->
b_ml
.
ml_löe_cou¡
);

1784 
i
 = 
	`öc_curs‹
();

1785 i‡(
i
 =-1 || (ò=1 && 
œ°_löe
))

1787  
FAIL
;

1788 i‡(
i
 =1 && 
eﬁ
 && 
cou¡
 == 0)

1789  
OK
;

1794 i‡(
s˛ass
 != 0)

1795 
	`˛s
(Ë=
s˛ass
)

1797 
i
 = 
	`öc_curs‹
();

1798 i‡(
i
 =-1 || (ò=1 && 
eﬁ
 && 
cou¡
 == 0))

1799  
OK
;

1805 
	`˛s
() == 0)

1810 i‡(
curwö
->
w_curs‹
.
cﬁ
 =0 && *
	`ml_gë_cuæöe
(Ë=
NUL
)

1813 
i
 = 
	`öc_curs‹
();

1814 i‡(
i
 =-1 || (ò=1 && 
eﬁ
 && 
cou¡
 == 0))

1815  
OK
;

1818  
OK
;

1819 
	}
}

1829 
	$bck_w‹d
(
cou¡
, 
ty≥
, 
°›
)

1830 
cou¡
;

1831 
ty≥
;

1832 
°›
;

1834 
s˛ass
;

1836 
°y≥
 = 
ty≥
;

1837 --
cou¡
 >= 0)

1839 
s˛ass
 = 
	`˛s
();

1840 i‡(
	`dec_curs‹
() == -1)

1841  
FAIL
;

1843 i‡(!
°›
 || 
s˛ass
 =
	`˛s
() || sclass == 0)

1849 
	`˛s
() == 0)

1851 i‡(
curwö
->
w_curs‹
.
cﬁ
 == 0 &&

1852 
	`löìm±y
(
curwö
->
w_curs‹
.
 um
))

1853 
föished
;

1855 i‡(
	`dec_curs‹
() == -1)

1856  
OK
;

1862 i‡(
	`skù_ch¨s
(
	`˛s
(), 
BACKWARD
))

1863  
OK
;

1866 
	`öc_curs‹
();

1867 
föished
:

1868 
°›
 = 
FALSE
;

1870  
OK
;

1871 
	}
}

1889 
	$íd_w‹d
(
cou¡
, 
ty≥
, 
°›
, 
em±y
)

1890 
cou¡
;

1891 
ty≥
;

1892 
°›
;

1893 
em±y
;

1895 
s˛ass
;

1897 
°y≥
 = 
ty≥
;

1898 --
cou¡
 >= 0)

1900 
s˛ass
 = 
	`˛s
();

1901 i‡(
	`öc_curs‹
() == -1)

1902  
FAIL
;

1908 i‡(
	`˛s
(Ë=
s˛ass
 && sclass != 0)

1913 i‡(
	`skù_ch¨s
(
s˛ass
, 
FORWARD
))

1914  
FAIL
;

1916 i‡(!
°›
 || 
s˛ass
 == 0)

1922 
	`˛s
() == 0)

1924 i‡(
em±y
 && 
curwö
->
w_curs‹
.
cﬁ
 == 0 &&

1925 
	`löìm±y
(
curwö
->
w_curs‹
.
 um
))

1926 
föished
;

1927 i‡(
	`öc_curs‹
() == -1)

1928  
FAIL
;

1934 i‡(
	`skù_ch¨s
(
	`˛s
(), 
FORWARD
))

1935  
FAIL
;

1937 
	`dec_curs‹
();

1938 
föished
:

1939 
°›
 = 
FALSE
;

1941  
OK
;

1942 
	}
}

1952 
	$bckíd_w‹d
(
cou¡
, 
ty≥
, 
eﬁ
)

1953 
cou¡
;

1954 
ty≥
;

1955 
eﬁ
;

1957 
s˛ass
;

1958 
i
;

1960 
°y≥
 = 
ty≥
;

1961 --
cou¡
 >= 0)

1963 
s˛ass
 = 
	`˛s
();

1964 i‡((
i
 = 
	`dec_curs‹
()) == -1)

1965  
FAIL
;

1966 i‡(
eﬁ
 && 
i
 == 1)

1967  
OK
;

1972 i‡(
s˛ass
 != 0)

1974 
	`˛s
(Ë=
s˛ass
)

1975 i‡((
i
 = 
	`dec_curs‹
()Ë=-1 || (
eﬁ
 && i == 1))

1976  
OK
;

1982 
	`˛s
() == 0)

1984 i‡(
curwö
->
w_curs‹
.
cﬁ
 =0 && 
	`löìm±y
(curwö->w_curs‹.
 um
))

1986 i‡((
i
 = 
	`dec_curs‹
()Ë=-1 || (
eﬁ
 && i == 1))

1987  
OK
;

1990  
OK
;

1991 
	}
}

1994 
	$skù_ch¨s
(
c˛ass
, 
dú
)

1995 
c˛ass
;

1996 
dú
;

1998 
	`˛s
(Ë=
c˛ass
)

1999 i‡((
dú
 =
FORWARD
 ? 
	`öc_curs‹
(Ë: 
	`dec_curs‹
()) == -1)

2000  
TRUE
;

2001  
FALSE
;

2002 
	}
}

2008 
	$back_ö_löe
()

2010 
s˛ass
;

2012 
s˛ass
 = 
	`˛s
();

2015 i‡(
curwö
->
w_curs‹
.
cﬁ
 == 0)

2017 --
curwö
->
w_curs‹
.
cﬁ
;

2018 i‡(
	`˛s
(Ë!
s˛ass
)

2020 ++
curwö
->
w_curs‹
.
cﬁ
;

2024 
	}
}

2030 
	$cuºít_w‹d
(
cou¡
, 
ty≥
)

2031 
cou¡
;

2032 
ty≥
;

2034 
FPOS
 
°¨t
;

2035 
FPOS
 
pos
;

2036 
ö˛usive
 = 
TRUE
;

2038 
°y≥
 = 
ty≥
;

2043 i‡(
VIsuÆ_a˘ive
 && !
	`equÆ
(
curwö
->
w_curs‹
, 
VIsuÆ
))

2045 i‡(
	`…
(
curwö
->
w_curs‹
, 
VIsuÆ
))

2047 i‡(
	`de˛
(&
curwö
->
w_curs‹
) == -1)

2048  
FAIL
;

2049 i‡(
	`˛s
() == 0)

2051 i‡(
	`bckíd_w‹d
(
cou¡
, 
ty≥
, 
TRUE
Ë=
FAIL
)

2052  
FAIL
;

2053 ()
	`ö˛
(&
curwö
->
w_curs‹
);

2057 i‡(
	`bck_w‹d
(
cou¡
, 
ty≥
, 
TRUE
Ë=
FAIL
)

2058  
FAIL
;

2063 i‡(
	`ö˛
(&
curwö
->
w_curs‹
) == -1)

2064  
FAIL
;

2065 i‡(
	`˛s
() == 0)

2067 i‡(
	`fwd_w‹d
(
cou¡
, 
ty≥
, 
TRUE
Ë=
FAIL
)

2068  
FAIL
;

2069 ()
	`⁄ñe·
();

2073 i‡(
	`íd_w‹d
(
cou¡
, 
ty≥
, 
TRUE
, TRUEË=
FAIL
)

2074  
FAIL
;

2077  
OK
;

2083 
	`back_ö_löe
();

2084 
°¨t
 = 
curwö
->
w_curs‹
;

2090 i‡(
	`˛s
() == 0)

2092 i‡(
	`íd_w‹d
(
cou¡
, 
ty≥
, 
TRUE
, TRUEË=
FAIL
)

2093  
FAIL
;

2097 i‡(
	`fwd_w‹d
(
cou¡
, 
ty≥
, 
TRUE
Ë=
FAIL
)

2098  
FAIL
;

2103 i‡(
	`⁄ñe·
(Ë=
FAIL
)

2104 
ö˛usive
 = 
FALSE
;

2107 
pos
 = 
curwö
->
w_curs‹
;

2114 i‡(
	`˛s
() != 0)

2116 
curwö
->
w_curs‹
 = 
°¨t
;

2117 i‡(
	`⁄ñe·
(Ë=
OK
)

2119 
	`back_ö_löe
();

2120 i‡(
	`˛s
(Ë=0 && 
curwö
->
w_curs‹
.
cﬁ
 > 0)

2121 
°¨t
 = 
curwö
->
w_curs‹
;

2124 
curwö
->
w_curs‹
 = 
pos
;

2127 i‡(
VIsuÆ_a˘ive
)

2130 
VIsuÆ
 = 
°¨t
;

2131 
VIsuÆ_mode
 = 'v';

2132 
	`upd©e_curbuf
(
NOT_VALID
);

2136 
curbuf
->
b_›_°¨t
 = 
°¨t
;

2137 
›_mŸi⁄_ty≥
 = 
MCHAR
;

2138 
›_ö˛usive
 = 
ö˛usive
;

2140  
OK
;

2141 
	}
}

2147 
	$cuºít_£¡
(
cou¡
)

2148 
cou¡
;

2150 
FPOS
 
°¨t
;

2151 
FPOS
 
pos
;

2152 
°¨t_bœnk
;

2153 
c
;

2155 
pos
 = 
curwö
->
w_curs‹
;

2156 
°¨t
 = 
pos
;

2161 i‡(
VIsuÆ_a˘ive
 && !
	`equÆ
(
curwö
->
w_curs‹
, 
VIsuÆ
))

2163 i‡(
	`…
(
pos
, 
VIsuÆ
))

2170 i‡(
	`ö˛
(&
curwö
->
w_curs‹
) == -1)

2171  
FAIL
;

2172 
	`föd£¡
(
BACKWARD
, 1L);

2173 
°¨t
 = 
curwö
->
w_curs‹
;

2174 i‡(
cou¡
 > 1)

2175 
	`föd£¡
(
BACKWARD
, 
cou¡
 - 1);

2182 i‡(
	`equÆ
(
pos
, 
°¨t
))

2184 
	`cuºít_w‹d
(1L, 0);

2185 
c
 = 
	`gch¨_curs‹
();

2186 i‡(
c
 !
NUL
 && !
	`vim_iswhôe
(c))

2187 
	`föd£¡
(
BACKWARD
, 1L);

2198 
	`föd£¡
(
FORWARD
, 1L);

2199 
	`ö˛
(&
pos
);

2200 i‡(
	`equÆ
(
pos
, 
curwö
->
w_curs‹
))

2202 
	`föd£¡
(
FORWARD
, 
cou¡
);

2203 
	`föd_fú°_bœnk
(&
curwö
->
w_curs‹
);

2205 i‡(
cou¡
 > 1)

2206 
	`föd£¡
(
FORWARD
, 
cou¡
 - 1);

2207 
	`de˛
(&
curwö
->
w_curs‹
);

2209  
OK
;

2215 
	`föd£¡
(
FORWARD
, 1L);

2221 
	`vim_iswhôe
(
	`gch¨
(&
pos
)))

2222 
	`ö˛
(&
pos
);

2223 i‡(
	`equÆ
(
pos
, 
curwö
->
w_curs‹
))

2225 
°¨t_bœnk
 = 
TRUE
;

2229 
	`de˛
(&
°¨t
) != -1)

2231 i‡(!
	`vim_iswhôe
(
	`gch¨
(&
°¨t
)))

2233 
	`ö˛
(&
°¨t
);

2240 
°¨t_bœnk
 = 
FALSE
;

2241 
	`föd£¡
(
BACKWARD
, 1L);

2242 
°¨t
 = 
curwö
->
w_curs‹
;

2244 
	`föd£¡
(
FORWARD
, 
cou¡
);

2250 i‡(
°¨t_bœnk
)

2251 
	`föd_fú°_bœnk
(&
curwö
->
w_curs‹
);

2257 
pos
 = 
curwö
->
w_curs‹
;

2258 
	`de˛
(&
pos
);

2259 i‡(!
	`vim_iswhôe
(
	`gch¨
(&
pos
)))

2260 
	`föd_fú°_bœnk
(&
°¨t
);

2263 i‡(
VIsuÆ_a˘ive
)

2265 
VIsuÆ
 = 
°¨t
;

2266 
VIsuÆ_mode
 = 'v';

2267 
	`de˛
(&
curwö
->
w_curs‹
);

2268 
	`upd©e_curbuf
(
NOT_VALID
);

2272 
curbuf
->
b_›_°¨t
 = 
°¨t
;

2273 
›_mŸi⁄_ty≥
 = 
MCHAR
;

2274 
›_ö˛usive
 = 
FALSE
;

2276  
OK
;

2277 
	}
}

2280 
	$cuºít_block
(
wh©
, 
cou¡
)

2281 
wh©
;

2282 
cou¡
;

2284 
FPOS
 
ﬁd_pos
;

2285 
FPOS
 *
pos
 = 
NULL
;

2286 
FPOS
 
°¨t_pos
;

2287 
FPOS
 *
íd_pos
;

2288 
FPOS
 
ﬁd_°¨t
, 
ﬁd_íd
;

2289 
ö˛usive
 = 
FALSE
;

2290 
Ÿhî
;

2292 
ﬁd_pos
 = 
curwö
->
w_curs‹
;

2293 i‡(
wh©
 == '{')

2294 
Ÿhî
 = '}';

2296 
Ÿhî
 = ')';

2298 
ﬁd_íd
 = 
curwö
->
w_curs‹
;

2299 
ﬁd_°¨t
 = 
ﬁd_íd
;

2304 i‡(!
VIsuÆ_a˘ive
 || (
VIsuÆ
.
 um
 =
curwö
->
w_curs‹
.lnum &&

2305 
VIsuÆ
.
cﬁ
 =
curwö
->
w_curs‹
.col))

2307 i‡(
wh©
 == '{')

2308 
	`öödít
(1))

2309 i‡(
	`öc_curs‹
() != 0)

2311 i‡(
	`gch¨_curs‹
(Ë=
wh©
)

2313 ++
curwö
->
w_curs‹
.
cﬁ
;

2314 
ö˛usive
 = 
TRUE
;

2316 i‡(
	`gch¨_curs‹
(Ë=
Ÿhî
)

2317 
ö˛usive
 = 
TRUE
;

2319 i‡(
	`…
(
VIsuÆ
, 
curwö
->
w_curs‹
))

2321 
ﬁd_°¨t
 = 
VIsuÆ
;

2322 
curwö
->
w_curs‹
 = 
VIsuÆ
;

2325 
ﬁd_íd
 = 
VIsuÆ
;

2331 
cou¡
--)

2333 i‡((
pos
 = 
	`födm©ch
(
wh©
)Ë=
NULL
)

2335 
curwö
->
w_curs‹
 = *
pos
;

2336 
°¨t_pos
 = *
pos
;

2343 i‡(
pos
 =
NULL
 || (
íd_pos
 = 
	`födm©ch
(
Ÿhî
)) == NULL)

2345 
curwö
->
w_curs‹
 = 
ﬁd_pos
;

2346  
FAIL
;

2348 
curwö
->
w_curs‹
 = *
íd_pos
;

2355 i‡(!
ö˛usive
)

2357 
	`ö˛
(&
°¨t_pos
);

2358 
ﬁd_pos
 = 
curwö
->
w_curs‹
;

2359 
	`de˛
(&
curwö
->
w_curs‹
);

2360 i‡(
wh©
 == '{')

2361 
	`öödít
(0))

2362 i‡(
	`de˛
(&
curwö
->
w_curs‹
) != 0)

2364 i‡(!
	`…
(
°¨t_pos
, 
ﬁd_°¨t
Ë&& !…(
ﬁd_íd
, 
curwö
->
w_curs‹
))

2366 
	`de˛
(&
°¨t_pos
);

2367 
curwö
->
w_curs‹
 = 
ﬁd_pos
;

2371 i‡(
VIsuÆ_a˘ive
)

2373 
VIsuÆ
 = 
°¨t_pos
;

2374 
VIsuÆ_mode
 = 'v';

2375 
	`upd©e_curbuf
(
NOT_VALID
);

2376 
	`showmode
();

2380 
curbuf
->
b_›_°¨t
 = 
°¨t_pos
;

2381 
›_mŸi⁄_ty≥
 = 
MCHAR
;

2382 
›_ö˛usive
 = 
TRUE
;

2385  
OK
;

2386 
	}
}

2389 
	$cuºít_∑r
(
ty≥
, 
cou¡
)

2390 
ty≥
;

2391 
cou¡
;

2393 
löír_t
 
°¨t
;

2394 
löír_t
 
íd
;

2395 
whôe_ö_‰⁄t
;

2396 
dú
;

2397 
°¨t_is_whôe
;

2398 
ªtvÆ
 = 
OK
;

2400 i‡(
ty≥
 == 'S')

2401  
FAIL
;

2403 
°¨t
 = 
curwö
->
w_curs‹
.
 um
;

2408 i‡(
VIsuÆ_a˘ive
 && 
°¨t
 !
VIsuÆ
.
 um
)

2410 i‡(
°¨t
 < 
VIsuÆ
.
 um
)

2411 
dú
 = 
BACKWARD
;

2413 
dú
 = 
FORWARD
;

2414 
cou¡
--)

2416 i‡(
°¨t
 =(
dú
 =
BACKWARD
 ? 1 : 
curbuf
->
b_ml
.
ml_löe_cou¡
))

2417 
ªtvÆ
 = 
FAIL
;

2419 
°¨t_is_whôe
 = -1;

2422 i‡(
°¨t
 =(
dú
 =
BACKWARD
 ? 1 : 
curbuf
->
b_ml
.
ml_löe_cou¡
))

2424 i‡(
°¨t_is_whôe
 >= 0 &&

2425 (
°¨t_is_whôe
 !
	`löewhôe
(
°¨t
 + 
dú
) ||

2426 
	`°¨tPS
(
°¨t
 + (
dú
 > 0 ? 1 : 0), 0, 0)))

2428 
°¨t
 +
dú
;

2429 i‡(
°¨t_is_whôe
 < 0)

2430 
°¨t_is_whôe
 = 
	`löewhôe
(
°¨t
);

2433 
curwö
->
w_curs‹
.
 um
 = 
°¨t
;

2434 
curwö
->
w_curs‹
.
cﬁ
 = 0;

2435  
ªtvÆ
;

2441 
whôe_ö_‰⁄t
 = 
	`löewhôe
(
°¨t
);

2442 
°¨t
 > 1)

2444 i‡(
whôe_ö_‰⁄t
)

2446 i‡(!
	`löewhôe
(
°¨t
 - 1))

2451 i‡(
	`löewhôe
(
°¨t
 - 1Ë|| 
	`°¨tPS
(start, 0, 0))

2454 --
°¨t
;

2460 
íd
 = 
°¨t
;

2461 
	`löewhôe
(
íd
Ë&&Énd < 
curbuf
->
b_ml
.
ml_löe_cou¡
)

2462 ++
íd
;

2464 --
íd
;

2465 
cou¡
--)

2467 i‡(
íd
 =
curbuf
->
b_ml
.
ml_löe_cou¡
)

2468  
FAIL
;

2470 ++
íd
;

2474 
íd
 < 
curbuf
->
b_ml
.
ml_löe_cou¡
 &&

2475 !
	`löewhôe
(
íd
 + 1Ë&& !
	`°¨tPS
(end + 1, 0, 0))

2476 ++
íd
;

2478 i‡(
cou¡
 =0 && 
whôe_ö_‰⁄t
)

2484 
íd
 < 
curbuf
->
b_ml
.
ml_löe_cou¡
 && 
	`löewhôe
(end + 1))

2485 ++
íd
;

2492 i‡(!
whôe_ö_‰⁄t
 && !
	`löewhôe
(
íd
))

2493 
°¨t
 > 1 && 
	`löewhôe
(start - 1))

2494 --
°¨t
;

2496 i‡(
VIsuÆ_a˘ive
)

2498 
VIsuÆ
.
 um
 = 
°¨t
;

2499 
VIsuÆ_mode
 = 'V';

2500 
	`upd©e_curbuf
(
NOT_VALID
);

2501 
	`showmode
();

2505 
curbuf
->
b_›_°¨t
.
 um
 = 
°¨t
;

2506 
›_mŸi⁄_ty≥
 = 
MLINE
;

2508 
curwö
->
w_curs‹
.
 um
 = 
íd
;

2509 
curwö
->
w_curs‹
.
cﬁ
 = 0;

2511  
OK
;

2512 
	}
}

2518 
	$löewhôe
(
 um
)

2519 
löír_t
 
 um
;

2521 
ch¨_u
 *
p
;

2523 
p
 = 
	`skùwhôe
(
	`ml_gë
(
 um
));

2524  (*
p
 =
NUL
);

2525 
	}
}

2528 
	$föd_fú°_bœnk
(
po•
)

2529 
FPOS
 *
po•
;

2531 
	`de˛
(
po•
) != -1)

2533 i‡(!
	`vim_iswhôe
(
	`gch¨
(
po•
)))

2535 
	`ö˛
(
po•
);

2539 
	}
}

2542 
	$föd_∑âîn_ö_∑th
(
±r
, 
Àn
, 
whﬁe
, 
skù_commíts
,

2543 
ty≥
, 
cou¡
, 
a˘i⁄
, 
°¨t_ um
, 
íd_ um
)

2544 
ch¨_u
 *
±r
;

2545 
Àn
;

2546 
whﬁe
;

2547 
skù_commíts
;

2548 
ty≥
;

2550 
cou¡
;

2551 
a˘i⁄
;

2552 
löír_t
 
°¨t_ um
;

2553 
löír_t
 
íd_ um
;

2555 
SórchedFûe
 *
fûes
;

2556 
SórchedFûe
 *
biggî
;

2557 
max_∑th_dïth
 = 50;

2558 
m©ch_cou¡
 = 1;

2560 
ch¨_u
 *
∑t
;

2561 
ch¨_u
 *
√w_‚ame
;

2562 
ch¨_u
 *
cuº_‚ame
 = 
curbuf
->
b_xfûíame
;

2563 
ch¨_u
 *
¥ev_‚ame
 = 
NULL
;

2564 
löír_t
 
 um
;

2565 
dïth
;

2566 
dïth_di•œyed
;

2567 
ﬁd_fûes
;

2568 
Æªady_£¨ched
;

2569 
ch¨_u
 *
fûe_löe
;

2570 
ch¨_u
 *
löe
;

2571 
ch¨_u
 *
p
;

2572 
ch¨_u
 *
p2
 = 
NUL
;

2573 
ch¨_u
 
ßve_ch¨
 = 
NUL
;

2574 
deföe_m©ched
;

2575 
ªgexp
 *
¥og
 = 
NULL
;

2576 
ªgexp
 *
ö˛ude_¥og
 = 
NULL
;

2577 
ªgexp
 *
deföe_¥og
 = 
NULL
;

2578 
m©ched
 = 
FALSE
;

2579 
did_show
 = 
FALSE
;

2580 
found
 = 
FALSE
;

2581 
i
;

2583 
fûe_löe
 = 
	`Æloc
(
LSIZE
);

2584 i‡(
fûe_löe
 =
NULL
)

2587 
ªg_magic
 = 
p_magic
;

2588 i‡(
ty≥
 !
CHECK_PATH
)

2590 
∑t
 = 
	`Æloc
(
Àn
 + 5);

2591 i‡(
∑t
 =
NULL
)

2592 
Âù_íd
;

2593 
	`•rötf
((*)
∑t
, 
whﬁe
 ? "\\<%.*s\\>" : "%.*s", 
Àn
, 
±r
);

2594 
	`£t_ªg_ic
(
∑t
);

2595 
¥og
 = 
	`vim_ªgcomp
(
∑t
);

2596 
	`vim_‰ì
(
∑t
);

2597 i‡(
¥og
 =
NULL
)

2598 
Âù_íd
;

2600 
ªg_ic
 = 
FALSE
;

2601 i‡(*
p_öc
 !
NUL
)

2603 
ö˛ude_¥og
 = 
	`vim_ªgcomp
(
p_öc
);

2604 i‡(
ö˛ude_¥og
 =
NULL
)

2605 
Âù_íd
;

2607 i‡(
ty≥
 =
FIND_DEFINE
 && *
p_def
 !
NUL
)

2609 
deföe_¥og
 = 
	`vim_ªgcomp
(
p_def
);

2610 i‡(
deföe_¥og
 =
NULL
)

2611 
Âù_íd
;

2613 
fûes
 = (
SórchedFûe
 *)
	`œŒoc
(
max_∑th_dïth
 * (SórchedFûe), 
TRUE
);

2614 i‡(
fûes
 =
NULL
)

2615 
Âù_íd
;

2616 
i
 = 0; i < 
max_∑th_dïth
; i++)

2618 
fûes
[
i
].
Â
 = 
NULL
;

2619 
fûes
[
i
].
«me
 = 
NULL
;

2620 
fûes
[
i
].
 um
 = 0;

2621 
fûes
[
i
].
m©ched
 = 
FALSE
;

2623 
ﬁd_fûes
 = 
max_∑th_dïth
;

2624 
dïth
 = 
dïth_di•œyed
 = -1;

2626 
 um
 = 
°¨t_ um
;

2627 i‡(
íd_ um
 > 
curbuf
->
b_ml
.
ml_löe_cou¡
)

2628 
íd_ um
 = 
curbuf
->
b_ml
.
ml_löe_cou¡
;

2629 i‡(
 um
 > 
íd_ um
)

2630 
 um
 = 
íd_ um
;

2631 
löe
 = 
	`ml_gë
(
 um
);

2635 i‡(
ö˛ude_¥og
 !
NULL
 && 
	`vim_ªgexec
(ö˛ude_¥og, 
löe
, 
TRUE
))

2637 
√w_‚ame
 = 
	`gë_fûe_«me_ö_∑th
(
ö˛ude_¥og
->
ídp
[0] + 1,

2638 0, 
FNAME_EXP
);

2639 
Æªady_£¨ched
 = 
FALSE
;

2640 i‡(
√w_‚ame
 !
NULL
)

2643 
i
 = 0;; i++)

2645 i‡(
i
 =
dïth
 + 1)

2646 
i
 = 
ﬁd_fûes
;

2647 i‡(
i
 =
max_∑th_dïth
)

2649 i‡(
	`STRCMP
(
√w_‚ame
, 
fûes
[
i
].
«me
) == 0)

2651 i‡(
ty≥
 !
CHECK_PATH
 &&

2652 
a˘i⁄
 =
ACTION_SHOW_ALL
 && 
fûes
[
i
].
m©ched
)

2654 
	`msg_outch¨
('\n');

2655 i‡(!
gŸ_öt
)

2659 
	`£t_highlight
('d');

2660 
	`°¨t_highlight
();

2661 
	`msg_home_ª∂a˚
(
√w_‚ame
);

2662 
	`°›_highlight
();

2663 
	`MSG_OUTSTR
(" (includesÖreviouslyÜisted match)");

2664 
¥ev_‚ame
 = 
NULL
;

2667 
	`vim_‰ì
(
√w_‚ame
);

2668 
√w_‚ame
 = 
NULL
;

2669 
Æªady_£¨ched
 = 
TRUE
;

2675 i‡(
ty≥
 =
CHECK_PATH
 && (
a˘i⁄
 =
ACTION_SHOW_ALL
 ||

2676 (
√w_‚ame
 =
NULL
 && !
Æªady_£¨ched
)))

2678 i‡(
did_show
)

2679 
	`msg_outch¨
('\n');

2682 
	`gŸocmdlöe
(
TRUE
);

2683 
	`£t_highlight
('t');

2684 
	`°¨t_highlight
();

2685 
	`MSG_OUTSTR
("--- Included files ");

2686 i‡(
a˘i⁄
 !
ACTION_SHOW_ALL
)

2687 
	`MSG_OUTSTR
("not found ");

2688 
	`MSG_OUTSTR
("inÖath ---\n");

2689 
	`°›_highlight
();

2691 
did_show
 = 
TRUE
;

2692 
dïth_di•œyed
 < 
dïth
 && !
gŸ_öt
)

2694 ++
dïth_di•œyed
;

2695 
i
 = 0; i < 
dïth_di•œyed
; i++)

2696 
	`MSG_OUTSTR
(" ");

2697 
	`msg_home_ª∂a˚
(
fûes
[
dïth_di•œyed
].
«me
);

2698 
	`MSG_OUTSTR
(" -->\n");

2700 i‡(!
gŸ_öt
)

2703 
i
 = 0; i <
dïth_di•œyed
; i++)

2704 
	`MSG_OUTSTR
(" ");

2705 
	`£t_highlight
('d');

2706 
	`°¨t_highlight
();

2711 
p
 = 
ö˛ude_¥og
->
ídp
[0] + 1; !
	`isfûech¨
(*p);Ö++)

2713 
i
 = 0; 
	`isfûech¨
(
p
[i]); i++)

2715 i‡(
p
[-1] == '"' ||Ö[-1] == '<')

2717 --
p
;

2718 ++
i
;

2720 i‡(
p
[
i
] == '"' ||Ö[i] == '>')

2721 ++
i
;

2722 
ßve_ch¨
 = 
p
[
i
];

2723 
p
[
i
] = 
NUL
;

2724 
	`msg_out°r
(
p
);

2725 
p
[
i
] = 
ßve_ch¨
;

2726 
	`°›_highlight
();

2727 i‡(
√w_‚ame
 =
NULL
 && 
a˘i⁄
 =
ACTION_SHOW_ALL
)

2729 i‡(
Æªady_£¨ched
)

2730 
	`MSG_OUTSTR
(" (AlreadyÜisted)");

2732 
	`MSG_OUTSTR
(" NOT FOUND");

2735 
	`Êushbuf
();

2738 i‡(
√w_‚ame
 !
NULL
)

2741 i‡(
dïth
 + 1 =
ﬁd_fûes
)

2743 
biggî
 = (
SórchedFûe
 *)
	`œŒoc
(
max_∑th_dïth
 * 2

2744 * (
SórchedFûe
), 
TRUE
);

2745 i‡(
biggî
 !
NULL
)

2747 
i
 = 0; i <
dïth
; i++)

2748 
biggî
[
i
] = 
fûes
[i];

2749 
i
 = 
dïth
 + 1; i < 
ﬁd_fûes
 + 
max_∑th_dïth
; i++)

2751 
biggî
[
i
].
Â
 = 
NULL
;

2752 
biggî
[
i
].
«me
 = 
NULL
;

2753 
biggî
[
i
].
 um
 = 0;

2754 
biggî
[
i
].
m©ched
 = 
FALSE
;

2756 
i
 = 
ﬁd_fûes
; i < 
max_∑th_dïth
; i++)

2757 
biggî
[
i
 + 
max_∑th_dïth
] = 
fûes
[i];

2758 
ﬁd_fûes
 +
max_∑th_dïth
;

2759 
max_∑th_dïth
 *= 2;

2760 
	`vim_‰ì
(
fûes
);

2761 
fûes
 = 
biggî
;

2764 i‡((
fûes
[
dïth
 + 1].
Â
 = 
	`f›í
((*)
√w_‚ame
, "r"))

2765 =
NULL
)

2766 
	`vim_‰ì
(
√w_‚ame
);

2769 i‡(++
dïth
 =
ﬁd_fûes
)

2775 
	`vim_‰ì
(
fûes
[
ﬁd_fûes
].
«me
);

2776 ++
ﬁd_fûes
;

2778 
fûes
[
dïth
].
«me
 = 
cuº_‚ame
 = 
√w_‚ame
;

2779 
fûes
[
dïth
].
 um
 = 0;

2780 
fûes
[
dïth
].
m©ched
 = 
FALSE
;

2789 
p
 = 
löe
;

2790 
deföe_m©ched
 = 
FALSE
;

2791 i‡(
deföe_¥og
 !
NULL
 && 
	`vim_ªgexec
(deföe_¥og, 
löe
, 
TRUE
))

2798 
p
 = 
deföe_¥og
->
ídp
[0] + 1;

2799 *
p
 && !
	`isidch¨
(*p))

2800 
p
++;

2801 
p2
 = 
p
;

2802 *
p2
 && 
	`isidch¨
(*p2))

2803 
p2
++;

2804 
ßve_ch¨
 = *
p2
;

2805 *
p2
 = 
NUL
;

2806 
deföe_m©ched
 = 
TRUE
;

2813 i‡((
deföe_¥og
 =
NULL
 || 
deföe_m©ched
) &&

2814 
¥og
 !
NULL
 && 
	`vim_ªgexec
’rog, 
p
,Ö =
löe
))

2816 
m©ched
 = 
TRUE
;

2822 i‡(!
deföe_m©ched
 && 
skù_commíts
)

2824 
fo_do_commíts
 = 
TRUE
;

2825 i‡((*
löe
 != '#' ||

2826 
	`STRNCMP
(
	`skùwhôe
(
löe
 + 1), "define", 6) != 0) &&

2827 
	`gë_Àadî_Àn
(
löe
, 
NULL
))

2828 
m©ched
 = 
FALSE
;

2836 
p
 = 
löe
; *∞&&Ö < 
¥og
->
°¨ç
[0]; ++p)

2837 i‡(
p
[0] == '/' && (p[1] == '*' ||Ö[1] == '/'))

2839 
m©ched
 = 
FALSE
;

2842 
fo_do_commíts
 = 
FALSE
;

2845 i‡(
deföe_m©ched
)

2846 *
p2
 = 
ßve_ch¨
;

2848 i‡(
m©ched
)

2850 #ifde‡
INSERT_EXPAND


2851 i‡(
a˘i⁄
 =
ACTION_EXPAND
)

2853 i‡(
dïth
 =-1 && 
 um
 =
curwö
->
w_curs‹
.lnum)

2855 
found
 = 
TRUE
;

2856 
p
 = 
¥og
->
°¨ç
[0];

2857 
	`isw‹dch¨
(*
p
))

2858 ++
p
;

2859 i‡(
	`add_com∂ëi⁄_™d_ö„rˇ£
(
¥og
->
°¨ç
[0],

2860 ()(
p
 - 
¥og
->
°¨ç
[0]),

2861 
cuº_‚ame
 =
curbuf
->
b_xfûíame
 ? 
NULL
 : curr_fname,

2862 
FORWARD
Ë=
RET_ERROR
)

2867 i‡(
a˘i⁄
 =
ACTION_SHOW_ALL
)

2869 
found
 = 
TRUE
;

2870 i‡(!
did_show
)

2871 
	`gŸocmdlöe
(
TRUE
);

2872 i‡(
cuº_‚ame
 !
¥ev_‚ame
)

2874 i‡(
did_show
)

2875 
	`msg_outch¨
('\n');

2876 i‡(!
gŸ_öt
)

2879 
	`£t_highlight
('d');

2880 
	`°¨t_highlight
();

2881 
	`msg_home_ª∂a˚
(
cuº_‚ame
);

2882 
	`°›_highlight
();

2884 
¥ev_‚ame
 = 
cuº_‚ame
;

2886 
did_show
 = 
TRUE
;

2887 i‡(!
gŸ_öt
)

2888 
	`show_∑t_ö_∑th
(
löe
, 
ty≥
, 
TRUE
, 
a˘i⁄
,

2889 (
dïth
 =-1Ë? 
NULL
 : 
fûes
[dïth].
Â
,

2890 (
dïth
 =-1Ë? &
 um
 : &
fûes
[depth].lnum,

2891 
m©ch_cou¡
++);

2895 
i
 = 0; i <
dïth
; ++i)

2896 
fûes
[
i
].
m©ched
 = 
TRUE
;

2898 i‡(--
cou¡
 <= 0)

2900 
found
 = 
TRUE
;

2901 i‡(
dïth
 =-1 && 
 um
 =
curwö
->
w_curs‹
.lnum)

2902 
	`EMSG
("Match is on currentÜine");

2903 i‡(
a˘i⁄
 =
ACTION_SHOW
)

2905 
	`show_∑t_ö_∑th
(
löe
, 
ty≥
, 
did_show
, 
a˘i⁄
,

2906 (
dïth
 =-1Ë? 
NULL
 : 
fûes
[dïth].
Â
,

2907 (
dïth
 =-1Ë? &
 um
 : &
fûes
[depth].lnum, 1L);

2908 
did_show
 = 
TRUE
;

2912 i‡(
a˘i⁄
 =
ACTION_SPLIT
)

2914 i‡(
	`wö_•lô
(0, 
FALSE
Ë=
FAIL
)

2917 i‡(
dïth
 == -1)

2919 
	`£çcm¨k
();

2920 
curwö
->
w_curs‹
.
 um
 =Ünum;

2923 i‡(
	`gëfûe
(0, 
fûes
[
dïth
].
«me
, 
NULL
, 
TRUE
,

2924 
fûes
[
dïth
].
 um
) > 0)

2927 i‡(
a˘i⁄
 !
ACTION_SHOW
)

2929 
curwö
->
w_curs‹
.
cﬁ
 = 
¥og
->
°¨ç
[0] - 
löe
;

2930 
curwö
->
w_£t_cursw™t
 = 
TRUE
;

2934 
m©ched
 = 
FALSE
;

2936 
	`löe_bªakcheck
();

2937 i‡(
gŸ_öt
)

2939 
dïth
 >= 0)

2941 i‡(!
	`vim_fgës
(
löe
 = 
fûe_löe
, 
LSIZE
, 
fûes
[
dïth
].
Â
))

2943 ++
fûes
[
dïth
].
 um
;

2946 
	`f˛o£
(
fûes
[
dïth
].
Â
);

2947 --
ﬁd_fûes
;

2948 
fûes
[
ﬁd_fûes
].
«me
 = fûes[
dïth
].name;

2949 
fûes
[
ﬁd_fûes
].
m©ched
 = fûes[
dïth
].matched;

2950 --
dïth
;

2951 
cuº_‚ame
 = (
dïth
 =-1Ë? 
curbuf
->
b_xfûíame


2952 : 
fûes
[
dïth
].
«me
;

2953 i‡(
dïth
 < 
dïth_di•œyed
)

2954 
dïth_di•œyed
 = 
dïth
;

2956 i‡(
dïth
 < 0)

2958 i‡(++
 um
 > 
íd_ um
)

2960 
löe
 = 
	`ml_gë
(
 um
);

2963 
i
 = 0; i <
dïth
; i++)

2965 
	`f˛o£
(
fûes
[
i
].
Â
);

2966 
	`vim_‰ì
(
fûes
[
i
].
«me
);

2968 
i
 = 
ﬁd_fûes
; i < 
max_∑th_dïth
; i++)

2969 
	`vim_‰ì
(
fûes
[
i
].
«me
);

2970 
	`vim_‰ì
(
fûes
);

2972 i‡(
ty≥
 =
CHECK_PATH
)

2974 i‡(!
did_show
)

2976 i‡(
a˘i⁄
 !
ACTION_SHOW_ALL
)

2977 
	`MSG
("All included files were found");

2979 
	`MSG
("No included files");

2982 i‡(!
found


2983 #ifde‡
INSERT_EXPAND


2984 && 
a˘i⁄
 !
ACTION_EXPAND


2988 i‡(
gŸ_öt
)

2989 
	`emsg
(
e_öãº
);

2990 i‡(
ty≥
 =
FIND_DEFINE
)

2991 
	`EMSG
("Couldn't find definition");

2993 
	`EMSG
("Couldn't findÖattern");

2995 i‡(
a˘i⁄
 =
ACTION_SHOW
 ||á˘i⁄ =
ACTION_SHOW_ALL
)

2996 
	`msg_íd
();

2998 
Âù_íd
:

2999 
	`vim_‰ì
(
fûe_löe
);

3000 
	`vim_‰ì
(
¥og
);

3001 
	`vim_‰ì
(
ö˛ude_¥og
);

3002 
	`vim_‰ì
(
deföe_¥og
);

3003 
	}
}

3006 
	$show_∑t_ö_∑th
(
löe
, 
ty≥
, 
did_show
, 
a˘i⁄
, 
Â
, 
 um
, 
cou¡
)

3007 
ch¨_u
 *
löe
;

3008 
ty≥
;

3009 
did_show
;

3010 
a˘i⁄
;

3011 
FILE
 *
Â
;

3012 
löír_t
 *
 um
;

3013 
cou¡
;

3015 
ch¨_u
 *
p
;

3017 i‡(
did_show
)

3018 
	`msg_outch¨
('\n');

3020 
	`gŸocmdlöe
(
TRUE
);

3021 i‡(
gŸ_öt
)

3025 
p
 = 
löe
 + 
	`STRLEN
(line) - 1;

3026 i‡(
Â
 !
NULL
)

3029 i‡(
p
 >
löe
 && *p == '\n')

3030 --
p
;

3031 i‡(
p
 >
löe
 && *p == '\r')

3032 --
p
;

3033 *(
p
 + 1Ë
NUL
;

3035 i‡(
a˘i⁄
 =
ACTION_SHOW_ALL
)

3037 
	`•rötf
((*)
IObuff
, "%3ld: ", 
cou¡
);

3038 
	`msg_out°r
(
IObuff
);

3039 
	`£t_highlight
('n');

3040 
	`°¨t_highlight
();

3041 
	`•rötf
((*)
IObuff
, "%4ld", *
 um
);

3042 
	`msg_out°r
(
IObuff
);

3043 
	`°›_highlight
();

3044 
	`MSG_OUTSTR
(" ");

3046 
	`msg_¥t_löe
(
löe
);

3047 
	`Êushbuf
();

3050 i‡(
gŸ_öt
 || 
ty≥
 !
FIND_DEFINE
 || 
p
 < 
löe
 || *p != '\\')

3053 i‡(
Â
 !
NULL
)

3055 i‡(
	`vim_fgës
(
löe
, 
LSIZE
, 
Â
))

3057 ++*
 um
;

3061 i‡(++*
 um
 > 
curbuf
->
b_ml
.
ml_löe_cou¡
)

3063 
löe
 = 
	`ml_gë
(*
 um
);

3065 
	`msg_outch¨
('\n');

3067 
	}
}

3069 #ifde‡
VIMINFO


3071 
	$ªad_vimöfo_£¨ch_∑âîn
(
löe
, 
Â
, 
f‹˚
)

3072 
ch¨_u
 *
löe
;

3073 
FILE
 *
Â
;

3074 
f‹˚
;

3076 
ch¨_u
 *
Õ
;

3077 
ch¨_u
 **
∑âîn
;

3079 
Õ
 = 
löe
;

3080 i‡(
Õ
[0] == '~')

3081 
Õ
++;

3082 i‡(
Õ
[0] == '/')

3083 
∑âîn
 = &
£¨ch_∑âîn
;

3085 
∑âîn
 = &
sub°_∑âîn
;

3086 i‡(*
∑âîn
 !
NULL
 && 
f‹˚
)

3087 
	`vim_‰ì
(*
∑âîn
);

3088 i‡(
f‹˚
 || *
∑âîn
 =
NULL
)

3090 
	`vimöfo_ªad°rög
(
Õ
);

3091 *
∑âîn
 = 
	`°rßve
(
Õ
 + 1);

3092 i‡(
löe
[0] == '~')

3093 
œ°_∑âîn
 = *
∑âîn
;

3095  
	`vim_fgës
(
löe
, 
LSIZE
, 
Â
);

3096 
	}
}

3099 
	$wrôe_vimöfo_£¨ch_∑âîn
(
Â
)

3100 
FILE
 *
Â
;

3102 i‡(
	`gë_vimöfo_∑ømëî
('/') != 0)

3104 i‡(
£¨ch_∑âîn
 !
NULL
)

3106 
	`Ârötf
(
Â
, "\n# Last Search Pattern:\n");

3107 
	`Ârötf
(
Â
, "%s/", (
œ°_∑âîn
 =
£¨ch_∑âîn
) ? "~" : "");

3108 
	`vimöfo_wrôe°rög
(
Â
, 
£¨ch_∑âîn
);

3110 i‡(
sub°_∑âîn
 !
NULL
)

3112 
	`Ârötf
(
Â
, "\n# Last Substitute Search Pattern:\n");

3113 
	`Ârötf
(
Â
, "%s&", (
œ°_∑âîn
 =
sub°_∑âîn
) ? "~" : "");

3114 
	`vimöfo_wrôe°rög
(
Â
, 
sub°_∑âîn
);

3117 
	}
}

3125 
	$give_w¨nög
(
mesßge
)

3126 
ch¨_u
 *
mesßge
;

3128 ()
	`£t_highlight
('w');

3129 
msg_highlight
 = 
TRUE
;

3130 i‡(
	`msg
(
mesßge
Ë&& !
msg_s¸ﬁl
)

3132 
kìp_msg
 = 
mesßge
;

3133 
kìp_msg_highlight
 = 'w';

3135 
msg_didout
 = 
FALSE
;

3136 
msg_cﬁ
 = 0;

3137 
	}
}

	@src/structs.h

17 
Âos
 
	tFPOS
;

22 #ifde‡
SASC


23 
	tlöír_t
;

24 
	tcﬁƒ_t
;

25 
	tsh‹t_u
;

28 
	sÂos


30 
löír_t
 
	m um
;

31 
cﬁƒ_t
 
	mcﬁ
;

38 #ifde‡
USE_GUI


39 
	~"gui.h
"

47 
	#NMARKS
 26

	)

48 
	#JUMPLISTSIZE
 30

	)

49 
	#TAGSTACKSIZE
 20

	)

51 
	sfûem¨k


53 
FPOS
 
	mm¨k
;

54 
	m‚um
;

61 
	sèggy


63 
ch¨_u
 *
	mèg«me
;

64 
fûem¨k
 
	mfm¨k
;

77 
wödow
 
	tWIN
;

78 
wö um
 
	tWINLNUM
;

80 
	swö um


82 
WINLNUM
 *
	mwl_√xt
;

83 
WINLNUM
 *
	mwl_¥ev
;

84 
WIN
 *
	mwl_wö
;

85 
löír_t
 
	mwl_ um
;

92 
	su_íåy


94 
u_íåy
 *
	mue_√xt
;

95 
löír_t
 
	mue_t›
;

96 
löír_t
 
	mue_bŸ
;

97 
löír_t
 
	mue_lcou¡
;

98 
ch¨_u
 **
	mue_¨øy
;

99 
	mue_size
;

102 
	su_hódî


104 
u_hódî
 *
	muh_√xt
;

105 
u_hódî
 *
	muh_¥ev
;

106 
u_íåy
 *
	muh_íåy
;

107 
FPOS
 
	muh_curs‹
;

108 
	muh_Êags
;

109 
FPOS
 
	muh_«medm
[
NMARKS
];

113 
	#UH_CHANGED
 0x01

	)

114 
	#UH_EMPTYBUF
 0x02

	)

119 #i‡
deföed
(
UNIX
Ë|| deföed(
WIN32
Ë|| deföed(
__EMX__
)

120 
	#ALIGN_LONG


	)

121 
	#ALIGN_SIZE
 (())

	)

123 
	#ALIGN_SIZE
 (())

	)

126 
	#ALIGN_MASK
 (
ALIGN_SIZE
 - 1)

	)

128 
m_öfo
 
	töfo_t
;

133 
	sm_öfo


135 #ifde‡
ALIGN_LONG


136 
l⁄g_u
 
	mm_size
;

138 
sh‹t_u
 
	mm_size
;

140 
öfo_t
 *
	mm_√xt
;

146 
	sm_block


148 
m_block
 *
	mmb_√xt
;

149 
öfo_t
 
	mmb_öfo
;

156 
block_hdr
 
	tBHDR
;

157 
memfûe
 
	tMEMFILE
;

158 
	tblockƒ_t
;

175 
	sblock_hdr


177 
BHDR
 *
	mbh_√xt
;

178 
BHDR
 *
	mbh_¥ev
;

179 
BHDR
 *
	mbh_hash_√xt
;

180 
BHDR
 *
	mbh_hash_¥ev
;

181 
blockƒ_t
 
	mbh_bnum
;

182 
ch¨_u
 *
	mbh_d©a
;

183 
	mbh_∑ge_cou¡
;

185 
	#BH_DIRTY
 1

	)

186 
	#BH_LOCKED
 2

	)

187 
	mbh_Êags
;

196 
ƒ_å™s
 
	tNR_TRANS
;

198 
	sƒ_å™s


200 
NR_TRANS
 *
	m¡_√xt
;

201 
NR_TRANS
 *
	m¡_¥ev
;

202 
blockƒ_t
 
	m¡_ﬁd_bnum
;

203 
blockƒ_t
 
	m¡_√w_bnum
;

210 
	#MEMHASHSIZE
 64

	)

211 
	#MEMHASH
(
ƒ
Ë(“rË& (
MEMHASHSIZE
 - 1))

	)

213 
	smemfûe


215 
ch¨_u
 *
	mmf_‚ame
;

216 
ch¨_u
 *
	mmf_x‚ame
;

217 
	mmf_fd
;

218 
BHDR
 *
	mmf_‰ì_fú°
;

219 
BHDR
 *
	mmf_u£d_fú°
;

220 
BHDR
 *
	mmf_u£d_œ°
;

221 
	mmf_u£d_cou¡
;

222 
	mmf_u£d_cou¡_max
;

223 
BHDR
 *
	mmf_hash
[
MEMHASHSIZE
];

224 
NR_TRANS
 *
	mmf_å™s
[
MEMHASHSIZE
];

225 
blockƒ_t
 
	mmf_blockƒ_max
;

226 
blockƒ_t
 
	mmf_blockƒ_mö
;

227 
blockƒ_t
 
	mmf_√g_cou¡
;

228 
blockƒ_t
 
	mmf_öfûe_cou¡
;

229 
	mmf_∑ge_size
;

230 
	mmf_dúty
;

236 
öfo_poöãr
 
	tIPTR
;

243 
	söfo_poöãr


245 
blockƒ_t
 
	mù_bnum
;

246 
löír_t
 
	mù_low
;

247 
löír_t
 
	mù_high
;

248 
	mù_ödex
;

251 
memlöe
 
	tMEMLINE
;

256 
	smemlöe


258 
löír_t
 
	mml_löe_cou¡
;

260 
MEMFILE
 *
	mml_mÂ
;

262 
	#ML_EMPTY
 1

	)

263 
	#ML_LINE_DIRTY
 2

	)

264 
	#ML_LOCKED_DIRTY
 4

	)

265 
	#ML_LOCKED_POS
 8

	)

266 
	mml_Êags
;

268 
IPTR
 *
	mml_°ack
;

269 
	mml_°ack_t›
;

270 
	mml_°ack_size
;

272 
löír_t
 
	mml_löe_ um
;

273 
ch¨_u
 *
	mml_löe_±r
;

275 
BHDR
 *
	mml_locked
;

276 
löír_t
 
	mml_locked_low
;

277 
löír_t
 
	mml_locked_high
;

278 
	mml_locked_löódd
;

289 
buf„r
 
	tBUF
;

291 
	sbuf„r


293 
MEMLINE
 
	mb_ml
;

296 
BUF
 *
	mb_√xt
;

297 
BUF
 *
	mb_¥ev
;

299 
	mb_ch™ged
;

304 
	mb_nŸedôed
;

308 
	mb_nwödows
;

310 
	mb_√vîlﬂded
;

320 
ch¨_u
 *
	mb_fûíame
;

321 
ch¨_u
 *
	mb_sfûíame
;

322 
ch¨_u
 *
	mb_xfûíame
;

324 
	mb_‚um
;

325 
WINLNUM
 *
	mb_wö um
;

328 
	mb_mtime
;

329 
	mb_mtime_ªad
;

331 
FPOS
 
	mb_«medm
[
NMARKS
];

333 
FPOS
 
	mb_œ°_curs‹
;

339 
	mb_ch¨èb
[256];

344 
FPOS
 
	mb_›_°¨t
;

345 
FPOS
 
	mb_›_íd
;

347 #ifde‡
VIMINFO


348 
	mb_m¨ks_ªad
;

354 
u_hódî
 *
	mb_u_ﬁdhód
;

355 
u_hódî
 *
	mb_u_√whód
;

356 
u_hódî
 *
	mb_u_curhód
;

357 
	mb_u_numhód
;

358 
	mb_u_syn˚d
;

363 
ch¨_u
 *
	mb_u_löe_±r
;

364 
löír_t
 
	mb_u_löe_ um
;

365 
cﬁƒ_t
 
	mb_u_löe_cﬁƒ
;

370 
m_block
 
	mb_block_hód
;

371 
öfo_t
 *
	mb_m_£¨ch
;

373 
m_block
 *
	mb_mb_cuºít
;

381 
	mb_p_öôülized
;

382 
	mb_p_ai
, 
	mb_p_ro
, 
	mb_p_li•
;

383 
	mb_p_öf
;

384 
	mb_p_bö
, 
	mb_p_eﬁ
, 
	mb_p_ë
, 
	mb_p_ml
, 
	mb_p_tx
;

385 #i‚de‡
SHORT_FNAME


386 
	mb_p_¢
;

389 
	mb_p_sw
, 
	mb_p_ts
, 
	mb_p_tw
, 
	mb_p_wm
;

390 
ch¨_u
 *
	mb_p_fo
, *
	mb_p_com
, *
	mb_p_isk
;

393 
	mb_p_wm_nobö
, 
	mb_p_tw_nobö
;

394 
	mb_p_tx_nobö
, 
	mb_p_è_nobö
;

395 
	mb_p_ml_nobö
, 
	mb_p_ë_nobö
;

398 
	mb_p_ai_ßve
, 
	mb_p_li•_ßve
;

399 
	mb_p_tw_ßve
, 
	mb_p_wm_ßve
;

401 #ifde‡
SMARTINDENT


402 
	mb_p_si
, 
	mb_p_si_ßve
;

404 #ifde‡
CINDENT


405 
	mb_p_cö
;

406 
	mb_p_cö_ßve
;

407 
ch¨_u
 *
	mb_p_cöo
;

408 
ch¨_u
 *
	mb_p_cök
;

410 #i‡
deföed
(
CINDENT
Ë|| deföed(
SMARTINDENT
)

411 
ch¨_u
 *
	mb_p_cöw
;

414 
	mb_did_w¨n
;

416 
	mb_hñp
;

418 #i‚de‡
SHORT_FNAME


419 
	mb_sh‹äame
;

429 
	swödow


431 
BUF
 *
	mw_buf„r
;

433 
WIN
 *
	mw_¥ev
;

434 
WIN
 *
	mw_√xt
;

436 
FPOS
 
	mw_curs‹
;

442 
	mw_row
, 
	mw_cﬁ
;

451 
	mw_˛öe_height
;

453 
	mw_˛öe_row
;

455 
cﬁƒ_t
 
	mw_vútcﬁ
;

462 
cﬁƒ_t
 
	mw_cursw™t
;

467 
	mw_£t_cursw™t
;

474 
löír_t
 
	mw_ﬁd_curs‹_ um
;

475 
cﬁƒ_t
 
	mw_ﬁd_curs‹_vcﬁ
;

476 
löír_t
 
	mw_ﬁd_visuÆ_ um
;

477 
cﬁƒ_t
 
	mw_ﬁd_cursw™t
;

479 
löír_t
 
	mw_t›löe
;

481 
löír_t
 
	mw_bŸlöe
;

483 
	mw_em±y_rows
;

485 
	mw_wöpos
;

486 
	mw_height
;

488 
	mw_°©us_height
;

490 
	mw_ªdr_°©us
;

491 
	mw_ªdr_ty≥
;

493 
cﬁƒ_t
 
	mw_À·cﬁ
;

499 
	mw_lsize_vÆid
;

500 
löír_t
 *
	mw_lsize_ um
;

501 
ch¨_u
 *
	mw_lsize
;

503 
	mw_Æt_‚um
;

505 
	mw_¨g_idx
;

506 
	mw_¨g_idx_övÆid
;

513 
	mw_p_li°
,

514 
	mw_p_nu
,

515 #ifde‡
RIGHTLEFT


516 
	mw_p_æ
,

518 
	mw_p_wøp
,

519 
	mw_p_lbr
;

520 
	mw_p_s¸ﬁl
;

527 
FPOS
 
	mw_pcm¨k
;

528 
FPOS
 
	mw_¥ev_pcm¨k
;

533 
fûem¨k
 
	mw_jum∂i°
[
JUMPLISTSIZE
];

534 
	mw_jum∂i°Àn
;

535 
	mw_jum∂i°idx
;

543 
èggy
 
	mw_èg°ack
[
TAGSTACKSIZE
];

544 
	mw_èg°ackidx
;

545 
	mw_èg°ackÀn
;

547 #ifde‡
USE_GUI


548 
GuiS¸ﬁlb¨
 
	mw_s¸ﬁlb¨
;

	@src/tables.c

15 
	~"vim.h
"

16 
	~"globÆs.h
"

17 
	~"¥Ÿo.h
"

18 
	~"›ti⁄.h
"

26 
	mmod_mask
;

27 
ch¨_u
 
	m«me
;

28 } 
	gmod_mask_èbÀ
[] =

30 {
MOD_MASK_ALT
, (
ch¨_u
)'M'},

31 {
MOD_MASK_CTRL
, (
ch¨_u
)'C'},

32 {
MOD_MASK_SHIFT
, (
ch¨_u
)'S'},

33 {
MOD_MASK_2CLICK
, (
ch¨_u
)'2'},

34 {
MOD_MASK_3CLICK
, (
ch¨_u
)'3'},

35 {
MOD_MASK_4CLICK
, (
ch¨_u
)'4'},

36 {0x0, 
NUL
}

43 
ch¨_u
 
	gshi·ed_keys_èbÀ
[] =

73 
KS_EXTRA
, 
KE_S_UP
, 'k', 'u',

74 
KS_EXTRA
, 
KE_S_DOWN
, 'k', 'd',

76 
KS_EXTRA
, 
KE_S_F1
, 'k', '1',

77 
KS_EXTRA
, 
KE_S_F2
, 'k', '2',

78 
KS_EXTRA
, 
KE_S_F3
, 'k', '3',

79 
KS_EXTRA
, 
KE_S_F4
, 'k', '4',

80 
KS_EXTRA
, 
KE_S_F5
, 'k', '5',

81 
KS_EXTRA
, 
KE_S_F6
, 'k', '6',

82 
KS_EXTRA
, 
KE_S_F7
, 'k', '7',

83 
KS_EXTRA
, 
KE_S_F8
, 'k', '8',

84 
KS_EXTRA
, 
KE_S_F9
, 'k', '9',

85 
KS_EXTRA
, 
KE_S_F10
, 'k', ';',

87 
KS_EXTRA
, 
KE_S_F11
, 'F', '1',

88 
KS_EXTRA
, 
KE_S_F12
, 'F', '2',

89 
KS_EXTRA
, 
KE_S_F13
, 'F', '3',

90 
KS_EXTRA
, 
KE_S_F14
, 'F', '4',

91 
KS_EXTRA
, 
KE_S_F15
, 'F', '5',

92 
KS_EXTRA
, 
KE_S_F16
, 'F', '6',

93 
KS_EXTRA
, 
KE_S_F17
, 'F', '7',

94 
KS_EXTRA
, 
KE_S_F18
, 'F', '8',

95 
KS_EXTRA
, 
KE_S_F19
, 'F', '9',

96 
KS_EXTRA
, 
KE_S_F20
, 'F', 'A',

98 
KS_EXTRA
, 
KE_S_F21
, 'F', 'B',

99 
KS_EXTRA
, 
KE_S_F22
, 'F', 'C',

100 
KS_EXTRA
, 
KE_S_F23
, 'F', 'D',

101 
KS_EXTRA
, 
KE_S_F24
, 'F', 'E',

102 
KS_EXTRA
, 
KE_S_F25
, 'F', 'F',

103 
KS_EXTRA
, 
KE_S_F26
, 'F', 'G',

104 
KS_EXTRA
, 
KE_S_F27
, 'F', 'H',

105 
KS_EXTRA
, 
KE_S_F28
, 'F', 'I',

106 
KS_EXTRA
, 
KE_S_F29
, 'F', 'J',

107 
KS_EXTRA
, 
KE_S_F30
, 'F', 'K',

109 
KS_EXTRA
, 
KE_S_F31
, 'F', 'L',

110 
KS_EXTRA
, 
KE_S_F32
, 'F', 'M',

111 
KS_EXTRA
, 
KE_S_F33
, 'F', 'N',

112 
KS_EXTRA
, 
KE_S_F34
, 'F', 'O',

113 
KS_EXTRA
, 
KE_S_F35
, 'F', 'P',

115 
KS_EXTRA
, 
KE_S_TAB
, KS_EXTRA, 
KE_TAB
,

116 
NUL


119 
	skey_«me_íåy


121 
	mkey
;

122 
ch¨_u
 *
	m«me
;

123 } 
	gkey_«mes_èbÀ
[] =

125 {' ', (
ch¨_u
 *)"Space"},

126 {
TAB
, (
ch¨_u
 *)"Tab"},

127 {
K_TAB
, (
ch¨_u
 *)"Tab"},

128 {
NL
, (
ch¨_u
 *)"NL"},

129 {
NL
, (
ch¨_u
 *)"NewLine"},

130 {
NL
, (
ch¨_u
 *)"LineFeed"},

131 {
NL
, (
ch¨_u
 *)"LF"},

132 {
CR
, (
ch¨_u
 *)"CR"},

133 {
CR
, (
ch¨_u
 *)"Return"},

134 {
ESC
, (
ch¨_u
 *)"Esc"},

135 {
K_UP
, (
ch¨_u
 *)"Up"},

136 {
K_DOWN
, (
ch¨_u
 *)"Down"},

137 {
K_LEFT
, (
ch¨_u
 *)"Left"},

138 {
K_RIGHT
, (
ch¨_u
 *)"Right"},

140 {
K_F1
, (
ch¨_u
 *)"F1"},

141 {
K_F2
, (
ch¨_u
 *)"F2"},

142 {
K_F3
, (
ch¨_u
 *)"F3"},

143 {
K_F4
, (
ch¨_u
 *)"F4"},

144 {
K_F5
, (
ch¨_u
 *)"F5"},

145 {
K_F6
, (
ch¨_u
 *)"F6"},

146 {
K_F7
, (
ch¨_u
 *)"F7"},

147 {
K_F8
, (
ch¨_u
 *)"F8"},

148 {
K_F9
, (
ch¨_u
 *)"F9"},

149 {
K_F10
, (
ch¨_u
 *)"F10"},

151 {
K_F11
, (
ch¨_u
 *)"F11"},

152 {
K_F12
, (
ch¨_u
 *)"F12"},

153 {
K_F13
, (
ch¨_u
 *)"F13"},

154 {
K_F14
, (
ch¨_u
 *)"F14"},

155 {
K_F15
, (
ch¨_u
 *)"F15"},

156 {
K_F16
, (
ch¨_u
 *)"F16"},

157 {
K_F17
, (
ch¨_u
 *)"F17"},

158 {
K_F18
, (
ch¨_u
 *)"F18"},

159 {
K_F19
, (
ch¨_u
 *)"F19"},

160 {
K_F20
, (
ch¨_u
 *)"F20"},

162 {
K_F21
, (
ch¨_u
 *)"F21"},

163 {
K_F22
, (
ch¨_u
 *)"F22"},

164 {
K_F23
, (
ch¨_u
 *)"F23"},

165 {
K_F24
, (
ch¨_u
 *)"F24"},

166 {
K_F25
, (
ch¨_u
 *)"F25"},

167 {
K_F26
, (
ch¨_u
 *)"F26"},

168 {
K_F27
, (
ch¨_u
 *)"F27"},

169 {
K_F28
, (
ch¨_u
 *)"F28"},

170 {
K_F29
, (
ch¨_u
 *)"F29"},

171 {
K_F30
, (
ch¨_u
 *)"F30"},

173 {
K_F31
, (
ch¨_u
 *)"F31"},

174 {
K_F32
, (
ch¨_u
 *)"F32"},

175 {
K_F33
, (
ch¨_u
 *)"F33"},

176 {
K_F34
, (
ch¨_u
 *)"F34"},

177 {
K_F35
, (
ch¨_u
 *)"F35"},

179 {
K_HELP
, (
ch¨_u
 *)"Help"},

180 {
K_UNDO
, (
ch¨_u
 *)"Undo"},

181 {
K_BS
, (
ch¨_u
 *)"BS"},

182 {
K_BS
, (
ch¨_u
 *)"BackSpace"},

183 {
K_INS
, (
ch¨_u
 *)"Insert"},

184 {
K_INS
, (
ch¨_u
 *)"Ins"},

185 {
K_DEL
, (
ch¨_u
 *)"Del"},

186 {
K_DEL
, (
ch¨_u
 *)"Delete"},

187 {
K_HOME
, (
ch¨_u
 *)"Home"},

188 {
K_END
, (
ch¨_u
 *)"End"},

189 {
K_PAGEUP
, (
ch¨_u
 *)"PageUp"},

190 {
K_PAGEDOWN
, (
ch¨_u
 *)"PageDown"},

191 {
K_MOUSE
, (
ch¨_u
 *)"Mouse"},

192 {
K_LEFTMOUSE
, (
ch¨_u
 *)"LeftMouse"},

193 {
K_LEFTDRAG
, (
ch¨_u
 *)"LeftDrag"},

194 {
K_LEFTRELEASE
, (
ch¨_u
 *)"LeftRelease"},

195 {
K_MIDDLEMOUSE
, (
ch¨_u
 *)"MiddleMouse"},

196 {
K_MIDDLEDRAG
, (
ch¨_u
 *)"MiddleDrag"},

197 {
K_MIDDLERELEASE
, (
ch¨_u
 *)"MiddleRelease"},

198 {
K_RIGHTMOUSE
, (
ch¨_u
 *)"RightMouse"},

199 {
K_RIGHTDRAG
, (
ch¨_u
 *)"RightDrag"},

200 {
K_RIGHTRELEASE
, (
ch¨_u
 *)"RightRelease"},

201 {
K_ZERO
, (
ch¨_u
 *)"Nul"},

202 {0, 
NULL
}

205 
	#KEY_NAMES_TABLE_LEN
 ((
key_«mes_èbÀ
Ë/ (
key_«me_íåy
))

	)

207 #ifde‡
USE_MOUSE


210 
	mp£udo_code
;

211 
	mbuâ⁄
;

212 
	mis_˛ick
;

213 
	mis_døg
;

214 } 
	gmou£_èbÀ
[] =

216 {
KE_LEFTMOUSE
, 
MOUSE_LEFT
, 
TRUE
, 
FALSE
},

217 {
KE_LEFTDRAG
, 
MOUSE_LEFT
, 
FALSE
, 
TRUE
},

218 {
KE_LEFTRELEASE
, 
MOUSE_LEFT
, 
FALSE
, FALSE},

219 {
KE_MIDDLEMOUSE
, 
MOUSE_MIDDLE
, 
TRUE
, 
FALSE
},

220 {
KE_MIDDLEDRAG
, 
MOUSE_MIDDLE
, 
FALSE
, 
TRUE
},

221 {
KE_MIDDLERELEASE
, 
MOUSE_MIDDLE
, 
FALSE
, FALSE},

222 {
KE_RIGHTMOUSE
, 
MOUSE_RIGHT
, 
TRUE
, 
FALSE
},

223 {
KE_RIGHTDRAG
, 
MOUSE_RIGHT
, 
FALSE
, 
TRUE
},

224 {
KE_RIGHTRELEASE
, 
MOUSE_RIGHT
, 
FALSE
, FALSE},

225 {
KE_IGNORE
, 
MOUSE_RELEASE
, 
FALSE
, 
TRUE
},

226 {
KE_IGNORE
, 
MOUSE_RELEASE
, 
FALSE
, FALSE},

236 
	$«me_to_mod_mask
(
c
)

237 
c
;

239 
i
;

241 
i
 = 0; 
mod_mask_èbÀ
[i].
mod_mask
; i++)

242 i‡(
	`TO_LOWER
(
c
Ë=TO_LOWER(
mod_mask_èbÀ
[
i
].
«me
))

243  
mod_mask_èbÀ
[
i
].
mod_mask
;

245 
	}
}

253 
	$check_shi·ed_•ec_key
(
c
)

254 
c
;

256 
i
;

257 
key0
;

258 
key1
;

260 i‡(
mod_mask
 & 
MOD_MASK_SHIFT
)

262 i‡(
c
 =
TAB
)

263  
K_S_TAB
;

264 
key0
 = 
	`KEY2TERMCAP0
(
c
);

265 
key1
 = 
	`KEY2TERMCAP1
(
c
);

266 
i
 = 0; 
shi·ed_keys_èbÀ
[i] !
NUL
; i += 4)

267 i‡(
key0
 =
shi·ed_keys_èbÀ
[
i
 + 2] &&

268 
key1
 =
shi·ed_keys_èbÀ
[
i
 + 3])

269  
	`TERMCAP2KEY
(
shi·ed_keys_èbÀ
[
i
],

270 
shi·ed_keys_èbÀ
[
i
 + 1]);

272  
c
;

273 
	}
}

281 
	$unshi·_•ecül_key
(
p
)

282 
ch¨_u
 *
p
;

284 
i
;

286 
i
 = 0; 
shi·ed_keys_èbÀ
[i]; i += 4)

287 i‡(
p
[0] =
shi·ed_keys_èbÀ
[
i
] &&Ö[1] == shifted_keys_table[i + 1])

289 
p
[0] = 
shi·ed_keys_èbÀ
[
i
 + 2];

290 
p
[1] = 
shi·ed_keys_èbÀ
[
i
 + 3];

291  
OK
;

293  
FAIL
;

294 
	}
}

300 
ch¨_u
 *

301 
	$gë_•ecül_key_«me
(
c
, 
modifõrs
)

302 
c
;

303 
modifõrs
;

305 
ch¨_u
 
°rög
[
MAX_KEY_NAME_LEN
 + 1];

307 
i
, 
idx
;

308 
ch¨_u
 *
s
;

309 
ch¨_u
 
«me
[2];

311 
°rög
[0] = '<';

312 
idx
 = 1;

315 i‡(
	`IS_SPECIAL
(
c
))

317 
«me
[0] = 
	`KEY2TERMCAP0
(
c
);

318 
«me
[1] = 
	`KEY2TERMCAP1
(
c
);

319 i‡(
	`unshi·_•ecül_key
(&
«me
[0]))

320 
modifõrs
 |
MOD_MASK_SHIFT
;

321 
c
 = 
	`TERMCAP2KEY
(
«me
[0],Çame[1]);

325 
i
 = 0; 
mod_mask_èbÀ
[i].
mod_mask
; i++)

326 i‡(
modifõrs
 & 
mod_mask_èbÀ
[
i
].
mod_mask
)

328 
°rög
[
idx
++] = 
mod_mask_èbÀ
[
i
].
«me
;

329 
°rög
[
idx
++] = (
ch¨_u
)'-';

333 
i
 = 
	`föd_•ecül_key_ö_èbÀ
(
c
);

334 i‡(
i
 < 0)

336 i‡(
	`IS_SPECIAL
(
c
))

338 
°rög
[
idx
++] = 't';

339 
°rög
[
idx
++] = '_';

340 
°rög
[
idx
++] = 
	`KEY2TERMCAP0
(
c
);

341 
°rög
[
idx
++] = 
	`KEY2TERMCAP1
(
c
);

346 i‡(
	`i•rötch¨
(
c
))

347 
°rög
[
idx
++] = 
c
;

350 
s
 = 
	`å™sch¨
(
c
);

351 *
s
)

352 
°rög
[
idx
++] = *
s
++;

358 
	`STRCPY
(
°rög
 + 
idx
, 
key_«mes_èbÀ
[
i
].
«me
);

359 
idx
 = 
	`STRLEN
(
°rög
);

361 
°rög
[
idx
++] = '>';

362 
°rög
[
idx
] = 
NUL
;

363  
°rög
;

364 
	}
}

371 
	$föd_•ecül_key_ö_èbÀ
(
c
)

372 
c
;

374 
i
;

376 
i
 = 0; 
key_«mes_èbÀ
[i].
«me
 !
NULL
; i++)

377 i‡(
c
 =
key_«mes_èbÀ
[
i
].
key
)

379 i‡(
key_«mes_èbÀ
[
i
].
«me
 =
NULL
)

380 
i
 = -1;

381  
i
;

382 
	}
}

392 
	$gë_•ecül_key_code
(
«me
)

393 
ch¨_u
 *
«me
;

395 
ch¨_u
 *
èbÀ_«me
;

396 
ch¨_u
 
°rög
[3];

397 
i
, 
j
;

402 i‡(
«me
[0] ='t' &&Çame[1] ='_' &&Çame[2] !
NUL
 &&Çame[3] != NUL)

404 
°rög
[0] = 
«me
[2];

405 
°rög
[1] = 
«me
[3];

406 
°rög
[2] = 
NUL
;

407 i‡(
	`add_ãrmˇp_íåy
(
°rög
, 
FALSE
Ë=
OK
)

408  
	`TERMCAP2KEY
(
«me
[2],Çame[3]);

411 
i
 = 0; 
key_«mes_èbÀ
[i].
«me
 !
NULL
; i++)

413 
èbÀ_«me
 = 
key_«mes_èbÀ
[
i
].
«me
;

414 
j
 = 0; 
	`isidch¨
(
«me
[j]Ë&& 
èbÀ_«me
[j] !
NUL
; j++)

415 i‡(
	`TO_LOWER
(
èbÀ_«me
[
j
]Ë!TO_LOWER(
«me
[j]))

417 i‡(!
	`isidch¨
(
«me
[
j
]Ë&& 
èbÀ_«me
[j] =
NUL
)

418  
key_«mes_èbÀ
[
i
].
key
;

421 
	}
}

423 
ch¨_u
 *

424 
	$gë_key_«me
(
i
)

425 
i
;

427 i‡(
i
 >
KEY_NAMES_TABLE_LEN
)

428  
NULL
;

429  
key_«mes_èbÀ
[
i
].
«me
;

430 
	}
}

432 #ifde‡
USE_MOUSE


438 
	$gë_mou£_buâ⁄
(
code
, 
is_˛ick
, 
is_døg
)

439 
code
;

440 *
is_˛ick
;

441 *
is_døg
;

443 
i
;

445 
i
 = 0; 
mou£_èbÀ
[i].
p£udo_code
; i++)

446 i‡(
code
 =
mou£_èbÀ
[
i
].
p£udo_code
)

448 *
is_˛ick
 = 
mou£_èbÀ
[
i
].is_click;

449 *
is_døg
 = 
mou£_èbÀ
[
i
].is_drag;

450  
mou£_èbÀ
[
i
].
buâ⁄
;

453 
	}
}

461 
	$gë_p£udo_mou£_code
(
buâ⁄
, 
is_˛ick
, 
is_døg
)

462 
buâ⁄
;

463 
is_˛ick
;

464 
is_døg
;

466 
i
;

468 
i
 = 0; 
mou£_èbÀ
[i].
p£udo_code
; i++)

469 i‡(
buâ⁄
 =
mou£_èbÀ
[
i
].button

470 && 
is_˛ick
 =
mou£_èbÀ
[
i
].is_click

471 && 
is_døg
 =
mou£_èbÀ
[
i
].is_drag)

473  
mou£_èbÀ
[
i
].
p£udo_code
;

475  
KE_IGNORE
;

476 
	}
}

	@src/tag.c

13 
	~"vim.h
"

14 
	~"globÆs.h
"

15 
	~"¥Ÿo.h
"

16 
	~"›ti⁄.h
"

18 
gë_èg‚ame
 
__ARGS
((, 
ch¨_u
 *));

20 #ifde‡
EMACS_TAGS


21 
∑r£_èg_löe
 
__ARGS
((
ch¨_u
 *, ,

22 
ch¨_u
 **, char_u **, char_u **, char_u **, char_u **));

23 
jum±o_èg
 
__ARGS
((
ch¨_u
 *, , char_u *, char_u *));

25 
∑r£_èg_löe
 
__ARGS
((
ch¨_u
 *,

26 
ch¨_u
 **, char_u **, char_u **, char_u **, char_u **));

27 
jum±o_èg
 
__ARGS
((
ch¨_u
 *, char_u *));

29 
ã°_f‹_°©ic
 
__ARGS
((
ch¨_u
 **, char_u *, char_u *, char_u *));

30 
ch¨_u
 *
ex∑nd_ªl_«me
 
__ARGS
((ch¨_u *
‚ame
, ch¨_u *
èg_‚ame
));

31 #ifde‡
EMACS_TAGS


32 
ã°_f‹_cuºít
 
__ARGS
((, 
ch¨_u
 *, char_u *, char_u *));

34 
ã°_f‹_cuºít
 
__ARGS
((
ch¨_u
 *, char_u *, char_u *));

37 
ch¨_u
 *
	gbŸtommsg
 = (char_u *)"at bottom ofÅag stack";

38 
ch¨_u
 *
	gt›msg
 = (char_u *)"atÅop ofÅag stack";

48 
	$do_èg
(
èg
, 
ty≥
, 
cou¡
)

49 
ch¨_u
 *
èg
;

50 
ty≥
;

51 
cou¡
;

53 
i
;

54 
èggy
 *
èg°ack
 = 
curwö
->
w_èg°ack
;

55 
èg°ackidx
 = 
curwö
->
w_èg°ackidx
;

56 
èg°ackÀn
 = 
curwö
->
w_èg°ackÀn
;

57 
ﬁdèg°ackidx
 = 
èg°ackidx
;

59 i‡(*
èg
 !
NUL
)

65 
èg°ackidx
 < 
èg°ackÀn
)

66 
	`vim_‰ì
(
èg°ack
[--
èg°ackÀn
].
èg«me
);

69 i‡(++
èg°ackÀn
 > 
TAGSTACKSIZE
)

71 
èg°ackÀn
 = 
TAGSTACKSIZE
;

72 
	`vim_‰ì
(
èg°ack
[0].
èg«me
);

73 
i
 = 1; i < 
èg°ackÀn
; ++i)

74 
èg°ack
[
i
 - 1] =Åagstack[i];

75 --
èg°ackidx
;

82 
èg°ack
[
èg°ackidx
].
èg«me
 = 
	`°rßve
(
èg
);

84 i‡(
èg°ackÀn
 == 0)

86 
	`EMSG
("tag stackÉmpty");

87 
íd_do_èg
;

89 i‡(
ty≥
)

91 i‡((
èg°ackidx
 -
cou¡
) < 0)

93 
	`emsg
(
bŸtommsg
);

94 i‡(
èg°ackidx
 + 
cou¡
 == 0)

97 
èg°ackidx
 = 0;

98 
íd_do_èg
;

103 
èg°ackidx
 = 0;

105 i‡(
èg°ackidx
 >
èg°ackÀn
)

107 
	`emsg
(
t›msg
);

108 
íd_do_èg
;

110 i‡(
èg°ack
[
èg°ackidx
].
fm¨k
.
‚um
 !
curbuf
->
b_‚um
)

116 i‡(
	`buÊi°_gëfûe
(
èg°ack
[
èg°ackidx
].
fm¨k
.
‚um
,

117 
èg°ack
[
èg°ackidx
].
fm¨k
.
m¨k
.
 um
, 
GETF_SETMARK
Ë=
FAIL
)

119 
èg°ackidx
 = 
ﬁdèg°ackidx
;

120 
íd_do_èg
;

124 
curwö
->
w_curs‹
.
 um
 = 
èg°ack
[
èg°ackidx
].
fm¨k
.
m¨k
.lnum;

125 
curwö
->
w_curs‹
.
cﬁ
 = 
èg°ack
[
èg°ackidx
].
fm¨k
.
m¨k
.col;

126 
curwö
->
w_£t_cursw™t
 = 
TRUE
;

127 
íd_do_èg
;

131 i‡((
èg°ackidx
 +
cou¡
 - 1Ë>
èg°ackÀn
)

137 
èg°ackidx
 = 
èg°ackÀn
 - 1;

138 
	`emsg
(
t›msg
);

140 i‡(
èg°ackidx
 < 0)

142 
	`emsg
(
bŸtommsg
);

143 
èg°ackidx
 = 0;

144 
íd_do_èg
;

150 i‡(
ty≥
 == 0)

152 
èg°ack
[
èg°ackidx
].
fm¨k
.
m¨k
 = 
curwö
->
w_curs‹
;

153 
èg°ack
[
èg°ackidx
].
fm¨k
.
‚um
 = 
curbuf
->
b_‚um
;

156 
curwö
->
w_èg°ackidx
 = 
èg°ackidx
;

157 
curwö
->
w_èg°ackÀn
 = 
èg°ackÀn
;

158 i‡(
	`föd_ègs
(
èg°ack
[
èg°ackidx
].
èg«me
, 
NULL
, NULL, NULL, 
FALSE
) > 0)

159 ++
èg°ackidx
;

161 
íd_do_èg
:

162 
curwö
->
w_èg°ackidx
 = 
èg°ackidx
;

163 
curwö
->
w_èg°ackÀn
 = 
èg°ackÀn
;

164 
	}
}

170 
	$do_ègs
()

172 
i
;

173 
ch¨_u
 *
«me
;

174 
èggy
 *
èg°ack
 = 
curwö
->
w_èg°ack
;

175 
èg°ackidx
 = 
curwö
->
w_èg°ackidx
;

176 
èg°ackÀn
 = 
curwö
->
w_èg°ackÀn
;

178 
	`£t_highlight
('t');

179 
	`°¨t_highlight
();

180 
	`MSG_OUTSTR
("\n # TOÅag FROMÜine in file");

181 
	`°›_highlight
();

182 
i
 = 0; i < 
èg°ackÀn
; ++i)

184 i‡(
èg°ack
[
i
].
èg«me
 !
NULL
)

186 
«me
 = 
	`fm_gë«me
(&(
èg°ack
[
i
].
fm¨k
));

187 i‡(
«me
 =
NULL
)

190 
	`msg_outch¨
('\n');

191 
	`•rötf
((*)
IObuff
, "%c%2d %-15s %4ld %s",

192 
i
 =
èg°ackidx
 ? '>' : ' ',

193 
i
 + 1,

194 
èg°ack
[
i
].
èg«me
,

195 
èg°ack
[
i
].
fm¨k
.
m¨k
.
 um
,

196 
«me
);

197 
	`msg_ouâøns
(
IObuff
);

199 
	`Êushbuf
();

201 i‡(
èg°ackidx
 =
èg°ackÀn
)

202 
	`MSG_OUTSTR
("\n>");

203 
	}
}

226 
	#PRI_GLOBAL
 1

	)

227 
	#PRI_CURRENT
 2

	)

228 
	#PRI_FULL_MATCH
 4

	)

231 
	$föd_ègs
(
èg
, 
¥og
, 
num_fûe
, 
fûe
, 
hñp_⁄ly
)

232 
ch¨_u
 *
èg
;

233 
ªgexp
 *
¥og
;

234 *
num_fûe
;

235 
ch¨_u
 ***
fûe
;

236 
hñp_⁄ly
;

238 
FILE
 *
Â
;

239 
ch¨_u
 *
lbuf
;

240 
ch¨_u
 *
èg_‚ame
;

241 
fú°_fûe
;

242 
ch¨_u
 *
èg«me
, *
èg«me_íd
;

243 
ch¨_u
 *
‚ame
, *
‚ame_íd
;

244 
did_›í
 = 
FALSE
;

245 
°›_£¨chög
 = 
FALSE
;

246 
ªtvÆ
 = 
FAIL
;

247 
is_°©ic
;

248 
is_cuºít
;

249 
ch¨_u
 *
p
;

250 #ifde‡
EMACS_TAGS


251 
ch¨_u
 *
ebuf
;

252 
is_ëag
;

258 
ègÀn
 = 0;

259 
cm∂í
;

260 
fuŒ_m©ch
;

261 
iˇ£_m©ch
;

262 
¥i‹ôy
;

264 
ch¨_u
 *
be°m©ch_löe
 = 
NULL
;

266 
ch¨_u
 *
be°m©ch_èg_‚ame
 = 
NULL
;

268 
be°m©ch_¥i‹ôy
 = 0;

270 #ifde‡
EMACS_TAGS


275 
	#INCSTACK_SIZE
 42

	)

278 
FILE
 *
Â
;

279 
ch¨_u
 *
èg_‚ame
;

280 } 
öc°ack
[
INCSTACK_SIZE
];

282 
öc°ack_idx
 = 0;

283 
ch¨_u
 *
be°m©ch_ebuf
 = 
NULL
;

284 
be°m©ch_is_ëag
 = 
FALSE
;

290 
ch¨_u
 **
m©ches
 = 
NULL
;

291 
ch¨_u
 **
√w_m©ches
;

292 
m©ch_limô
 = 100;

293 
m©ch_cou¡
 = 0;

294 
i
;

295 
hñp_ßve
;

297 
hñp_ßve
 = 
curbuf
->
b_hñp
;

301 
lbuf
 = 
	`Æloc
(
LSIZE
);

302 #ifde‡
EMACS_TAGS


303 
ebuf
 = 
	`Æloc
(
LSIZE
);

305 
èg_‚ame
 = 
	`Æloc
(
LSIZE
 + 1);

307 i‡((
èg
 =
NULL
 && 
¥og
 =NULLË|| 
lbuf
 =NULL || 
èg_‚ame
 == NULL

308 #ifde‡
EMACS_TAGS


309 || 
ebuf
 =
NULL


312 
födèg_íd
;

313 i‡(
èg
 =
NULL
)

315 
m©ches
 = (
ch¨_u
 **)
	`Æloc
(()(
m©ch_limô
 * (char_u *)));

316 i‡(
m©ches
 =
NULL
)

317 
födèg_íd
;

323 i‡(
èg
 !
NULL
)

325 
ègÀn
 = 
	`STRLEN
(
èg
);

326 i‡(
p_é
 !0 && 
ègÀn
 >Ö_tl)

327 
ègÀn
 = 
p_é
;

329 i‡(
hñp_⁄ly
)

330 
curbuf
->
b_hñp
 = 
TRUE
;

335 
fú°_fûe
 = 
TRUE
; 
	`gë_èg‚ame
(fú°_fûe, 
èg_‚ame
Ë=
OK
;

336 
fú°_fûe
 = 
FALSE
)

341 i‡((
Â
 = 
	`f›í
((*)
èg_‚ame
, "r")Ë=
NULL
)

343 
did_›í
 = 
TRUE
;

345 #ifde‡
EMACS_TAGS


346 
is_ëag
 = 0;

351 !
gŸ_öt
)

353 
	`löe_bªakcheck
();

355 i‡(
	`vim_fgës
(
lbuf
, 
LSIZE
, 
Â
))

356 #ifde‡
EMACS_TAGS


357 i‡(
öc°ack_idx
)

359 --
öc°ack_idx
;

360 
	`f˛o£
(
Â
);

361 
Â
 = 
öc°ack
[
öc°ack_idx
].fp;

362 
	`STRCPY
(
èg_‚ame
, 
öc°ack
[
öc°ack_idx
].tag_fname);

363 
	`vim_‰ì
(
öc°ack
[
öc°ack_idx
].
èg_‚ame
);

364 
is_ëag
 = 1;

371 #ifde‡
EMACS_TAGS


376 i‡(*
lbuf
 =
	`Cål
('L'))

378 
is_ëag
 = 1;

379 i‡(!
	`vim_fgës
(
ebuf
, 
LSIZE
, 
Â
))

381 
p
 = 
ebuf
; *p && *p != ',';Ö++)

383 *
p
 = 
NUL
;

389 i‡(
	`STRNCMP
(
p
 + 1, "include", 7) == 0 &&

390 
öc°ack_idx
 < 
INCSTACK_SIZE
)

392 i‡((
öc°ack
[
öc°ack_idx
].
èg_‚ame
 =

393 
	`°rßve
(
èg_‚ame
)Ë!
NULL
)

395 
öc°ack
[
öc°ack_idx
].
Â
 = fp;

396 i‡((
Â
 = 
	`f›í
((*)
ebuf
, "r")Ë=
NULL
)

398 
Â
 = 
öc°ack
[
öc°ack_idx
].fp;

399 
	`vim_‰ì
(
öc°ack
[
öc°ack_idx
].
èg_‚ame
);

403 
	`STRCPY
(
èg_‚ame
, 
ebuf
);

404 ++
öc°ack_idx
;

406 
is_ëag
 = 0;

419 i‡(
èg
 !
NULL


420 #ifde‡
EMACS_TAGS


421 && !
is_ëag


425 
èg«me
 = 
lbuf
;

426 
‚ame
 = 
NULL
;

427 
èg«me_íd
 = 
lbuf
; *tagname_end &&

428 !
	`vim_iswhôe
(*
èg«me_íd
); ++tagname_end)

430 i‡(*
èg«me_íd
 == ':')

432 i‡(
‚ame
 =
NULL
)

433 
‚ame
 = 
	`skùwhôe
(
	`skùtowhôe
(
èg«me_íd
));

434 i‡(
	`‚amícmp
(
lbuf
, 
‚ame
, 
èg«me_íd
 -Übuf) == 0 &&

435 
	`vim_iswhôe
(
‚ame
[
èg«me_íd
 - 
lbuf
]))

436 
èg«me
 = 
èg«me_íd
 + 1;

443 
cm∂í
 = 
èg«me_íd
 - 
èg«me
;

444 i‡(
p_é
 !0 && 
cm∂í
 >Ö_tl)

445 
cm∂í
 = 
p_é
;

446 i‡(
ègÀn
 !
cm∂í
)

452 i‡(
	`vim_°∫icmp
(
èg«me
, 
èg
, (
size_t
)
cm∂í
))

458 i‡(
‚ame
 =
NULL
)

459 
‚ame
 = 
	`skùwhôe
(
	`skùtowhôe
(
èg«me_íd
));

460 
‚ame_íd
 = 
	`skùtowhôe
(
‚ame
);

461 i‡(*
‚ame_íd
 =
NUL
)

462 
i
 = 
FAIL
;

464 
i
 = 
OK
;

467 
i
 = 
	`∑r£_èg_löe
(
lbuf
,

468 #ifde‡
EMACS_TAGS


469 
is_ëag
,

471 &
èg«me
, &
èg«me_íd
, &
‚ame
, &
‚ame_íd
, 
NULL
);

472 i‡(
i
 =
FAIL
)

474 
	`EMSG2
("F‹m©Éº‹ i¿èg†fûê\"%s\"", 
èg_‚ame
);

475 
°›_£¨chög
 = 
TRUE
;

479 #ifde‡
EMACS_TAGS


480 
is_°©ic
 = 
FALSE
;

481 i‡(!
is_ëag
)

483 
is_°©ic
 = 
	`ã°_f‹_°©ic
(&
èg«me
, 
èg«me_íd
,

484 
‚ame
, 
‚ame_íd
);

485 #ifde‡
EMACS_TAGS


486 i‡(
is_ëag
)

487 
‚ame
 = 
ebuf
;

492 i‡(
èg
 =
NULL
)

494 *
èg«me_íd
 = 
NUL
;

495 i‡(
	`vim_ªgexec
(
¥og
, 
èg«me
, 
TRUE
))

497 
is_cuºít
 = 
	`ã°_f‹_cuºít
(

498 #ifde‡
EMACS_TAGS


499 
is_ëag
,

501 
‚ame
, 
‚ame_íd
, 
èg_‚ame
);

502 i‡(!
is_°©ic
 || 
is_cuºít
)

508 i‡(
m©ch_cou¡
 =
m©ch_limô
)

510 
m©ch_limô
 += 100;

511 
√w_m©ches
 = (
ch¨_u
 **)
	`Æloc
(

512 ()(
m©ch_limô
 * (
ch¨_u
 *)));

513 i‡(
√w_m©ches
 =
NULL
)

517 
ªtvÆ
 = 
OK
;

518 
°›_£¨chög
 = 
TRUE
;

521 
i
 = 0; i < 
m©ch_cou¡
; i++)

522 
√w_m©ches
[
i
] = 
m©ches
[i];

523 
	`vim_‰ì
(
m©ches
);

524 
m©ches
 = 
√w_m©ches
;

526 i‡(
hñp_⁄ly
)

528 
Àn
;

534 
Àn
 = 
	`STRLEN
(
èg«me
);

535 
p
 = 
	`Æloc
(
Àn
 + 10);

536 i‡(
p
 !
NULL
)

538 
	`STRCPY
(
p
, 
èg«me
);

539 
	`•rötf
((*)
p
 + 
Àn
 + 1, "%06d",

540 
	`hñp_heuri°ic
(
èg«me
,

541 ()(
¥og
->
°¨ç
[0] - 
èg«me
)));

543 
m©ches
[
m©ch_cou¡
++] = 
p
;

546 
m©ches
[
m©ch_cou¡
++] = 
	`°rßve
(
èg«me
);

558 
cm∂í
 = 
èg«me_íd
 - 
èg«me
;

559 i‡(
p_é
 !0 && 
cm∂í
 >Ö_tl)

560 
cm∂í
 = 
p_é
;

561 i‡(
ègÀn
 =
cm∂í
)

566 
iˇ£_m©ch
 = (
	`vim_°∫icmp
(
èg«me
, 
èg
,

567 (
size_t
)
cm∂í
) == 0);

568 i‡(
iˇ£_m©ch
)

574 
fuŒ_m©ch
 = (
	`STRNCMP
(
èg«me
, 
èg
, 
cm∂í
) == 0);

575 
is_cuºít
 = 
	`ã°_f‹_cuºít
(

576 #ifde‡
EMACS_TAGS


577 
is_ëag
,

579 
‚ame
, 
‚ame_íd
, 
èg_‚ame
);

580 i‡(
fuŒ_m©ch
 && 
is_cuºít
)

582 
ªtvÆ
 = 
	`jum±o_èg
(
lbuf
,

583 #ifde‡
EMACS_TAGS


584 
is_ëag
, 
ebuf
,

586 
èg_‚ame
);

587 
°›_£¨chög
 = 
TRUE
;

595 i‡(
fuŒ_m©ch
)

596 
¥i‹ôy
 = 
PRI_FULL_MATCH
;

598 
¥i‹ôy
 = 0;

599 i‡(
is_cuºít
)

600 
¥i‹ôy
 +
PRI_CURRENT
;

601 i‡(!
is_°©ic
)

602 
¥i‹ôy
 +
PRI_GLOBAL
;

604 i‡(
¥i‹ôy
 > 
be°m©ch_¥i‹ôy
)

606 
	`vim_‰ì
(
be°m©ch_löe
);

607 
be°m©ch_löe
 = 
	`°rßve
(
lbuf
);

608 
	`vim_‰ì
(
be°m©ch_èg_‚ame
);

609 
be°m©ch_èg_‚ame
 = 
	`°rßve
(
èg_‚ame
);

610 
be°m©ch_¥i‹ôy
 = 
¥i‹ôy
;

611 #ifde‡
EMACS_TAGS


612 
be°m©ch_is_ëag
 = 
is_ëag
;

613 i‡(
is_ëag
)

615 
	`vim_‰ì
(
be°m©ch_ebuf
);

616 
be°m©ch_ebuf
 = 
	`°rßve
(
ebuf
);

624 
	`f˛o£
(
Â
);

625 #ifde‡
EMACS_TAGS


626 
öc°ack_idx
)

628 --
öc°ack_idx
;

629 
	`f˛o£
(
öc°ack
[
öc°ack_idx
].
Â
);

630 
	`vim_‰ì
(
öc°ack
[
öc°ack_idx
].
èg_‚ame
);

633 i‡(
°›_£¨chög
)

640 i‡(
èg
 !
NULL
 && 
be°m©ch_löe
 != NULL &&

641 
be°m©ch_¥i‹ôy
 >(
p_ic
 ? 0 : 
PRI_FULL_MATCH
Ë+ 
PRI_GLOBAL
)

645 i‡(!
°›_£¨chög
)

647 i‡(!
did_›í
)

648 
	`EMSG
("NoÅags file");

649 i‡(
èg
 =
NULL
)

651 
ªtvÆ
 = 
OK
;

658 i‡(
be°m©ch_löe
 !
NULL
)

660 i‡(
be°m©ch_¥i‹ôy
 < 
PRI_FULL_MATCH
)

662 
	`MSG
("Only foundÅag with different case!");

663 i‡(!
msg_s¸ﬁÀd
)

665 
	`Êushbuf
();

666 
	`mch_dñay
(1000L, 
TRUE
);

669 
ªtvÆ
 = 
	`jum±o_èg
(
be°m©ch_löe
,

670 #ifde‡
EMACS_TAGS


671 
be°m©ch_is_ëag
, 
be°m©ch_ebuf
,

673 
be°m©ch_èg_‚ame
);

676 
	`EMSG
("tagÇot found");

680 
födèg_íd
:

681 
	`vim_‰ì
(
lbuf
);

682 
	`vim_‰ì
(
èg_‚ame
);

683 
	`vim_‰ì
(
be°m©ch_löe
);

684 
	`vim_‰ì
(
be°m©ch_èg_‚ame
);

685 #ifde‡
EMACS_TAGS


686 
	`vim_‰ì
(
ebuf
);

687 
	`vim_‰ì
(
be°m©ch_ebuf
);

690 i‡(
èg
 =
NULL
)

692 i‡(
ªtvÆ
 =
FAIL
)

693 
m©ch_cou¡
 > 0)

694 
	`vim_‰ì
(
m©ches
[--
m©ch_cou¡
]);

695 i‡(
m©ch_cou¡
 == 0)

697 
	`vim_‰ì
(
m©ches
);

698 
m©ches
 = 
NULL
;

700 *
fûe
 = 
m©ches
;

701 *
num_fûe
 = 
m©ch_cou¡
;

703 
curbuf
->
b_hñp
 = 
hñp_ßve
;

705  
ªtvÆ
;

706 
	}
}

715 
	$gë_èg‚ame
(
fú°
, 
buf
)

716 
fú°
;

717 
ch¨_u
 *
buf
;

719 
ch¨_u
 *
≈
 = 
NULL
;

720 
ch¨_u
 *
‚ame
;

721 
size_t
 
∑th_Àn
, 
‚ame_Àn
;

725 
	svisôed


727 
visôed
 *
v_√xt
;

728 #i‡
	`deföed
(
UNIX
)

729 
°©
 
v_°
;

731 
ch¨_u
 
v_‚ame
[1];

734 
visôed
 *
fú°_visôed
 = 
NULL
;

735 
visôed
 *
vp
;

736 #i‡
	`deföed
(
UNIX
)

737 
°©
 
°
;

740 i‡(
fú°
)

742 
≈
 = 
p_ègs
;

743 
fú°_visôed
 !
NULL
)

745 
vp
 = 
fú°_visôed
->
v_√xt
;

746 
	`vim_‰ì
(
fú°_visôed
);

747 
fú°_visôed
 = 
vp
;

751 i‡(
≈
 =
NULL
)

752  
FAIL
;

758 i‡(
curbuf
->
b_hñp
)

760 
∑th_Àn
 = 
	`gëèû
(
p_hf
) -Ö_hf;

761 i‡(
∑th_Àn
 + 9 >
LSIZE
)

762  
FAIL
;

763 
	`vim_memmove
(
buf
, 
p_hf
, 
∑th_Àn
);

764 
	`STRCPY
(
buf
 + 
∑th_Àn
, "vim_tags");

766 
≈
 = 
NULL
;

776 i‡(*
≈
 =
NUL
)

777  
FAIL
;

782 ()
	`c›y_›ti⁄_∑π
(&
≈
, 
buf
, 
LSIZE
, " ,");

788 i‡(
buf
[0] ='.' && 
	`i•©h£p
(buf[1]))

790 i‡(
curbuf
->
b_fûíame
 =
NULL
)

793 
∑th_Àn
 = 
	`gëèû
(
curbuf
->
b_fûíame
) - curbuf->b_filename;

794 
‚ame
 = 
buf
 + 1;

795 
	`i•©h£p
(*
‚ame
))

796 ++
‚ame
;

797 
‚ame_Àn
 = 
	`STRLEN
(
‚ame
);

798 i‡(
‚ame_Àn
 + 
∑th_Àn
 + 1 > 
LSIZE
)

800 
	`vim_memmove
(
buf
 + 
∑th_Àn
, 
‚ame
, 
‚ame_Àn
 + 1);

801 
	`vim_memmove
(
buf
, 
curbuf
->
b_fûíame
, 
∑th_Àn
);

808 #i‡
	`deföed
(
UNIX
)

809 i‡(
	`°©
((*)
buf
, &
°
) < 0)

811 i‡(
	`FuŒName
(
buf
, 
NameBuff
, 
MAXPATHL
, 
TRUE
Ë=
FAIL
)

815 
vp
 = 
fú°_visôed
; v∞!
NULL
; v∞vp->
v_√xt
)

816 #i‡
	`deföed
(
UNIX
)

817 i‡(
vp
->
v_°
.
°_dev
 =
°
.st_dev &&

818 
vp
->
v_°
.
°_öo
 =
°
.st_ino)

820 i‡(
	`‚amecmp
(
vp
->
v_‚ame
, 
NameBuff
) == 0)

824 i‡(
vp
 !
NULL
)

830 #i‡
	`deföed
(
UNIX
)

831 
vp
 = (
visôed
 *)
	`Æloc
(()(visited));

833 
vp
 = (
visôed
 *)
	`Æloc
(()((visited) +

834 
	`STRLEN
(
NameBuff
)));

836 i‡(
vp
 !
NULL
)

838 #i‡
	`deföed
(
UNIX
)

839 
vp
->
v_°
 = 
°
;

841 
	`STRCPY
(
vp
->
v_‚ame
, 
NameBuff
);

843 
vp
->
v_√xt
 = 
fú°_visôed
;

844 
fú°_visôed
 = 
vp
;

849  
OK
;

850 
	}
}

862 
∑r£_èg_löe
(
lbuf
,

863 #ifde‡
EMACS_TAGS


864 
is_ëag
,

866 
èg«me
, 
èg«me_íd
, 
‚ame
, 
‚ame_íd
, 
comm™d
)

867 
ch¨_u
 *
	glbuf
;

868 #ifde‡
EMACS_TAGS


869 
	gis_ëag
;

871 
ch¨_u
 **
	gèg«me
;

872 
ch¨_u
 **
	gèg«me_íd
;

873 
ch¨_u
 **
	g‚ame
;

874 
ch¨_u
 **
	g‚ame_íd
;

875 
ch¨_u
 **
	gcomm™d
;

877 
ch¨_u
 *
	gp
;

879 #ifde‡
EMACS_TAGS


880 
ch¨_u
 *
	gp_7f
;

882 i‡(
	gis_ëag
)

889 
	gp_7f
 = 
vim_°rchr
(
lbuf
, 0x7f);

890 i‡(
	gp_7f
 =
NULL
)

891  
FAIL
;

893 
	gp
 = 
p_7f
 + 1; *p < '0' || *p > '9'; ++p)

894 i‡(*
	gp
 =
NUL
)

895  
FAIL
;

896 i‡(
	gcomm™d
 !
NULL
)

897 *
comm™d
 = 
p
;

900 i‡(
	gp
[-1] =
Cål
('A'))

902 *
èg«me
 = 
p_7f
 + 1;

903 *
	gèg«me_íd
 = 
p
 - 1;

909 
	gp
 = 
p_7f
 - 1; *∞=' ' || *
p
 == '\t' ||

910 *
p
 ='(' || *∞=';'; --
	gp
)

911 i‡(
	gp
 =
lbuf
)

912  
FAIL
;

913 *
	gèg«me_íd
 = 
p
 + 1;

914 
	gp
 >
lbuf
 && *
p
 != ' ' && *p != '\t')

915 --
p
;

916 *
	gèg«me
 = 
p
 + 1;

923 *
	gèg«me
 = 
lbuf
;

924 
	gp
 = 
skùtowhôe
(
lbuf
);

925 i‡(*
	gp
 =
NUL
)

926  
FAIL
;

927 *
	gèg«me_íd
 = 
p
;

930 
	gp
 = 
skùwhôe
(
p
);

931 *
	g‚ame
 = 
p
;

932 
	gp
 = 
skùtowhôe
(
p
);

933 i‡(*
	gp
 =
NUL
)

934  
FAIL
;

935 *
	g‚ame_íd
 = 
p
;

938 i‡(
	gcomm™d
 !
NULL
)

940 
p
 = 
skùwhôe
(p);

941 i‡(*
	gp
 =
NUL
)

942  
FAIL
;

943 *
	gcomm™d
 = 
p
;

945 #ifde‡
EMACS_TAGS


949  
	gOK
;

965 
	$ã°_f‹_°©ic
(
èg«me
, 
èg«me_íd
, 
‚ame
, 
‚ame_íd
)

966 
ch¨_u
 **
èg«me
;

967 
ch¨_u
 *
èg«me_íd
;

968 
ch¨_u
 *
‚ame
;

969 
ch¨_u
 *
‚ame_íd
;

971 
ch¨_u
 *
p
;

973 
p
 = *
èg«me
 + (
‚ame_íd
 - 
‚ame
);

974 i‡(
p
 < 
èg«me_íd
 && *p == ':' &&

975 
	`‚amícmp
(*
èg«me
, 
‚ame
, 
‚ame_íd
 - fname) == 0)

977 *
èg«me
 = 
p
 + 1;

978  
TRUE
;

980  
FALSE
;

981 
	}
}

987 
jum±o_èg
(
lbuf
,

988 #ifde‡
EMACS_TAGS


989 
is_ëag
, 
ëag_‚ame
,

991 
èg_‚ame
)

992 
ch¨_u
 *
	glbuf
;

993 #ifde‡
EMACS_TAGS


994 
	gis_ëag
;

995 
ch¨_u
 *
	gëag_‚ame
;

997 
ch¨_u
 *
	gèg_‚ame
;

999 
	gßve_£cuª
;

1000 
	gßve_p_ws
, 
	gßve_p_scs
, 
	gßve_p_ic
;

1001 
ch¨_u
 *
	g°r
;

1002 
ch¨_u
 *
	gpbuf
;

1003 
ch¨_u
 *
	gp
;

1004 
ch¨_u
 *
	gex∑nded_‚ame
 = 
NULL
;

1005 
ch¨_u
 *
	gèg«me
, *
	gèg«me_íd
;

1006 
ch¨_u
 *
	g‚ame
, *
	g‚ame_íd
;

1007 
ch¨_u
 *
	g‹ig_‚ame
;

1008 
	gªtvÆ
 = 
FAIL
;

1009 
	ggëfûe_ªsu…
;

1010 
	g£¨ch_›ti⁄s
;

1012 
	gpbuf
 = 
Æloc
(
LSIZE
);

1014 i‡(
	gpbuf
 =
NULL


1015 #ifde‡
EMACS_TAGS


1016 || (
is_ëag
 && 
ëag_‚ame
 =
NULL
)

1018 || 
èg_‚ame
 =
NULL
)

1019 
îªt
;

1024 i‡(
∑r£_èg_löe
(
lbuf
,

1025 #ifde‡
EMACS_TAGS


1026 
is_ëag
,

1028 &
èg«me
, &
èg«me_íd
, &
‚ame
, &
‚ame_íd
, &
°r
Ë=
FAIL
)

1029 
îªt
;

1030 
	g‹ig_‚ame
 = 
‚ame
;

1032 #ifde‡
EMACS_TAGS


1033 i‡(
	gis_ëag
)

1034 
	g‚ame
 = 
ëag_‚ame
;

1037 *
	g‚ame_íd
 = 
NUL
;

1045 i‡(*
	g°r
 ='/' || *
°r
 == '?')

1047 
p
 = 
pbuf
;

1048 *
	gp
++ = *
°r
++;

1049 i‡(*
	g°r
 == '^')

1050 *
p
++ = *
°r
++;

1052 *
	g°r
)

1054 *
	g°r
)

1061 '\\': i‡(
°r
[1] ='(' || (!
p_magic
 && str[1] == '*'))

1062 ++
°r
;

1064 *
	gp
++ = *
°r
++;

1068 '\n': *
°r
 = 
pbuf
[0];

1069 
	g°r
[1] = 
NUL
;

1077 '?': i‡(*
°r
 !
pbuf
[0])

1080 i‡(
	g°r
[1] ='\n' || 
°r
[1] == '\r')

1082 ++
°r
;

1086 i‡(!
p_magic
)

1091 '.': *
p
++ = '\\';

1094 *
	gp
++ = *
°r
++;

1099 
	gp
 = 
pbuf
; *
	g°r
 && *str != '\n'; )

1101 #ifde‡
EMACS_TAGS


1102 i‡(
	gis_ëag
 && *
	g°r
 == ',')

1105 *
	gp
++ = *
°r
++;

1108 *
	gp
 = 
NUL
;

1113 
	gex∑nded_‚ame
 = 
Ex∑ndO√
((
ch¨_u
 *)
‚ame
, 
NULL
, 
WILD_LIST_NOTFOUND
,

1114 
WILD_EXPAND_FREE
);

1115 i‡(
	gex∑nded_‚ame
 !
NULL
)

1116 
‚ame
 = 
ex∑nded_‚ame
;

1121 
	g‚ame
 = 
ex∑nd_ªl_«me
(
‚ame
, 
èg_‚ame
);

1126 i‡(
gë≥rm
(
‚ame
) < 0)

1128 
EMSG2
("Fûê\"%s\" d€†nŸÉxi°", 
‚ame
);

1129 
	gîªt
;

1132 ++
	gRedøwögDißbÀd
;

1136 i‡(
	gpo°p⁄ed_•lô
)

1137 
wö_•lô
(0, 
FALSE
);

1141 
	gkìp_hñp_Êag
 = 
curbuf
->
b_hñp
;

1142 
	ggëfûe_ªsu…
 = 
gëfûe
(0, 
‚ame
, 
NULL
, 
TRUE
, (
löír_t
)0);

1144 i‡(
	ggëfûe_ªsu…
 <= 0)

1146 
curwö
->
w_£t_cursw™t
 = 
TRUE
;

1147 
	gpo°p⁄ed_•lô
 = 
FALSE
;

1149 
	gßve_£cuª
 = 
£cuª
;

1150 
	g£cuª
 = 1;

1156 i‡(
vim_°rchr
(
p_˝o
, 
CPO_TAGPAT
Ë!
NULL
)

1157 
£¨ch_›ti⁄s
 = 0;

1159 
	g£¨ch_›ti⁄s
 = 
SEARCH_KEEP
;

1171 i‡(
	gpbuf
[0] ='/' || 
pbuf
[0] == '?')

1173 
ßve_p_ws
 = 
p_ws
;

1174 
	gßve_p_ic
 = 
p_ic
;

1175 
	gßve_p_scs
 = 
p_scs
;

1176 
	gp_ws
 = 
TRUE
;

1177 
	gp_ic
 = 
FALSE
;

1178 
	gp_scs
 = 
FALSE
;

1179 
add_to_hi°‹y
(1, 
pbuf
 + 1);

1181 i‡(
do_£¨ch
(
pbuf
[0],Öbu‡+ 1, ()1, 
£¨ch_›ti⁄s
))

1182 
	gªtvÆ
 = 
OK
;

1185 
	gnŸfound
 = 
FALSE
;

1190 
	gp_ic
 = 
TRUE
;

1191 i‡(!
do_£¨ch
(
pbuf
[0],Öbu‡+ 1, ()1, 
£¨ch_›ti⁄s
))

1196 ()
ã°_f‹_°©ic
(&
èg«me
, 
èg«me_íd
,

1197 
‹ig_‚ame
, 
‚ame_íd
);

1198 *
	gèg«me_íd
 = 
NUL
;

1199 
•rötf
((*)
pbuf
, "^%s[ \t]*(", 
èg«me
);

1200 i‡(!
do_£¨ch
('/', 
pbuf
, ()1, 
£¨ch_›ti⁄s
))

1203 
•rötf
((*)
pbuf
, "^[#a-zA-Z_].*%s[ \t]*(",

1204 
èg«me
);

1205 i‡(!
do_£¨ch
('/', 
pbuf
, ()1, 
£¨ch_›ti⁄s
))

1206 
	gnŸfound
 = 
TRUE
;

1209 i‡(
	gnŸfound
)

1210 
EMSG
("Can't findÅagÖattern");

1213 
MSG
("Couldn't findÅag, just guessing!");

1214 i‡(!
	gmsg_s¸ﬁÀd
)

1216 
Êushbuf
();

1217 
mch_dñay
(1000L, 
TRUE
);

1219 
	gªtvÆ
 = 
OK
;

1222 
	gp_ws
 = 
ßve_p_ws
;

1223 
	gp_ic
 = 
ßve_p_ic
;

1224 
	gp_scs
 = 
ßve_p_scs
;

1228 
	gcurwö
->
	gw_curs‹
.
	g um
 = 1;

1229 
do_cmdlöe
(
pbuf
, 
TRUE
, TRUE);

1230 
	gªtvÆ
 = 
OK
;

1233 i‡(
	g£cuª
 == 2)

1234 
waô_ªtu∫
(
TRUE
);

1235 
	g£cuª
 = 
ßve_£cuª
;

1241 i‡(
	ggëfûe_ªsu…
 == -1)

1243 i‡(!
curbuf
->
b_hñp
)

1244 
√ed_fûeöfo
 = 
TRUE
;

1245 
	gªtvÆ
 = 
OK
;

1253 i‡(
	gcurbuf
->
	gb_hñp
)

1255 
	gcurwö
->
	gw_t›löe
 = 
curwö
->
w_curs‹
.
 um
;

1256 
comp_BŸlöe
(
curwö
);

1257 
cursupd©e
();

1258 
upd©eS¸ìn
(
NOT_VALID
);

1260 --
	gRedøwögDißbÀd
;

1264 --
	gRedøwögDißbÀd
;

1265 i‡(
	gpo°p⁄ed_•lô
)

1267 
˛o£_wödow
(
curwö
, 
FALSE
);

1268 
	gpo°p⁄ed_•lô
 = 
FALSE
;

1272 
	gîªt
:

1273 
vim_‰ì
(
pbuf
);

1274 
vim_‰ì
(
ex∑nded_‚ame
);

1276  
	gªtvÆ
;

1283 
ch¨_u
 *

1284 
	$ex∑nd_ªl_«me
(
‚ame
, 
èg_‚ame
)

1285 
ch¨_u
 *
‚ame
;

1286 
ch¨_u
 *
èg_‚ame
;

1288 
ch¨_u
 *
p
;

1290 i‡((
p_å
 || 
curbuf
->
b_hñp
Ë&& !
	`isFuŒName
(
‚ame
) &&

1291 (
p
 = 
	`gëèû
(
èg_‚ame
)) !=Åag_fname)

1293 
	`STRCPY
(
NameBuff
, 
èg_‚ame
);

1294 
	`STRNCPY
(
NameBuff
 + (
p
 - 
èg_‚ame
), 
‚ame
,

1295 
MAXPATHL
 - (
p
 - 
èg_‚ame
));

1296 
‚ame
 = 
NameBuff
;

1298  
‚ame
;

1299 
	}
}

1308 #ifde‡
EMACS_TAGS


1309 
	$ã°_f‹_cuºít
(
is_ëag
, 
‚ame
, 
‚ame_íd
, 
èg_‚ame
)

1310 
is_ëag
;

1312 
	$ã°_f‹_cuºít
(
‚ame
, 
‚ame_íd
, 
èg_‚ame
)

1314 
ch¨_u
 *
‚ame
;

1315 
ch¨_u
 *
‚ame_íd
;

1316 
ch¨_u
 *
èg_‚ame
;

1318 
c
;

1319 
ªtvÆ
;

1321 i‡(
curbuf
->
b_fûíame
 =
NULL
)

1322 
ªtvÆ
 = 
FALSE
;

1325 #ifde‡
EMACS_TAGS


1326 i‡(
is_ëag
)

1327 
c
 = 0;

1331 
c
 = *
‚ame_íd
;

1332 *
‚ame_íd
 = 
NUL
;

1334 
ªtvÆ
 = (
	`fuŒ∑thcmp
(
	`ex∑nd_ªl_«me
(
‚ame
, 
èg_‚ame
),

1335 
curbuf
->
b_xfûíame
Ë=
FPC_SAME
);

1336 #ifde‡
EMACS_TAGS


1337 i‡(!
is_ëag
)

1339 *
‚ame_íd
 = 
c
;

1342  
ªtvÆ
;

1343 
	}
}

	@src/term.c

24 
	#tgë°r
 
tgë°r_deföed_wr⁄g


	)

25 
	~"vim.h
"

27 
	~"globÆs.h
"

28 
	~"›ti⁄.h
"

29 
	~"¥Ÿo.h
"

31 #ifde‡
HAVE_TGETENT


32 #ifde‡
HAVE_TERMCAP_H


33 
	~<ãrmˇp.h
>

40 #ifde‡
VMS


41 
	#TPUTSFUNCAST


	)

43 #ifde‡
HAVE_OUTFUNTYPE


44 
	#TPUTSFUNCAST
 (
outfu¡y≥
)

	)

46 
	#TPUTSFUNCAST
 ((*)())

	)

51 #unde‡
tgë°r


66 
	sbuûtö_ãrm


68 
	mbt_íåy
;

69 *
	mbt_°rög
;

73 
	#BT_EXTRA_KEYS
 0x101

	)

75 
buûtö_ãrm
 *
föd_buûtö_ãrm
 
__ARGS
((
ch¨_u
 *
«me
));

76 
∑r£_buûtö_tˇp
 
__ARGS
((
ch¨_u
 *
s
));

77 
g©hî_ãrmÀadî
 
__ARGS
(());

78 
gë_byãs_‰om_buf
 
__ARGS
((
ch¨_u
 *, char_u *, ));

79 
is_buûtö_ãrm
 
__ARGS
((
ch¨_u
 *));

81 #ifde‡
HAVE_TGETENT


82 
ch¨_u
 *
tgëít_îr‹
 
__ARGS
((char_u *, char_u *));

88 *
tgë°r
 
__PARMS
((*, **));

97 #i‚de‡
HAVE_OSPEED


98 #ifde‡
OSPEED_EXTERN


99 
o•ìd
;

101 
	go•ìd
;

104 #i‚de‡
HAVE_UP_BC_PC


105 #ifde‡
UP_BC_PC_EXTERN


106 *
UP
, *
BC
, 
PC
;

108 *
	gUP
, *
	gBC
, 
	gPC
;

112 
	#TGETSTR
(
s
, 
p
Ë(
ch¨_u
 *)
	`tgë°r
((s), (**)’))

	)

113 
	#TGETENT
(
b
, 
t
Ë
	`tgëít
((*)(b), (*)—))

	)

117 
buûtö_ãrm
 
	gbuûtö_ãrmˇps
[] =

120 #i‡
deföed
(
USE_GUI
)

124 {
KS_NAME
, "gui"},

125 {
KS_CE
, "\033|$"},

126 {
KS_AL
, "\033|i"},

127 #ifde‡
TERMINFO


128 {
KS_CAL
, "\033|%p1%dI"},

130 {
KS_CAL
, "\033|%dI"},

132 {
KS_DL
, "\033|d"},

133 #ifde‡
TERMINFO


134 {
KS_CDL
, "\033|%p1%dD"},

135 {
KS_CS
, "\033|%p1%d;%p2%dR"},

137 {
KS_CDL
, "\033|%dD"},

138 {
KS_CS
, "\033|%d;%dR"},

140 {
KS_CL
, "\033|C"},

141 {
KS_ME
, "\033|63H"},

142 {
KS_MR
, "\033|1h"},

143 {
KS_MD
, "\033|2h"},

144 {
KS_SE
, "\033|16H"},

145 {
KS_SO
, "\033|16h"},

146 {
KS_UE
, "\033|8H"},

147 {
KS_US
, "\033|8h"},

148 {
KS_CZR
, "\033|4H"},

149 {
KS_CZH
, "\033|4h"},

150 {
KS_VB
, "\033|f"},

151 #ifde‡
TERMINFO


152 {
KS_CM
, "\033|%p1%d;%p2%dM"},

154 {
KS_CM
, "\033|%d;%dM"},

160 #i‚de‡
NO_BUILTIN_TCAPS


162 #i‡
deföed
(
AMIGA
Ë|| deföed(
ALL_BUILTIN_TCAPS
)

166 {
KS_NAME
, "amiga"},

167 {
KS_CE
, "\033[K"},

168 {
KS_CD
, "\033[J"},

169 {
KS_AL
, "\033[L"},

170 #ifde‡
TERMINFO


171 {
KS_CAL
, "\033[%p1%dL"},

173 {
KS_CAL
, "\033[%dL"},

175 {
KS_DL
, "\033[M"},

176 #ifde‡
TERMINFO


177 {
KS_CDL
, "\033[%p1%dM"},

179 {
KS_CDL
, "\033[%dM"},

181 {
KS_CL
, "\014"},

182 {
KS_VI
, "\033[0Ö"},

183 {
KS_VE
, "\033[1Ö"},

184 {
KS_ME
, "\033[0m"},

185 {
KS_MR
, "\033[7m"},

186 {
KS_MD
, "\033[1m"},

187 {
KS_SE
, "\033[0m"},

188 {
KS_SO
, "\033[33m"},

189 {
KS_US
, "\033[4m"},

190 {
KS_UE
, "\033[0m"},

191 {
KS_CZH
, "\033[3m"},

192 {
KS_CZR
, "\033[0m"},

193 {
KS_MS
, "\001"},

194 #ifde‡
TERMINFO


195 {
KS_CM
, "\033[%i%p1%d;%p2%dH"},

197 {
KS_CM
, "\033[%i%d;%dH"},

199 #ifde‡
TERMINFO


200 {
KS_CRI
, "\033[%p1%dC"},

202 {
KS_CRI
, "\033[%dC"},

204 {
K_UP
, "\233A"},

205 {
K_DOWN
, "\233B"},

206 {
K_LEFT
, "\233D"},

207 {
K_RIGHT
, "\233C"},

208 {
K_S_UP
, "\233T"},

209 {
K_S_DOWN
, "\233S"},

210 {
K_S_LEFT
, "\233 A"},

211 {
K_S_RIGHT
, "\233 @"},

212 {
K_S_TAB
, "\233Z"},

213 {
K_F1
, "\233\060~"},

214 {
K_F2
, "\233\061~"},

215 {
K_F3
, "\233\062~"},

216 {
K_F4
, "\233\063~"},

217 {
K_F5
, "\233\064~"},

218 {
K_F6
, "\233\065~"},

219 {
K_F7
, "\233\066~"},

220 {
K_F8
, "\233\067~"},

221 {
K_F9
, "\233\070~"},

222 {
K_F10
, "\233\071~"},

223 {
K_S_F1
, "\233\061\060~"},

224 {
K_S_F2
, "\233\061\061~"},

225 {
K_S_F3
, "\233\061\062~"},

226 {
K_S_F4
, "\233\061\063~"},

227 {
K_S_F5
, "\233\061\064~"},

228 {
K_S_F6
, "\233\061\065~"},

229 {
K_S_F7
, "\233\061\066~"},

230 {
K_S_F8
, "\233\061\067~"},

231 {
K_S_F9
, "\233\061\070~"},

232 {
K_S_F10
, "\233\061\071~"},

233 {
K_HELP
, "\233?~"},

234 {
K_INS
, "\233\064\060~"},

235 {
K_PAGEUP
, "\233\064\061~"},

236 {
K_PAGEDOWN
, "\233\064\062~"},

237 {
K_HOME
, "\233\064\064~"},

238 {
K_END
, "\233\064\065~"},

240 {
BT_EXTRA_KEYS
, ""},

241 {
TERMCAP2KEY
('#', '2'), "\233\065\064~"},

242 {
TERMCAP2KEY
('#', '3'), "\233\065\060~"},

243 {
TERMCAP2KEY
('*', '7'), "\233\065\065~"},

246 #i‡
deföed
(
UNIX
Ë|| deföed(
ALL_BUILTIN_TCAPS
Ë|| deföed(
SOME_BUILTIN_TCAPS
Ë|| deföed(
__EMX__
)

250 {
KS_NAME
, "ansi"},

251 {
KS_CE
, "\033[K"},

252 {
KS_AL
, "\033[L"},

253 #ifde‡
TERMINFO


254 {
KS_CAL
, "\033[%p1%dL"},

256 {
KS_CAL
, "\033[%dL"},

258 {
KS_DL
, "\033[M"},

259 #ifde‡
TERMINFO


260 {
KS_CDL
, "\033[%p1%dM"},

262 {
KS_CDL
, "\033[%dM"},

264 {
KS_CL
, "\033[H\033[2J"},

265 {
KS_ME
, "\033[0m"},

266 {
KS_MR
, "\033[7m"},

267 {
KS_MS
, "\001"},

268 #ifde‡
TERMINFO


269 {
KS_CM
, "\033[%i%p1%d;%p2%dH"},

271 {
KS_CM
, "\033[%i%d;%dH"},

273 #ifde‡
TERMINFO


274 {
KS_CRI
, "\033[%p1%dC"},

276 {
KS_CRI
, "\033[%dC"},

280 #i‡
deföed
(
MSDOS
Ë|| deföed(
ALL_BUILTIN_TCAPS
Ë|| deföed(
__EMX__
)

287 #ifde‡
__EMX__


288 {
KS_NAME
, "os2ansi"},

290 {
KS_NAME
, "pcansi"},

291 {
KS_DL
, "\033[M"},

292 {
KS_AL
, "\033[L"},

294 {
KS_CE
, "\033[K"},

295 {
KS_CL
, "\033[2J"},

296 {
KS_ME
, "\033[0m"},

297 {
KS_MR
, "\033[7m"},

298 {
KS_MS
, "\001"},

299 #ifde‡
TERMINFO


300 {
KS_CM
, "\033[%i%p1%d;%p2%dH"},

302 {
KS_CM
, "\033[%i%d;%dH"},

304 #ifde‡
TERMINFO


305 {
KS_CRI
, "\033[%p1%dC"},

307 {
KS_CRI
, "\033[%dC"},

309 {
K_UP
, "\316H"},

310 {
K_DOWN
, "\316P"},

311 {
K_LEFT
, "\316K"},

312 {
K_RIGHT
, "\316M"},

313 {
K_S_LEFT
, "\316s"},

314 {
K_S_RIGHT
, "\316t"},

315 {
K_F1
, "\316;"},

316 {
K_F2
, "\316<"},

317 {
K_F3
, "\316="},

318 {
K_F4
, "\316>"},

319 {
K_F5
, "\316?"},

320 {
K_F6
, "\316@"},

321 {
K_F7
, "\316A"},

322 {
K_F8
, "\316B"},

323 {
K_F9
, "\316C"},

324 {
K_F10
, "\316D"},

325 {
K_F11
, "\316\205"},

326 {
K_F12
, "\316\206"},

327 {
K_S_F1
, "\316T"},

328 {
K_S_F2
, "\316U"},

329 {
K_S_F3
, "\316V"},

330 {
K_S_F4
, "\316W"},

331 {
K_S_F5
, "\316X"},

332 {
K_S_F6
, "\316Y"},

333 {
K_S_F7
, "\316Z"},

334 {
K_S_F8
, "\316["},

335 {
K_S_F9
, "\316\\"},

336 {
K_S_F10
, "\316]"},

337 {
K_S_F11
, "\316\207"},

338 {
K_S_F12
, "\316\210"},

339 {
K_INS
, "\316R"},

340 {
K_DEL
, "\316S"},

341 {
K_HOME
, "\316G"},

342 {
K_END
, "\316O"},

343 {
K_PAGEDOWN
, "\316Q"},

344 {
K_PAGEUP
, "\316I"},

347 #i‡
deföed
(
MSDOS
)

352 {
KS_NAME
, "pcterm"},

353 {
KS_CE
, "\033|K"},

354 {
KS_AL
, "\033|L"},

355 {
KS_DL
, "\033|M"},

356 #ifde‡
TERMINFO


357 {
KS_CS
, "\033|%i%p1%d;%p2%dr"},

359 {
KS_CS
, "\033|%i%d;%dr"},

361 {
KS_CL
, "\033|J"},

362 {
KS_ME
, "\033|0m"},

363 {
KS_MR
, "\033|112m"},

364 {
KS_MD
, "\033|63m"},

365 {
KS_SE
, "\033|0m"},

366 {
KS_SO
, "\033|31m"},

367 {
KS_MS
, "\001"},

368 #ifde‡
TERMINFO


369 {
KS_CM
, "\033|%i%p1%d;%p2%dH"},

371 {
KS_CM
, "\033|%i%d;%dH"},

373 {
K_UP
, "\316H"},

374 {
K_DOWN
, "\316P"},

375 {
K_LEFT
, "\316K"},

376 {
K_RIGHT
, "\316M"},

377 {
K_S_LEFT
, "\316s"},

378 {
K_S_RIGHT
, "\316t"},

379 {
K_S_TAB
, "\316\017"},

380 {
K_F1
, "\316;"},

381 {
K_F2
, "\316<"},

382 {
K_F3
, "\316="},

383 {
K_F4
, "\316>"},

384 {
K_F5
, "\316?"},

385 {
K_F6
, "\316@"},

386 {
K_F7
, "\316A"},

387 {
K_F8
, "\316B"},

388 {
K_F9
, "\316C"},

389 {
K_F10
, "\316D"},

390 {
K_F11
, "\316\205"},

391 {
K_F12
, "\316\206"},

392 {
K_S_F1
, "\316T"},

393 {
K_S_F2
, "\316U"},

394 {
K_S_F3
, "\316V"},

395 {
K_S_F4
, "\316W"},

396 {
K_S_F5
, "\316X"},

397 {
K_S_F6
, "\316Y"},

398 {
K_S_F7
, "\316Z"},

399 {
K_S_F8
, "\316["},

400 {
K_S_F9
, "\316\\"},

401 {
K_S_F10
, "\316]"},

402 {
K_S_F11
, "\316\207"},

403 {
K_S_F12
, "\316\210"},

404 {
K_INS
, "\316R"},

405 {
K_DEL
, "\316S"},

406 {
K_HOME
, "\316G"},

407 {
K_END
, "\316O"},

408 {
K_PAGEDOWN
, "\316Q"},

409 {
K_PAGEUP
, "\316I"},

412 #i‡
deföed
(
WIN32
Ë|| deföed(
ALL_BUILTIN_TCAPS
Ë|| deföed(
__EMX__
)

418 {
KS_NAME
, "win32"},

419 {
KS_CE
, "\033|K"},

420 {
KS_AL
, "\033|L"},

421 #ifde‡
TERMINFO


422 {
KS_CAL
, "\033|%p1%dL"},

424 {
KS_CAL
, "\033|%dL"},

426 {
KS_DL
, "\033|M"},

427 #ifde‡
TERMINFO


428 {
KS_CDL
, "\033|%p1%dM"},

430 {
KS_CDL
, "\033|%dM"},

432 {
KS_CL
, "\033|J"},

433 {
KS_CD
, "\033|j"},

434 {
KS_VI
, "\033|v"},

435 {
KS_VE
, "\033|V"},

437 {
KS_ME
, "\033|0m"},

438 {
KS_MR
, "\033|112m"},

439 {
KS_MD
, "\033|63m"},

441 {
KS_SO
, "\033|31m"},

442 {
KS_SE
, "\033|0m"},

444 {
KS_SO
, "\033|F"},

445 {
KS_SE
, "\033|f"},

447 {
KS_CZH
, "\033|225m"},

448 {
KS_CZR
, "\033|0m"},

449 {
KS_US
, "\033|67m"},

450 {
KS_UE
, "\033|0m"},

452 {
KS_MS
, "\001"},

453 #ifde‡
TERMINFO


454 {
KS_CM
, "\033|%i%p1%d;%p2%dH"},

456 {
KS_CM
, "\033|%i%d;%dH"},

458 {
KS_VB
, "\033|B"},

459 {
KS_TI
, "\033|S"},

460 {
KS_TE
, "\033|E"},

461 {
KS_CS
, "\033|%i%d;%dr"},

463 {
K_UP
, "\316H"},

464 {
K_DOWN
, "\316P"},

465 {
K_LEFT
, "\316K"},

466 {
K_RIGHT
, "\316M"},

467 {
K_S_UP
, "\316\304"},

468 {
K_S_DOWN
, "\316\317"},

469 {
K_S_LEFT
, "\316\311"},

470 {
K_S_RIGHT
, "\316\313"},

471 {
K_S_TAB
, "\316\017"},

472 {
K_F1
, "\316;"},

473 {
K_F2
, "\316<"},

474 {
K_F3
, "\316="},

475 {
K_F4
, "\316>"},

476 {
K_F5
, "\316?"},

477 {
K_F6
, "\316@"},

478 {
K_F7
, "\316A"},

479 {
K_F8
, "\316B"},

480 {
K_F9
, "\316C"},

481 {
K_F10
, "\316D"},

482 {
K_F11
, "\316\205"},

483 {
K_F12
, "\316\206"},

484 {
K_S_F1
, "\316T"},

485 {
K_S_F2
, "\316U"},

486 {
K_S_F3
, "\316V"},

487 {
K_S_F4
, "\316W"},

488 {
K_S_F5
, "\316X"},

489 {
K_S_F6
, "\316Y"},

490 {
K_S_F7
, "\316Z"},

491 {
K_S_F8
, "\316["},

492 {
K_S_F9
, "\316\\"},

493 {
K_S_F10
, "\316]"},

494 {
K_S_F11
, "\316\207"},

495 {
K_S_F12
, "\316\210"},

496 {
K_INS
, "\316R"},

497 {
K_DEL
, "\316S"},

498 {
K_HOME
, "\316G"},

499 {
K_END
, "\316O"},

500 {
K_PAGEDOWN
, "\316Q"},

501 {
K_PAGEUP
, "\316I"},

504 #ifde‡
ALL_BUILTIN_TCAPS


508 {
KS_NAME
, " vt52"},

509 {
KS_CE
, "\033K"},

510 {
KS_CD
, "\033J"},

511 {
KS_AL
, "\033T"},

512 {
KS_DL
, "\033U"},

513 {
KS_CL
, "\033H\033J"},

514 {
KS_ME
, "\033SO"},

515 {
KS_MR
, "\033S2"},

516 {
KS_MS
, "\001"},

517 {
KS_CM
, "\033Y%+ %+ "},

520 #i‡
deföed
(
UNIX
Ë|| deföed(
ALL_BUILTIN_TCAPS
Ë|| deföed(
SOME_BUILTIN_TCAPS
Ë|| deföed(
__EMX__
)

525 {
KS_NAME
, "xterm"},

526 {
KS_CE
, "\033[K"},

527 {
KS_AL
, "\033[L"},

528 #ifde‡
TERMINFO


529 {
KS_CAL
, "\033[%p1%dL"},

531 {
KS_CAL
, "\033[%dL"},

533 {
KS_DL
, "\033[M"},

534 #ifde‡
TERMINFO


535 {
KS_CDL
, "\033[%p1%dM"},

537 {
KS_CDL
, "\033[%dM"},

539 #ifde‡
TERMINFO


540 {
KS_CS
, "\033[%i%p1%d;%p2%dr"},

542 {
KS_CS
, "\033[%i%d;%dr"},

544 {
KS_CL
, "\033[H\033[2J"},

545 {
KS_CD
, "\033[J"},

546 {
KS_ME
, "\033[m"},

547 {
KS_MR
, "\033[7m"},

548 {
KS_MD
, "\033[1m"},

549 {
KS_UE
, "\033[m"},

550 {
KS_US
, "\033[4m"},

551 {
KS_MS
, "\001"},

552 #ifde‡
TERMINFO


553 {
KS_CM
, "\033[%i%p1%d;%p2%dH"},

555 {
KS_CM
, "\033[%i%d;%dH"},

557 {
KS_SR
, "\033M"},

558 #ifde‡
TERMINFO


559 {
KS_CRI
, "\033[%p1%dC"},

561 {
KS_CRI
, "\033[%dC"},

563 {
KS_KS
, "\033[?1h\033="},

564 {
KS_KE
, "\033[?1l\033>"},

565 #ifde‡
SAVE_XTERM_SCREEN


566 {
KS_TI
, "\0337\033[?47h"},

567 {
KS_TE
, "\033[2J\033[?47l\0338"},

569 {
K_UP
, "\033OA"},

570 {
K_DOWN
, "\033OB"},

571 {
K_LEFT
, "\033OD"},

572 {
K_RIGHT
, "\033OC"},

573 {
K_S_UP
, "\033Ox"},

574 {
K_S_DOWN
, "\033Or"},

575 {
K_S_LEFT
, "\033Ot"},

576 {
K_S_RIGHT
, "\033Ov"},

577 {
K_F1
, "\033[11~"},

578 {
K_F2
, "\033[12~"},

579 {
K_F3
, "\033[13~"},

580 {
K_F4
, "\033[14~"},

581 {
K_F5
, "\033[15~"},

582 {
K_F6
, "\033[17~"},

583 {
K_F7
, "\033[18~"},

584 {
K_F8
, "\033[19~"},

585 {
K_F9
, "\033[20~"},

586 {
K_F10
, "\033[21~"},

587 {
K_F11
, "\033[23~"},

588 {
K_F12
, "\033[24~"},

589 {
K_HELP
, "\033[28~"},

590 {
K_UNDO
, "\033[26~"},

591 {
K_INS
, "\033[2~"},

592 {
K_HOME
, "\033[7~"},

593 {
K_END
, "\033[8~"},

594 {
K_PAGEUP
, "\033[5~"},

595 {
K_PAGEDOWN
, "\033[6~"},

598 {
BT_EXTRA_KEYS
, ""},

599 {
TERMCAP2KEY
('k', '0'), "\033[10~"},

600 {
TERMCAP2KEY
('F', '3'), "\033[25~"},

601 {
TERMCAP2KEY
('F', '6'), "\033[29~"},

602 {
TERMCAP2KEY
('F', '7'), "\033[31~"},

603 {
TERMCAP2KEY
('F', '8'), "\033[32~"},

604 {
TERMCAP2KEY
('F', '9'), "\033[33~"},

605 {
TERMCAP2KEY
('F', 'A'), "\033[34~"},

608 #i‡
deföed
(
UNIX
Ë|| deföed(
ALL_BUILTIN_TCAPS
)

612 {
KS_NAME
, "iris-ansi"},

613 {
KS_CE
, "\033[K"},

614 {
KS_CD
, "\033[J"},

615 {
KS_AL
, "\033[L"},

616 #ifde‡
TERMINFO


617 {
KS_CAL
, "\033[%p1%dL"},

619 {
KS_CAL
, "\033[%dL"},

621 {
KS_DL
, "\033[M"},

622 #ifde‡
TERMINFO


623 {
KS_CDL
, "\033[%p1%dM"},

625 {
KS_CDL
, "\033[%dM"},

631 #ifde‡
TERMINFO


632 {
KS_CS
, "\033[%i%p1%d;%p2%dr"},

634 {
KS_CS
, "\033[%i%d;%dr"},

637 {
KS_CL
, "\033[H\033[2J"},

638 {
KS_VE
, "\033[9/y\033[12/y\033[=6l"},

639 {
KS_VS
, "\033[10/y\033[=1h\033[=2l\033[=6h"},

640 {
KS_SE
, "\033[m"},

641 {
KS_SO
, "\033[1;7m"},

642 {
KS_ME
, "\033[m"},

643 {
KS_MR
, "\033[7m"},

644 {
KS_MD
, "\033[1m"},

645 {
KS_UE
, "\033[m"},

646 {
KS_US
, "\033[4m"},

647 {
KS_MS
, "\001"},

648 #ifde‡
TERMINFO


649 {
KS_CM
, "\033[%i%p1%d;%p2%dH"},

651 {
KS_CM
, "\033[%i%d;%dH"},

653 {
KS_SR
, "\033M"},

654 #ifde‡
TERMINFO


655 {
KS_CRI
, "\033[%p1%dC"},

657 {
KS_CRI
, "\033[%dC"},

659 {
K_UP
, "\033[A"},

660 {
K_DOWN
, "\033[B"},

661 {
K_LEFT
, "\033[D"},

662 {
K_RIGHT
, "\033[C"},

663 {
K_S_UP
, "\033[161q"},

664 {
K_S_DOWN
, "\033[164q"},

665 {
K_S_LEFT
, "\033[158q"},

666 {
K_S_RIGHT
, "\033[167q"},

667 {
K_F1
, "\033[001q"},

668 {
K_F2
, "\033[002q"},

669 {
K_F3
, "\033[003q"},

670 {
K_F4
, "\033[004q"},

671 {
K_F5
, "\033[005q"},

672 {
K_F6
, "\033[006q"},

673 {
K_F7
, "\033[007q"},

674 {
K_F8
, "\033[008q"},

675 {
K_F9
, "\033[009q"},

676 {
K_F10
, "\033[010q"},

677 {
K_F11
, "\033[011q"},

678 {
K_F12
, "\033[012q"},

679 {
K_S_F1
, "\033[013q"},

680 {
K_S_F2
, "\033[014q"},

681 {
K_S_F3
, "\033[015q"},

682 {
K_S_F4
, "\033[016q"},

683 {
K_S_F5
, "\033[017q"},

684 {
K_S_F6
, "\033[018q"},

685 {
K_S_F7
, "\033[019q"},

686 {
K_S_F8
, "\033[020q"},

687 {
K_S_F9
, "\033[021q"},

688 {
K_S_F10
, "\033[022q"},

689 {
K_S_F11
, "\033[023q"},

690 {
K_S_F12
, "\033[024q"},

691 {
K_INS
, "\033[139q"},

692 {
K_HOME
, "\033[H"},

693 {
K_END
, "\033[146q"},

694 {
K_PAGEUP
, "\033[150q"},

695 {
K_PAGEDOWN
, "\033[154q"},

698 #i‡
deföed
(
DEBUG
Ë|| deföed(
ALL_BUILTIN_TCAPS
)

702 {
KS_NAME
, "debug"},

703 {
KS_CE
, "[CE]"},

704 {
KS_CD
, "[CD]"},

705 {
KS_AL
, "[AL]"},

706 #ifde‡
TERMINFO


707 {
KS_CAL
, "[CAL%p1%d]"},

709 {
KS_CAL
, "[CAL%d]"},

711 {
KS_DL
, "[DL]"},

712 #ifde‡
TERMINFO


713 {
KS_CDL
, "[CDL%p1%d]"},

715 {
KS_CDL
, "[CDL%d]"},

717 #ifde‡
TERMINFO


718 {
KS_CS
, "[%dCS%p1%d]"},

720 {
KS_CS
, "[%dCS%d]"},

722 {
KS_CL
, "[CL]"},

723 {
KS_VI
, "[VI]"},

724 {
KS_VE
, "[VE]"},

725 {
KS_VS
, "[VS]"},

726 {
KS_ME
, "[ME]"},

727 {
KS_MR
, "[MR]"},

728 {
KS_MD
, "[MD]"},

729 {
KS_SE
, "[SE]"},

730 {
KS_SO
, "[SO]"},

731 {
KS_UE
, "[UE]"},

732 {
KS_US
, "[US]"},

733 {
KS_MS
, "[MS]"},

734 #ifde‡
TERMINFO


735 {
KS_CM
, "[%p1%dCM%p2%d]"},

737 {
KS_CM
, "[%dCM%d]"},

739 {
KS_SR
, "[SR]"},

740 #ifde‡
TERMINFO


741 {
KS_CRI
, "[CRI%p1%d]"},

743 {
KS_CRI
, "[CRI%d]"},

745 {
KS_VB
, "[VB]"},

746 {
KS_KS
, "[KS]"},

747 {
KS_KE
, "[KE]"},

748 {
KS_TI
, "[TI]"},

749 {
KS_TE
, "[TE]"},

750 {
K_UP
, "[KU]"},

751 {
K_DOWN
, "[KD]"},

752 {
K_LEFT
, "[KL]"},

753 {
K_RIGHT
, "[KR]"},

754 {
K_S_UP
, "[S-KU]"},

755 {
K_S_DOWN
, "[S-KD]"},

756 {
K_S_LEFT
, "[S-KL]"},

757 {
K_S_RIGHT
, "[S-KR]"},

758 {
K_F1
, "[F1]"},

759 {
K_F2
, "[F2]"},

760 {
K_F3
, "[F3]"},

761 {
K_F4
, "[F4]"},

762 {
K_F5
, "[F5]"},

763 {
K_F6
, "[F6]"},

764 {
K_F7
, "[F7]"},

765 {
K_F8
, "[F8]"},

766 {
K_F9
, "[F9]"},

767 {
K_F10
, "[F10]"},

768 {
K_F11
, "[F11]"},

769 {
K_F12
, "[F12]"},

770 {
K_S_F1
, "[S-F1]"},

771 {
K_S_F2
, "[S-F2]"},

772 {
K_S_F3
, "[S-F3]"},

773 {
K_S_F4
, "[S-F4]"},

774 {
K_S_F5
, "[S-F5]"},

775 {
K_S_F6
, "[S-F6]"},

776 {
K_S_F7
, "[S-F7]"},

777 {
K_S_F8
, "[S-F8]"},

778 {
K_S_F9
, "[S-F9]"},

779 {
K_S_F10
, "[S-F10]"},

780 {
K_S_F11
, "[S-F11]"},

781 {
K_S_F12
, "[S-F12]"},

782 {
K_HELP
, "[HELP]"},

783 {
K_UNDO
, "[UNDO]"},

784 {
K_BS
, "[BS]"},

785 {
K_INS
, "[INS]"},

786 {
K_DEL
, "[DEL]"},

787 {
K_HOME
, "[HOME]"},

788 {
K_END
, "[END]"},

789 {
K_PAGEUP
, "[PAGEUP]"},

790 {
K_PAGEDOWN
, "[PAGEDOWN]"},

791 {
K_MOUSE
, "[MOUSE]"},

800 {
KS_NAME
, "dumb"},

801 {
KS_CL
, "\014"},

802 #ifde‡
TERMINFO


803 {
KS_CM
, "\033[%i%p1%d;%p2%dH"},

805 {
KS_CM
, "\033[%i%d;%dH"},

811 {
KS_NAME
, 
NULL
}

818 #ifde‡
AMIGA


819 
	#DEFAULT_TERM
 (
ch¨_u
 *)"amiga"

	)

822 #ifde‡
WIN32


823 
	#DEFAULT_TERM
 (
ch¨_u
 *)"wö32"

	)

826 #ifde‡
MSDOS


827 
	#DEFAULT_TERM
 (
ch¨_u
 *)"p˘îm"

	)

830 #ifde‡
UNIX


831 
	#DEFAULT_TERM
 (
ch¨_u
 *)"™si"

	)

834 #ifde‡
__EMX__


835 
	#DEFAULT_TERM
 (
ch¨_u
 *)"os2™si"

	)

838 #ifde‡
VMS


839 
	#DEFAULT_TERM
 (
ch¨_u
 *)"™si"

	)

847 
	gch¨_u
 *(
	gãrm_°rögs
[
KS_LAST
 + 1]);

849 
	g√ed_g©hî
 = 
FALSE
;

850 
ch¨_u
 
	gãrmÀadî
[256 + 1];

852 
buûtö_ãrm
 *

853 
	$föd_buûtö_ãrm
(
ãrm
)

854 
ch¨_u
 *
ãrm
;

856 
buûtö_ãrm
 *
p
;

858 
p
 = 
buûtö_ãrmˇps
;

859 
p
->
bt_°rög
 !
NULL
)

861 i‡(
p
->
bt_íåy
 =
KS_NAME
)

863 #ifde‡
UNIX


864 i‡(
	`STRCMP
(
p
->
bt_°rög
, "úis-™si"Ë=0 && 
	`is_úis_™si
(
ãrm
))

865  
p
;

866 i‡(
	`STRCMP
(
p
->
bt_°rög
, "xãrm"Ë=0 && 
	`is_xãrm
(
ãrm
))

867  
p
;

870 i‡(
	`STRCMP
(
ãrm
, 
p
->
bt_°rög
) == 0)

871  
p
;

873 ++
p
;

875  
p
;

876 
	}
}

884 
	$∑r£_buûtö_tˇp
(
ãrm
)

885 
ch¨_u
 *
ãrm
;

887 
buûtö_ãrm
 *
p
;

888 
ch¨_u
 
«me
[2];

890 
p
 = 
	`föd_buûtö_ãrm
(
ãrm
);

891 ++
p
;Ö->
bt_íåy
 !
KS_NAME
 &&Ö->bt_íåy !
BT_EXTRA_KEYS
; ++p)

893 i‡(
p
->
bt_íåy
 < 0x100)

895 i‡(
ãrm_°rögs
[
p
->
bt_íåy
] =
NULL
 ||

896 
ãrm_°rögs
[
p
->
bt_íåy
] =
em±y_›ti⁄
)

897 
ãrm_°rögs
[
p
->
bt_íåy
] = (
ch¨_u
 *Ì->
bt_°rög
;

901 
«me
[0] = 
	`KEY2TERMCAP0
(
p
->
bt_íåy
);

902 
«me
[1] = 
	`KEY2TERMCAP1
(
p
->
bt_íåy
);

903 i‡(
	`föd_ãrmcode
(
«me
Ë=
NULL
)

904 
	`add_ãrmcode
(
«me
, (
ch¨_u
 *)
p
->
bt_°rög
);

907 
	}
}

916 
	$£t_ãrm«me
(
ãrm
)

917 
ch¨_u
 *
ãrm
;

919 
buûtö_ãrm
 *
ãrmp
;

920 #ifde‡
HAVE_TGETENT


921 
buûtö_fú°
 = 
p_tbi
;

922 
åy
;

923 
ãrmˇp_˛óªd
 = 
FALSE
;

925 
width
 = 0, 
height
 = 0;

926 
ch¨_u
 *
îr‹_msg
 = 
NULL
;

927 
ch¨_u
 *
bs_p
, *
dñ_p
;

929 i‡(
	`is_buûtö_ãrm
(
ãrm
))

931 
ãrm
 += 8;

932 #ifde‡
HAVE_TGETENT


933 
buûtö_fú°
 = 1;

947 #ifde‡
HAVE_TGETENT


948 
åy
 = 
buûtö_fú°
 ? 0 : 1;Åry < 3; ++try)

953 i‡(
åy
 == 1)

955 
ch¨_u
 *
p
;

956 
ch¨_u
 
t°rbuf
[
TBUFSZ
];

957 
i
;

958 
ch¨_u
 
tbuf
[
TBUFSZ
];

959 
ch¨_u
 *
ç
 = 
t°rbuf
;

960 *(
key_«mes
[]) =

963 #ifde‡
ARCHIE


971 
NULL


974 
de°
;

975 *
«me
;

976 } 
°rög_«mes
[] =

977 { {
KS_CE
, "˚"}, {
KS_AL
, "Æ"}, {
KS_CAL
, "AL"},

978 {
KS_DL
, "dl"}, {
KS_CDL
, "DL"}, {
KS_CS
, "cs"},

979 {
KS_CL
, "˛"}, {
KS_CD
, "cd"},

980 {
KS_VI
, "vi"}, {
KS_VE
, "ve"},

981 {
KS_VS
, "vs"}, {
KS_ME
, "me"}, {
KS_MR
, "mr"},

982 {
KS_MD
, "md"}, {
KS_SE
, "£"}, {
KS_SO
, "so"},

983 {
KS_CZH
, "ZH"}, {
KS_CZR
, "ZR"}, {
KS_UE
, "ue"},

984 {
KS_US
, "us"}, {
KS_CM
, "cm"}, {
KS_SR
, "sr"},

985 {
KS_CRI
, "RI"}, {
KS_VB
, "vb"}, {
KS_KS
, "ks"},

986 {
KS_KE
, "ke"}, {
KS_TI
, "ti"}, {
KS_TE
, "te"},

987 {0, 
NULL
}

994 i‡((
îr‹_msg
 = 
	`tgëít_îr‹
(
tbuf
, 
ãrm
)Ë=
NULL
)

996 i‡(!
ãrmˇp_˛óªd
)

998 
	`˛ór_ãrm›ti⁄s
();

999 
ãrmˇp_˛óªd
 = 
TRUE
;

1003 
i
 = 0; 
°rög_«mes
[i].
«me
 !
NULL
; ++i)

1005 i‡(
ãrm_°rögs
[
°rög_«mes
[
i
].
de°
] =
NULL
 ||

1006 
ãrm_°rögs
[
°rög_«mes
[
i
].
de°
] =
em±y_›ti⁄
)

1007 
ãrm_°rögs
[
°rög_«mes
[
i
].
de°
] =

1008 
	`TGETSTR
(
°rög_«mes
[
i
].
«me
, &
ç
);

1011 i‡((
T_MS
 =
NULL
 || T_MS =
em±y_›ti⁄
Ë&& 
	`tgëÊag
("ms"))

1012 
T_MS
 = (
ch¨_u
 *)"yes";

1013 i‡((
T_DB
 =
NULL
 || T_DB =
em±y_›ti⁄
Ë&& 
	`tgëÊag
("db"))

1014 
T_DB
 = (
ch¨_u
 *)"yes";

1015 i‡((
T_DA
 =
NULL
 || T_DA =
em±y_›ti⁄
Ë&& 
	`tgëÊag
("da"))

1016 
T_DA
 = (
ch¨_u
 *)"yes";

1021 
i
 = 0; 
key_«mes
[i] !
NULL
; ++i)

1023 i‡(
	`föd_ãrmcode
((
ch¨_u
 *)
key_«mes
[
i
]Ë=
NULL
)

1024 
	`add_ãrmcode
((
ch¨_u
 *)
key_«mes
[
i
],

1025 
	`TGETSTR
(
key_«mes
[
i
], &
ç
));

1029 i‡(
	`föd_ãrmcode
((
ch¨_u
 *)"kl"Ë=
NULL
)

1031 
p
 = 
	`TGETSTR
("kl", &
ç
);

1032 i‡(
p
 !
NULL
 && *∞!
	`Cål
('H'))

1033 
	`add_ãrmcode
((
ch¨_u
 *)"kl", 
p
);

1036 i‡(
height
 == 0)

1037 
height
 = 
	`tgënum
("li");

1038 i‡(
width
 == 0)

1039 
width
 = 
	`tgënum
("co");

1041 #i‚de‡
hpux


1042 
BC
 = (*)
	`TGETSTR
("bc", &
ç
);

1043 
UP
 = (*)
	`TGETSTR
("up", &
ç
);

1044 
p
 = 
	`TGETSTR
("pc", &
ç
);

1045 i‡(
p
)

1046 
PC
 = *
p
;

1056 #ifde‡
HAVE_TGETENT


1061 i‡(
åy
 =2 && 
buûtö_fú°
 && 
ãrmˇp_˛óªd
)

1067 
ãrmp
 = 
	`föd_buûtö_ãrm
(
ãrm
);

1068 i‡(
ãrmp
->
bt_°rög
 =
NULL
)

1070 #ifde‡
HAVE_TGETENT


1078 i‡(
åy
 == 0)

1080 i‡(
ãrmˇp_˛óªd
)

1084 
	`Ârötf
(
°dîr
, "\r\n");

1085 i‡(
îr‹_msg
 !
NULL
)

1087 
	`Ârötf
(
°dîr
, (*)
îr‹_msg
);

1088 
	`Ârötf
(
°dîr
, "\r\n");

1090 
	`Ârötf
(
°dîr
, "'%s'ÇŸ known. AvaûabÀ buûtöÅîmöÆ†¨e:\r\n", 
ãrm
);

1091 
ãrmp
 = &(
buûtö_ãrmˇps
[0]);Åîmp->
bt_°rög
 !
NULL
;

1092 ++
ãrmp
)

1094 i‡(
ãrmp
->
bt_íåy
 =
KS_NAME
)

1095 #ifde‡
HAVE_TGETENT


1096 
	`Ârötf
(
°dîr
, " buûtö_%s\r\n", 
ãrmp
->
bt_°rög
);

1098 
	`Ârötf
(
°dîr
, " %s\r\n", 
ãrmp
->
bt_°rög
);

1101 i‡(!
°¨tög
)

1103 
	`s¸ìn_°¨t
();

1104 
	`waô_ªtu∫
(
TRUE
);

1105  
FAIL
;

1107 
ãrm
 = 
DEFAULT_TERM
;

1108 
	`Ârötf
(
°dîr
, "deÁu…ögÅÿ'%s'\r\n", 
ãrm
);

1109 
	`s¸ìn_°¨t
();

1110 
	`mch_dñay
(2000L, 
TRUE
);

1111 
	`£t_°rög_›ti⁄
((
ch¨_u
 *)"ãrm", -1, 
ãrm
, 
TRUE
);

1113 
	`Êushbuf
();

1114 #ifde‡
HAVE_TGETENT


1115 i‡(!
ãrmˇp_˛óªd
)

1118 
	`˛ór_ãrm›ti⁄s
();

1119 #ifde‡
HAVE_TGETENT


1120 
ãrmˇp_˛óªd
 = 
TRUE
;

1123 
	`∑r£_buûtö_tˇp
(
ãrm
);

1124 #ifde‡
USE_GUI


1125 i‡(
	`STRCMP
(
ãrm
, "gui") == 0)

1127 
	`Êushbuf
();

1128 
	`£âmode
(0);

1129 
	`gui_öô
();

1130 i‡(!
gui
.
ö_u£
)

1131 
	`£âmode
(1);

1135 #ifde‡
HAVE_TGETENT


1145 i‡(
	`STRCMP
(
ãrm
, "pcterm") == 0)

1146 
T_CSC
 = (
ch¨_u
 *)"yes";

1148 
T_CSC
 = 
em±y_›ti⁄
;

1150 #ifde‡
UNIX


1157 #ifde‡
USE_GUI


1158 i‡(!
gui
.
ö_u£
)

1160 
	`gë_°ty
();

1170 #ifde‡
USE_GUI


1171 i‡(!
gui
.
ö_u£
)

1174 
bs_p
 = 
	`föd_ãrmcode
((
ch¨_u
 *)"kb");

1175 
dñ_p
 = 
	`föd_ãrmcode
((
ch¨_u
 *)"kD");

1176 i‡(
bs_p
 =
NULL
 || *bs_∞=
NUL
)

1177 
	`add_ãrmcode
((
ch¨_u
 *)"kb", (
bs_p
 = (char_u *)"\010"));

1178 i‡((
dñ_p
 =
NULL
 || *dñ_∞=
NUL
) &&

1179 (
bs_p
 =
NULL
 || *bs_p != '\177'))

1180 
	`add_ãrmcode
((
ch¨_u
 *)"kD", (char_u *)"\177");

1183 #ifde‡
USE_MOUSE


1188 
ch¨_u
 
«me
[2];

1190 
«me
[0] = 
KS_MOUSE
;

1191 
«me
[1] = 
K_FILLER
;

1192 #ifde‡
UNIX


1193 i‡(
	`is_xãrm
(
ãrm
))

1194 
	`add_ãrmcode
(
«me
, (
ch¨_u
 *)"\033[M");

1196 
	`add_ãrmcode
(
«me
, (
ch¨_u
 *)"\233M");

1201 #i‡
	`deföed
(
AMIGA
Ë|| deföed(
MSDOS
Ë|| deföed(
WIN32
Ë|| deföed(
OS2
)

1203 i‡(
	`STRCMP
(
ãrm
, 
DEFAULT_TERM
))

1204 
ãrm_c⁄sﬁe
 = 
FALSE
;

1207 
ãrm_c⁄sﬁe
 = 
TRUE
;

1208 #ifde‡
AMIGA


1209 
	`wö_ªsize_⁄
();

1214 #ifde‡
UNIX


1218 i‡(
	`is_Á°ãrm
(
ãrm
))

1219 
p_tf
 = 
TRUE
;

1221 #i‡
	`deföed
(
AMIGA
Ë|| deföed(
MSDOS
Ë|| deföed(
WIN32
Ë|| deföed(
OS2
)

1225 i‡(
ãrm_c⁄sﬁe
)

1226 
p_tf
 = 
TRUE
;

1229 
	`âe°
(
TRUE
);

1230 
	`£t_ãrm_deÁu…s
();

1238 i‡(!
°¨tög
)

1240 
	`°¨âîmˇp
();

1241 #ifde‡
USE_MOUSE


1242 
	`£tmou£
();

1244 
	`makëôÀ
();

1248 i‡(
width
 <0 || 
height
 <= 0)

1252 
width
 = 80;

1253 #i‡
deföed
 
MSDOS
 || deföed 
WIN32


1254 
height
 = 25;

1256 
height
 = 24;

1259 
	`£t_wösize
(
width
, 
height
, 
FALSE
);

1260 i‡(!
°¨tög
)

1262 i‡(
s¸ﬁl_ªgi⁄
)

1263 
	`s¸ﬁl_ªgi⁄_ª£t
();

1264 
	`check_m≠_keycodes
();

1267  
OK
;

1268 
	}
}

1270 #ifde‡
HAVE_TGETENT


1275 
ch¨_u
 *

1276 
	$tgëít_îr‹
(
tbuf
, 
ãrm
)

1277 
ch¨_u
 *
tbuf
;

1278 
ch¨_u
 *
ãrm
;

1280 
i
;

1282 
i
 = 
	`TGETENT
(
tbuf
, 
ãrm
);

1283 i‡(
i
 == -1)

1284  (
ch¨_u
 *)"Cannot openÅermcap file";

1285 i‡(
i
 == 0)

1286 #ifde‡
TERMINFO


1287  (
ch¨_u
 *)"TerminalÉntryÇot found inÅerminfo";

1289  (
ch¨_u
 *)"TerminalÉntryÇot found inÅermcap";

1291  
NULL
;

1292 
	}
}

1295 #i‡
deföed
(
HAVE_TGETENT
Ë&& (deföed(
UNIX
Ë|| deföed(
__EMX__
))

1303 
	$gëlöecﬁ
()

1305 
ch¨_u
 
tbuf
[
TBUFSZ
];

1307 i‡(
ãrm_°rögs
[
KS_NAME
] !
NULL
 && 
	`TGETENT
(
tbuf
,Åerm_strings[KS_NAME]) > 0)

1309 i‡(
Cﬁumns
 == 0)

1310 
Cﬁumns
 = 
	`tgënum
("co");

1311 i‡(
Rows
 == 0)

1312 
Rows
 = 
	`tgënum
("li");

1314 
	}
}

1325 
	$add_ãrmˇp_íåy
(
«me
, 
f‹˚
)

1326 
ch¨_u
 *
«me
;

1327 
f‹˚
;

1329 
ch¨_u
 *
ãrm
;

1330 
key
;

1331 
buûtö_ãrm
 *
ãrmp
;

1332 #ifde‡
HAVE_TGETENT


1333 
ch¨_u
 *
°rög
;

1334 
i
;

1335 
buûtö_fú°
;

1336 
ch¨_u
 
tbuf
[
TBUFSZ
];

1337 
ch¨_u
 
t°rbuf
[
TBUFSZ
];

1338 
ch¨_u
 *
ç
 = 
t°rbuf
;

1339 
ch¨_u
 *
îr‹_msg
 = 
NULL
;

1346 #ifde‡
USE_GUI


1347 i‡(
gui
.
ö_u£
 || gui.
°¨tög
)

1348  
	`gui_mch_haskey
(
«me
);

1351 i‡(!
f‹˚
 && 
	`föd_ãrmcode
(
«me
Ë!
NULL
)

1352  
OK
;

1354 
ãrm
 = 
ãrm_°rögs
[
KS_NAME
];

1355 i‡(
ãrm
 =
NULL
)

1356  
FAIL
;

1358 i‡(
	`is_buûtö_ãrm
(
ãrm
))

1360 
ãrm
 += 8;

1361 #ifde‡
HAVE_TGETENT


1362 
buûtö_fú°
 = 
TRUE
;

1365 #ifde‡
HAVE_TGETENT


1367 
buûtö_fú°
 = 
p_tbi
;

1370 #ifde‡
HAVE_TGETENT


1377 
i
 = 0; i < 2; ++i)

1379 i‡(!
buûtö_fú°
 =
i
)

1385 
ãrmp
 = 
	`föd_buûtö_ãrm
(
ãrm
);

1386 i‡(
ãrmp
->
bt_°rög
 !
NULL
)

1388 
key
 = 
	`TERMCAP2KEY
(
«me
[0],Çame[1]);

1389 
ãrmp
->
bt_íåy
 !
KS_NAME
)

1391 i‡(
ãrmp
->
bt_íåy
 =
key
)

1393 
	`add_ãrmcode
(
«me
, (
ch¨_u
 *)
ãrmp
->
bt_°rög
);

1394  
OK
;

1396 ++
ãrmp
;

1400 #ifde‡
HAVE_TGETENT


1406 
îr‹_msg
 = 
	`tgëít_îr‹
(
tbuf
, 
ãrm
);

1407 i‡(
îr‹_msg
 =
NULL
)

1409 
°rög
 = 
	`TGETSTR
((*)
«me
, &
ç
);

1410 i‡(
°rög
 !
NULL
 && *°rög !
NUL
)

1412 
	`add_ãrmcode
(
«me
, 
°rög
);

1413  
OK
;

1420 i‡(
sourcög_«me
 =
NULL
)

1422 #ifde‡
HAVE_TGETENT


1423 i‡(
îr‹_msg
 !
NULL
)

1424 
	`EMSG
(
îr‹_msg
);

1427 
	`EMSG2
("Nÿ\"%s\"É¡ry i¿ãrmˇp", 
«me
);

1429  
FAIL
;

1430 
	}
}

1433 
	$is_buûtö_ãrm
(
«me
)

1434 
ch¨_u
 *
«me
;

1436  (
	`STRNCMP
(
«me
, "buûtö_", (
size_t
)8) == 0);

1437 
	}
}

1439 
ch¨_u
 *
étﬂ
 
__PARMS
(());

1441 
ch¨_u
 *

1442 
	$étﬂ
(
i
)

1443 
i
;

1445 
ch¨_u
 
buf
[16];

1446 
ch¨_u
 *
p
;

1448 
p
 = 
buf
 + 15;

1449 *
p
 = '\0';

1452 --
p
;

1453 *
p
 = (
ch¨_u
Ë(
i
 % 10 + '0');

1454 
i
 /= 10;

1456 
i
 > 0 && 
p
 > 
buf
);

1457  
p
;

1458 
	}
}

1460 #i‚de‡
HAVE_TGETENT


1466 *
tgŸo
 
__ARGS
((*, , ));

1469 
	$tgŸo
(
cm
, 
x
, 
y
)

1470 *
cm
;

1471 
x
, 
y
;

1473 
buf
[30];

1474 *
p
, *
s
, *
e
;

1476 i‡(!
cm
)

1478 
e
 = 
buf
 + 29;

1479 
s
 = 
buf
; s < 
e
 && *
cm
; cm++)

1481 i‡(*
cm
 != '%')

1483 *
s
++ = *
cm
;

1486 *++
cm
)

1489 
p
 = (*)
	`étﬂ
(()
y
);

1490 
y
 = 
x
;

1491 *
p
)

1492 *
s
++ = *
p
++;

1495 
x
++;

1496 
y
++;

1499 *
s
++ = ()(*++
cm
 + 
y
);

1500 
y
 = 
x
;

1503 *
s
++ = *
cm
;

1509 *
s
 = '\0';

1510  
buf
;

1511 
	}
}

1521 
	$ãrmˇpöô
(
ãrm
)

1522 
ch¨_u
 *
ãrm
;

1524 i‡(!
ãrm
 || !*term)

1525 
ãrm
 = 
	`vim_gëív
((
ch¨_u
 *)"TERM");

1526 i‡(!
ãrm
 || !*term)

1527 
ãrm
 = 
DEFAULT_TERM
;

1528 
	`£t_°rög_›ti⁄
((
ch¨_u
 *)"ãrm", -1, 
ãrm
, 
TRUE
);

1532 
	`£t_ãrm«me
(
ãrm_°rögs
[
KS_NAME
] !
NULL
 ?Åîm_°rögs[KS_NAME] : 
ãrm
);

1533 
	}
}

1538 #unde‡
BSIZE


1539 
	#BSIZE
 2048

	)

1540 
ch¨_u
 
	goutbuf
[
BSIZE
];

1541 
	gbpos
 = 0;

1547 
	$Êushbuf
()

1549 i‡(
bpos
 != 0)

1551 
	`mch_wrôe
(
outbuf
, 
bpos
);

1552 
bpos
 = 0;

1554 
	}
}

1556 #ifde‡
USE_GUI


1561 
	$åash_ouçut_buf
()

1563 
bpos
 = 0;

1564 
	}
}

1574 
	$outch¨
(
c
)

1575 
c
;

1577 #i‡
	`deföed
(
UNIX
Ë|| deföed(
VMS
Ë|| deföed(
AMIGA
)

1578 i‡(
c
 == '\n')

1579 
	`outch¨
('\r');

1582 
outbuf
[
bpos
++] = 
c
;

1585 i‡(
bpos
 >
BSIZE
 || 
p_wd
)

1586 
	`Êushbuf
();

1587 
	}
}

1589 
outch¨_nf
 
__ARGS
(());

1595 
	$outch¨_nf
(
c
)

1596 
c
;

1598 #i‡
	`deföed
(
UNIX
Ë|| deföed(
VMS
Ë|| deföed(
AMIGA
)

1599 i‡(
c
 == '\n')

1600 
	`outch¨_nf
('\r');

1603 
outbuf
[
bpos
++] = 
c
;

1606 i‡(
bpos
 >
BSIZE
)

1607 
	`Êushbuf
();

1608 
	}
}

1620 
	$out°∫
(
s
)

1621 
ch¨_u
 *
s
;

1623 i‡(
bpos
 > 
BSIZE
 - 20)

1624 
	`Êushbuf
();

1625 *
s
)

1626 
	`outch¨_nf
(*
s
++);

1629 i‡(
p_wd
)

1630 
	`Êushbuf
();

1631 
	}
}

1640 
	$out°r
(
s
)

1641 
ch¨_u
 *
s
;

1643 i‡(
bpos
 > 
BSIZE
 - 20)

1644 
	`Êushbuf
();

1645 i‡(
s
)

1646 #ifde‡
HAVE_TGETENT


1647 
	`çuts
((*)
s
, 1, 
TPUTSFUNCAST
 
outch¨_nf
);

1649 *
s
)

1650 
	`outch¨_nf
(*
s
++);

1654 i‡(
p_wd
)

1655 
	`Êushbuf
();

1656 
	}
}

1662 
	$wödgŸo
(
row
, 
cﬁ
)

1663 
row
;

1664 
cﬁ
;

1666 i‡(
cﬁ
 !
s¸ìn_cur_cﬁ
 || 
row
 !
s¸ìn_cur_row
)

1673 i‡(
row
 =
s¸ìn_cur_row
 && 
cﬁ
 =0 && 
s¸ìn_cur_cﬁ
 < 
Cﬁumns
)

1675 
	`outch¨
('\r');

1676 
s¸ìn_cur_cﬁ
 = 0;

1680 
	`OUTSTR
(
	`tgŸo
((*)
T_CM
, 
cﬁ
, 
row
));

1681 
s¸ìn_cur_cﬁ
 = 
cﬁ
;

1682 
s¸ìn_cur_row
 = 
row
;

1685 
	}
}

1692 
	$£tcurs‹
()

1694 i‡(!
RedøwögDißbÀd
)

1695 
	`wödgŸo
(
curwö
->
w_wöpos
 + curwö->
w_row
,

1696 #ifde‡
RIGHTLEFT


1697 
curwö
->
w_p_æ
 ? ()
Cﬁumns
 - 1 - curwö->
w_cﬁ
 :

1699 
curwö
->
w_cﬁ
);

1700 
	}
}

1707 
	$âe°
(
∑ús
)

1708 
∑ús
;

1710 *
t
 = 
NULL
;

1712 
	`check_›ti⁄s
();

1715 i‡(*
T_CL
 =
NUL
)

1716 
t
 = "cl";

1717 i‡(*
T_CM
 =
NUL
)

1718 
t
 = "cm";

1720 i‡(
t
)

1721 
	`EMSG2
("ãrmöÆ c≠abûôy %†ªquúed", 
t
);

1726 i‡(*
T_CS
 !
NUL
)

1727 
s¸ﬁl_ªgi⁄
 = 
TRUE
;

1729 
s¸ﬁl_ªgi⁄
 = 
FALSE
;

1731 i‡(
∑ús
)

1735 i‡(*
T_ME
 =
NUL
)

1736 
T_ME
 = 
T_MR
 = 
T_MD
 = 
em±y_›ti⁄
;

1737 i‡(*
T_SO
 =
NUL
 || *
T_SE
 == NUL)

1738 
T_SO
 = 
T_SE
 = 
em±y_›ti⁄
;

1739 i‡(*
T_US
 =
NUL
 || *
T_UE
 == NUL)

1740 
T_US
 = 
T_UE
 = 
em±y_›ti⁄
;

1741 i‡(*
T_CZH
 =
NUL
 || *
T_CZR
 == NUL)

1742 
T_CZH
 = 
T_CZR
 = 
em±y_›ti⁄
;

1744 i‡(*
T_VE
 =
NUL
)

1745 
T_VI
 = 
em±y_›ti⁄
;

1747 i‡(*
T_ME
 =
NUL
)

1749 
T_ME
 = 
T_SE
;

1750 
T_MR
 = 
T_SO
;

1751 
T_MD
 = 
T_SO
;

1754 i‡(*
T_SO
 =
NUL
)

1756 
T_SE
 = 
T_ME
;

1757 i‡(*
T_MR
 =
NUL
)

1758 
T_SO
 = 
T_MD
;

1760 
T_SO
 = 
T_MR
;

1763 i‡(*
T_CZH
 =
NUL
)

1765 
T_CZR
 = 
T_ME
;

1766 i‡(*
T_MR
 =
NUL
)

1767 
T_CZH
 = 
T_MD
;

1769 
T_CZH
 = 
T_MR
;

1772 
√ed_g©hî
 = 
TRUE
;

1773 
	}
}

1780 
	$add_l⁄g_to_buf
(
vÆ
, 
d°
)

1781 
l⁄g_u
 
vÆ
;

1782 
ch¨_u
 *
d°
;

1784 
i
;

1785 
shi·
;

1787 
i
 = 1; i <(
l⁄g_u
); i++)

1789 
shi·
 = 8 * ((
l⁄g_u
Ë- 
i
);

1790 
d°
[
i
 - 1] = (
ch¨_u
Ë((
vÆ
 >> 
shi·
) & 0xff);

1792 
	}
}

1803 
	$gë_l⁄g_‰om_buf
(
buf
, 
vÆ
)

1804 
ch¨_u
 *
buf
;

1805 
l⁄g_u
 *
vÆ
;

1807 
Àn
;

1808 
ch¨_u
 
byãs
[(
l⁄g_u
)];

1809 
i
;

1810 
shi·
;

1812 *
vÆ
 = 0;

1813 
Àn
 = 
	`gë_byãs_‰om_buf
(
buf
, 
byãs
, ()(
l⁄g_u
));

1814 i‡(
Àn
 != -1)

1816 
i
 = 0; i < (
l⁄g_u
); i++)

1818 
shi·
 = 8 * ((
l⁄g_u
Ë- 1 - 
i
);

1819 *
vÆ
 +(
l⁄g_u
)
byãs
[
i
] << 
shi·
;

1822  
Àn
;

1823 
	}
}

1832 
	$gë_byãs_‰om_buf
(
buf
, 
byãs
, 
num_byãs
)

1833 
ch¨_u
 *
buf
;

1834 
ch¨_u
 *
byãs
;

1835 
num_byãs
;

1837 
Àn
 = 0;

1838 
i
;

1839 
ch¨_u
 
c
;

1841 
i
 = 0; i < 
num_byãs
; i++)

1843 i‡((
c
 = 
buf
[
Àn
++]Ë=
NUL
)

1845 i‡(
c
 =
K_SPECIAL
)

1847 i‡(
buf
[
Àn
] =
NUL
 || buf[len + 1] == NUL)

1849 i‡(
buf
[
Àn
++] =
KS_ZERO
)

1850 
c
 = 
NUL
;

1851 ++
Àn
;

1854 
byãs
[
i
] = 
c
;

1856  
Àn
;

1857 
	}
}

1863 
	$ouäum
(
n
)

1864 
n
;

1866 
	`OUTSTRN
(
	`étﬂ
(()
n
));

1867 
	}
}

1870 
	$check_wösize
()

1872 
ﬁd_Rows
 = 0;

1874 i‡(
Cﬁumns
 < 
MIN_COLUMNS
)

1875 
Cﬁumns
 = 
MIN_COLUMNS
;

1876 i‡(
Rows
 < 
	`mö_rows
())

1877 
Rows
 = 
	`mö_rows
();

1879 i‡(
ﬁd_Rows
 !
Rows
)

1881 
ﬁd_Rows
 = 
Rows
;

1882 
	`s¸ìn_√w_rows
();

1884 
	}
}

1894 
	$£t_wösize
(
width
, 
height
, 
mu°£t
)

1895 
width
, 
height
;

1896 
mu°£t
;

1898 
tmp
;

1900 i‡(
width
 < 0 || 
height
 < 0)

1904 i‡(
Sèã
 =
HITRETURN
 || Sèã =
SETWSIZE
)

1906 
Sèã
 = 
SETWSIZE
;

1909 i‡(
Sèã
 !
ASKMORE
)

1910 
	`s¸ìn˛ór
();

1912 
	`s¸ìn_°¨t
();

1913 #ifde‡
AMIGA


1914 
	`Êushbuf
();

1917 i‡(
mu°£t
 || (
	`mch_gë_wösize
(Ë=
FAIL
 && 
height
 != 0))

1919 
Rows
 = 
height
;

1920 
Cﬁumns
 = 
width
;

1921 
	`check_wösize
();

1922 
	`mch_£t_wösize
();

1925 
	`check_wösize
();

1926 i‡(!
°¨tög
)

1928 
	`comp_BŸlöe_Æl
();

1929 i‡(
Sèã
 =
ASKMORE
)

1931 
	`s¸ì«Œoc
(
FALSE
);

1932 
	`msg_m‹emsg
(
FALSE
);

1933 
msg_row
 = 
Rows
 - 1;

1937 
tmp
 = 
RedøwögDißbÀd
;

1938 
RedøwögDißbÀd
 = 
FALSE
;

1939 
	`upd©eS¸ìn
(
CURSUPD
);

1940 
RedøwögDißbÀd
 = 
tmp
;

1941 i‡(
Sèã
 =
CMDLINE
)

1942 
	`ªdøwcmdlöe
();

1944 
	`£tcurs‹
();

1947 
	`Êushbuf
();

1948 
	}
}

1951 
	$£âmode
(
øw
)

1952 
øw
;

1954 
ﬁdøw
 = 
FALSE
;

1956 #ifde‡
USE_GUI


1958 i‡(
gui
.
ö_u£
)

1961 i‡(
fuŒ_s¸ìn
)

1971 i‡(
øw
 || 
ﬁdøw
)

1973 
	`Êushbuf
();

1974 
	`mch_£âmode
(
øw
);

1975 #ifde‡
USE_MOUSE


1976 i‡(!
øw
)

1977 
	`mch_£tmou£
(
FALSE
);

1979 
	`£tmou£
();

1981 
	`Êushbuf
();

1982 
ﬁdøw
 = 
øw
;

1985 
	}
}

1988 
	$°¨âîmˇp
()

1990 i‡(
fuŒ_s¸ìn
 && !
ãrmˇp_a˘ive
)

1992 
	`out°r
(
T_TI
);

1993 
	`out°r
(
T_KS
);

1994 
	`Êushbuf
();

1995 
ãrmˇp_a˘ive
 = 
TRUE
;

1996 
	`s¸ìn_°¨t
();

1998 
	}
}

2001 
	$°›ãrmˇp
()

2003 i‡(
fuŒ_s¸ìn
 && 
ãrmˇp_a˘ive
)

2005 
	`out°r
(
T_KE
);

2006 
	`Êushbuf
();

2007 
ãrmˇp_a˘ive
 = 
FALSE
;

2008 
	`curs‹_⁄
();

2009 
	`out°r
(
T_TE
);

2010 
	`s¸ìn_°¨t
();

2012 
	}
}

2014 #ifde‡
USE_MOUSE


2019 
	$£tmou£
()

2021 
checkf‹
;

2023 #ifde‡
USE_GUI


2024 i‡(
gui
.
ö_u£
)

2027 i‡(*
p_mou£
 =
NUL
)

2030 i‡(
VIsuÆ_a˘ive
)

2031 
checkf‹
 = 
MOUSE_VISUAL
;

2032 i‡(
Sèã
 =
HITRETURN
)

2033 
checkf‹
 = 
MOUSE_RETURN
;

2034 i‡(
Sèã
 & 
INSERT
)

2035 
checkf‹
 = 
MOUSE_INSERT
;

2036 i‡(
Sèã
 & 
CMDLINE
)

2037 
checkf‹
 = 
MOUSE_COMMAND
;

2039 
checkf‹
 = 
MOUSE_NORMAL
;

2041 i‡(
	`mou£_has
(
checkf‹
))

2042 
	`mch_£tmou£
(
TRUE
);

2044 
	`mch_£tmou£
(
FALSE
);

2045 
	}
}

2055 
	$mou£_has
(
c
)

2056 
c
;

2058  (
	`vim_°rchr
(
p_mou£
, 
c
Ë!
NULL
 ||

2059 (
	`vim_°rchr
(
p_mou£
, 'a'Ë!
NULL
 &&

2060 
	`vim_°rchr
((
ch¨_u
 *)
MOUSE_A
, 
c
Ë!
NULL
) ||

2061 (
c
 !
MOUSE_RETURN
 && 
curbuf
->
b_hñp
 &&

2062 
	`vim_°rchr
(
p_mou£
, 
MOUSE_HELP
)));

2063 
	}
}

2072 
	$s¸ﬁl_°¨t
()

2074 i‡(*
T_VS
 !
NUL
)

2076 
	`out°r
(
T_VS
);

2077 
	`out°r
(
T_VE
);

2078 
	`s¸ìn_°¨t
();

2080 
	}
}

2085 
	gcurs‹_is_off
 = 
FALSE
;

2088 
	$curs‹_⁄
()

2090 i‡(
fuŒ_s¸ìn
)

2092 i‡(
curs‹_is_off
 && (!
VIsuÆ_a˘ive
 || 
highlight
 =
NULL
))

2094 
	`out°r
(
T_VE
);

2095 
curs‹_is_off
 = 
FALSE
;

2098 
	}
}

2101 
	$curs‹_off
()

2103 i‡(
fuŒ_s¸ìn
)

2105 i‡(!
curs‹_is_off
)

2106 
	`out°r
(
T_VI
);

2107 
curs‹_is_off
 = 
TRUE
;

2109 
	}
}

2116 
	$s¸ﬁl_ªgi⁄_£t
(
wp
, 
off
)

2117 
WIN
 *
wp
;

2118 
off
;

2120 
	`OUTSTR
(
	`tgŸo
((*)
T_CS
, 
wp
->
w_wöpos
 + wp->
w_height
 - 1,

2121 
wp
->
w_wöpos
 + 
off
));

2122 
	`s¸ìn_°¨t
();

2123 
	}
}

2129 
	$s¸ﬁl_ªgi⁄_ª£t
()

2131 
	`OUTSTR
(
	`tgŸo
((*)
T_CS
, ()
Rows
 - 1, 0));

2132 
	`s¸ìn_°¨t
();

2133 
	}
}

2140 
	sãrmcode


2142 
ch¨_u
 
	m«me
[2];

2143 
ch¨_u
 *
	mcode
;

2144 
	mÀn
;

2145 } *
	gãrmcodes
 = 
NULL
;

2147 
	gtc_max_Àn
 = 0;

2148 
	gtc_Àn
 = 0;

2151 
	$˛ór_ãrmcodes
()

2153 
tc_Àn
 > 0)

2154 
	`vim_‰ì
(
ãrmcodes
[--
tc_Àn
].
code
);

2155 
	`vim_‰ì
(
ãrmcodes
);

2156 
ãrmcodes
 = 
NULL
;

2157 
tc_max_Àn
 = 0;

2159 #ifde‡
HAVE_TGETENT


2160 
BC
 = (*)
em±y_›ti⁄
;

2161 
UP
 = (*)
em±y_›ti⁄
;

2162 
PC
 = ' ';

2163 
o•ìd
 = 0;

2166 
√ed_g©hî
 = 
TRUE
;

2167 
	}
}

2174 
	$add_ãrmcode
(
«me
, 
°rög
)

2175 
ch¨_u
 *
«me
;

2176 
ch¨_u
 *
°rög
;

2178 
ãrmcode
 *
√w_tc
;

2179 
i
, 
j
;

2180 
ch¨_u
 *
s
;

2182 i‡(
°rög
 =
NULL
 || *°rög =
NUL
)

2184 
	`dñ_ãrmcode
(
«me
);

2188 
s
 = 
	`°rßve
(
°rög
);

2189 i‡(
s
 =
NULL
)

2192 
√ed_g©hî
 = 
TRUE
;

2197 i‡(
tc_Àn
 =
tc_max_Àn
)

2199 
tc_max_Àn
 += 20;

2200 
√w_tc
 = (
ãrmcode
 *)
	`Æloc
(

2201 ()(
tc_max_Àn
 * (
ãrmcode
)));

2202 i‡(
√w_tc
 =
NULL
)

2204 
tc_max_Àn
 -= 20;

2207 
i
 = 0; i < 
tc_Àn
; ++i)

2208 
√w_tc
[
i
] = 
ãrmcodes
[i];

2209 
	`vim_‰ì
(
ãrmcodes
);

2210 
ãrmcodes
 = 
√w_tc
;

2218 
i
 = 0; i < 
tc_Àn
; ++i)

2220 i‡(
ãrmcodes
[
i
].
«me
[0] <Çame[0])

2222 i‡(
ãrmcodes
[
i
].
«me
[0] ==Çame[0])

2224 i‡(
ãrmcodes
[
i
].
«me
[1] <Çame[1])

2229 i‡(
ãrmcodes
[
i
].
«me
[1] ==Çame[1])

2231 
	`vim_‰ì
(
ãrmcodes
[
i
].
code
);

2232 --
tc_Àn
;

2239 
j
 = 
tc_Àn
; j > 
i
; --j)

2240 
ãrmcodes
[
j
] =Åermcodes[j - 1];

2244 
ãrmcodes
[
i
].
«me
[0] =Çame[0];

2245 
ãrmcodes
[
i
].
«me
[1] =Çame[1];

2246 
ãrmcodes
[
i
].
code
 = 
s
;

2247 
ãrmcodes
[
i
].
Àn
 = 
	`STRLEN
(
s
);

2248 ++
tc_Àn
;

2249 
	}
}

2251 
ch¨_u
 *

2252 
	$föd_ãrmcode
(
«me
)

2253 
ch¨_u
 *
«me
;

2255 
i
;

2257 
i
 = 0; i < 
tc_Àn
; ++i)

2258 i‡(
ãrmcodes
[
i
].
«me
[0] ==Çame[0] &&Åermcodes[i].name[1] ==Çame[1])

2259  
ãrmcodes
[
i
].
code
;

2260  
NULL
;

2261 
	}
}

2263 
ch¨_u
 *

2264 
	$gë_ãrmcode
(
i
)

2265 
i
;

2267 i‡(
i
 >
tc_Àn
)

2268  
NULL
;

2269  &
ãrmcodes
[
i
].
«me
[0];

2270 
	}
}

2273 
	$dñ_ãrmcode
(
«me
)

2274 
ch¨_u
 *
«me
;

2276 
i
;

2278 i‡(
ãrmcodes
 =
NULL
)

2281 
√ed_g©hî
 = 
TRUE
;

2283 
i
 = 0; i < 
tc_Àn
; ++i)

2284 i‡(
ãrmcodes
[
i
].
«me
[0] ==Çame[0] &&Åermcodes[i].name[1] ==Çame[1])

2286 
	`vim_‰ì
(
ãrmcodes
[
i
].
code
);

2287 --
tc_Àn
;

2288 
i
 < 
tc_Àn
)

2290 
ãrmcodes
[
i
] =Åermcodes[i + 1];

2291 ++
i
;

2296 
	}
}

2306 
	$check_ãrmcode
(
max_off£t
)

2307 
max_off£t
;

2309 
ch¨_u
 *
ç
;

2310 
ch¨_u
 *
p
;

2311 
¶í
 = 0;

2312 
Àn
;

2313 
off£t
;

2314 
ch¨_u
 
key_«me
[2];

2315 
√w_¶í
;

2316 
exåa
;

2317 
ch¨_u
 
°rög
[
MAX_KEY_CODE_LEN
 + 1];

2318 
i
;

2319 #ifde‡
USE_GUI


2320 
l⁄g_u
 
vÆ
;

2322 #ifde‡
USE_MOUSE


2323 
ch¨_u
 
byãs
[3];

2324 
num_byãs
;

2325 
mou£_code
;

2326 
modifõrs
;

2327 
is_˛ick
, 
is_døg
;

2328 
cuºít_buâ⁄
;

2329 
hñd_buâ⁄
 = 
MOUSE_RELEASE
;

2330 
‹ig_num_˛icks
 = 1;

2331 
‹ig_mou£_code
 = 0x0;

2332 #i‡
	`deföed
(
UNIX
Ë&& deföed(
HAVE_GETTIMEOFDAY
Ë&& deföed(
HAVE_SYS_TIME_H
)

2333 
‹ig_mou£_cﬁ
 = 0;

2334 
‹ig_mou£_row
 = 0;

2335 
löír_t
 
‹ig_t›löe
 = 0;

2336 
timevÆ
 
‹ig_mou£_time
 = {0, 0};

2338 
timevÆ
 
mou£_time
;

2339 
timediff
;

2347 i‡(
√ed_g©hî
)

2348 
	`g©hî_ãrmÀadî
();

2357 
off£t
 = 0; off£à< 
ty≥Àn
 && off£à< 
max_off£t
; ++offset)

2359 
ç
 = 
ty≥buf
 + 
ty≥off
 + 
off£t
;

2365 i‡(*
ç
 =
K_SPECIAL
)

2367 
off£t
 += 2;

2376 
i
 = *
ç
;

2377 
p
 = 
ãrmÀadî
; *∞&& *∞!
i
; ++p)

2379 i‡(*
p
 =
NUL
)

2386 i‡(*
ç
 =
ESC
 && !
p_ek
 && (
Sèã
 & 
INSERT
))

2389 
Àn
 = 
ty≥Àn
 - 
off£t
;

2390 
√w_¶í
 = 0;

2391 
key_«me
[0] = 
NUL
;

2393 #ifde‡
USE_GUI


2394 i‡(
gui
.
ö_u£
)

2399 i‡(*
ç
 =
CSI
)

2401 i‡(
Àn
 < 3)

2403 
¶í
 = 3;

2404 
key_«me
[0] = 
ç
[1];

2405 
key_«me
[1] = 
ç
[2];

2411 
i
 = 0; i < 
tc_Àn
; ++i)

2417 
¶í
 = 
ãrmcodes
[
i
].
Àn
;

2418 i‡(
off£t
 && 
Àn
 < 
¶í
)

2420 i‡(
	`STRNCMP
(
ãrmcodes
[
i
].
code
, 
ç
,

2421 (
size_t
)(
¶í
 > 
Àn
 ?Üen : slen)) == 0)

2423 i‡(
Àn
 < 
¶í
)

2426 
key_«me
[0] = 
ãrmcodes
[
i
].
«me
[0];

2427 
key_«me
[1] = 
ãrmcodes
[
i
].
«me
[1];

2433 i‡(
	`unshi·_•ecül_key
(&
key_«me
[0]))

2435 
°rög
[
√w_¶í
++] = 
K_SPECIAL
;

2436 
°rög
[
√w_¶í
++] = 
KS_MODIFIER
;

2437 
°rög
[
√w_¶í
++] = 
MOD_MASK_SHIFT
;

2444 i‡(
key_«me
[0] =
NUL
)

2449 #ifde‡
USE_MOUSE


2461 i‡(
key_«me
[0] =
KS_MOUSE
)

2463 
num_byãs
 = 
	`gë_byãs_‰om_buf
(
ç
 + 
¶í
, 
byãs
, 3);

2464 i‡(
num_byãs
 == -1)

2466 
mou£_code
 = 
byãs
[0];

2467 
mou£_cﬁ
 = 
byãs
[1] - ' ' - 1;

2468 
mou£_row
 = 
byãs
[2] - ' ' - 1;

2469 
¶í
 +
num_byãs
;

2472 
is_˛ick
 = 
is_døg
 = 
FALSE
;

2473 
cuºít_buâ⁄
 = (
mou£_code
 & 
MOUSE_CLICK_MASK
);

2474 i‡(
cuºít_buâ⁄
 =
MOUSE_RELEASE
)

2484 i‡((
mou£_code
 & 
MOUSE_DRAG
) == MOUSE_DRAG)

2485 
is_døg
 = 
TRUE
;

2486 
cuºít_buâ⁄
 = 
hñd_buâ⁄
;

2490 #i‡
	`deföed
(
UNIX
Ë&& deföed(
HAVE_GETTIMEOFDAY
Ë&& deföed(
HAVE_SYS_TIME_H
)

2491 #ifde‡
USE_GUI


2496 i‡(!
gui
.
ö_u£
)

2502 
	`gëtimeofday
(&
mou£_time
, 
NULL
);

2503 
timediff
 = (
mou£_time
.
tv_u£c
 -

2504 
‹ig_mou£_time
.
tv_u£c
) / 1000;

2505 i‡(
timediff
 < 0)

2506 --
‹ig_mou£_time
.
tv_£c
;

2507 
timediff
 +(
mou£_time
.
tv_£c
 -

2508 
‹ig_mou£_time
.
tv_£c
) * 1000;

2509 
‹ig_mou£_time
 = 
mou£_time
;

2510 i‡(
mou£_code
 =
‹ig_mou£_code
 &&

2511 
timediff
 < 
p_mou£t
 &&

2512 
‹ig_num_˛icks
 != 4 &&

2513 
‹ig_mou£_cﬁ
 =
mou£_cﬁ
 &&

2514 
‹ig_mou£_row
 =
mou£_row
 &&

2515 
‹ig_t›löe
 =
curwö
->
w_t›löe
)

2516 ++
‹ig_num_˛icks
;

2518 
‹ig_num_˛icks
 = 1;

2519 
‹ig_mou£_cﬁ
 = 
mou£_cﬁ
;

2520 
‹ig_mou£_row
 = 
mou£_row
;

2521 
‹ig_t›löe
 = 
curwö
->
w_t›löe
;

2523 #ifde‡
USE_GUI


2525 
‹ig_num_˛icks
 = 
	`NUM_MOUSE_CLICKS
(
mou£_code
);

2528 
‹ig_num_˛icks
 = 
	`NUM_MOUSE_CLICKS
(
mou£_code
);

2530 
is_˛ick
 = 
TRUE
;

2531 
‹ig_mou£_code
 = 
mou£_code
;

2533 i‡(!
is_døg
)

2534 
hñd_buâ⁄
 = 
mou£_code
 & 
MOUSE_CLICK_MASK
;

2540 
modifõrs
 = 0x0;

2541 i‡(
‹ig_mou£_code
 & 
MOUSE_SHIFT
)

2542 
modifõrs
 |
MOD_MASK_SHIFT
;

2543 i‡(
‹ig_mou£_code
 & 
MOUSE_CTRL
)

2544 
modifõrs
 |
MOD_MASK_CTRL
;

2545 i‡(
‹ig_mou£_code
 & 
MOUSE_ALT
)

2546 
modifõrs
 |
MOD_MASK_ALT
;

2547 i‡(
‹ig_num_˛icks
 == 2)

2548 
modifõrs
 |
MOD_MASK_2CLICK
;

2549 i‡(
‹ig_num_˛icks
 == 3)

2550 
modifõrs
 |
MOD_MASK_3CLICK
;

2551 i‡(
‹ig_num_˛icks
 == 4)

2552 
modifõrs
 |
MOD_MASK_4CLICK
;

2555 i‡(
modifõrs
 != 0)

2557 
°rög
[
√w_¶í
++] = 
K_SPECIAL
;

2558 
°rög
[
√w_¶í
++] = 
KS_MODIFIER
;

2559 
°rög
[
√w_¶í
++] = 
modifõrs
;

2563 
key_«me
[0] = 
KS_EXTRA
;

2564 
key_«me
[1] = 
	`gë_p£udo_mou£_code
(
cuºít_buâ⁄
,

2565 
is_˛ick
, 
is_døg
);

2568 #ifde‡
USE_GUI


2584 i‡(
key_«me
[0] =
KS_MENU
)

2586 
num_byãs
 = 
	`gë_l⁄g_‰om_buf
(
ç
 + 
¶í
, &
vÆ
);

2587 i‡(
num_byãs
 == -1)

2589 
cuºít_míu
 = (
GuiMíu
 *)
vÆ
;

2590 
¶í
 +
num_byãs
;

2592 i‡(
key_«me
[0] =
KS_SCROLLBAR
)

2594 
num_byãs
 = 
	`gë_byãs_‰om_buf
(
ç
 + 
¶í
, 
byãs
, 1);

2595 i‡(
num_byãs
 == -1)

2597 
cuºít_s¸ﬁlb¨
 = ()
byãs
[0];

2598 
¶í
 +
num_byãs
;

2599 
num_byãs
 = 
	`gë_l⁄g_‰om_buf
(
ç
 + 
¶í
, &
vÆ
);

2600 i‡(
num_byãs
 == -1)

2602 
s¸ﬁlb¨_vÆue
 = 
vÆ
;

2603 
¶í
 +
num_byãs
;

2605 i‡(
key_«me
[0] =
KS_HORIZ_SCROLLBAR
)

2607 
num_byãs
 = 
	`gë_l⁄g_‰om_buf
(
ç
 + 
¶í
, &
vÆ
);

2608 i‡(
num_byãs
 == -1)

2610 
s¸ﬁlb¨_vÆue
 = 
vÆ
;

2611 
¶í
 +
num_byãs
;

2615 
°rög
[
√w_¶í
++] = 
K_SPECIAL
;

2616 
°rög
[
√w_¶í
++] = 
key_«me
[0];

2617 
°rög
[
√w_¶í
++] = 
key_«me
[1];

2618 
°rög
[
√w_¶í
] = 
NUL
;

2619 
exåa
 = 
√w_¶í
 - 
¶í
;

2620 i‡(
exåa
 < 0)

2622 
	`dñ_ty≥buf
(-
exåa
, 
off£t
);

2623 i‡(
exåa
 > 0)

2625 
	`ös_ty≥buf
(
°rög
 + 
¶í
, 
FALSE
, 
off£t
, FALSE);

2631 
	`vim_memmove
(
ty≥buf
 + 
ty≥off
 + 
off£t
, 
°rög
, (
size_t
)
√w_¶í
);

2632  (
Àn
 + 
exåa
 + 
off£t
);

2635 
	}
}

2655 
ch¨_u
 *

2656 
	$ª∂a˚_ãrmcodes
(
‰om
, 
buÂ
, 
‰om_∑π
)

2657 
ch¨_u
 *
‰om
;

2658 
ch¨_u
 **
buÂ
;

2659 
‰om_∑π
;

2661 
i
;

2662 
ch¨_u
 
key_«me
[2];

2663 
ch¨_u
 *
bp
;

2664 
ch¨_u
 *
œ°_dash
;

2665 
ch¨_u
 *
íd_of_«me
;

2666 
¶í
;

2667 
modifõrs
;

2668 
bô
;

2669 
key
;

2670 
dÀn
 = 0;

2671 
ch¨_u
 *
§c
;

2672 
do_back¶ash
;

2673 
do_•ecül
;

2675 
do_back¶ash
 = (
	`vim_°rchr
(
p_˝o
, 
CPO_BSLASH
Ë=
NULL
);

2676 
do_•ecül
 = (
	`vim_°rchr
(
p_˝o
, 
CPO_SPECI
Ë=
NULL
);

2678 
§c
 = 
‰om
;

2683 i‡(
‰om_∑π
 && 
§c
[0] ='#' && 
	`isdigô
(src[1]))

2685 
NameBuff
[
dÀn
++] = 
K_SPECIAL
;

2686 
NameBuff
[
dÀn
++] = 'k';

2687 i‡(
§c
[1] == '0')

2688 
NameBuff
[
dÀn
++] = ';';

2690 
NameBuff
[
dÀn
++] = 
§c
[1];

2691 
§c
 += 2;

2697 *
§c
 !
NUL
)

2702 i‡(
dÀn
 + 6 + 2 >
MAXNAMLEN
)

2704 *
buÂ
 = 
NULL
;

2705  
‰om
;

2711 i‡(
do_•ecül
)

2716 i‡(
§c
[0] == '<')

2719 
œ°_dash
 = 
§c
;

2720 
bp
 = 
§c
 + 1; *b∞='-' || 
	`isidch¨
(*bp); bp++)

2722 i‡(*
bp
 == '-')

2724 
œ°_dash
 = 
bp
;

2725 i‡(
bp
[1] !
NUL
 && bp[2] == '>')

2726 ++
bp
;

2728 i‡(
bp
[0] == 't' && bp[1] == '_' && bp[2] && bp[3])

2729 
bp
 += 3;

2732 i‡(*
bp
 == '>')

2734 
íd_of_«me
 = 
bp
 + 1;

2737 
modifõrs
 = 0x0;

2738 
bp
 = 
§c
 + 1; b∞< 
œ°_dash
; bp++)

2740 i‡(*
bp
 != '-')

2742 
bô
 = 
	`«me_to_mod_mask
(*
bp
);

2743 i‡(
bô
 == 0x0)

2745 
modifõrs
 |
bô
;

2752 i‡(
bp
 >
œ°_dash
)

2757 i‡(
modifõrs
 !0 && 
œ°_dash
[2] == '>')

2759 
key
 = 
œ°_dash
[1];

2760 i‡(
modifõrs
 & 
MOD_MASK_SHIFT
)

2761 
key
 = 
	`TO_UPPER
(key);

2762 i‡(
modifõrs
 & 
MOD_MASK_CTRL
)

2763 
key
 &= 0x1f;

2764 i‡(
modifõrs
 & 
MOD_MASK_ALT
)

2765 
key
 |= 0x80;

2766 
§c
 = 
íd_of_«me
;

2767 
NameBuff
[
dÀn
++] = 
key
;

2774 i‡((
key
 = 
	`gë_•ecül_key_code
(
œ°_dash
 + 1))

2778 i‡(
modifõrs
 != 0)

2780 
NameBuff
[
dÀn
++] = 
K_SPECIAL
;

2781 
NameBuff
[
dÀn
++] = 
KS_MODIFIER
;

2782 
NameBuff
[
dÀn
++] = 
modifõrs
;

2788 i‡(
key
 =
TAB
)

2789 
key
 = 
K_TAB
;

2792 i‡(
	`IS_SPECIAL
(
key
))

2794 
NameBuff
[
dÀn
++] = 
K_SPECIAL
;

2795 
NameBuff
[
dÀn
++] = 
	`KEY2TERMCAP0
(
key
);

2796 
NameBuff
[
dÀn
++] = 
	`KEY2TERMCAP1
(
key
);

2799 
NameBuff
[
dÀn
++] = 
key
;

2800 
§c
 = 
íd_of_«me
;

2811 
i
 = 0; i < 
tc_Àn
; ++i)

2813 
¶í
 = 
ãrmcodes
[
i
].
Àn
;

2814 i‡(
	`STRNCMP
(
ãrmcodes
[
i
].
code
, 
§c
, (
size_t
)
¶í
) == 0)

2816 
key_«me
[0] = 
ãrmcodes
[
i
].
«me
[0];

2817 
key_«me
[1] = 
ãrmcodes
[
i
].
«me
[1];

2823 i‡(
	`unshi·_•ecül_key
(&
key_«me
[0]))

2825 
NameBuff
[
dÀn
++] = 
K_SPECIAL
;

2826 
NameBuff
[
dÀn
++] = 
KS_MODIFIER
;

2827 
NameBuff
[
dÀn
++] = 
MOD_MASK_SHIFT
;

2829 
NameBuff
[
dÀn
++] = 
K_SPECIAL
;

2830 
NameBuff
[
dÀn
++] = 
key_«me
[0];

2831 
NameBuff
[
dÀn
++] = 
key_«me
[1];

2832 
§c
 +
¶í
;

2842 i‡(
i
 !
tc_Àn
)

2846 i‡(*
§c
 =
K_SPECIAL
)

2848 
NameBuff
[
dÀn
++] = 
K_SPECIAL
;

2849 
NameBuff
[
dÀn
++] = 
KS_SPECIAL
;

2850 
NameBuff
[
dÀn
++] = 
K_FILLER
;

2851 ++
§c
;

2861 
key
 = *
§c
;

2862 i‡(
key
 =
	`Cål
('V'Ë|| (
do_back¶ash
 && key == '\\'))

2864 ++
§c
;

2865 i‡(*
§c
 =
NUL
)

2867 i‡(
‰om_∑π
)

2868 
NameBuff
[
dÀn
++] = 
key
;

2872 
NameBuff
[
dÀn
++] = *
§c
++;

2874 
NameBuff
[
dÀn
] = 
NUL
;

2880 i‡((*
buÂ
 = 
	`°rßve
(
NameBuff
)Ë!
NULL
)

2881  *
buÂ
;

2882  
‰om
;

2883 
	}
}

2890 
	$g©hî_ãrmÀadî
()

2892 
i
;

2893 
Àn
 = 0;

2895 #ifde‡
USE_GUI


2896 i‡(
gui
.
ö_u£
)

2897 
ãrmÀadî
[
Àn
++] = 
CSI
;

2899 
ãrmÀadî
[
Àn
] = 
NUL
;

2901 
i
 = 0; i < 
tc_Àn
; ++i)

2902 i‡(
	`vim_°rchr
(
ãrmÀadî
, 
ãrmcodes
[
i
].
code
[0]Ë=
NULL
)

2904 
ãrmÀadî
[
Àn
++] = 
ãrmcodes
[
i
].
code
[0];

2905 
ãrmÀadî
[
Àn
] = 
NUL
;

2908 
√ed_g©hî
 = 
FALSE
;

2909 
	}
}

2916 
	$show_ãrmcodes
()

2918 
cﬁ
;

2919 *
ôems
;

2920 
ôem_cou¡
;

2921 
run
;

2922 
row
, 
rows
;

2923 
cﬁs
;

2924 
i
;

2925 
Àn
;

2927 
	#INC
 27

	)

2928 
	#GAP
 2

	)

2930 i‡(
tc_Àn
 == 0)

2932 
ôems
 = (*)
	`Æloc
(()((Ë* 
tc_Àn
));

2933 i‡(
ôems
 =
NULL
)

2936 
	`£t_highlight
('t');

2937 
	`°¨t_highlight
();

2938 
	`MSG_OUTSTR
("\n--- Terminal keys ---");

2939 
	`°›_highlight
();

2946 
run
 = 1;Ñu¿<2 && !
gŸ_öt
; ++run)

2951 
ôem_cou¡
 = 0;

2952 
i
 = 0; i < 
tc_Àn
; i++)

2954 
Àn
 = 
	`show_⁄e_ãrmcode
(
ãrmcodes
[
i
].
«me
,

2955 
ãrmcodes
[
i
].
code
, 
FALSE
);

2956 i‡((
Àn
 <
INC
 - 
GAP
 && 
run
 == 1) || (len > INC - GAP &&Ñun == 2))

2957 
ôems
[
ôem_cou¡
++] = 
i
;

2963 i‡(
run
 == 1)

2965 
cﬁs
 = (
Cﬁumns
 + 
GAP
Ë/ 
INC
;

2966 i‡(
cﬁs
 == 0)

2967 
cﬁs
 = 1;

2968 
rows
 = (
ôem_cou¡
 + 
cﬁs
 - 1) / cols;

2971 
rows
 = 
ôem_cou¡
;

2972 
row
 = 0;Ñow < 
rows
 && !
gŸ_öt
; ++row)

2974 
	`msg_outch¨
('\n');

2975 i‡(
gŸ_öt
)

2977 
cﬁ
 = 0;

2978 
i
 = 
row
; i < 
ôem_cou¡
; i +
rows
)

2980 
	`msg_pos
(-1, 
cﬁ
);

2981 
	`show_⁄e_ãrmcode
(
ãrmcodes
[
ôems
[
i
]].
«me
,

2982 
ãrmcodes
[
ôems
[
i
]].
code
, 
TRUE
);

2983 
cﬁ
 +
INC
;

2985 
	`Êushbuf
();

2986 
	`mch_bªakcheck
();

2989 
	`vim_‰ì
(
ôems
);

2990 
	}
}

2997 
	$show_⁄e_ãrmcode
(
«me
, 
code
, 
¥ötô
)

2998 
ch¨_u
 *
«me
;

2999 
ch¨_u
 *
code
;

3000 
¥ötô
;

3002 
ch¨_u
 *
p
;

3003 
Àn
;

3005 i‡(
«me
[0] > '~')

3007 
IObuff
[0] = ' ';

3008 
IObuff
[1] = ' ';

3009 
IObuff
[2] = ' ';

3010 
IObuff
[3] = ' ';

3014 
IObuff
[0] = 't';

3015 
IObuff
[1] = '_';

3016 
IObuff
[2] = 
«me
[0];

3017 
IObuff
[3] = 
«me
[1];

3019 
IObuff
[4] = ' ';

3021 
p
 = 
	`gë_•ecül_key_«me
(
	`TERMCAP2KEY
(
«me
[0],Çame[1]), 0);

3022 i‡(
p
[1] != 't')

3023 
	`STRCPY
(
IObuff
 + 5, 
p
);

3025 
IObuff
[5] = 
NUL
;

3026 
Àn
 = 
	`STRLEN
(
IObuff
);

3028 
IObuff
[
Àn
++] = ' ';

3029 
Àn
 < 17);

3030 
IObuff
[
Àn
] = 
NUL
;

3031 i‡(
code
 =
NULL
)

3032 
Àn
 += 4;

3034 
Àn
 +
	`°rsize
(
code
);

3036 i‡(
¥ötô
)

3038 
	`msg_out°r
(
IObuff
);

3039 i‡(
code
 =
NULL
)

3040 
	`msg_out°r
((
ch¨_u
 *)"NULL");

3042 
	`msg_ouâøns
(
code
);

3044  
Àn
;

3045 
	}
}

	@src/term.h

17 #ifde‡
SASC


21 
	tch¨_u
;

27 
	eS≥cülKeys


29 
	mKS_NAME
 = 0,

30 
	mKS_CE
,

31 
	mKS_AL
,

32 
	mKS_CAL
,

33 
	mKS_DL
,

34 
	mKS_CDL
,

35 
	mKS_CS
,

36 
	mKS_CL
,

37 
	mKS_CD
,

38 
	mKS_DA
,

39 
	mKS_DB
,

40 
	mKS_VI
,

41 
	mKS_VE
,

42 
	mKS_VS
,

43 
	mKS_ME
,

44 
	mKS_MR
,

45 
	mKS_MD
,

46 
	mKS_SE
,

47 
	mKS_SO
,

48 
	mKS_CZH
,

49 
	mKS_CZR
,

50 
	mKS_UE
,

51 
	mKS_US
,

52 
	mKS_MS
,

53 
	mKS_CM
,

54 
	mKS_SR
,

55 
	mKS_CRI
,

56 
	mKS_VB
,

57 
	mKS_KS
,

58 
	mKS_KE
,

59 
	mKS_TI
,

60 
	mKS_TE
,

62 
	mKS_CSC


65 
	#KS_LAST
 
KS_CSC


	)

75 
ch¨_u
 *(
ãrm_°rögs
[]);

80 
	#T_CE
 (
ãrm_°rögs
[
KS_CE
]Ë

	)

81 
	#T_AL
 (
ãrm_°rögs
[
KS_AL
]Ë

	)

82 
	#T_CAL
 (
ãrm_°rögs
[
KS_CAL
]Ë

	)

83 
	#T_DL
 (
ãrm_°rögs
[
KS_DL
]Ë

	)

84 
	#T_CDL
 (
ãrm_°rögs
[
KS_CDL
]Ë

	)

85 
	#T_CS
 (
ãrm_°rögs
[
KS_CS
]Ë

	)

86 
	#T_CL
 (
ãrm_°rögs
[
KS_CL
]Ë

	)

87 
	#T_CD
 (
ãrm_°rögs
[
KS_CD
]Ë

	)

88 
	#T_DA
 (
ãrm_°rögs
[
KS_DA
]Ë

	)

89 
	#T_DB
 (
ãrm_°rögs
[
KS_DB
]Ë

	)

90 
	#T_VI
 (
ãrm_°rögs
[
KS_VI
]Ë

	)

91 
	#T_VE
 (
ãrm_°rögs
[
KS_VE
]Ë

	)

92 
	#T_VS
 (
ãrm_°rögs
[
KS_VS
]Ë

	)

93 
	#T_ME
 (
ãrm_°rögs
[
KS_ME
]Ë

	)

94 
	#T_MR
 (
ãrm_°rögs
[
KS_MR
]Ë

	)

95 
	#T_MD
 (
ãrm_°rögs
[
KS_MD
]Ë

	)

96 
	#T_SE
 (
ãrm_°rögs
[
KS_SE
]Ë

	)

97 
	#T_SO
 (
ãrm_°rögs
[
KS_SO
]Ë

	)

98 
	#T_CZH
 (
ãrm_°rögs
[
KS_CZH
]Ë

	)

99 
	#T_CZR
 (
ãrm_°rögs
[
KS_CZR
]Ë

	)

100 
	#T_UE
 (
ãrm_°rögs
[
KS_UE
]Ë

	)

101 
	#T_US
 (
ãrm_°rögs
[
KS_US
]Ë

	)

102 
	#T_MS
 (
ãrm_°rögs
[
KS_MS
]Ë

	)

103 
	#T_CM
 (
ãrm_°rögs
[
KS_CM
]Ë

	)

104 
	#T_SR
 (
ãrm_°rögs
[
KS_SR
]Ë

	)

105 
	#T_CRI
 (
ãrm_°rögs
[
KS_CRI
]Ë

	)

106 
	#T_VB
 (
ãrm_°rögs
[
KS_VB
]Ë

	)

107 
	#T_KS
 (
ãrm_°rögs
[
KS_KS
]Ë

	)

108 
	#T_KE
 (
ãrm_°rögs
[
KS_KE
]Ë

	)

109 
	#T_TI
 (
ãrm_°rögs
[
KS_TI
]Ë

	)

110 
	#T_TE
 (
ãrm_°rögs
[
KS_TE
]Ë

	)

111 
	#T_CSC
 (
ãrm_°rögs
[
KS_CSC
]Ë

	)

	@src/undo.c

47 
	~"vim.h
"

48 
	~"globÆs.h
"

49 
	~"¥Ÿo.h
"

50 
	~"›ti⁄.h
"

52 
u_gëbŸ
 
__ARGS
(());

53 
u_ßvecomm⁄
 
__ARGS
((
löír_t
,Üinenr_t,Üinenr_t));

54 
u_und‹edo
 
__ARGS
(());

55 
u_undo_íd
 
__ARGS
(());

56 
u_‰ìli°
 
__ARGS
((
u_hódî
 *));

57 
u_‰ìíåy
 
__ARGS
((
u_íåy
 *, ));

59 
ch¨_u
 *
u_blockÆloc
 
__ARGS
((
l⁄g_u
));

60 
u_‰ì_löe
 
__ARGS
((
ch¨_u
 *));

61 
ch¨_u
 *
u_Æloc_löe
 
__ARGS
(());

62 
ch¨_u
 *
u_ßve_löe
 
__ARGS
((
löír_t
));

64 
	gu_√wcou¡
, 
	gu_ﬁdcou¡
;

70 
	$u_ßve_curs‹
()

72  (
	`u_ßve
((
löír_t
)(
curwö
->
w_curs‹
.
 um
 - 1), (linenr_t)(curwin->w_cursor.lnum + 1)));

73 
	}
}

81 
	$u_ßve
(
t›
, 
bŸ
)

82 
löír_t
 
t›
, 
bŸ
;

84 i‡(
undo_off
)

85  
OK
;

87 i‡(
t›
 > 
curbuf
->
b_ml
.
ml_löe_cou¡
 ||

88 
t›
 >
bŸ
 || bŸ > 
curbuf
->
b_ml
.
ml_löe_cou¡
 + 1)

89  
FALSE
;

91 i‡(
t›
 + 2 =
bŸ
)

92 
	`u_ßvñöe
((
löír_t
)(
t›
 + 1));

94  (
	`u_ßvecomm⁄
(
t›
, 
bŸ
, (
löír_t
)0));

95 
	}
}

102 
	$u_ßvesub
(
 um
)

103 
löír_t
 
 um
;

105 i‡(
undo_off
)

106  
OK
;

108  (
	`u_ßvecomm⁄
(
 um
 - 1,Ünum + 1,Ünum + 1));

109 
	}
}

116 
	$u_össub
(
 um
)

117 
löír_t
 
 um
;

119 i‡(
undo_off
)

120  
OK
;

122  (
	`u_ßvecomm⁄
(
 um
 - 1,Ünum,Ünum + 1));

123 
	}
}

131 
	$u_ßvedñ
(
 um
, 
∆öes
)

132 
löír_t
 
 um
;

133 
∆öes
;

135 i‡(
undo_off
)

136  
OK
;

138  (
	`u_ßvecomm⁄
(
 um
 - 1,Ünum + 
∆öes
,

139 
∆öes
 =
curbuf
->
b_ml
.
ml_löe_cou¡
 ? 2 : 
 um
));

140 
	}
}

143 
	$u_ßvecomm⁄
(
t›
, 
bŸ
, 
√wbŸ
)

144 
löír_t
 
t›
, 
bŸ
;

145 
löír_t
 
√wbŸ
;

147 
löír_t
 
 um
;

148 
i
;

149 
u_hódî
 *
uhp
;

150 
u_íåy
 *
uï
;

151 
size
;

156 i‡(
curbuf
->
b_u_syn˚d
)

162 
curbuf
->
b_u_curhód
 !
NULL
)

163 
	`u_‰ìli°
(
curbuf
->
b_u_√whód
);

168 
curbuf
->
b_u_numhód
 > 
p_ul
 && curbuf->
b_u_ﬁdhód
 !
NULL
)

169 
	`u_‰ìli°
(
curbuf
->
b_u_ﬁdhód
);

171 i‡(
p_ul
 < 0)

172  
OK
;

177 
uhp
 = (
u_hódî
 *)
	`u_Æloc_löe
(()(u_header));

178 i‡(
uhp
 =
NULL
)

179 
nomem
;

180 
uhp
->
uh_¥ev
 = 
NULL
;

181 
uhp
->
uh_√xt
 = 
curbuf
->
b_u_√whód
;

182 i‡(
curbuf
->
b_u_√whód
 !
NULL
)

183 
curbuf
->
b_u_√whód
->
uh_¥ev
 = 
uhp
;

184 
uhp
->
uh_íåy
 = 
NULL
;

185 
uhp
->
uh_curs‹
 = 
curwö
->
w_curs‹
;

188 
uhp
->
uh_Êags
 = (
curbuf
->
b_ch™ged
 ? 
UH_CHANGED
 : 0) +

189 ((
curbuf
->
b_ml
.
ml_Êags
 & 
ML_EMPTY
Ë? 
UH_EMPTYBUF
 : 0);

192 
	`vim_memmove
((*)
uhp
->
uh_«medm
, (*)
curbuf
->
b_«medm
,

193 (
FPOS
Ë* 
NMARKS
);

194 
curbuf
->
b_u_√whód
 = 
uhp
;

195 i‡(
curbuf
->
b_u_ﬁdhód
 =
NULL
)

196 
curbuf
->
b_u_ﬁdhód
 = 
uhp
;

197 ++
curbuf
->
b_u_numhód
;

200 
	`u_gëbŸ
();

202 
size
 = 
bŸ
 - 
t›
 - 1;

203 #i‡!
	`deföed
(
UNIX
Ë&& !deföed(
DJGPP
Ë&& !deföed(
WIN32
Ë&& !deföed(
__EMX__
)

208 i‡(
size
 >= 8000)

209 
nomem
;

215 
uï
 = (
u_íåy
 *)
	`u_Æloc_löe
(()(u_entry));

216 i‡(
uï
 =
NULL
)

217 
nomem
;

219 
uï
->
ue_size
 = 
size
;

220 
uï
->
ue_t›
 = 
t›
;

221 
uï
->
ue_lcou¡
 = 0;

222 i‡(
√wbŸ
)

223 
uï
->
ue_bŸ
 = 
√wbŸ
;

228 i‡(
bŸ
 > 
curbuf
->
b_ml
.
ml_löe_cou¡
)

229 
uï
->
ue_bŸ
 = 0;

231 
uï
->
ue_lcou¡
 = 
curbuf
->
b_ml
.
ml_löe_cou¡
;

233 i‡(
size
)

235 i‡((
uï
->
ue_¨øy
 = (
ch¨_u
 **)
	`u_Æloc_löe
(()((ch¨_u *Ë* 
size
))Ë=
NULL
)

237 
	`u_‰ìíåy
(
uï
, 0L);

238 
nomem
;

240 
i
 = 0, 
 um
 = 
t›
 + 1; i < 
size
; ++i)

242 i‡((
uï
->
ue_¨øy
[
i
] = 
	`u_ßve_löe
(
 um
++)Ë=
NULL
)

244 
	`u_‰ìíåy
(
uï
, 
i
);

245 
nomem
;

249 
uï
->
ue_√xt
 = 
curbuf
->
b_u_√whód
->
uh_íåy
;

250 
curbuf
->
b_u_√whód
->
uh_íåy
 = 
uï
;

251 
curbuf
->
b_u_syn˚d
 = 
FALSE
;

252  
OK
;

254 
nomem
:

255 i‡(
	`ask_ye¢o
((
ch¨_u
 *)"NÿundÿpossibÀ; c⁄töuê™yway", 
TRUE
) == 'y')

257 
undo_off
 = 
TRUE
;

258  
OK
;

260 
	`do_outofmem_msg
();

261  
FAIL
;

262 
	}
}

265 
	$u_undo
(
cou¡
)

266 
cou¡
;

273 i‡(
curbuf
->
b_u_syn˚d
 =
FALSE
)

275 
	`u_sync
();

276 
cou¡
 = 1;

279 
u_√wcou¡
 = 0;

280 
u_ﬁdcou¡
 = 0;

281 
cou¡
--)

283 i‡(
curbuf
->
b_u_curhód
 =
NULL
)

284 
curbuf
->
b_u_curhód
 = curbuf->
b_u_√whód
;

285 i‡(
p_ul
 > 0)

287 
curbuf
->
b_u_curhód
 = curbuf->b_u_curhód->
uh_√xt
;

289 i‡(
curbuf
->
b_u_numhód
 =0 || curbuf->
b_u_curhód
 =
NULL
)

292 
curbuf
->
b_u_curhód
 = curbuf->
b_u_ﬁdhód
;

293 
	`bìp_Êush
();

297 
	`u_und‹edo
();

299 
	`u_undo_íd
();

300 
	}
}

303 
	$u_ªdo
(
cou¡
)

304 
cou¡
;

306 
u_√wcou¡
 = 0;

307 
u_ﬁdcou¡
 = 0;

308 
cou¡
--)

310 i‡(
curbuf
->
b_u_curhód
 =
NULL
 || 
p_ul
 <= 0)

312 
	`bìp_Êush
();

316 
	`u_und‹edo
();

318 
curbuf
->
b_u_curhód
 = curbuf->b_u_curhód->
uh_¥ev
;

320 
	`u_undo_íd
();

321 
	}
}

331 
	$u_und‹edo
()

333 
ch¨_u
 **
√w¨øy
 = 
NULL
;

334 
löír_t
 
ﬁdsize
;

335 
löír_t
 
√wsize
;

336 
löír_t
 
t›
, 
bŸ
;

337 
löír_t
 
 um
;

338 
löír_t
 
√w um
 = 
MAXLNUM
;

339 
i
;

340 
u_íåy
 *
uï
, *
nuï
;

341 
u_íåy
 *
√wli°
 = 
NULL
;

342 
ﬁd_Êags
;

343 
√w_Êags
;

344 
FPOS
 
«medm
[
NMARKS
];

345 
em±y_buf„r
;

347 
ﬁd_Êags
 = 
curbuf
->
b_u_curhód
->
uh_Êags
;

348 
√w_Êags
 = (
curbuf
->
b_ch™ged
 ? 
UH_CHANGED
 : 0) +

349 ((
curbuf
->
b_ml
.
ml_Êags
 & 
ML_EMPTY
Ë? 
UH_EMPTYBUF
 : 0);

350 i‡(
ﬁd_Êags
 & 
UH_CHANGED
)

351 
CHANGED
;

353 
	`UNCHANGED
(
curbuf
);

354 
	`£çcm¨k
();

359 
	`vim_memmove
((*)
«medm
, (*)
curbuf
->
b_«medm
,

360 (
FPOS
Ë* 
NMARKS
);

361 
curbuf
->
b_›_°¨t
.
 um
 = curbuf->
b_ml
.
ml_löe_cou¡
;

362 
curbuf
->
b_›_°¨t
.
cﬁ
 = 0;

363 
curbuf
->
b_›_íd
.
 um
 = 0;

364 
curbuf
->
b_›_íd
.
cﬁ
 = 0;

366 
uï
 = 
curbuf
->
b_u_curhód
->
uh_íåy
; uï !
NULL
; uï = 
nuï
)

368 
t›
 = 
uï
->
ue_t›
;

369 
bŸ
 = 
uï
->
ue_bŸ
;

370 i‡(
bŸ
 == 0)

371 
bŸ
 = 
curbuf
->
b_ml
.
ml_löe_cou¡
 + 1;

372 i‡(
t›
 > 
curbuf
->
b_ml
.
ml_löe_cou¡
 ||Å› >
bŸ
 || bot > curbuf->b_ml.ml_line_count + 1)

374 
	`EMSG
("u_undo:ÜineÇumbers wrong");

375 
CHANGED
;

379 i‡(
t›
 < 
√w um
)

381 
√w um
 = 
t›
;

382 
curwö
->
w_curs‹
.
 um
 = 
t›
 + 1;

384 
ﬁdsize
 = 
bŸ
 - 
t›
 - 1;

385 
√wsize
 = 
uï
->
ue_size
;

387 
em±y_buf„r
 = 
FALSE
;

390 i‡(
ﬁdsize
)

392 i‡((
√w¨øy
 = (
ch¨_u
 **)
	`u_Æloc_löe
(()((ch¨_u *Ë* 
ﬁdsize
))Ë=
NULL
)

394 
	`do_outofmem_msg
();

399 
uï
 !
NULL
)

401 
nuï
 = 
uï
->
ue_√xt
;

402 
	`u_‰ìíåy
(
uï
, uï->
ue_size
);

403 
uï
 = 
nuï
;

408 
 um
 = 
bŸ
 - 1, 
i
 = 
ﬁdsize
; --i >= 0; --lnum)

411 i‡((
√w¨øy
[
i
] = 
	`u_ßve_löe
(
 um
)Ë=
NULL
)

412 
	`do_outofmem_msg
();

415 i‡(
curbuf
->
b_ml
.
ml_löe_cou¡
 == 1)

416 
em±y_buf„r
 = 
TRUE
;

417 
	`ml_dñëe
(
 um
, 
FALSE
);

422 i‡(
√wsize
)

424 
 um
 = 
t›
, 
i
 = 0; i < 
√wsize
; ++i, ++lnum)

430 i‡(
em±y_buf„r
 && 
 um
 == 0)

431 
	`ml_ª∂a˚
((
löír_t
)1, 
uï
->
ue_¨øy
[
i
], 
TRUE
);

433 
	`ml_≠≥nd
(
 um
, 
uï
->
ue_¨øy
[
i
], (
cﬁƒ_t
)0, 
FALSE
);

434 
	`u_‰ì_löe
(
uï
->
ue_¨øy
[
i
]);

436 
	`u_‰ì_löe
((
ch¨_u
 *)
uï
->
ue_¨øy
);

440 i‡(
ﬁdsize
 !
√wsize
)

442 
	`m¨k_adju°
(
t›
 + 1,Å› + 
ﬁdsize
, 
MAXLNUM
,

443 ()
√wsize
 - ()
ﬁdsize
);

444 i‡(
curbuf
->
b_›_°¨t
.
 um
 > 
t›
 + 
ﬁdsize
)

445 
curbuf
->
b_›_°¨t
.
 um
 +
√wsize
 - 
ﬁdsize
;

446 i‡(
curbuf
->
b_›_íd
.
 um
 > 
t›
 + 
ﬁdsize
)

447 
curbuf
->
b_›_íd
.
 um
 +
√wsize
 - 
ﬁdsize
;

450 i‡(
t›
 + 1 < 
curbuf
->
b_›_°¨t
.
 um
)

451 
curbuf
->
b_›_°¨t
.
 um
 = 
t›
 + 1;

452 i‡(
√wsize
 =0 && 
t›
 + 1 > 
curbuf
->
b_›_íd
.
 um
)

453 
curbuf
->
b_›_íd
.
 um
 = 
t›
 + 1;

454 i‡(
t›
 + 
√wsize
 > 
curbuf
->
b_›_íd
.
 um
)

455 
curbuf
->
b_›_íd
.
 um
 = 
t›
 + 
√wsize
;

457 
u_√wcou¡
 +
√wsize
;

458 
u_ﬁdcou¡
 +
ﬁdsize
;

459 
uï
->
ue_size
 = 
ﬁdsize
;

460 
uï
->
ue_¨øy
 = 
√w¨øy
;

461 
uï
->
ue_bŸ
 = 
t›
 + 
√wsize
 + 1;

466 
nuï
 = 
uï
->
ue_√xt
;

467 
uï
->
ue_√xt
 = 
√wli°
;

468 
√wli°
 = 
uï
;

471 
curbuf
->
b_u_curhód
->
uh_íåy
 = 
√wli°
;

472 
curbuf
->
b_u_curhód
->
uh_Êags
 = 
√w_Êags
;

473 i‡((
ﬁd_Êags
 & 
UH_EMPTYBUF
Ë&& 
	`bu„m±y
())

474 
curbuf
->
b_ml
.
ml_Êags
 |
ML_EMPTY
;

479 
i
 = 0; i < 
NMARKS
; ++i)

480 i‡(
curbuf
->
b_u_curhód
->
uh_«medm
[
i
].
 um
)

482 
curbuf
->
b_«medm
[
i
] = curbuf->
b_u_curhód
->
uh_«medm
[i];

483 
curbuf
->
b_u_curhód
->
uh_«medm
[
i
] = 
«medm
[i];

491 i‡(
curbuf
->
b_u_curhód
->
uh_curs‹
.
 um
 + 1 =
curwö
->
w_curs‹
.lnum &&

492 
curwö
->
w_curs‹
.
 um
 > 1)

493 --
curwö
->
w_curs‹
.
 um
;

494 i‡(
curbuf
->
b_u_curhód
->
uh_curs‹
.
 um
 =
curwö
->
w_curs‹
.lnum)

495 
curwö
->
w_curs‹
.
cﬁ
 = 
curbuf
->
b_u_curhód
->
uh_curs‹
.col;

496 i‡(
curwö
->
w_curs‹
.
 um
 <
curbuf
->
b_ml
.
ml_löe_cou¡
)

497 
	`begölöe
(
MAYBE
);

504 
curwö
->
w_curs‹
.
cﬁ
 = 0;

505 
	}
}

513 
	$u_undo_íd
()

515 i‡((
u_ﬁdcou¡
 -
u_√wcou¡
) != 0)

516 
	`msgm‹e
(-
u_ﬁdcou¡
);

517 i‡(
u_√wcou¡
 > 
p_ªp‹t
)

518 
	`smsg
((
ch¨_u
 *)"%ld ch™ge%s", 
u_√wcou¡
, 
	`∂uøl
(u_newcount));

520 
	`upd©e_curbuf
(
CURSUPD
);

521 
	}
}

527 
	$u_sync
()

529 i‡(
curbuf
->
b_u_syn˚d
)

531 
	`u_gëbŸ
();

532 
curbuf
->
b_u_curhód
 = 
NULL
;

533 
	}
}

540 
	$u_unch™ged
(
buf
)

541 
BUF
 *
buf
;

543 
u_hódî
 *
uh
;

545 
uh
 = 
buf
->
b_u_√whód
; uh; uh = uh->
uh_√xt
)

546 
uh
->
uh_Êags
 |
UH_CHANGED
;

547 
buf
->
b_did_w¨n
 = 
FALSE
;

548 
	}
}

555 
	$u_gëbŸ
()

557 
u_íåy
 *
uï
;

559 i‡(
curbuf
->
b_u_√whód
 =
NULL
 ||

560 (
uï
 = 
curbuf
->
b_u_√whód
->
uh_íåy
Ë=
NULL
)

562 
	`EMSG
("undoÜist corrupt");

566 i‡(
uï
->
ue_lcou¡
 != 0)

573 
uï
->
ue_bŸ
 = uï->
ue_t›
 + uï->
ue_size
 + 1 +

574 (
curbuf
->
b_ml
.
ml_löe_cou¡
 - 
uï
->
ue_lcou¡
);

575 i‡(
uï
->
ue_bŸ
 < 1 || uï->ue_bŸ > 
curbuf
->
b_ml
.
ml_löe_cou¡
)

577 
	`EMSG
("undoÜine missing");

578 
uï
->
ue_bŸ
 = uï->
ue_t›
 + 1;

583 
uï
->
ue_lcou¡
 = 0;

586 
curbuf
->
b_u_syn˚d
 = 
TRUE
;

587 
	}
}

593 
	$u_‰ìli°
(
uhp
)

594 
u_hódî
 *
uhp
;

596 
u_íåy
 *
uï
, *
nuï
;

598 
uï
 = 
uhp
->
uh_íåy
; uï !
NULL
; uï = 
nuï
)

600 
nuï
 = 
uï
->
ue_√xt
;

601 
	`u_‰ìíåy
(
uï
, uï->
ue_size
);

604 i‡(
curbuf
->
b_u_curhód
 =
uhp
)

605 
curbuf
->
b_u_curhód
 = 
NULL
;

607 i‡(
uhp
->
uh_√xt
 =
NULL
)

608 
curbuf
->
b_u_ﬁdhód
 = 
uhp
->
uh_¥ev
;

610 
uhp
->
uh_√xt
->
uh_¥ev
 = uhp->uh_prev;

612 i‡(
uhp
->
uh_¥ev
 =
NULL
)

613 
curbuf
->
b_u_√whód
 = 
uhp
->
uh_√xt
;

615 
uhp
->
uh_¥ev
->
uh_√xt
 = uhp->uh_next;

617 
	`u_‰ì_löe
((
ch¨_u
 *)
uhp
);

618 --
curbuf
->
b_u_numhód
;

619 
	}
}

625 
	$u_‰ìíåy
(
uï
, 
n
)

626 
u_íåy
 *
uï
;

627 
n
;

629 
n
)

630 
	`u_‰ì_löe
(
uï
->
ue_¨øy
[--
n
]);

631 
	`u_‰ì_löe
((
ch¨_u
 *)
uï
);

632 
	}
}

638 
	$u_˛óøŒ
(
buf
)

639 
BUF
 *
buf
;

641 
buf
->
b_u_√whód
 = buf->
b_u_ﬁdhód
 = buf->
b_u_curhód
 = 
NULL
;

642 
buf
->
b_u_syn˚d
 = 
TRUE
;

643 
buf
->
b_u_numhód
 = 0;

644 
buf
->
b_u_löe_±r
 = 
NULL
;

645 
buf
->
b_u_löe_ um
 = 0;

646 
	}
}

652 
	$u_ßvñöe
(
 um
)

653 
löír_t
 
 um
;

655 i‡(
 um
 =
curbuf
->
b_u_löe_ um
)

657 i‡(
 um
 < 1 ||Ünum > 
curbuf
->
b_ml
.
ml_löe_cou¡
)

659 
	`u_˛óæöe
();

660 
curbuf
->
b_u_löe_ um
 = 
 um
;

661 i‡(
curwö
->
w_curs‹
.
 um
 ==Ünum)

662 
curbuf
->
b_u_löe_cﬁƒ
 = 
curwö
->
w_curs‹
.
cﬁ
;

664 
curbuf
->
b_u_löe_cﬁƒ
 = 0;

665 i‡((
curbuf
->
b_u_löe_±r
 = 
	`u_ßve_löe
(
 um
)Ë=
NULL
)

666 
	`do_outofmem_msg
();

667 
	}
}

674 
	$u_˛óæöe
()

676 i‡(
curbuf
->
b_u_löe_±r
 !
NULL
)

678 
	`u_‰ì_löe
(
curbuf
->
b_u_löe_±r
);

679 
curbuf
->
b_u_löe_±r
 = 
NULL
;

680 
curbuf
->
b_u_löe_ um
 = 0;

682 
	}
}

690 
	$u_undﬁöe
()

692 
cﬁƒ_t
 
t
;

693 
ch¨_u
 *
ﬁdp
;

695 i‡(
undo_off
)

698 i‡(
curbuf
->
b_u_löe_±r
 =
NULL
 ||

699 
curbuf
->
b_u_löe_ um
 > curbuf->
b_ml
.
ml_löe_cou¡
)

701 
	`bìp_Êush
();

705 i‡(
	`u_ßvecomm⁄
(
curbuf
->
b_u_löe_ um
 - 1,

706 
curbuf
->
b_u_löe_ um
 + 1, (
löír_t
)0Ë=
FAIL
)

708 
ﬁdp
 = 
	`u_ßve_löe
(
curbuf
->
b_u_löe_ um
);

709 i‡(
ﬁdp
 =
NULL
)

711 
	`do_outofmem_msg
();

714 
	`ml_ª∂a˚
(
curbuf
->
b_u_löe_ um
, curbuf->
b_u_löe_±r
, 
TRUE
);

715 
	`u_‰ì_löe
(
curbuf
->
b_u_löe_±r
);

716 
curbuf
->
b_u_löe_±r
 = 
ﬁdp
;

718 
t
 = 
curbuf
->
b_u_löe_cﬁƒ
;

719 i‡(
curwö
->
w_curs‹
.
 um
 =
curbuf
->
b_u_löe_ um
)

720 
curbuf
->
b_u_löe_cﬁƒ
 = 
curwö
->
w_curs‹
.
cﬁ
;

721 
curwö
->
w_curs‹
.
cﬁ
 = 
t
;

722 
curwö
->
w_curs‹
.
 um
 = 
curbuf
->
b_u_löe_ um
;

723 
	`cursupd©e
();

724 
	`upd©eS¸ìn
(
VALID_TO_CURSCHAR
);

725 
	}
}

772 
	#MEMBLOCKSIZE
 2044

	)

786 #ifde‡
ALIGN_LONG


788 
	#M_OFFSET
 ((
l⁄g_u
))

	)

791 
	#M_OFFSET
 ((
sh‹t_u
))

	)

797 
ch¨_u
 *

798 
	$u_blockÆloc
(
size
)

799 
l⁄g_u
 
size
;

801 
m_block
 *
p
;

802 
m_block
 *
mp
, *
√xt
;

804 
p
 = (
m_block
 *)
	`œŒoc
(
size
 + (m_block), 
FALSE
);

805 i‡(
p
 !
NULL
)

809 
mp
 = &
curbuf
->
b_block_hód
; (
√xt
 = mp->
mb_√xt
Ë!
NULL
 &&Çexà< 
p
; mp =Çext)

811 
p
->
mb_√xt
 = 
√xt
;

812 
mp
->
mb_√xt
 = 
p
;

813 
p
->
mb_öfo
.
m_√xt
 = 
NULL
;

814 
p
->
mb_öfo
.
m_size
 = 0;

815 
curbuf
->
b_mb_cuºít
 = 
p
;

816 
curbuf
->
b_m_£¨ch
 = 
NULL
;

817 
p
++;

819  (
ch¨_u
 *)
p
;

820 
	}
}

826 
	$u_block‰ì
(
buf
)

827 
BUF
 *
buf
;

829 
m_block
 *
p
, *
≈
;

831 
p
 = 
buf
->
b_block_hód
.
mb_√xt
;Ö !
NULL
;Ö = 
≈
)

833 
≈
 = 
p
->
mb_√xt
;

834 
	`vim_‰ì
(
p
);

836 
buf
->
b_block_hód
.
mb_√xt
 = 
NULL
;

837 
buf
->
b_m_£¨ch
 = 
NULL
;

838 
buf
->
b_mb_cuºít
 = 
NULL
;

839 
	}
}

846 
	$u_‰ì_löe
(
±r
)

847 
ch¨_u
 *
±r
;

849 
öfo_t
 *
√xt
;

850 
öfo_t
 *
¥ev
, *
cuº
;

851 
öfo_t
 *
mp
;

852 
m_block
 *
√xtb
;

854 i‡(
±r
 =
NULL
 ||Öå =
IObuff
)

857 
mp
 = (
öfo_t
 *)(
±r
 - 
M_OFFSET
);

861 i‡(
curbuf
->
b_mb_cuºít
 =
NULL
 || 
mp
 < (
öfo_t
 *)curbuf->b_mb_current)

863 
curbuf
->
b_mb_cuºít
 = curbuf->
b_block_hód
.
mb_√xt
;

864 
curbuf
->
b_m_£¨ch
 = 
NULL
;

866 i‡((
√xtb
 = 
curbuf
->
b_mb_cuºít
->
mb_√xt
Ë!
NULL
 && (
öfo_t
 *Íextb < 
mp
)

868 
curbuf
->
b_mb_cuºít
 = 
√xtb
;

869 
curbuf
->
b_m_£¨ch
 = 
NULL
;

871 (
√xtb
 = 
curbuf
->
b_mb_cuºít
->
mb_√xt
Ë!
NULL
 && (
öfo_t
 *Íextb < 
mp
)

872 
curbuf
->
b_mb_cuºít
 = 
√xtb
;

874 
cuº
 = 
NULL
;

879 i‡(
curbuf
->
b_m_£¨ch
 =
NULL
 || 
mp
 < (curbuf->b_m_£¨ch->
m_√xt
))

880 
√xt
 = &(
curbuf
->
b_mb_cuºít
->
mb_öfo
);

882 
√xt
 = 
curbuf
->
b_m_£¨ch
;

888 #ifde‡
SLOW_BUT_EASY_TO_READ


891 
¥ev
 = 
cuº
;

892 
cuº
 = 
√xt
;

893 
√xt
 =Çext->
m_√xt
;

895 
mp
 > 
√xt
 &&Çexà!
NULL
);

899 
¥ev
 = 
√xt
->
m_√xt
;

900 i‡(
¥ev
 =
NULL
 || 
mp
 <=Örev)

902 
¥ev
 = 
cuº
;

903 
cuº
 = 
√xt
;

904 
√xt
 =Çext->
m_√xt
;

907 
cuº
 = 
¥ev
->
m_√xt
;

908 i‡(
cuº
 =
NULL
 || 
mp
 <= curr)

910 
¥ev
 = 
√xt
;

911 
cuº
 = 
¥ev
->
m_√xt
;

912 
√xt
 = 
cuº
->
m_√xt
;

915 
√xt
 = 
cuº
->
m_√xt
;

917 
mp
 > 
√xt
 &&Çexà!
NULL
);

921 i‡((
ch¨_u
 *)
mp
 + mp->
m_size
 =(ch¨_u *)
√xt
)

923 
mp
->
m_size
 +
√xt
->m_size;

924 
mp
->
m_√xt
 = 
√xt
->m_next;

927 
mp
->
m_√xt
 = 
√xt
;

930 i‡(
¥ev
 !
NULL
 && (
ch¨_u
 *)
cuº
 + cuº->
m_size
 =(ch¨_u *)
mp
)

932 
cuº
->
m_size
 +
mp
->m_size;

933 
cuº
->
m_√xt
 = 
mp
->m_next;

934 
curbuf
->
b_m_£¨ch
 = 
¥ev
;

938 
cuº
->
m_√xt
 = 
mp
;

939 
curbuf
->
b_m_£¨ch
 = 
cuº
;

941 
	}
}

947 
ch¨_u
 *

948 
	$u_Æloc_löe
(
size
)

949 
size
;

951 
öfo_t
 *
mp
, *
m¥ev
, *
mp2
;

952 
m_block
 *
mbp
;

953 
size_Æign
;

960 
size
 +
M_OFFSET
 + 1;

961 i‡(
size
 < (
öfo_t
) + 1)

962 
size
 = (
öfo_t
) + 1;

967 
size_Æign
 = (
size
 + 
ALIGN_MASK
) & ~ALIGN_MASK;

973 i‡(
curbuf
->
b_mb_cuºít
 =
NULL
 || curbuf->
b_m_£¨ch
 == NULL)

975 
curbuf
->
b_mb_cuºít
 = &curbuf->
b_block_hód
;

976 
curbuf
->
b_m_£¨ch
 = &(curbuf->
b_block_hód
.
mb_öfo
);

980 
m¥ev
 = 
curbuf
->
b_m_£¨ch
;

981 
mbp
 = 
curbuf
->
b_mb_cuºít
;

982 
mp
 = 
curbuf
->
b_m_£¨ch
->
m_√xt
;

983 i‡(
mp
 =
NULL
)

985 i‡(
mbp
->
mb_√xt
)

986 
mbp
 = mbp->
mb_√xt
;

988 
mbp
 = &
curbuf
->
b_block_hód
;

989 
mp
 = 
curbuf
->
b_m_£¨ch
 = &(
mbp
->
mb_öfo
);

991 
mp
->
m_size
 < 
size
)

993 i‡(
mp
 =
curbuf
->
b_m_£¨ch
)

995 i‡(
mbp
->
mb_√xt
)

996 
mbp
 = mbp->
mb_√xt
;

998 
mbp
 = &
curbuf
->
b_block_hód
;

999 
mp
 = 
curbuf
->
b_m_£¨ch
 = &(
mbp
->
mb_öfo
);

1000 i‡(
mbp
 =
curbuf
->
b_mb_cuºít
)

1002 
n
 = (
size_Æign
 > (
MEMBLOCKSIZE
 / 4) ? size_align : MEMBLOCKSIZE);

1004 
mp
 = (
öfo_t
 *)
	`u_blockÆloc
((
l⁄g_u
)
n
);

1005 i‡(
mp
 =
NULL
)

1006  (
NULL
);

1007 
mp
->
m_size
 = 
n
;

1008 
	`u_‰ì_löe
((
ch¨_u
 *)
mp
 + 
M_OFFSET
);

1009 
mp
 = 
curbuf
->
b_m_£¨ch
;

1010 
mbp
 = 
curbuf
->
b_mb_cuºít
;

1013 
m¥ev
 = 
mp
;

1014 i‡((
mp
 = mp->
m_√xt
Ë=
NULL
)

1015 
mp
 = &(
mbp
->
mb_öfo
);

1019 i‡(()
mp
->
m_size
 - 
size_Æign
 >()((
öfo_t
) + 1))

1021 
mp2
 = (
öfo_t
 *)((
ch¨_u
 *)
mp
 + 
size_Æign
);

1022 
mp2
->
m_size
 = 
mp
->m_sizê- 
size_Æign
;

1023 
mp2
->
m_√xt
 = 
mp
->m_next;

1024 
m¥ev
->
m_√xt
 = 
mp2
;

1025 
mp
->
m_size
 = 
size_Æign
;

1029 
m¥ev
->
m_√xt
 = 
mp
->m_next;

1031 
curbuf
->
b_m_£¨ch
 = 
m¥ev
;

1032 
curbuf
->
b_mb_cuºít
 = 
mbp
;

1034 
mp
 = (
öfo_t
 *)((
ch¨_u
 *)m∞+ 
M_OFFSET
);

1035 *(
ch¨_u
 *)
mp
 = 
NUL
;

1037  ((
ch¨_u
 *)
mp
);

1038 
	}
}

1043 
ch¨_u
 *

1044 
	$u_ßve_löe
(
 um
)

1045 
löír_t
 
 um
;

1047 
ch¨_u
 *
§c
;

1048 
ch¨_u
 *
d°
;

1049 
Àn
;

1051 
§c
 = 
	`ml_gë
(
 um
);

1052 
Àn
 = 
	`STRLEN
(
§c
);

1053 i‡((
d°
 = 
	`u_Æloc_löe
(
Àn
)Ë!
NULL
)

1054 
	`vim_memmove
(
d°
, 
§c
, (
size_t
)(
Àn
 + 1));

1055  (
d°
);

1056 
	}
}

	@src/unix.c

23 
	#£À˘
 
£À˘_de˛¨ed_wr⁄g


	)

25 
	~"vim.h
"

26 
	~"globÆs.h
"

27 
	~"›ti⁄.h
"

28 
	~"¥Ÿo.h
"

30 #ifde‡
HAVE_FCNTL_H


31 
	~<f˙é.h
>

34 
	~"unixunix.h
"

39 #unde‡
£À˘


41 #i‡
deföed
(
HAVE_SELECT
)

42 
£À˘
 
__ARGS
((, 
fd_£t
 *, fd_£à*, fd_£à*, 
timevÆ
 *));

51 #i‡
deföed
(
ESIX
Ë|| deföed(
M_UNIX
Ë&& !deföed(
SCO
)

52 #ifde‡
SIGWINCH


53 #unde‡
SIGWINCH


55 #ifde‡
TIOCGWINSZ


56 #unde‡
TIOCGWINSZ


60 #i‡
deföed
(
SIGWINDOW
Ë&& !deföed(
SIGWINCH
)

61 
	#SIGWINCH
 
SIGWINDOW


	)

64 #i‡
deföed
(
HAVE_X11
Ë&& deföed(
WANT_X11
)

65 
	~<X11/Xlib.h
>

66 
	~<X11/Xutû.h
>

67 
	~<X11/X©om.h
>

69 
Wödow
 
	gx11_wödow
 = 0;

70 
Di•œy
 *
	gx11_di•œy
 = 
NULL
;

71 
	ggŸ_x_îr‹
 = 
FALSE
;

73 
gë_x11_wödis
 
__ARGS
(());

74 
£t_x11_tôÀ
 
__ARGS
((
ch¨_u
 *));

75 
£t_x11_ic⁄
 
__ARGS
((
ch¨_u
 *));

78 
gë_x11_tôÀ
 
__ARGS
(());

79 
gë_x11_ic⁄
 
__ARGS
(());

81 
may_c‹e_dump
 
__ARGS
(());

83 
Ród
 
__ARGS
((
ch¨_u
 *, ));

84 
WaôF‹Ch¨
 
__ARGS
(());

85 
RólWaôF‹Ch¨
 
__ARGS
((, ));

86 
fûl_öbuf
 
__ARGS
(());

88 #i‡
deföed
(
SIGWINCH
)

89 
RETSIGTYPE
 
sig_wöch
 
__ARGS
(
SIGPROTOARG
);

91 #i‡
deföed
(
SIGALRM
Ë&& deföed(
HAVE_X11
Ë&& deföed(
WANT_X11
)

92 
RETSIGTYPE
 
sig_Æ¨m
 
__ARGS
(
SIGPROTOARG
);

94 
RETSIGTYPE
 
dóthå≠
 
__ARGS
(
SIGPROTOARG
);

96 
ˇtch_sig«ls
 
__ARGS
((
RETSIGTYPE
 (*
func
)()));

97 #i‚de‡
__EMX__


98 
have_wûdˇrd
 
__ARGS
((, 
ch¨_u
 **));

99 
have_dﬁœrs
 
__ARGS
((, 
ch¨_u
 **));

102 
	gdo_ªsize
 = 
FALSE
;

103 
ch¨_u
 *
	gﬁdtôÀ
 = 
NULL
;

104 
ch¨_u
 *
	gfixedtôÀ
 = (char_u *)"Thanks for flying Vim";

105 
ch¨_u
 *
	gﬁdic⁄
 = 
NULL
;

106 
ch¨_u
 *
	gexåa_shñl_¨g
 = 
NULL
;

107 #i‚de‡
__EMX__


108 
	gshow_shñl_mess
 = 
TRUE
;

110 
	gc‹e_dump
 = 
FALSE
;

112 #ifde‡
SYS_SIGLIST_DECLARED


126 
	msig
;

127 *
	m«me
;

128 
	mdump
;

129 } 
	gsig«l_öfo
[] =

131 #ifde‡
SIGHUP


132 {
SIGHUP
, "HUP", 
FALSE
},

134 #ifde‡
SIGINT


135 {
SIGINT
, "INT", 
FALSE
},

137 #ifde‡
SIGQUIT


138 {
SIGQUIT
, "QUIT", 
TRUE
},

140 #ifde‡
SIGILL


141 {
SIGILL
, "ILL", 
TRUE
},

143 #ifde‡
SIGTRAP


144 {
SIGTRAP
, "TRAP", 
TRUE
},

146 #ifde‡
SIGABRT


147 {
SIGABRT
, "ABRT", 
TRUE
},

149 #ifde‡
SIGEMT


150 {
SIGEMT
, "EMT", 
TRUE
},

152 #ifde‡
SIGFPE


153 {
SIGFPE
, "FPE", 
TRUE
},

155 #ifde‡
SIGBUS


156 {
SIGBUS
, "BUS", 
TRUE
},

158 #ifde‡
SIGSEGV


159 {
SIGSEGV
, "SEGV", 
TRUE
},

161 #ifde‡
SIGSYS


162 {
SIGSYS
, "SYS", 
TRUE
},

164 #ifde‡
SIGALRM


165 {
SIGALRM
, "ALRM", 
FALSE
},

167 #ifde‡
SIGTERM


168 {
SIGTERM
, "TERM", 
FALSE
},

170 #ifde‡
SIGVTALRM


171 {
SIGVTALRM
, "VTALRM", 
FALSE
},

173 #ifde‡
SIGPROF


174 {
SIGPROF
, "PROF", 
FALSE
},

176 #ifde‡
SIGXCPU


177 {
SIGXCPU
, "XCPU", 
TRUE
},

179 #ifde‡
SIGXFSZ


180 {
SIGXFSZ
, "XFSZ", 
TRUE
},

182 #ifde‡
SIGUSR1


183 {
SIGUSR1
, "USR1", 
FALSE
},

185 #ifde‡
SIGUSR2


186 {
SIGUSR2
, "USR2", 
FALSE
},

192 
	$mch_wrôe
(
s
, 
Àn
)

193 
ch¨_u
 *
s
;

194 
Àn
;

196 #ifde‡
USE_GUI


197 i‡(
gui
.
ö_u£
 && !gui.
dyög
)

199 
	`gui_wrôe
(
s
, 
Àn
);

200 i‡(
p_wd
)

201 
	`gui_mch_waô_f‹_ch¨s
(
p_wd
);

206 
	`wrôe
(1, (*)
s
, 
Àn
);

207 i‡(
p_wd
)

208 
	`RólWaôF‹Ch¨
(0, 
p_wd
);

210 
	}
}

221 
	$mch_öch¨
(
buf
, 
maxÀn
, 
wtime
)

222 
ch¨_u
 *
buf
;

223 
maxÀn
;

224 
wtime
;

226 
Àn
;

228 #ifde‡
USE_GUI


229 i‡(
gui
.
ö_u£
)

231 i‡(!
	`gui_mch_waô_f‹_ch¨s
(
wtime
))

233  
	`Ród
(
buf
, ()
maxÀn
);

237 i‡(
wtime
 >= 0)

239 
	`WaôF‹Ch¨
(
wtime
) == 0)

241 i‡(!
do_ªsize
)

243 
	`£t_wösize
(0, 0, 
FALSE
);

244 
do_ªsize
 = 
FALSE
;

254 i‡(
	`WaôF‹Ch¨
(
p_ut
) == 0)

255 
	`upd©es¸ùt
(0);

260 i‡(
do_ªsize
)

262 
	`£t_wösize
(0, 0, 
FALSE
);

263 
do_ªsize
 = 
FALSE
;

268 
	`WaôF‹Ch¨
(-1L);

269 i‡(
do_ªsize
)

279 
Àn
 = 
	`Ród
(
buf
, ()
maxÀn
);

280 i‡(
Àn
 > 0)

282 #ifde‡
OS2


283 
i
;

285 
i
 = 0; i < 
Àn
; i++)

286 i‡(
buf
[
i
] == 0)

287 
buf
[
i
] = 
K_NUL
;

289  
Àn
;

292 
	}
}

298 
	$mch_ch¨_avaû
()

300 #ifde‡
USE_GUI


301 i‡(
gui
.
ö_u£
)

303 
	`gui_mch_upd©e
();

304  !
	`is_öput_buf_em±y
();

307  
	`WaôF‹Ch¨
(0L);

308 
	}
}

311 
	$mch_avaû_mem
(
•ecül
)

312 
•ecül
;

314 #ifde‡
__EMX__


315  
	`ulimô
(3, 0L);

319 
	}
}

322 
	$mch_dñay
(
m£c
, 
ign‹eöput
)

323 
m£c
;

324 
ign‹eöput
;

326 i‡(
ign‹eöput
)

327 #i‚de‡
HAVE_SELECT


328 
	`pﬁl
(
NULL
, 0, ()
m£c
);

330 #ifde‡
__EMX__


331 
	`_¶ìp2
(
m£c
);

334 
timevÆ
 
tv
;

336 
tv
.
tv_£c
 = 
m£c
 / 1000;

337 
tv
.
tv_u£c
 = (
m£c
 % 1000) * 1000;

338 
	`£À˘
(0, 
NULL
, NULL, NULL, &
tv
);

343 #ifde‡
USE_GUI


344 i‡(
gui
.
ö_u£
)

345 
	`gui_mch_waô_f‹_ch¨s
(
m£c
);

348 
	`WaôF‹Ch¨
(
m£c
);

349 
	}
}

351 #i‡
deföed
(
SIGWINCH
)

357 
RETSIGTYPE


358 
sig_wöch
 
	$SIGDEFARG
(
sig¨g
)

361 
	`sig«l
(
SIGWINCH
, (
	`RETSIGTYPE
 (*)())
sig_wöch
);

362 
do_ªsize
 = 
TRUE
;

363 
SIGRETURN
;

364 
	}
}

367 #i‡
deföed
(
SIGALRM
Ë&& deföed(
HAVE_X11
Ë&& deföed(
WANT_X11
)

371 
RETSIGTYPE


372 
sig_Æ¨m
 
	$SIGDEFARG
(
sig¨g
)

375 
SIGRETURN
;

376 
	}
}

380 
	$mch_ªsize
()

382 
do_ªsize
 = 
TRUE
;

383 
	}
}

390 
RETSIGTYPE


391 
dóthå≠
 
	$SIGDEFARG
(
sig¨g
)

393 
íãªd
 = 0;

394 #ifde‡
SIGHASARG


395 
i
;

397 
i
 = 0; 
sig«l_öfo
[i].
dump
 != -1; i++)

399 i‡(
sig¨g
 =
sig«l_öfo
[
i
].
sig
)

401 i‡(
sig«l_öfo
[
i
].
dump
)

402 
c‹e_dump
 = 
TRUE
;

415 i‡(
íãªd
 == 2)

417 
	`may_c‹e_dump
();

418 
	`exô
(7);

420 i‡(
íãªd
)

422 
	`OUTSTR
("Vim: Double signal,Éxiting\n");

423 
	`Êushbuf
();

424 
	`gëout
(1);

426 ++
íãªd
;

428 
	`•rötf
((*)
IObuff
, "Vim: Caught %s %s\n",

429 #ifde‡
SIGHASARG


430 "dódly sig«l", 
sig«l_öfo
[
i
].
«me
);

435 
	`¥e£rve_exô
();

437 
SIGRETURN
;

438 
	}
}

446 
	$mch_su•íd
()

448 #ifde‡
USE_GUI


449 i‡(
gui
.
ö_u£
)

451 
	`gui_mch_ic⁄ify
();

455 #ifde‡
SIGTSTP


456 
	`Êushbuf
();

457 
	`£âmode
(0);

458 
	`Êushbuf
();

459 
	`kûl
(0, 
SIGTSTP
);

464 i‡(
ﬁdtôÀ
 !
fixedtôÀ
)

466 
	`vim_‰ì
(
ﬁdtôÀ
);

467 
ﬁdtôÀ
 = 
NULL
;

469 
	`£âmode
(1);

471 
	`MSG_OUTSTR
("new shell started\n");

472 ()
	`ˇŒ_shñl
(
NULL
, 
SHELL_COOKED
);

474 
√ed_check_time°amps
 = 
TRUE
;

475 
	}
}

478 
	$mch_wödöô
()

480 
Cﬁumns
 = 80;

481 
Rows
 = 24;

483 
	`Êushbuf
();

485 ()
	`mch_gë_wösize
();

487 #i‡
	`deföed
(
SIGWINCH
)

491 
	`sig«l
(
SIGWINCH
, (
	`RETSIGTYPE
 (*)())
sig_wöch
);

497 #ifde‡
SIGTSTP


498 
	`sig«l
(
SIGTSTP
, 
SIG_DFL
);

504 #ifde‡
SIGPIPE


505 
	`sig«l
(
SIGPIPE
, 
SIG_IGN
);

511 
	`ˇtch_sig«ls
(
dóthå≠
);

512 
	}
}

515 
	$ˇtch_sig«ls
(
func
)

516 
	`RETSIGTYPE
 (*
func
)();

518 
i
;

520 
i
 = 0; 
sig«l_öfo
[i].
dump
 != -1; i++)

521 
	`sig«l
(
sig«l_öfo
[
i
].
sig
, 
func
);

522 
	}
}

525 
	$ª£t_sig«ls
()

527 
	`ˇtch_sig«ls
(
SIG_DFL
);

528 
	}
}

534 
	$mch_check_wö
(
¨gc
, 
¨gv
)

535 
¨gc
;

536 **
¨gv
;

538 i‡(
	`ißây
(1))

539  
OK
;

540  
FAIL
;

541 
	}
}

544 
	$mch_check_öput
()

546 i‡(
	`ißây
(0))

547  
OK
;

548  
FAIL
;

549 
	}
}

551 #i‡
deföed
(
HAVE_X11
Ë&& deföed(
WANT_X11
)

556 
	$x_îr‹_h™dÀr
(
dpy
, 
îr‹_evít
)

557 
Di•œy
 *
dpy
;

558 
XEº‹Evít
 *
îr‹_evít
;

560 
	`XGëEº‹Text
(
dpy
, 
îr‹_evít
->
îr‹_code
, (*)
IObuff
, 
IOSIZE
);

561 
	`STRCAT
(
IObuff
, "\nVim: Got XÉrror\n");

564 
	`¥e£rve_exô
();

566 
	`¥ötf
(
IObuff
);

571 
	}
}

577 
	$x_îr‹_check
(
dpy
, 
îr‹_evít
)

578 
Di•œy
 *
dpy
;

579 
XEº‹Evít
 *
îr‹_evít
;

581 
gŸ_x_îr‹
 = 
TRUE
;

583 
	}
}

591 
	$gë_x11_wödis
()

593 *
wöid
;

594 
XTextPr›îty
 
ãxt_¥›
;

595 (*
ﬁd_h™dÀr
)();

596 
ªsu…
 = -1;

597 
x11_di•œy_›íed_hîe
 = 
FALSE
;

600 
	`XSëEº‹H™dÀr
(
x_îr‹_h™dÀr
);

602 #ifde‡
USE_GUI_X11


603 i‡(
gui
.
ö_u£
)

609 i‡(
x11_di•œy_›íed_hîe
 && 
x11_di•œy
 !
NULL
)

611 
	`XClo£Di•œy
(
x11_di•œy
);

612 
x11_di•œy
 = 
NULL
;

613 
x11_di•œy_›íed_hîe
 = 
FALSE
;

615  
	`gui_gë_x11_wödis
(&
x11_wödow
, &
x11_di•œy
);

619 i‡(
ªsu…
 != -1)

620  
ªsu…
;

628 i‡(
x11_wödow
 =0 && (
wöid
 = 
	`gëív
("WINDOWID")Ë!
NULL
)

629 
x11_wödow
 = (
Wödow
)
	`©ﬁ
(
wöid
);

630 i‡(
x11_wödow
 !0 && 
x11_di•œy
 =
NULL
)

632 #ifde‡
SIGALRM


633 
	`RETSIGTYPE
 (*
sig_ßve
)();

639 
sig_ßve
 = (
	`RETSIGTYPE
 (*)())
	`sig«l
(
SIGALRM
,

640 (
	`RETSIGTYPE
 (*)())
sig_Æ¨m
);

641 
	`Æ¨m
(2);

643 
x11_di•œy
 = 
	`XO≥nDi•œy
(
NULL
);

644 #ifde‡
SIGALRM


645 
	`Æ¨m
(0);

646 
	`sig«l
(
SIGALRM
, (
	`RETSIGTYPE
 (*)())
sig_ßve
);

648 i‡(
x11_di•œy
 !
NULL
)

657 
ﬁd_h™dÀr
 = 
	`XSëEº‹H™dÀr
(
x_îr‹_check
);

658 
gŸ_x_îr‹
 = 
FALSE
;

659 i‡(
	`XGëWMName
(
x11_di•œy
, 
x11_wödow
, &
ãxt_¥›
))

660 
	`XFªe
((*)
ãxt_¥›
.
vÆue
);

661 
	`XSync
(
x11_di•œy
, 
FÆ£
);

662 i‡(
gŸ_x_îr‹
)

665 
x11_wödow
 = 0;

666 
	`XClo£Di•œy
(
x11_di•œy
);

667 
x11_di•œy
 = 
NULL
;

670 
x11_di•œy_›íed_hîe
 = 
TRUE
;

671 
	`XSëEº‹H™dÀr
(
ﬁd_h™dÀr
);

674 i‡(
x11_wödow
 =0 || 
x11_di•œy
 =
NULL
)

675  (
ªsu…
 = 
FAIL
);

676  (
ªsu…
 = 
OK
);

677 
	}
}

683 
	$gë_x11_tôÀ
(
ã°_⁄ly
)

684 
ã°_⁄ly
;

686 
XTextPr›îty
 
ãxt_¥›
;

687 
ªtvÆ
 = 
FALSE
;

689 i‡(
	`gë_x11_wödis
(Ë=
OK
)

692 i‡(
	`XGëWMName
(
x11_di•œy
, 
x11_wödow
, &
ãxt_¥›
))

694 i‡(
ãxt_¥›
.
vÆue
 !
NULL
)

696 
ªtvÆ
 = 
TRUE
;

697 i‡(!
ã°_⁄ly
)

698 
ﬁdtôÀ
 = 
	`°rßve
((
ch¨_u
 *)
ãxt_¥›
.
vÆue
);

700 
	`XFªe
((*)
ãxt_¥›
.
vÆue
);

703 i‡(
ﬁdtôÀ
 =
NULL
 && !
ã°_⁄ly
)

704 
ﬁdtôÀ
 = 
fixedtôÀ
;

706  
ªtvÆ
;

707 
	}
}

714 
	$gë_x11_ic⁄
(
ã°_⁄ly
)

715 
ã°_⁄ly
;

717 
XTextPr›îty
 
ãxt_¥›
;

718 
ªtvÆ
 = 
FALSE
;

720 i‡(
	`gë_x11_wödis
(Ë=
OK
)

723 i‡(
	`XGëWMIc⁄Name
(
x11_di•œy
, 
x11_wödow
, &
ãxt_¥›
))

725 i‡(
ãxt_¥›
.
vÆue
 !
NULL
)

727 
ªtvÆ
 = 
TRUE
;

728 i‡(!
ã°_⁄ly
)

729 
ﬁdic⁄
 = 
	`°rßve
((
ch¨_u
 *)
ãxt_¥›
.
vÆue
);

731 
	`XFªe
((*)
ãxt_¥›
.
vÆue
);

736 i‡(
ﬁdic⁄
 =
NULL
 && !
ã°_⁄ly
)

738 i‡(
	`STRNCMP
(
ãrm_°rögs
[
KS_NAME
], "builtin_", 8) == 0)

739 
ﬁdic⁄
 = 
ãrm_°rögs
[
KS_NAME
] + 8;

741 
ﬁdic⁄
 = 
ãrm_°rögs
[
KS_NAME
];

744  
ªtvÆ
;

745 
	}
}

753 
	$£t_x11_tôÀ
(
tôÀ
)

754 
ch¨_u
 *
tôÀ
;

756 #i‡
XtS≥cifiˇti⁄Rñó£
 >= 4

757 
XTextPr›îty
 
ãxt_¥›
;

759 
ãxt_¥›
.
vÆue
 = 
tôÀ
;

760 
ãxt_¥›
.
nôems
 = 
	`STRLEN
(
tôÀ
);

761 
ãxt_¥›
.
ícodög
 = 
XA_STRING
;

762 
ãxt_¥›
.
f‹m©
 = 8;

763 
	`XSëWMName
(
x11_di•œy
, 
x11_wödow
, &
ãxt_¥›
);

765 
	`XSt‹eName
(
x11_di•œy
, 
x11_wödow
, (*)
tôÀ
);

767 
	`XFlush
(
x11_di•œy
);

768 
	}
}

776 
	$£t_x11_ic⁄
(
ic⁄
)

777 
ch¨_u
 *
ic⁄
;

779 #i‡
XtS≥cifiˇti⁄Rñó£
 >= 4

780 
XTextPr›îty
 
ãxt_¥›
;

782 
ãxt_¥›
.
vÆue
 = 
ic⁄
;

783 
ãxt_¥›
.
nôems
 = 
	`STRLEN
(
ic⁄
);

784 
ãxt_¥›
.
ícodög
 = 
XA_STRING
;

785 
ãxt_¥›
.
f‹m©
 = 8;

786 
	`XSëWMIc⁄Name
(
x11_di•œy
, 
x11_wödow
, &
ãxt_¥›
);

788 
	`XSëIc⁄Name
(
x11_di•œy
, 
x11_wödow
, (*)
ic⁄
);

790 
	`XFlush
(
x11_di•œy
);

791 
	}
}

796 
	$gë_x11_tôÀ
(
ã°_⁄ly
)

797 
ã°_⁄ly
;

799 i‡(!
ã°_⁄ly
)

800 
ﬁdtôÀ
 = 
fixedtôÀ
;

801  
FALSE
;

802 
	}
}

805 
	$gë_x11_ic⁄
(
ã°_⁄ly
)

806 
ã°_⁄ly
;

808 i‡(!
ã°_⁄ly
)

810 i‡(
	`STRNCMP
(
ãrm_°rögs
[
KS_NAME
], "builtin_", 8) == 0)

811 
ﬁdic⁄
 = 
ãrm_°rögs
[
KS_NAME
] + 8;

813 
ﬁdic⁄
 = 
ãrm_°rögs
[
KS_NAME
];

815  
FALSE
;

816 
	}
}

821 
	$mch_ˇn_ª°‹e_tôÀ
()

823 #ifde‡
USE_GUI


829 i‡(
gui
.
°¨tög
 || gui.
ö_u£
)

830  
TRUE
;

832  
	`gë_x11_tôÀ
(
TRUE
);

833 
	}
}

836 
	$mch_ˇn_ª°‹e_ic⁄
()

838 #ifde‡
USE_GUI


844 i‡(
gui
.
°¨tög
 || gui.
ö_u£
)

845  
TRUE
;

847  
	`gë_x11_ic⁄
(
TRUE
);

848 
	}
}

855 
	$mch_£âôÀ
(
tôÀ
, 
ic⁄
)

856 
ch¨_u
 *
tôÀ
;

857 
ch¨_u
 *
ic⁄
;

859 
ty≥
 = 0;

861 i‡(
ãrm_°rögs
[
KS_NAME
] =
NULL
)

863 i‡(
tôÀ
 =
NULL
 && 
ic⁄
 == NULL)

869 #i‡
	`deföed
(
HAVE_X11
Ë&& deföed(
WANT_X11
)

870 i‡(
	`gë_x11_wödis
(Ë=
OK
)

871 
ty≥
 = 1;

880 i‡(
	`is_xãrm
(
ãrm_°rögs
[
KS_NAME
]))

881 
ty≥
 = 2;

883 i‡(
	`is_úis_™si
(
ãrm_°rögs
[
KS_NAME
]))

884 
ty≥
 = 3;

886 i‡(
ty≥
)

888 i‡(
tôÀ
 !
NULL
)

890 i‡(
ﬁdtôÀ
 =
NULL
)

891 ()
	`gë_x11_tôÀ
(
FALSE
);

893 
ty≥
)

895 #i‡
	`deföed
(
HAVE_X11
Ë&& deföed(
WANT_X11
)

896 1: 
	`£t_x11_tôÀ
(
tôÀ
);

899 2: 
	`out°∫
((
ch¨_u
 *)"\033]2;");

900 
	`out°∫
(
tôÀ
);

901 
	`outch¨
(
	`Cål
('G'));

902 
	`Êushbuf
();

905 3: 
	`out°∫
((
ch¨_u
 *)"\033P1.y");

906 
	`out°∫
(
tôÀ
);

907 
	`out°∫
((
ch¨_u
 *)"\234");

908 
	`Êushbuf
();

913 i‡(
ic⁄
 !
NULL
)

915 i‡(
ﬁdic⁄
 =
NULL
)

916 
	`gë_x11_ic⁄
(
FALSE
);

918 
ty≥
)

920 #i‡
	`deföed
(
HAVE_X11
Ë&& deföed(
WANT_X11
)

921 1: 
	`£t_x11_ic⁄
(
ic⁄
);

924 2: 
	`out°∫
((
ch¨_u
 *)"\033]1;");

925 
	`out°∫
(
ic⁄
);

926 
	`outch¨
(
	`Cål
('G'));

927 
	`Êushbuf
();

930 3: 
	`out°∫
((
ch¨_u
 *)"\033P3.y");

931 
	`out°∫
(
ic⁄
);

932 
	`out°∫
((
ch¨_u
 *)"\234");

933 
	`Êushbuf
();

938 
	}
}

941 
	$is_xãrm
(
«me
)

942 
ch¨_u
 *
«me
;

944 i‡(
«me
 =
NULL
)

945  
FALSE
;

946  (
	`vim_°∫icmp
(
«me
, (
ch¨_u
 *)"xãrm", (
size_t
)5) == 0 ||

947 
	`STRCMP
(
«me
, "builtin_xterm") == 0);

948 
	}
}

951 
	$is_úis_™si
(
«me
)

952 
ch¨_u
 *
«me
;

954 i‡(
«me
 =
NULL
)

955  
FALSE
;

956  (
	`vim_°∫icmp
(
«me
, (
ch¨_u
 *)"úis-™si", (
size_t
)9) == 0 ||

957 
	`STRCMP
(
«me
, "builtin_iris-ansi") == 0);

958 
	}
}

965 
	$is_Á°ãrm
(
«me
)

966 
ch¨_u
 *
«me
;

968 i‡(
«me
 =
NULL
)

969  
FALSE
;

970 i‡(
	`is_xãrm
(
«me
Ë|| 
	`is_úis_™si
(name))

971  
TRUE
;

972  (
	`vim_°∫icmp
(
«me
, (
ch¨_u
 *)"h±îm", (
size_t
)6) == 0 ||

973 
	`vim_°∫icmp
(
«me
, (
ch¨_u
 *)"sun-cmd", (
size_t
)7) == 0 ||

974 
	`vim_°∫icmp
(
«me
, (
ch¨_u
 *)"s¸ìn", (
size_t
)6) == 0 ||

975 
	`vim_°∫icmp
(
«me
, (
ch¨_u
 *)"dâîm", (
size_t
)6) == 0);

976 
	}
}

986 
	$mch_ª°‹e_tôÀ
(
which
)

987 
which
;

989 
	`mch_£âôÀ
((
which
 & 1Ë? 
ﬁdtôÀ
 : 
NULL
, (which & 2Ë? 
ﬁdic⁄
 : NULL);

990 
	}
}

997 
	$mch_gë_u£r_«me
(
s
, 
Àn
)

998 
ch¨_u
 *
s
;

999 
Àn
;

1001 #i‡
	`deföed
(
HAVE_PWD_H
Ë&& deföed(
HAVE_GETPWUID
)

1002 
∑sswd
 *
pw
;

1004 
uid_t
 
uid
;

1006 
uid
 = 
	`gëuid
();

1007 #i‡
	`deföed
(
HAVE_PWD_H
Ë&& deföed(
HAVE_GETPWUID
)

1008 i‡((
pw
 = 
	`gëpwuid
(
uid
)Ë!
NULL
 &&

1009 
pw
->
pw_«me
 !
NULL
 && *pw->pw_«mê!
NUL
)

1011 
	`STRNCPY
(
s
, 
pw
->
pw_«me
, 
Àn
);

1012  
OK
;

1015 
	`•rötf
((*)
s
, "%d", ()
uid
);

1016  
FAIL
;

1017 
	}
}

1023 #ifde‡
HAVE_SYS_UTSNAME_H


1025 
	$mch_gë_ho°_«me
(
s
, 
Àn
)

1026 
ch¨_u
 *
s
;

1027 
Àn
;

1029 
ut¢ame
 
vut¢ame
;

1031 
	`u«me
(&
vut¢ame
);

1032 
	`STRNCPY
(
s
, 
vut¢ame
.
nodíame
, 
Àn
);

1033 
	}
}

1036 #ifde‡
HAVE_SYS_SYSTEMINFO_H


1037 
	#gëho°«me
(
«m
, 
Àn
Ë
	`sysöfo
(
SI_HOSTNAME
,Çam,Üí)

	)

1041 
	$mch_gë_ho°_«me
(
s
, 
Àn
)

1042 
ch¨_u
 *
s
;

1043 
Àn
;

1045 
	`gëho°«me
((*)
s
, 
Àn
);

1046 
	}
}

1053 
	$mch_gë_pid
()

1055  ()
	`gëpid
();

1056 
	}
}

1058 #i‡!
deföed
(
HAVE_STRERROR
Ë&& deföed(
USE_GETCWD
)

1059 *
°ªº‹
 
__ARGS
(());

1062 
	$°ªº‹
(
îr
)

1063 
îr
;

1065 
sys_√º
;

1066 *
sys_îæi°
[];

1067 
î
[20];

1069 i‡(
îr
 > 0 &&Éº < 
sys_√º
)

1070  (
sys_îæi°
[
îr
]);

1071 
	`•rötf
(
î
, "Eº‹ %d", 
îr
);

1072  
î
;

1073 
	}
}

1081 
	$mch_dú«me
(
buf
, 
Àn
)

1082 
ch¨_u
 *
buf
;

1083 
Àn
;

1085 #i‡
	`deföed
(
USE_GETCWD
)

1086 i‡(
	`gëcwd
((*)
buf
, 
Àn
Ë=
NULL
)

1088 
	`STRCPY
(
buf
, 
	`°ªº‹
(
î∫o
));

1089  
FAIL
;

1091  
OK
;

1093  (
	`gëwd
((*)
buf
Ë!
NULL
 ? 
OK
 : 
FAIL
);

1095 
	}
}

1097 #ifde‡
__EMX__


1102 
	$¶ash_adju°
(
p
)

1103 
ch¨_u
 *
p
;

1105 *
p
)

1107 i‡(*
p
 == '/')

1108 *
p
 = '\\';

1109 ++
p
;

1111 
	}
}

1120 
	$FuŒName
(
‚ame
, 
buf
, 
Àn
, 
f‹˚
)

1121 
ch¨_u
 *
‚ame
, *
buf
;

1122 
Àn
;

1123 
f‹˚
;

1125 
l
;

1126 #ifde‡
OS2


1127 
⁄ly_drive
;

1129 #ifde‡
HAVE_FCHDIR


1130 
fd
 = -1;

1131 
d⁄t_fchdú
 = 
FALSE
;

1133 
ch¨_u
 
ﬁddú
[
MAXPATHL
];

1134 
ch¨_u
 *
p
;

1135 
ch¨_u
 
c
;

1136 
ªtvÆ
 = 
OK
;

1138 i‡(
‚ame
 =
NULL
)

1140 *
buf
 = 
NUL
;

1141  
FAIL
;

1144 *
buf
 = 0;

1145 i‡(
f‹˚
 || !
	`isFuŒName
(
‚ame
))

1152 #ifde‡
OS2


1153 
⁄ly_drive
 = 0;

1154 i‡(((
p
 = 
	`vim_°ºchr
(
‚ame
, '/')Ë!
NULL
) ||

1155 ((
p
 = 
	`vim_°ºchr
(
‚ame
, '\\')Ë!
NULL
) ||

1156 (((
p
 = 
	`vim_°rchr
(
‚ame
, ':')Ë!
NULL
Ë&& ++
⁄ly_drive
))

1158 i‡((
p
 = 
	`vim_°ºchr
(
‚ame
, '/')Ë!
NULL
)

1161 #ifde‡
HAVE_FCHDIR


1167 i‡(!
d⁄t_fchdú
)

1169 
fd
 = 
	`›í
(".", 
O_RDONLY
 | 
O_EXTRA
);

1170 i‡(
fd
 >0 && 
	`fchdú
(fd) < 0)

1172 
	`˛o£
(
fd
);

1173 
fd
 = -1;

1174 
d⁄t_fchdú
 = 
TRUE
;

1179 #ifde‡
HAVE_FCHDIR


1180 
fd
 < 0 &&

1182 
	`mch_dú«me
(
ﬁddú
, 
MAXPATHL
Ë=
FAIL
)

1184 
p
 = 
NULL
;

1185 
ªtvÆ
 = 
FAIL
;

1189 #ifde‡
OS2


1195 i‡(
⁄ly_drive
)

1196 
p
++;

1198 
c
 = *
p
;

1199 *
p
 = 
NUL
;

1200 i‡(
	`vim_chdú
((*)
‚ame
))

1201 
ªtvÆ
 = 
FAIL
;

1203 
‚ame
 = 
p
 + 1;

1204 *
p
 = 
c
;

1205 #ifde‡
OS2


1206 i‡(
⁄ly_drive
)

1208 
p
--;

1209 i‡(
ªtvÆ
 !
FAIL
)

1210 
‚ame
--;

1215 i‡(
	`mch_dú«me
(
buf
, 
Àn
Ë=
FAIL
)

1217 
ªtvÆ
 = 
FAIL
;

1218 *
buf
 = 
NUL
;

1220 
l
 = 
	`STRLEN
(
buf
);

1221 i‡(
l
 && 
buf
[l - 1] != '/')

1222 
	`STRCAT
(
buf
, "/");

1223 i‡(
p
 !
NULL
)

1225 #ifde‡
HAVE_FCHDIR


1226 i‡(
fd
 >= 0)

1228 
	`fchdú
(
fd
);

1229 
	`˛o£
(
fd
);

1233 
	`vim_chdú
((*)
ﬁddú
);

1236 
	`STRCAT
(
buf
, 
‚ame
);

1237 #ifde‡
OS2


1238 
	`¶ash_adju°
(
buf
);

1240  
ªtvÆ
;

1241 
	}
}

1247 
	$isFuŒName
(
‚ame
)

1248 
ch¨_u
 *
‚ame
;

1250 #ifde‡
__EMX__


1251  
	`_‚ißbs
(
‚ame
);

1253  (*
‚ame
 == '/' || *fname == '~');

1255 
	}
}

1261 
	$gë≥rm
(
«me
)

1262 
ch¨_u
 *
«me
;

1264 
°©
 
°©b
;

1266 i‡(
	`°©
((*)
«me
, &
°©b
))

1268  
°©b
.
°_mode
;

1269 
	}
}

1277 
	$£çîm
(
«me
, 
≥rm
)

1278 
ch¨_u
 *
«me
;

1279 
≥rm
;

1281  (
	`chmod
((*)
«me
, (
mode_t
)
≥rm
Ë=0 ? 
OK
 : 
FAIL
);

1282 
	}
}

1290 
	$mch_isdú
(
«me
)

1291 
ch¨_u
 *
«me
;

1293 
°©
 
°©b
;

1295 i‡(
	`°©
((*)
«me
, &
°©b
))

1296  
FALSE
;

1297 #ifde‡
_POSIX_SOURCE


1298  (
	`S_ISDIR
(
°©b
.
°_mode
Ë? 
TRUE
 : 
FALSE
);

1300  ((
°©b
.
°_mode
 & 
S_IFMT
Ë=
S_IFDIR
 ? 
TRUE
 : 
FALSE
);

1302 
	}
}

1305 
	$mch_wödexô
(
r
)

1306 
r
;

1308 
	`£âmode
(0);

1309 
exôög
 = 
TRUE
;

1310 
	`mch_£âôÀ
(
ﬁdtôÀ
, 
ﬁdic⁄
);

1311 
	`°›ãrmˇp
();

1312 
	`Êushbuf
();

1313 
	`ml_˛o£_Æl
(
TRUE
);

1314 
	`may_c‹e_dump
();

1315 
	`exô
(
r
);

1316 
	}
}

1319 
	$may_c‹e_dump
()

1321 #ifde‡
SIGQUIT


1322 
	`sig«l
(
SIGQUIT
, 
SIG_DFL
);

1323 i‡(
c‹e_dump
)

1324 
	`kûl
(
	`gëpid
(), 
SIGQUIT
);

1326 
	}
}

1328 
	gcuº_tmode
 = 0;

1331 
	$mch_£âmode
(
øw
)

1332 
øw
;

1334 
fú°
 = 
TRUE
;

1337 #i‡
	`deföed
(
ECHOE
Ë&& deföed(
ICANON
Ë&& (deföed(
HAVE_TERMIO_H
Ë|| deföed(
HAVE_TERMIOS_H
)Ë&& !deföed(
__NeXT__
)

1339 #ifde‡
HAVE_TERMIOS_H


1340 
ãrmios
 
tﬁd
;

1341 
ãrmios
 
äew
;

1343 
ãrmio
 
tﬁd
;

1344 
ãrmio
 
äew
;

1347 #ifde‡
TIOCLGET


1348 
ây_loˇl
;

1351 i‡(
øw
)

1353 i‡(
fú°
)

1355 
fú°
 = 
FALSE
;

1356 #ifde‡
TIOCLGET


1357 
	`io˘l
(0, 
TIOCLGET
, &
ây_loˇl
);

1359 #i‡
	`deföed
(
HAVE_TERMIOS_H
)

1360 
	`tcgë©å
(0, &
tﬁd
);

1362 
	`io˘l
(0, 
TCGETA
, &
tﬁd
);

1365 
äew
 = 
tﬁd
;

1369 
äew
.
c_iÊag
 &~
ICRNL
;

1370 
äew
.
c_lÊag
 &~(
ICANON
 | 
ECHO
 | 
ISIG
 | 
ECHOE


1371 #i‡
	`deföed
(
IEXTEN
Ë&& !deföed(
MINT
)

1372 | 
IEXTEN


1376 
äew
.
c_cc
[
VMIN
] = 1;

1377 
äew
.
c_cc
[
VTIME
] = 0;

1378 #i‡
	`deföed
(
HAVE_TERMIOS_H
)

1379 
	`tc£èâr
(0, 
TCSANOW
, &
äew
);

1381 
	`io˘l
(0, 
TCSETA
, &
äew
);

1386 #i‡
	`deföed
(
HAVE_TERMIOS_H
)

1387 
	`tc£èâr
(0, 
TCSANOW
, &
tﬁd
);

1389 
	`io˘l
(0, 
TCSETA
, &
tﬁd
);

1391 #ifde‡
TIOCLGET


1392 
	`io˘l
(0, 
TIOCLSET
, &
ây_loˇl
);

1396 #i‚de‡
TIOCSETN


1397 
	#TIOCSETN
 
TIOCSETP


	)

1400 
sgâyb
 
âybﬁd
;

1401 
sgâyb
 
âyb√w
;

1403 i‡(
øw
)

1405 i‡(
fú°
)

1407 
fú°
 = 
FALSE
;

1408 
	`io˘l
(0, 
TIOCGETP
, &
âybﬁd
);

1410 
âyb√w
 = 
âybﬁd
;

1411 
âyb√w
.
sg_Êags
 &~(
CRMOD
 | 
ECHO
);

1412 
âyb√w
.
sg_Êags
 |
RAW
;

1413 
	`io˘l
(0, 
TIOCSETN
, &
âyb√w
);

1416 
	`io˘l
(0, 
TIOCSETN
, &
âybﬁd
);

1418 
cuº_tmode
 = 
øw
;

1419 
	}
}

1431 
	$gë_°ty
()

1433 
ch¨_u
 
buf
[2];

1434 
ch¨_u
 *
p
;

1437 #i‡
	`deföed
(
ECHOE
Ë&& deföed(
ICANON
Ë&& (deföed(
HAVE_TERMIO_H
Ë|| deföed(
HAVE_TERMIOS_H
)Ë&& !deföed(
__NeXT__
)

1439 #ifde‡
HAVE_TERMIOS_H


1440 
ãrmios
 
keys
;

1442 
ãrmio
 
keys
;

1445 #i‡
	`deföed
(
HAVE_TERMIOS_H
)

1446 i‡(
	`tcgë©å
(0, &
keys
) != -1)

1448 i‡(
	`io˘l
(0, 
TCGETA
, &
keys
) != -1)

1451 
buf
[0] = 
keys
.
c_cc
[
VERASE
];

1454 
sgâyb
 
keys
;

1456 i‡(
	`io˘l
(0, 
TIOCGETP
, &
keys
) != -1)

1458 
buf
[0] = 
keys
.
sg_îa£
;

1460 
buf
[1] = 
NUL
;

1461 
	`add_ãrmcode
((
ch¨_u
 *)"kb", 
buf
);

1466 
p
 = 
	`föd_ãrmcode
((
ch¨_u
 *)"kD");

1467 i‡(
p
 !
NULL
 &&Ö[0] =
buf
[0] &&Ö[1] == buf[1])

1468 
	`do_fixdñ
();

1471 
	}
}

1475 #ifde‡
USE_MOUSE


1480 
	$mch_£tmou£
(
⁄
)

1481 
⁄
;

1483 
is⁄
 = 
FALSE
;

1485 i‡(
⁄
 =
is⁄
)

1488 i‡(
	`is_xãrm
(
ãrm_°rögs
[
KS_NAME
]))

1490 i‡(
⁄
)

1491 
	`out°∫
((
ch¨_u
 *)"\033[?1000h");

1493 
	`out°∫
((
ch¨_u
 *)"\033[?1000l");

1495 
is⁄
 = 
⁄
;

1496 
	}
}

1503 
	$mch_s¸ìnmode
(
¨g
)

1504 
ch¨_u
 *
¨g
;

1506 
	`EMSG
("Screen mode settingÇot supported");

1507  
FAIL
;

1508 
	}
}

1518 
	$mch_gë_wösize
()

1520 
ﬁd_Rows
 = 
Rows
;

1521 
ﬁd_Cﬁumns
 = 
Cﬁumns
;

1522 
ch¨_u
 *
p
;

1524 #ifde‡
USE_GUI


1525 i‡(
gui
.
ö_u£
)

1526  
	`gui_mch_gë_wösize
();

1529 
Cﬁumns
 = 0;

1530 
Rows
 = 0;

1535 #ifde‡
__EMX__


1537 
s
[2];

1538 
	`_s¸size
(
s
);

1539 
Cﬁumns
 = 
s
[0];

1540 
Rows
 = 
s
[1];

1550 #ifde‡
TIOCGWINSZ


1552 
wösize
 
ws
;

1554 i‡(
	`io˘l
(0, 
TIOCGWINSZ
, &
ws
) == 0)

1556 
Cﬁumns
 = 
ws
.
ws_cﬁ
;

1557 
Rows
 = 
ws
.
ws_row
;

1561 #ifde‡
TIOCGSIZE


1563 
âysize
 
ts
;

1565 i‡(
	`io˘l
(0, 
TIOCGSIZE
, &
ts
) == 0)

1567 
Cﬁumns
 = 
ts
.
ts_cﬁs
;

1568 
Rows
 = 
ts
.
ts_löes
;

1577 i‡(
Cﬁumns
 =0 || 
Rows
 == 0)

1579 i‡((
p
 = (
ch¨_u
 *)
	`gëív
("LINES")))

1580 
Rows
 = 
	`©oi
((*)
p
);

1581 i‡((
p
 = (
ch¨_u
 *)
	`gëív
("COLUMNS")))

1582 
Cﬁumns
 = 
	`©oi
((*)
p
);

1585 #ifde‡
HAVE_TGETENT


1589 i‡(
Cﬁumns
 =0 || 
Rows
 == 0)

1590 
	`gëlöecﬁ
();

1596 i‡(
Cﬁumns
 <0 || 
Rows
 <= 0)

1598 
Cﬁumns
 = 
ﬁd_Cﬁumns
;

1599 
Rows
 = 
ﬁd_Rows
;

1600  
FAIL
;

1603 
	`check_wösize
();

1606  
OK
;

1607 
	}
}

1610 
	$mch_£t_wösize
()

1612 
ch¨_u
 
°rög
[10];

1614 #ifde‡
USE_GUI


1615 i‡(
gui
.
ö_u£
)

1617 
	`gui_mch_£t_wösize
();

1623 i‡(
	`is_úis_™si
(
ãrm_°rögs
[
KS_NAME
]))

1625 
	`•rötf
((*)
°rög
, "\033[203;%ld;%ld/y", 
Rows
, 
Cﬁumns
);

1626 
	`out°∫
(
°rög
);

1627 
	`Êushbuf
();

1628 
	`s¸ìn_°¨t
();

1630 
	}
}

1633 
	$ˇŒ_shñl
(
cmd
, 
›ti⁄s
)

1634 
ch¨_u
 *
cmd
;

1635 
›ti⁄s
;

1639 #ifde‡
USE_SYSTEM


1641 
x
;

1642 
ch¨_u
 
√wcmd
[1024];

1644 
	`Êushbuf
();

1646 i‡(
›ti⁄s
 & 
SHELL_COOKED
)

1647 
	`£âmode
(0);

1649 i‡(
cmd
 =
NULL
)

1650 
x
 = 
	`sy°em
(
p_sh
);

1653 #ifde‡
__EMX__


1654 
	`•rötf
(
√wcmd
, "%†%†/¯\"%s\"", 
p_sh
,

1656 
	`•rötf
(
√wcmd
, "%†%†-¯\"%s\"", 
p_sh
,

1658 
exåa_shñl_¨g
 =
NULL
 ? "" : (*)extra_shell_arg,

1659 (*)
cmd
);

1660 
x
 = 
	`sy°em
(
√wcmd
);

1662 i‡(
x
 == 127)

1664 #ifde‡
__EMX__


1665 
	`MSG_OUTSTR
("\nCannotÉxecute shell cmd.exe\n");

1667 
	`MSG_OUTSTR
("\nCannotÉxecute shell sh\n");

1670 i‡(
x
 && !
ex∑nd_öãø˘ivñy
)

1672 
	`msg_outch¨
('\n');

1673 
	`msg_ouäum
(()
x
);

1674 
	`MSG_OUTSTR
("Ñeturned\n");

1677 
	`£âmode
(1);

1678 
	`ª£âôÀ
();

1679  (
x
 ? 
FAIL
 : 
OK
);

1683 
	#EXEC_FAILED
 122

	)

1686 
ch¨_u
 
√wcmd
[1024];

1687 
pid
;

1688 #ifde‡
HAVE_UNION_WAIT


1689 
waô
 
°©us
;

1691 
°©us
 = -1;

1693 
ªtvÆ
 = 
FAIL
;

1694 **
¨gv
 = 
NULL
;

1695 
¨gc
;

1696 
i
;

1697 
ch¨_u
 *
p
;

1698 
öquŸe
;

1699 #ifde‡
USE_GUI


1700 
±y_ma°î_fd
 = -1;

1701 
±y_¶ave_fd
 = -1;

1702 *
ây_«me
;

1703 
fd_toshñl
[2];

1704 
fd_‰omshñl
[2];

1705 
pùe_îr‹
 = 
FALSE
;

1706 #ifde‡
HAVE_SETENV


1707 
ívbuf
[50];

1709 
ívbuf_Rows
[20];

1710 
ívbuf_Cﬁumns
[20];

1713 
did_£âmode
 = 
FALSE
;

1715 
	`Êushbuf
();

1716 i‡(
›ti⁄s
 & 
SHELL_COOKED
)

1717 
	`£âmode
(0);

1723 
	`STRCPY
(
√wcmd
, 
p_sh
);

1724 
i
 = 0; i < 2; ++i)

1726 
p
 = 
√wcmd
;

1727 
öquŸe
 = 
FALSE
;

1728 
¨gc
 = 0;

1731 i‡(
i
 == 1)

1732 
¨gv
[
¨gc
] = (*)
p
;

1733 ++
¨gc
;

1734 *
p
 && (
öquŸe
 || (*∞!' ' && *∞!
TAB
)))

1736 i‡(*
p
 == '"')

1737 
öquŸe
 = !inquote;

1738 ++
p
;

1740 i‡(*
p
 =
NUL
)

1742 i‡(
i
 == 1)

1743 *
p
++ = 
NUL
;

1744 
p
 = 
	`skùwhôe
(p);

1746 i‡(
i
 == 0)

1748 
¨gv
 = (**)
	`Æloc
(()((
¨gc
 + 4) * (*)));

1749 i‡(
¨gv
 =
NULL
)

1750 
îr‹
;

1753 i‡(
cmd
 !
NULL
)

1755 i‡(
exåa_shñl_¨g
 !
NULL
)

1756 
¨gv
[
¨gc
++] = (*)
exåa_shñl_¨g
;

1757 
¨gv
[
¨gc
++] = "-c";

1758 
¨gv
[
¨gc
++] = (*)
cmd
;

1760 
¨gv
[
¨gc
] = 
NULL
;

1762 #ifde‡
towî32


1767 
	`waô
(&
°©us
Ë!0 && 
î∫o
 !
ECHILD
)

1771 #ifde‡
USE_GUI


1777 i‡(
gui
.
ö_u£
 && 
show_shñl_mess
)

1784 i‡(
p_guùty
)

1786 
±y_ma°î_fd
 = 
	`O≥nPTY
(&
ây_«me
);

1787 i‡(
±y_ma°î_fd
 >0 && ((
±y_¶ave_fd
 =

1788 
	`›í
(
ây_«me
, 
O_RDWR
 | 
O_EXTRA
)) < 0))

1790 
	`˛o£
(
±y_ma°î_fd
);

1791 
±y_ma°î_fd
 = -1;

1797 i‡(
±y_ma°î_fd
 < 0)

1799 
pùe_îr‹
 = (
	`pùe
(
fd_toshñl
) < 0);

1800 i‡(!
pùe_îr‹
)

1802 
pùe_îr‹
 = (
	`pùe
(
fd_‰omshñl
) < 0);

1803 i‡(
pùe_îr‹
)

1805 
	`˛o£
(
fd_toshñl
[0]);

1806 
	`˛o£
(
fd_toshñl
[1]);

1809 i‡(
pùe_îr‹
)

1811 
	`MSG_OUTSTR
("\nCannot createÖipes\n");

1812 
	`Êushbuf
();

1817 i‡(!
pùe_îr‹
)

1821 i‡((
pid
 = 
	`f‹k
()) == -1)

1823 
	`MSG_OUTSTR
("\nCannot fork\n");

1824 #ifde‡
USE_GUI


1825 i‡(
gui
.
ö_u£
 && 
show_shñl_mess
)

1827 i‡(
±y_ma°î_fd
 >= 0)

1829 
	`˛o£
(
±y_ma°î_fd
);

1830 
	`˛o£
(
±y_¶ave_fd
);

1834 
	`˛o£
(
fd_toshñl
[0]);

1835 
	`˛o£
(
fd_toshñl
[1]);

1836 
	`˛o£
(
fd_‰omshñl
[0]);

1837 
	`˛o£
(
fd_‰omshñl
[1]);

1842 i‡(
pid
 == 0)

1844 
	`ª£t_sig«ls
();

1845 i‡(!
show_shñl_mess
)

1847 
fd
;

1855 
fd
 = 
	`›í
("/dev/nuŒ", 
O_WRONLY
 | 
O_EXTRA
);

1856 
	`f˛o£
(
°dout
);

1857 
	`f˛o£
(
°dîr
);

1868 i‡(
fd
 >= 0)

1871 
	`dup
(
fd
);

1874 
	`dup
(
fd
);

1877 
	`˛o£
(
fd
);

1880 #ifde‡
USE_GUI


1881 i‡(
gui
.
ö_u£
)

1884 #ifde‡
HAVE_SETSID


1885 ()
	`£tsid
();

1887 #ifde‡
TIOCSCTTY


1890 
	`io˘l
(
±y_¶ave_fd
, 
TIOCSCTTY
, (*)
NULL
);

1893 #ifde‡
HAVE_SETENV


1894 
	`£ãnv
("TERM", "dumb", 1);

1895 
	`•rötf
((*)
ívbuf
, "%ld", 
Rows
);

1896 
	`£ãnv
("ROWS", (*)
ívbuf
, 1);

1897 
	`•rötf
((*)
ívbuf
, "%ld", 
Cﬁumns
);

1898 
	`£ãnv
("COLUMNS", (*)
ívbuf
, 1);

1904 
	`puãnv
("TERM=dumb");

1905 
	`•rötf
(
ívbuf_Rows
, "ROWS=%ld", 
Rows
);

1906 
	`puãnv
(
ívbuf_Rows
);

1907 
	`•rötf
(
ívbuf_Cﬁumns
, "COLUMNS=%ld", 
Cﬁumns
);

1908 
	`puãnv
(
ívbuf_Cﬁumns
);

1911 i‡(
±y_ma°î_fd
 >= 0)

1913 
	`˛o£
(
±y_ma°î_fd
);

1916 
	`˛o£
(0);

1917 
	`dup
(
±y_¶ave_fd
);

1918 
	`˛o£
(1);

1919 
	`dup
(
±y_¶ave_fd
);

1920 
	`˛o£
(2);

1921 
	`dup
(
±y_¶ave_fd
);

1923 
	`˛o£
(
±y_¶ave_fd
);

1928 
	`˛o£
(
fd_toshñl
[1]);

1929 
	`˛o£
(0);

1930 
	`dup
(
fd_toshñl
[0]);

1931 
	`˛o£
(
fd_toshñl
[0]);

1934 
	`˛o£
(
fd_‰omshñl
[0]);

1935 
	`˛o£
(1);

1936 
	`dup
(
fd_‰omshñl
[1]);

1937 
	`˛o£
(
fd_‰omshñl
[1]);

1940 
	`˛o£
(2);

1941 
	`dup
(1);

1950 
	`execvp
(
¨gv
[0],árgv);

1951 
	`exô
(
EXEC_FAILED
);

1958 
	`ˇtch_sig«ls
(
SIG_IGN
);

1960 #ifde‡
USE_GUI


1965 i‡(
gui
.
ö_u£
 && 
show_shñl_mess
)

1967 
	#BUFLEN
 100

	)

1968 
ch¨_u
 
buf„r
[
BUFLEN
];

1969 
Àn
;

1970 
p_m‹e_ßve
;

1971 
ªad_cou¡
;

1972 
c
;

1973 
toshñl_fd
;

1974 
‰omshñl_fd
;

1976 i‡(
±y_ma°î_fd
 >= 0)

1978 
	`˛o£
(
±y_¶ave_fd
);

1979 
‰omshñl_fd
 = 
±y_ma°î_fd
;

1980 
toshñl_fd
 = 
	`dup
(
±y_ma°î_fd
);

1984 
	`˛o£
(
fd_toshñl
[0]);

1985 
	`˛o£
(
fd_‰omshñl
[1]);

1986 
toshñl_fd
 = 
fd_toshñl
[1];

1987 
‰omshñl_fd
 = 
fd_‰omshñl
[0];

2006 
p_m‹e_ßve
 = 
p_m‹e
;

2007 
p_m‹e
 = 
FALSE
;

2015 i‡(!(
›ti⁄s
 & 
SHELL_EXPAND
) &&

2016 (
Àn
 = 
	`mch_öch¨
(
buf„r
, 
BUFLEN
 - 1, 10) != 0))

2023 i‡(
Àn
 =1 && (
±y_ma°î_fd
 < 0 || 
cmd
 !
NULL
))

2025 #ifde‡
SIGINT


2026 i‡(
buf„r
[0] =
	`Cål
('C'))

2030 
	`kûl
(
pid
, 
SIGINT
);

2031 #ifde‡
HAVE_KILLPG


2032 
	`kûÕg
(0, 
SIGINT
);

2036 i‡(
±y_ma°î_fd
 < 0 && 
toshñl_fd
 >= 0 &&

2037 
buf„r
[0] =
	`Cål
('D'))

2039 
	`˛o£
(
toshñl_fd
);

2040 
toshñl_fd
 = -1;

2045 
i
 = 0; i < 
Àn
; ++i)

2047 i‡(
buf„r
[
i
] =
CSI
 && 
Àn
 - i > 2)

2049 
c
 = 
	`TERMCAP2KEY
(
buf„r
[
i
 + 1], buffer[i + 2]);

2050 i‡(
c
 =
K_DEL
 || c =
K_BS
)

2052 
	`vim_memmove
(
buf„r
 + 
i
 + 1, buffer + i + 3,

2053 (
size_t
)(
Àn
 - 
i
 - 2));

2054 i‡(
c
 =
K_DEL
)

2055 
buf„r
[
i
] = 
DEL
;

2057 
buf„r
[
i
] = 
	`Cål
('H');

2058 
Àn
 -= 2;

2061 i‡(
buf„r
[
i
] == '\r')

2062 
buf„r
[
i
] = '\n';

2069 i‡(
±y_ma°î_fd
 < 0)

2071 
i
 = 0; i < 
Àn
; ++i)

2072 i‡(
buf„r
[
i
] == '\n' || buffer[i] == '\b')

2073 
	`msg_outch¨
(
buf„r
[
i
]);

2075 
	`msg_ouâøns_Àn
(
buf„r
 + 
i
, 1);

2076 
	`wödgŸo
(
msg_row
, 
msg_cﬁ
);

2077 
	`Êushbuf
();

2084 i‡(
toshñl_fd
 >= 0)

2085 
	`wrôe
(
toshñl_fd
, (*)
buf„r
, (
size_t
)
Àn
);

2095 
ªad_cou¡
 = 0;Ñead_count < 10 &&

2096 
	`RólWaôF‹Ch¨
(
‰omshñl_fd
, 10); ++
ªad_cou¡
)

2098 
Àn
 = 
	`ªad
(
‰omshñl_fd
, (*)
buf„r
,

2099 (
size_t
)
BUFLEN
);

2100 i‡(
Àn
 == 0)

2101 
föished
;

2102 
buf„r
[
Àn
] = 
NUL
;

2103 
	`msg_out°r
(
buf„r
);

2104 
	`wödgŸo
(
msg_row
, 
msg_cﬁ
);

2105 
	`curs‹_⁄
();

2106 
	`Êushbuf
();

2113 i‡(
ªad_cou¡
 == 0 &&

2114 #ifde‡
__NeXT__


2115 
	`waô4
(
pid
, &
°©us
, 
WNOHANG
, (
rußge
 *) 0) &&

2117 
	`waôpid
(
pid
, &
°©us
, 
WNOHANG
) &&

2119 
	`WIFEXITED
(
°©us
))

2122 
föished
:

2123 
p_m‹e
 = 
p_m‹e_ßve
;

2124 i‡(
toshñl_fd
 >= 0)

2125 
	`˛o£
(
toshñl_fd
);

2126 
	`˛o£
(
‰omshñl_fd
);

2129 
	`waô
(&
°©us
);

2130 
	`£âmode
(1);

2132 
did_£âmode
 = 
TRUE
;

2133 
	`ˇtch_sig«ls
(
dóthå≠
);

2134 i‡(
	`WIFEXITED
(
°©us
))

2136 
i
 = 
	`WEXITSTATUS
(
°©us
);

2137 i‡(
i
)

2139 i‡(
i
 =
EXEC_FAILED
)

2141 
	`MSG_OUTSTR
("\nCannotÉxecute shell ");

2142 
	`msg_ouâøns
(
p_sh
);

2143 
	`msg_outch¨
('\n');

2145 i‡(!
ex∑nd_öãø˘ivñy
)

2147 
	`msg_outch¨
('\n');

2148 
	`msg_ouäum
(()
i
);

2149 
	`MSG_OUTSTR
("Ñeturned\n");

2153 
ªtvÆ
 = 
OK
;

2156 
	`MSG_OUTSTR
("\nCommandÅerminated\n");

2159 
	`vim_‰ì
(
¨gv
);

2161 
îr‹
:

2162 i‡(!
did_£âmode
)

2163 
	`£âmode
(1);

2164 
	`ª£âôÀ
();

2166  
ªtvÆ
;

2169 
	}
}

2182 
	#INBUFLEN
 250

	)

2184 
ch¨_u
 
	göbuf
[
INBUFLEN
 + 
MAX_KEY_CODE_LEN
];

2185 
	göbufcou¡
 = 0;

2197 
	$is_öput_buf_fuŒ
()

2199  (
öbufcou¡
 >
INBUFLEN
);

2200 
	}
}

2203 
	$is_öput_buf_em±y
()

2205  (
öbufcou¡
 == 0);

2206 
	}
}

2210 
	$add_to_öput_buf
(
s
, 
Àn
)

2211 
ch¨_u
 *
s
;

2212 
Àn
;

2214 i‡(
öbufcou¡
 + 
Àn
 > 
INBUFLEN
 + 
MAX_KEY_CODE_LEN
)

2217 
Àn
--)

2218 
öbuf
[
öbufcou¡
++] = *
s
++;

2219 
	}
}

2223 
	$åash_öput_buf
()

2225 
öbufcou¡
 = 0;

2226 
	}
}

2229 
	$Ród
(
buf
, 
maxÀn
)

2230 
ch¨_u
 *
buf
;

2231 
maxÀn
;

2233 i‡(
öbufcou¡
 == 0)

2234 
	`fûl_öbuf
(
TRUE
);

2235 i‡(
maxÀn
 > 
öbufcou¡
)

2236 
maxÀn
 = 
öbufcou¡
;

2237 
	`vim_memmove
(
buf
, 
öbuf
, (
size_t
)
maxÀn
);

2238 
öbufcou¡
 -
maxÀn
;

2239 i‡(
öbufcou¡
)

2240 
	`vim_memmove
(
öbuf
, inbu‡+ 
maxÀn
, (
size_t
)
öbufcou¡
);

2241  ()
maxÀn
;

2242 
	}
}

2245 
	$mch_bªakcheck
()

2247 #ifde‡
USE_GUI


2248 i‡(
gui
.
ö_u£
)

2250 
	`gui_mch_upd©e
();

2259 i‡(
cuº_tmode
 && 
	`RólWaôF‹Ch¨
(0, 0L))

2260 
	`fûl_öbuf
(
FALSE
);

2261 
	}
}

2264 
	$fûl_öbuf
(
exô_⁄_îr‹
)

2265 
exô_⁄_îr‹
;

2267 
Àn
;

2268 
åy
;

2270 #ifde‡
USE_GUI


2271 i‡(
gui
.
ö_u£
)

2273 
	`gui_mch_upd©e
();

2277 i‡(
	`is_öput_buf_fuŒ
())

2285 
åy
 = 0;Åry < 100; ++try)

2287 
Àn
 = 
	`ªad
(0, (*)
öbuf
 + 
öbufcou¡
,

2288 (
size_t
)(
INBUFLEN
 - 
öbufcou¡
));

2289 i‡(
Àn
 > 0)

2291 i‡(!
exô_⁄_îr‹
)

2294 i‡(
Àn
 <= 0)

2296 
	`wödgŸo
(()
Rows
 - 1, 0);

2297 
	`Ârötf
(
°dîr
, "Vim: ErrorÑeading input,Éxiting...\n");

2298 
	`ml_sync_Æl
(
FALSE
, 
TRUE
);

2299 
	`gëout
(1);

2301 
Àn
-- > 0)

2306 i‡(
öbuf
[
öbufcou¡
] == 3)

2309 
	`vim_memmove
(
öbuf
, inbu‡+ 
öbufcou¡
, (
size_t
)(
Àn
 + 1));

2310 
öbufcou¡
 = 0;

2311 
gŸ_öt
 = 
TRUE
;

2313 ++
öbufcou¡
;

2315 
	}
}

2324 
	$WaôF‹Ch¨
(
m£c
)

2325 
m£c
;

2327 i‡(
öbufcou¡
)

2329  
	`RólWaôF‹Ch¨
(0, 
m£c
);

2330 
	}
}

2338 
	$RólWaôF‹Ch¨
(
fd
, 
m£c
)

2339 
fd
;

2340 
m£c
;

2342 #i‚de‡
HAVE_SELECT


2343 
pﬁlfd
 
fds
;

2345 
fds
.
fd
 = fd;

2346 
fds
.
evíts
 = 
POLLIN
;

2347  (
	`pﬁl
(&
fds
, 1, ()
m£c
) > 0);

2349 
timevÆ
 
tv
;

2350 
fd_£t
 
rfds
, 
efds
;

2352 #ifde‡
__EMX__


2355 i‡(
cuº_tmode
 == 0)

2359 i‡(
m£c
 >= 0)

2361 
tv
.
tv_£c
 = 
m£c
 / 1000;

2362 
tv
.
tv_u£c
 = (
m£c
 % 1000) * (1000000/1000);

2368 
	`FD_ZERO
(&
rfds
);

2369 
	`FD_ZERO
(&
efds
);

2370 
	`FD_SET
(
fd
, &
rfds
);

2371 
	`FD_SET
(
fd
, &
efds
);

2372  (
	`£À˘
(
fd
 + 1, &
rfds
, 
NULL
, &
efds
, (
m£c
 >0Ë? &
tv
 : NULL) > 0);

2374 
	}
}

2390 *
mkãmp
 
__ARGS
((*));

2391 #i‚de‡
SEEK_SET


2392 
	#SEEK_SET
 0

	)

2394 #i‚de‡
SEEK_END


2395 
	#SEEK_END
 2

	)

2399 
	$Ex∑ndWûdC¨ds
(
num_∑t
, 
∑t
, 
num_fûe
, 
fûe
, 
fûes_⁄ly
, 
li°_nŸfound
)

2400 
num_∑t
;

2401 
ch¨_u
 **
∑t
;

2402 *
num_fûe
;

2403 
ch¨_u
 ***
fûe
;

2404 
fûes_⁄ly
;

2405 
li°_nŸfound
;

2407 
i
;

2408 
size_t
 
Àn
;

2409 
ch¨_u
 *
p
;

2410 #ifde‡
__EMX__


2412 *
num_fûe
 = 0;

2414 i‡(
	`vim_°rchr
(*
∑t
, '$') || vim_strchr(*pat, '~'))

2417 
ch¨_u
 *
buf
 = 
	`Æloc
(1024);

2418 
	`ex∑nd_ív
(*
∑t
, 
buf
, 1024);

2419 i‡(
	`mch_has_wûdˇrd
(
buf
))

2421 *
fûe
 = (
ch¨_u
 **)
	`_‚ex∂ode
(
buf
);

2425 *
fûe
 = (
ch¨_u
 **)
	`Æloc
((char_u **) * 2);

2426 (*
fûe
)[0] = 
	`°rßve
(
buf
);

2427 (*
fûe
)[1] = 
NULL
;

2429 
	`vim_‰ì
(
buf
);

2433 *
fûe
 = (
ch¨_u
 **)
	`_‚ex∂ode
(*
∑t
);

2435 i‡(!*
fûe
)

2441 *
fûe
 = (
ch¨_u
 **)"";

2442 *
num_fûe
 = 0;

2443  
OK
;

2450 
i
 = 0; (
p
 = (*
fûe
)[i]Ë!
NULL
; i++)

2452 
	`¶ash_adju°
(
p
);

2453 i‡(
	`mch_isdú
(
p
))

2455 
Àn
 = 
	`°æí
(
p
);

2456 (*
fûe
)[
i
] = 
p
 = 
	`ªÆloc
’, 
Àn
 + 2);

2457 
p
 +
Àn
;

2458 *
p
++ = '\\';

2459 *
p
 = 0;

2462 *
num_fûe
 = 
i
;

2463  
OK
;

2467 
dú
;

2468 
ch¨_u
 
tm≤ame
[
TMPNAMELEN
];

2469 
ch¨_u
 *
comm™d
;

2470 
FILE
 *
fd
;

2471 
ch¨_u
 *
buf„r
;

2472 
u£_glob
 = 
FALSE
;

2474 *
num_fûe
 = 0;

2475 *
fûe
 = (
ch¨_u
 **)"";

2481 i‡(!
	`have_wûdˇrd
(
num_∑t
, 
∑t
))

2483 *
fûe
 = (
ch¨_u
 **)
	`Æloc
(
num_∑t
 * (char_u *));

2484 i‡(*
fûe
 =
NULL
)

2486 *
fûe
 = (
ch¨_u
 **)"";

2487  
FAIL
;

2489 
i
 = 0; i < 
num_∑t
; i++)

2490 (*
fûe
)[
i
] = 
	`°rßve
(
∑t
[i]);

2491 *
num_fûe
 = 
num_∑t
;

2492  
OK
;

2498 
	`STRCPY
(
tm≤ame
, 
TMPNAME2
);

2499 i‡(*
	`mkãmp
((*)
tm≤ame
Ë=
NUL
)

2501 
	`emsg
(
e_nŸmp
);

2502  
FAIL
;

2509 i‡((
Àn
 = 
	`STRLEN
(
p_sh
)Ë>3 && 
	`STRCMP
(p_sh +Üen - 3, "csh") == 0)

2510 
u£_glob
 = 
TRUE
;

2512 
Àn
 = 
TMPNAMELEN
 + 11;

2513 
i
 = 0; i < 
num_∑t
; ++i)

2514 
Àn
 +
	`STRLEN
(
∑t
[
i
]) + 3;

2515 
comm™d
 = 
	`Æloc
(
Àn
);

2516 i‡(
comm™d
 =
NULL
)

2517  
FAIL
;

2518 i‡(
u£_glob
)

2519 
	`STRCPY
(
comm™d
, "glob >");

2521 
	`STRCPY
(
comm™d
, "echo >");

2522 
	`STRCAT
(
comm™d
, 
tm≤ame
);

2523 
i
 = 0; i < 
num_∑t
; ++i)

2525 #ifde‡
USE_SYSTEM


2526 
	`STRCAT
(
comm™d
, " \"");

2527 
	`STRCAT
(
comm™d
, 
∑t
[
i
]);

2528 
	`STRCAT
(
comm™d
, "\"");

2530 
	`STRCAT
(
comm™d
, " ");

2531 
	`STRCAT
(
comm™d
, 
∑t
[
i
]);

2534 i‡(
ex∑nd_öãø˘ivñy
)

2535 
show_shñl_mess
 = 
FALSE
;

2541 i‡(
u£_glob
 && !
	`have_dﬁœrs
(
num_∑t
, 
∑t
))

2542 
exåa_shñl_¨g
 = (
ch¨_u
 *)"-f";

2543 
i
 = 
	`ˇŒ_shñl
(
comm™d
, 
SHELL_EXPAND
);

2544 
exåa_shñl_¨g
 = 
NULL
;

2545 
show_shñl_mess
 = 
TRUE
;

2546 
	`vim_‰ì
(
comm™d
);

2547 i‡(
i
 =
FAIL
)

2549 
	`vim_ªmove
(
tm≤ame
);

2555 #i‚de‡
USE_SYSTEM


2556 i‡(!
ex∑nd_öãø˘ivñy
)

2559 
mu°_ªdøw
 = 
CLEAR
;

2560 
	`msg_outch¨
('\n');

2561 
cmdlöe_row
 = 
Rows
 - 1;

2563  
FAIL
;

2569 
fd
 = 
	`f›í
((*)
tm≤ame
, "r");

2570 i‡(
fd
 =
NULL
)

2572 
	`emsg2
(
e_nŸ›í
, 
tm≤ame
);

2573  
FAIL
;

2575 
	`f£ek
(
fd
, 0L, 
SEEK_END
);

2576 
Àn
 = 
	`·ñl
(
fd
);

2577 
	`f£ek
(
fd
, 0L, 
SEEK_SET
);

2578 
buf„r
 = 
	`Æloc
(
Àn
 + 1);

2579 i‡(
buf„r
 =
NULL
)

2581 
	`vim_ªmove
(
tm≤ame
);

2582 
	`f˛o£
(
fd
);

2583  
FAIL
;

2585 
i
 = 
	`‰ód
((*)
buf„r
, 1, 
Àn
, 
fd
);

2586 
	`f˛o£
(
fd
);

2587 
	`vim_ªmove
(
tm≤ame
);

2588 i‡(
i
 !
Àn
)

2590 
	`emsg2
(
e_nŸªad
, 
tm≤ame
);

2591 
	`vim_‰ì
(
buf„r
);

2592  
FAIL
;

2595 i‡(
u£_glob
)

2597 
buf„r
[
Àn
] = 
NUL
;

2598 
i
 = 0;

2599 
p
 = 
buf„r
;Ö < buf„∏+ 
Àn
; ++p)

2600 i‡(*
p
 =
NUL
)

2601 ++
i
;

2602 i‡(
Àn
)

2603 ++
i
;

2607 
buf„r
[
Àn
] = '\n';

2608 
p
 = 
buf„r
;

2609 
i
 = 0; *
p
 != '\n'; ++i)

2611 *
p
 != ' ' && *p != '\n')

2612 ++
p
;

2613 
p
 = 
	`skùwhôe
(p);

2616 i‡(
i
 == 0)

2623 
	`vim_‰ì
(
buf„r
);

2624 *
fûe
 = (
ch¨_u
 **)"";

2625  
FAIL
;

2627 *
num_fûe
 = 
i
;

2628 *
fûe
 = (
ch¨_u
 **)
	`Æloc
((ch¨_u *Ë* 
i
);

2629 i‡(*
fûe
 =
NULL
)

2631 
	`vim_‰ì
(
buf„r
);

2632 *
fûe
 = (
ch¨_u
 **)"";

2633  
FAIL
;

2639 
p
 = 
buf„r
;

2640 
i
 = 0; i < *
num_fûe
; ++i)

2642 (*
fûe
)[
i
] = 
p
;

2643 i‡(
u£_glob
)

2645 *
p
 &&Ö < 
buf„r
 + 
Àn
)

2646 ++
p
;

2647 ++
p
;

2651 *
p
 != ' ' && *p != '\n')

2652 ++
p
;

2653 i‡(*
p
 == '\n')

2654 *
p
 = 
NUL
;

2657 *
p
++ = 
NUL
;

2658 
p
 = 
	`skùwhôe
(p);

2666 
i
 = 0; i < *
num_fûe
; ++i)

2669 i‡(
ex∑nd_öãø˘ivñy
)

2671 
°©
 
°
;

2672 
j
;

2674 i‡(
	`°©
((*)((*
fûe
)[
i
]), &
°
) < 0)

2676 
j
 = 
i
; j + 1 < *
num_fûe
; ++j)

2677 (*
fûe
)[
j
] = (*file)[j + 1];

2678 --*
num_fûe
;

2679 --
i
;

2685 
dú
 = (
	`mch_isdú
((*
fûe
)[
i
]));

2686 
p
 = 
	`Æloc
(()(
	`STRLEN
((*
fûe
)[
i
]Ë+ 1 + 
dú
));

2687 i‡(
p
)

2689 
	`STRCPY
(
p
, (*
fûe
)[
i
]);

2690 i‡(
dú
)

2691 
	`STRCAT
(
p
, "/");

2693 (*
fûe
)[
i
] = 
p
;

2695 
	`vim_‰ì
(
buf„r
);

2697 i‡(*
num_fûe
 == 0)

2699 
	`vim_‰ì
(*
fûe
);

2700 *
fûe
 = (
ch¨_u
 **)"";

2701  
FAIL
;

2704  
OK
;

2707 
	}
}

2710 
	$mch_has_wûdˇrd
(
p
)

2711 
ch¨_u
 *
p
;

2713  ; *
p
; ++p)

2715 i‡(*
p
 ='\\' &&Ö[1] !
NUL
)

2716 ++
p
;

2717 i‡(
	`vim_°rchr
((
ch¨_u
 *)"*?[{`~$", *
p
Ë!
NULL
)

2718  
TRUE
;

2720  
FALSE
;

2721 
	}
}

2723 #i‚de‡
__EMX__


2725 
	$have_wûdˇrd
(
num
, 
fûe
)

2726 
num
;

2727 
ch¨_u
 **
fûe
;

2729 
i
;

2731 
i
 = 0; i < 
num
; i++)

2732 i‡(
	`mch_has_wûdˇrd
(
fûe
[
i
]))

2735 
	}
}

2738 
	$have_dﬁœrs
(
num
, 
fûe
)

2739 
num
;

2740 
ch¨_u
 **
fûe
;

2742 
i
;

2744 
i
 = 0; i < 
num
; i++)

2745 i‡(
	`vim_°rchr
(
fûe
[
i
], '$'Ë!
NULL
)

2746  
TRUE
;

2747  
FALSE
;

2748 
	}
}

2751 #i‚de‡
HAVE_RENAME


2758 
	$ª«me
(
§c
, 
de°
)

2759 c⁄° *
§c
, *
de°
;

2761 
°©
 
°
;

2763 i‡(
	`°©
(
de°
, &
°
) >= 0)

2765 i‡(
	`lök
(
§c
, 
de°
) != 0)

2767 i‡(
	`vim_ªmove
(
§c
) == 0)

2770 
	}
}

	@src/unix.h

9 
	~<°dio.h
>

10 
	~<˘y≥.h
>

11 
	~<sys/ty≥s.h
>

12 
	~<sys/°©.h
>

14 #ifde‡
HAVE_STDLIB_H


15 
	~<°dlib.h
>

18 #ifde‡
HAVE_UNISTD_H


19 
	~<uni°d.h
>

22 #ifde‡
HAVE_LIBC_H


23 
	~<libc.h
>

29 #i‡
deföed
(
SVR4
Ë&& deföed(
__löux__
)

30 #unde‡
SVR4


36 #i‡
deföed
(
sun
Ë&& !deföed(
FILE
)

37 
	#SOLARIS


	)

46 #i‡
deföed
(
HAVE_GETCWD
Ë&& !(deföed(
BAD_GETCWD
Ë&& deföed(
HAVE_GETWD
))

47 
	#USE_GETCWD


	)

50 #i‚de‡
__ARGS


51 #i‡
deföed
(
__STDC__
Ë|| deföed(
__GNUC__
)

52 
	#__ARGS
(
x
Ë
	)
x

54 
	#__ARGS
(
x
Ë()

	)

59 
	#vim_ªmove
(
x
Ë
	`u∆ök
((*)(x))

	)

65 #i‡!
deföed
(
SOME_SYSTEM
)

66 
	#SIGHASARG


	)

70 #i‡
deföed
(
__sgi
)

71 
	#SIGHAS3ARGS


	)

74 #ifde‡
SIGHASARG


75 #ifde‡
SIGHAS3ARGS


76 
	#SIGPROTOARG
 (, , 
sigc⁄ãxt
 *)

	)

77 
	#SIGDEFARG
(
s
Ë(s, 
sig2
, 
sc⁄t
Ës, sig2; 
sigc⁄ãxt
 *sc⁄t;

	)

78 
	#SIGDUMMYARG
 0, 0, (
sigc⁄ãxt
 *)0

	)

80 
	#SIGPROTOARG
 ()

	)

81 
	#SIGDEFARG
(
s
Ë(sËs;

	)

82 
	#SIGDUMMYARG
 0

	)

85 
	#SIGPROTOARG
 ()

	)

86 
	#SIGDEFARG
(
s
Ë()

	)

87 
	#SIGDUMMYARG


	)

90 #i‡
HAVE_DIRENT_H


91 
	~<dúít.h
>

92 
	#NAMLEN
(
dúít
Ë
	`°æí
((dúít)->
d_«me
)

	)

94 
	#dúít
 
dúe˘


	)

95 
	#NAMLEN
(
dúít
Ë(dúít)->
d_«mÀn


	)

96 #i‡
HAVE_SYS_NDIR_H


97 
	~<sys/ndú.h
>

99 #i‡
HAVE_SYS_DIR_H


100 
	~<sys/dú.h
>

102 #i‡
HAVE_NDIR_H


103 
	~<ndú.h
>

107 #i‡!
deföed
(
HAVE_SYS_TIME_H
Ë|| deföed(
TIME_WITH_SYS_TIME
)

108 
	~<time.h
>

111 #ifde‡
HAVE_SYS_TIME_H


112 
	~<sys/time.h
>

115 
	~<sig«l.h
>

117 #i‡
deföed
(
DIRSIZ
Ë&& !deföed(
MAXNAMLEN
)

118 
	#MAXNAMLEN
 
DIRSIZ


	)

121 #i‡
deföed
(
UFS_MAXNAMLEN
Ë&& !deföed(
MAXNAMLEN
)

122 
	#MAXNAMLEN
 
UFS_MAXNAMLEN


	)

125 #i‡
deföed
(
NAME_MAX
Ë&& !deföed(
MAXNAMLEN
)

126 
	#MAXNAMLEN
 
NAME_MAX


	)

133 #i‡!
deföed
(
MAXNAMLEN
)

134 
	#MAXNAMLEN
 512

	)

137 #ifde‡
HAVE_ERRNO_H


138 
	~<î∫o.h
>

141 #ifde‡
HAVE_PWD_H


142 
	~<pwd.h
>

145 #ifde‡
__COHERENT__


146 #unde‡
__ARGS


149 #i‚de‡
W_OK


150 
	#W_OK
 2

	)

157 #i‚de‡
USR_EXRC_FILE


158 
	#USR_EXRC_FILE
 "$HOME/.exrc"

	)

161 #i‚de‡
USR_VIMRC_FILE


162 
	#USR_VIMRC_FILE
 "$HOME/.vimrc"

	)

165 #ifde‡
USE_GUI


166 #i‚de‡
USR_GVIMRC_FILE


167 
	#USR_GVIMRC_FILE
 "$HOME/.gvimrc"

	)

171 #i‚de‡
EXRC_FILE


172 
	#EXRC_FILE
 ".exrc"

	)

175 #i‚de‡
VIMRC_FILE


176 
	#VIMRC_FILE
 ".vimrc"

	)

179 #ifde‡
USE_GUI


180 #i‚de‡
GVIMRC_FILE


181 
	#GVIMRC_FILE
 ".gvimrc"

	)

185 #ifde‡
VIMINFO


186 #i‚de‡
VIMINFO_FILE


187 
	#VIMINFO_FILE
 "$HOME/.vimöfo"

	)

191 #i‚de‡
DEF_BDIR


192 #ifde‡
OS2


193 
	#DEF_BDIR
 ".,c:/tmp,~/tmp,~/"

	)

195 
	#DEF_BDIR
 ".,~/tmp,~/"

	)

199 #i‚de‡
DEF_DIR


200 #ifde‡
OS2


201 
	#DEF_DIR
 ".,~/tmp,c:/tmp,/tmp"

	)

203 
	#DEF_DIR
 ".,~/tmp,/tmp"

	)

207 
	#TMPNAME1
 "/tmp/viXXXXXX"

	)

208 
	#TMPNAME2
 "/tmp/voXXXXXX"

	)

209 
	#TMPNAMELEN
 15

	)

214 
	#CMDBUFFSIZE
 1024

	)

215 
	#MAXPATHL
 1024

	)

217 
	#CHECK_INODE


	)

219 
	#USE_MOUSE


	)

221 #i‚de‡
MAXMEM


222 
	#MAXMEM
 512

	)

224 #i‚de‡
MAXMEMTOT


225 
	#MAXMEMTOT
 2048

	)

228 
	#BASENAMELEN
 (
MAXNAMLEN
 - 5)

	)

234 #ifde‡
USEMEMMOVE


235 
	#vim_memmove
(
to
, 
‰om
, 
Àn
Ë
	`memmove
((*)—o), (*)(‰om),Üí)

	)

237 #ifde‡
USEBCOPY


238 
	#vim_memmove
(
to
, 
‰om
, 
Àn
Ë
	`bc›y
((*)(‰om), (*)—o),Üí)

	)

240 #ifde‡
USEMEMCPY


241 
	#vim_memmove
(
to
, 
‰om
, 
Àn
Ë
	`mem˝y
((*)—o), (*)(‰om),Üí)

	)

243 
	#VIM_MEMMOVE


	)

249 
	#MOUSE_LEFT
 0x00

	)

250 
	#MOUSE_MIDDLE
 0x01

	)

251 
	#MOUSE_RIGHT
 0x02

	)

252 
	#MOUSE_RELEASE
 0x03

	)

253 
	#MOUSE_SHIFT
 0x04

	)

254 
	#MOUSE_ALT
 0x08

	)

255 
	#MOUSE_CTRL
 0x10

	)

256 
	#MOUSE_DRAG
 (0x40 | 
MOUSE_RELEASE
)

	)

258 
	#MOUSE_CLICK_MASK
 0x03

	)

260 
	#NUM_MOUSE_CLICKS
(
code
) \

261 ((((
code
Ë& 0xffË>> 6Ë+ 1)

	)

263 
	#SET_NUM_MOUSE_CLICKS
(
code
, 
num
) \

264 (
code
Ë((codeË& 0x3fË+ (((
num
Ë- 1Ë<< 6)

	)

	@src/unixunix.h

16 #ifde‡
HAVE_SIGSET


17 
	#sig«l
 
sig£t


	)

21 #i‡
deföed
(
HAVE_SYS_IOCTL_H
Ë&& !deföed(
sun
)

22 
	~<sys/io˘l.h
>

25 #i‚de‡
USE_SYSTEM


27 #i‡
deföed
(
HAVE_SYS_WAIT_H
Ë|| deföed(
HAVE_UNION_WAIT
)

28 
	~<sys/waô.h
>

31 #i‡
deföed
(
HAVE_SYS_SELECT_H
) && \

32 (!
deföed
(
HAVE_SYS_TIME_H
Ë|| 
	$deföed
(
SYS_SELECT_WITH_SYS_TIME
))

33 
	~<sys/£À˘.h
>

36 #i‚de‡
WEXITSTATUS


37 #ifde‡
HAVE_UNION_WAIT


38 
	#WEXITSTATUS
(
°©_vÆ
Ë((°©_vÆ).
w_T
.
w_Rëcode
)

	)

40 
	#WEXITSTATUS
(
°©_vÆ
Ë(((°©_vÆË>> 8Ë& 0377)

	)

44 #i‚de‡
WIFEXITED


45 #ifde‡
HAVE_UNION_WAIT


46 
	#WIFEXITED
(
°©_vÆ
Ë((°©_vÆ).
w_T
.
w_Tîmsig
 =0)

	)

48 
	#WIFEXITED
(
°©_vÆ
Ë(((°©_vÆË& 255Ë=0)

	)

54 #ifde‡
HAVE_STROPTS_H


55 
	~<°r›ts.h
>

58 #ifde‡
HAVE_STRING_H


59 
	~<°rög.h
>

62 #i‚de‡
HAVE_SELECT


63 #ifde‡
HAVE_SYS_POLL_H


64 
	~<sys/pﬁl.h
>

66 
	~<pﬁl.h
>

70 #ifde‡
HAVE_SYS_STREAM_H


71 
	~<sys/°ªam.h
>

74 #ifde‡
HAVE_SYS_PTEM_H


75 
	~<sys/±em.h
>

76 #i‚de‡
_IO_PTEM_H


77 
	#_IO_PTEM_H


	)

81 #ifde‡
HAVE_SYS_UTSNAME_H


82 
	~<sys/ut¢ame.h
>

85 #ifde‡
HAVE_SYS_SYSTEMINFO_H


91 #i‡
	`deföed
(
HAVE_LIMITS_H
Ë&& !deföed(
_LIMITS_H
)

92 
	~<limôs.h
>

94 
	~<sys/sy°emöfo.h
>

103 #i‡
	`deföed
(
HAVE_TERMIOS_H
Ë&& !deföed(
≠ﬁlo
)

104 
	~<ãrmios.h
>

106 #ifde‡
HAVE_TERMIO_H


107 
	~<ãrmio.h
>

109 #ifde‡
HAVE_SGTTY_H


110 
	~<sgây.h
>

	@src/version.c

9 
	~"vim.h
"

10 
	~"globÆs.h
"

11 
	~"¥Ÿo.h
"

24 *
	gVîsi⁄
 = "VIM 4.0";

25 #ifde‡
HAVE_DATE_TIME


26 *
	gl⁄gVîsi⁄
 = "VIM - VòIM¥oved 4.0 (1996 May 29, compûed " 
__DATE__
 " " 
__TIME__
 ")";

28 *
	gl⁄gVîsi⁄
 = "VIM - Vi IMproved 4.0 (1996 May 29)";

31 
vîsi⁄_msg
 
__ARGS
((*
s
));

34 
	$do_vîsi⁄
(
¨g
)

35 
ch¨_u
 *
¨g
;

37 
n
;

39 i‡(*
¨g
 !
NUL
)

41 
found_vîsi⁄
 = 
	`gëdigôs
(&
¨g
) * 100;

42 i‡(*
¨g
 ='.' && 
	`isdigô
(arg[1]))

45 
n
 = 
¨g
[1] - '0';

46 i‡(
	`isdigô
(
¨g
[2]))

47 
found_vîsi⁄
 +(
¨g
[2] - '0'Ë+ 
n
 * 10;

49 
found_vîsi⁄
 +
n
;

51 i‡(
found_vîsi⁄
 > 400)

53 
	`MSG
("Warning: FoundÇewer version command");

54 i‡(
sourcög_«me
 !
NULL
)

56 
	`MSG_OUTSTR
(" in: \"");

57 
	`msg_out°r
(
sourcög_«me
);

58 
	`MSG_OUTSTR
("\"Üine: ");

59 
	`msg_ouäum
(()
sourcög_ um
);

65 
	`msg_outch¨
('\n');

66 
	`MSG
(
l⁄gVîsi⁄
);

67 #ifde‡
WIN32


68 
	`MSG_OUTSTR
("\nWindows NT / Windows 95 version");

70 #ifde‡
MSDOS


71 #ifde‡
DJGPP


72 
	`MSG_OUTSTR
("\n32 bit MS-DOS version");

74 
	`MSG_OUTSTR
("\n16 bit MS-DOS version");

77 
	`MSG_OUTSTR
("\nCompiled with (+) or without (-):\n");

78 #ifde‡
AMIGA


79 #ifde‡
NO_ARP


80 
	`vîsi⁄_msg
("-ARP ");

82 
	`vîsi⁄_msg
("+ARP ");

85 #ifde‡
AUTOCMD


86 
	`vîsi⁄_msg
("+autocmd ");

88 
	`vîsi⁄_msg
("-autocmd ");

90 #ifde‡
NO_BUILTIN_TCAPS


91 
	`vîsi⁄_msg
("-builtin_terms ");

93 #ifde‡
SOME_BUILTIN_TCAPS


94 
	`vîsi⁄_msg
("+builtin_terms ");

96 #ifde‡
ALL_BUILTIN_TCAPS


97 
	`vîsi⁄_msg
("++builtin_terms ");

99 #ifde‡
CINDENT


100 
	`vîsi⁄_msg
("+cindent ");

102 
	`vîsi⁄_msg
("-cindent ");

104 #ifde‡
COMPATIBLE


105 
	`vîsi⁄_msg
("+compatible ");

107 
	`vîsi⁄_msg
("-compatible ");

109 #ifde‡
DEBUG


110 
	`vîsi⁄_msg
("+debug ");

112 #ifde‡
DIGRAPHS


113 
	`vîsi⁄_msg
("+digraphs ");

115 
	`vîsi⁄_msg
("-digraphs ");

117 #ifde‡
EMACS_TAGS


118 
	`vîsi⁄_msg
("+emacs_tags ");

120 
	`vîsi⁄_msg
("-emacs_tags ");

123 #i‡!
	`deföed
(
USE_SYSTEM
Ë&& deföed(
UNIX
)

124 
	`vîsi⁄_msg
("+fork() ");

126 #ifde‡
UNIX


127 #ifde‡
USE_GUI_MOTIF


128 
	`vîsi⁄_msg
("+GUI_Motif ");

130 #ifde‡
USE_GUI_ATHENA


131 
	`vîsi⁄_msg
("+GUI_Athena ");

133 
	`vîsi⁄_msg
("-GUI ");

137 #ifde‡
INSERT_EXPAND


138 
	`vîsi⁄_msg
("+insert_expand ");

140 
	`vîsi⁄_msg
("-insert_expand ");

142 #ifde‡
HAVE_LANGMAP


143 
	`vîsi⁄_msg
("+langmap ");

145 
	`vîsi⁄_msg
("-langmap ");

147 #ifde‡
LISPINDENT


148 
	`vîsi⁄_msg
("+lispindent ");

150 
	`vîsi⁄_msg
("-lispindent ");

152 #ifde‡
RIGHTLEFT


153 
	`vîsi⁄_msg
("+rightleft ");

155 
	`vîsi⁄_msg
("-rightleft ");

157 #ifde‡
SMARTINDENT


158 
	`vîsi⁄_msg
("+smartindent ");

160 
	`vîsi⁄_msg
("-smartindent ");

163 #i‡
	`deföed
(
USE_SYSTEM
Ë&& (deföed(
UNIX
Ë|| deföed(
__EMX__
))

164 
	`vîsi⁄_msg
("+system() ");

166 #i‡
	`deföed
(
UNIX
Ë|| deföed(
__EMX__
)

168 #ifde‡
TERMINFO


169 
	`vîsi⁄_msg
("+terminfo ");

171 
	`vîsi⁄_msg
("-terminfo ");

174 #ifde‡
HAVE_TGETENT


175 
	`vîsi⁄_msg
("+tgetent ");

177 
	`vîsi⁄_msg
("-tgetent ");

180 #ifde‡
VIMINFO


181 
	`vîsi⁄_msg
("+viminfo ");

183 
	`vîsi⁄_msg
("-viminfo ");

185 #ifde‡
WRITEBACKUP


186 
	`vîsi⁄_msg
("+writebackup ");

188 
	`vîsi⁄_msg
("-writebackup ");

190 #ifde‡
UNIX


191 #i‡
	`deföed
(
WANT_X11
Ë&& deföed(
HAVE_X11
)

192 
	`vîsi⁄_msg
("+X11 ");

194 
	`vîsi⁄_msg
("-X11 ");

197 
	`msg_outch¨
('\n');

198 #ifde‡
USR_VIMRC_FILE


199 
	`vîsi⁄_msg
("user vimrc file: \"");

200 
	`vîsi⁄_msg
(
USR_VIMRC_FILE
);

201 
	`vîsi⁄_msg
("\" ");

203 #ifde‡
USR_EXRC_FILE


204 
	`vîsi⁄_msg
("userÉxrc file: \"");

205 
	`vîsi⁄_msg
(
USR_EXRC_FILE
);

206 
	`vîsi⁄_msg
("\" ");

208 #ifde‡
USE_GUI


209 
	`vîsi⁄_msg
("user gvimrc file: \"");

210 
	`vîsi⁄_msg
(
USR_GVIMRC_FILE
);

211 
	`vîsi⁄_msg
("\" ");

213 #i‡
	`deföed
(
HAVE_CONFIG_H
Ë|| deföed(
OS2
)

214 
	`msg_outch¨
('\n');

215 
	`vîsi⁄_msg
("system vimrc file: \"");

216 
	`vîsi⁄_msg
((*)
sys_vimrc_‚ame
);

217 
	`vîsi⁄_msg
("\"");

218 #ifde‡
USE_GUI


219 
	`msg_outch¨
('\n');

220 
	`vîsi⁄_msg
("system gvimrc file: \"");

221 
	`vîsi⁄_msg
((*)
sys_gvimrc_‚ame
);

222 
	`MSG_OUTSTR
("\"");

224 
	`msg_outch¨
('\n');

225 
	`vîsi⁄_msg
("Compilation: ");

226 
	`vîsi⁄_msg
((*)
Æl_cÊags
);

229 
	}
}

236 
	$vîsi⁄_msg
(
s
)

237 *
s
;

239 
Àn
 = 
	`°æí
(
s
);

241 i‡(
Àn
 < ()
Cﬁumns
 && 
msg_cﬁ
 +Üen >= ()Columns)

242 
	`msg_outch¨
('\n');

243 
	`MSG_OUTSTR
(
s
);

244 
	}
}

	@src/version.h

21 
	#VIM_VERSION_MAJOR
 4

	)

22 
	#VIM_VERSION_MAJOR_STR
 "4"

	)

24 
	#VIM_VERSION_MINOR
 0

	)

25 
	#VIM_VERSION_MINOR_STR
 "0"

	)

27 
	#VIM_VERSION_BUILD
 1

	)

28 
	#VIM_VERSION_BUILD_STR
 "1"

	)

30 
	#VIM_VERSION_PATCHLEVEL
 0

	)

31 
	#VIM_VERSION_PATCHLEVEL_STR
 "0"

	)

	@src/vim.h

11 #ifde‡
HAVE_CONFIG_H


12 
	~"c⁄fig.h
"

15 #ifde‡
__EMX__


16 
	~"c⁄f_os2.h
"

23 #i‡
deföed
(
USE_GUI_MOTIF
) \

24 || 
deföed
(
USE_GUI_ATHENA
) \

25 || 
deföed
(
USE_GUI_MAC
) \

26 || 
deföed
(
USE_GUI_WINDOWS31
) \

27 || 
deföed
(
USE_GUI_WIN32
) \

28 || 
	$deföed
(
USE_GUI_OS2
)

29 #i‚de‡
USE_GUI


30 
	#USE_GUI


	)

34 
	~"„©uª.h
"

39 #ifde‡
AZTEC_C


40 
	~<fun˘i⁄s.h
>

41 
	#__ARGS
(
x
Ë
	)
x

42 
	#__PARMS
(
x
Ë
	)
x

45 #ifde‡
SASC


46 
	~<˛ib/exec_¥Ÿos.h
>

47 
	#__ARGS
(
x
Ë
	)
x

48 
	#__PARMS
(
x
Ë
	)
x

51 #ifde‡
_DCC


52 
	~<˛ib/exec_¥Ÿos.h
>

53 
	#__ARGS
(
x
Ë
	)
x

54 
	#__PARMS
(
x
Ë
	)
x

57 #ifde‡
__TURBOC__


58 
	#__ARGS
(
x
Ë
	)
x

61 #i‡
	`deföed
(
UNIX
Ë|| deföed(
__EMX__
)

62 
	~"unix.h
"

65 #ifde‡
VMS


66 
	~"vms.h
"

69 #i‚de‡
__ARGS


70 #i‡
	`deföed
(
__STDC__
Ë|| deföed(
__GNUC__
Ë|| deföed(
WIN32
)

71 
	#__ARGS
(
x
Ë
	)
x

73 
	#__ARGS
(
x
Ë()

	)

78 #i‚de‡
__PARMS


79 
	#__PARMS
(
x
Ë
	`__ARGS
(x)

	)

82 #ifde‡
UNIX


83 
	~"osdef.h
"

86 #ifde‡
__EMX__


87 
	#gëcwd
 
_gëcwd2


	)

88 
	#chdú
 
_chdú2


	)

89 #unde‡
CHECK_INODE


92 #ifde‡
AMIGA


93 
	~"amiga.h
"

96 #ifde‡
ARCHIE


97 
	~"¨chõ.h
"

100 #ifde‡
MSDOS


101 
	~"msdos.h
"

104 #ifde‡
WIN32


105 
	~"wö32.h
"

111 #i‚de‡
MAXNAMLEN


112 
	#MAXNAMLEN
 31

	)

115 #i‚de‡
MAXPATHL


116 
	#MAXPATHL
 128

	)

123 
	tch¨_u
;

124 
	tsh‹t_u
;

125 
	töt_u
;

126 
	tl⁄g_u
;

128 #i‚de‡
UNIX


129 
	~<°dio.h
>

130 
	~<˘y≥.h
>

133 #i‡
	`deföed
(
HAVE_STRING_H
)

134 
	~<°rög.h
>

136 #ifde‡
HAVE_STRINGS_H


137 
	~<°rögs.h
>

141 
	~"ascii.h
"

142 
	~"keym≠.h
"

143 
	~"ãrm.h
"

144 
	~"ma¸os.h
"

146 #ifde‡
LATTICE


147 
	~<sys/ty≥s.h
>

148 
	~<sys/°©.h
>

150 #ifde‡
_DCC


151 
	~<sys/°©.h
>

153 #i‡
deföed
 
MSDOS
 || deföed 
WIN32


154 
	~<sys\°©.h
>

158 #i‚de‡
UNIX


159 #ifde‡
HAVE_STAT_H


160 
	~<°©.h
>

162 #ifde‡
HAVE_STDLIB_H


163 
	~<°dlib.h
>

173 
	#VALID
 10

	)

174 
	#INVERTED
 20

	)

175 
	#VALID_TO_CURSCHAR
 30

	)

176 
	#NOT_VALID
 40

	)

177 
	#CURSUPD
 50

	)

178 
	#CLEAR
 60

	)

183 
	#CHAR_NORMAL
 0

	)

184 
	#CHAR_INVERT
 1

	)

185 
	#CHAR_UNDERL
 2

	)

186 
	#CHAR_BOLD
 3

	)

187 
	#CHAR_STDOUT
 4

	)

188 
	#CHAR_ITALIC
 5

	)

198 
	#NORMAL
 0x01

	)

199 
	#VISUAL
 0x02

	)

200 
	#CMDLINE
 0x04

	)

201 
	#INSERT
 0x08

	)

202 
	#NORMAL_BUSY
 0x11

	)

203 
	#REPLACE
 0x28

	)

204 
	#HITRETURN
 0x61

	)

205 
	#ASKMORE
 0x70

	)

206 
	#SETWSIZE
 0x80

	)

207 
	#ABBREV
 0x90

	)

210 
	#FORWARD
 1

	)

211 
	#BACKWARD
 (-1)

	)

212 
	#BOTH_DIRECTIONS
 2

	)

215 
	#OK
 1

	)

216 
	#FAIL
 0

	)

221 
	#CONTEXT_UNKNOWN
 (-2)

	)

222 
	#EXPAND_UNSUCCESSFUL
 (-1)

	)

223 
	#EXPAND_NOTHING
 0

	)

224 
	#EXPAND_COMMANDS
 1

	)

225 
	#EXPAND_FILES
 2

	)

226 
	#EXPAND_DIRECTORIES
 3

	)

227 
	#EXPAND_SETTINGS
 4

	)

228 
	#EXPAND_BOOL_SETTINGS
 5

	)

229 
	#EXPAND_TAGS
 6

	)

230 
	#EXPAND_OLD_SETTING
 7

	)

231 
	#EXPAND_HELP
 8

	)

232 
	#EXPAND_BUFFERS
 9

	)

233 
	#EXPAND_EVENTS
 10

	)

234 
	#EXPAND_MENUS
 11

	)

237 
	#WILD_FREE
 1

	)

238 
	#WILD_EXPAND_FREE
 2

	)

239 
	#WILD_EXPAND_KEEP
 3

	)

240 
	#WILD_NEXT
 4

	)

241 
	#WILD_PREV
 5

	)

242 
	#WILD_ALL
 6

	)

243 
	#WILD_LONGEST
 7

	)

245 
	#WILD_LIST_NOTFOUND
 1

	)

246 
	#WILD_HOME_REPLACE
 2

	)

249 
	#FIND_ANY
 1

	)

250 
	#FIND_DEFINE
 2

	)

251 
	#CHECK_PATH
 3

	)

253 
	#ACTION_SHOW
 1

	)

254 
	#ACTION_GOTO
 2

	)

255 
	#ACTION_SPLIT
 3

	)

256 
	#ACTION_SHOW_ALL
 4

	)

257 #ifde‡
INSERT_EXPAND


258 
	#ACTION_EXPAND
 5

	)

262 
	#SEARCH_REV
 0x01

	)

263 
	#SEARCH_ECHO
 0x02

	)

264 
	#SEARCH_MSG
 0x0¯

	)

265 
	#SEARCH_NFMSG
 0x08

	)

266 
	#SEARCH_OPT
 0x10

	)

267 
	#SEARCH_HIS
 0x20

	)

268 
	#SEARCH_END
 0x40

	)

269 
	#SEARCH_NOOF
 0x80

	)

270 
	#SEARCH_START
 0x100

	)

271 
	#SEARCH_MARK
 0x200

	)

272 
	#SEARCH_KEEP
 0x400

	)

275 
	#FIND_IDENT
 1

	)

276 
	#FIND_STRING
 2

	)

279 
	#FNAME_MESS
 1

	)

280 
	#FNAME_EXP
 2

	)

281 
	#FNAME_HYP
 4

	)

284 
	#GETF_SETMARK
 0x01

	)

285 
	#GETF_ALT
 0x02

	)

288 
	#KEY_OPEN_FORW
 0x101

	)

289 
	#KEY_OPEN_BACK
 0x102

	)

292 
	#SHELL_FILTER
 1

	)

293 
	#SHELL_EXPAND
 2

	)

294 
	#SHELL_COOKED
 4

	)

297 
	#INDENT_SET
 1

	)

298 
	#INDENT_INC
 2

	)

299 
	#INDENT_DEC
 3

	)

302 
	#FM_BACKWARD
 0x01

	)

303 
	#FM_FORWARD
 0x02

	)

304 
	#FM_BLOCKSTOP
 0x04

	)

305 
	#FM_SKIPCOMM
 0x08

	)

308 
	#DOBUF_GOTO
 0

	)

309 
	#DOBUF_SPLIT
 1

	)

310 
	#DOBUF_UNLOAD
 2

	)

311 
	#DOBUF_DEL
 3

	)

314 
	#DOBUF_CURRENT
 0

	)

315 
	#DOBUF_FIRST
 1

	)

316 
	#DOBUF_LAST
 2

	)

317 
	#DOBUF_MOD
 3

	)

321 
	#RE_SEARCH
 0

	)

322 
	#RE_SUBST
 1

	)

323 
	#RE_BOTH
 2

	)

324 
	#RE_LAST
 2

	)

327 
	#FPC_SAME
 1

	)

328 
	#FPC_DIFF
 2

	)

329 
	#FPC_NOTX
 3

	)

330 
	#FPC_DIFFX
 4

	)

335 
	eauto_evíts


337 
EVENT_BUFENTER
 = 0,

338 
EVENT_BUFLEAVE
,

339 
EVENT_BUFNEWFILE
,

340 
EVENT_BUFREADPOST
,

341 
EVENT_BUFREADPRE
,

342 
EVENT_BUFWRITEPOST
,

343 
EVENT_BUFWRITEPRE
,

344 
EVENT_FILEAPPENDPOST
,

345 
EVENT_FILEAPPENDPRE
,

346 
EVENT_FILEREADPOST
,

347 
EVENT_FILEREADPRE
,

348 
EVENT_FILEWRITEPOST
,

349 
EVENT_FILEWRITEPRE
,

350 
EVENT_FILTERREADPOST
,

351 
EVENT_FILTERREADPRE
,

352 
EVENT_FILTERWRITEPOST
,

353 
EVENT_FILTERWRITEPRE
,

354 
EVENT_VIMLEAVE
,

355 
EVENT_WINENTER
,

356 
EVENT_WINLEAVE
,

357 
NUM_EVENTS


363 #i‚de‡
TRUE


364 
	#FALSE
 0

	)

365 
	#TRUE
 1

	)

368 
	#MAYBE
 2

	)

371 
	#RET_ERROR
 (-1)

	)

377 
	#IN_UNKNOWN
 1

	)

378 
	#IN_BUFFER
 2

	)

379 
	#IN_STATUS_LINE
 3

	)

380 
	#CURSOR_MOVED
 0x100

	)

383 
	#MOUSE_FOCUS
 0x1

	)

384 
	#MOUSE_MAY_VIS
 0x2

	)

385 
	#MOUSE_DID_MOVE
 0x4

	)

386 
	#MOUSE_SETPOS
 0x8

	)

391 
	#MIN_COLUMNS
 12

	)

392 
	#MIN_ROWS
 1

	)

393 
	#STATUS_HEIGHT
 1

	)

398 #i‚de‡
CMDBUFFSIZE


399 
	#CMDBUFFSIZE
 256

	)

402 
	#LSIZE
 512

	)

404 
	#IOSIZE
 (1024+1Ë

	)

405 
	#MSG_BUF_LEN
 80

	)

407 
	#TERMBUFSIZE
 1024

	)

409 #i‡
	`deföed
(
AMIGA
Ë|| deföed(
__löux__
)

410 
	#TBUFSZ
 2048

	)

412 
	#TBUFSZ
 1024

	)

419 
	#MAXMAPLEN
 50

	)

421 #ifde‡
BINARY_FILE_IO


422 
	#WRITEBIN
 "wb"

	)

423 
	#READBIN
 "rb"

	)

424 
	#APPENDBIN
 "ab"

	)

426 
	#WRITEBIN
 "w"

	)

427 
	#READBIN
 "r"

	)

428 
	#APPENDBIN
 "a"

	)

435 #ifde‡
__EMX__


436 
	#O_EXTRA
 
O_BINARY


	)

438 
	#O_EXTRA
 0

	)

441 
	#CHANGED
 
	`£t_Ch™ged
()

	)

442 
	#UNCHANGED
(
buf
Ë
	`un£t_Ch™ged
(buf)

	)

448 
	#STRLEN
(
s
Ë
	`°æí
((*)(s))

	)

449 
	#STRCPY
(
d
, 
s
Ë
	`°r˝y
((*)(d), (*)(s))

	)

450 
	#STRNCPY
(
d
, 
s
, 
n
Ë
	`°∫˝y
((*)(d), (*)(s), (
size_t
)“))

	)

451 
	#STRCMP
(
d
, 
s
Ë
	`°rcmp
((*)(d), (*)(s))

	)

452 
	#STRNCMP
(
d
, 
s
, 
n
Ë
	`°∫cmp
((*)(d), (*)(s), (
size_t
)“))

	)

453 
	#STRCAT
(
d
, 
s
Ë
	`°rˇt
((*)(d), (*)(s))

	)

454 
	#STRNCAT
(
d
, 
s
, 
n
Ë
	`°∫ˇt
((*)(d), (*)(s), (
size_t
)“))

	)

456 
	#MSG
(
s
Ë
	`msg
((
ch¨_u
 *)(s))

	)

457 
	#EMSG
(
s
Ë
	`emsg
((
ch¨_u
 *)(s))

	)

458 
	#EMSG2
(
s
, 
p
Ë
	`emsg2
((
ch¨_u
 *)(s), (ch¨_u *)’))

	)

459 
	#EMSGN
(
s
, 
n
Ë
	`emsgn
((
ch¨_u
 *)(s), ()“))

	)

460 
	#OUTSTR
(
s
Ë
	`out°r
((
ch¨_u
 *)(s))

	)

461 
	#OUTSTRN
(
s
Ë
	`out°∫
((
ch¨_u
 *)(s))

	)

462 
	#MSG_OUTSTR
(
s
Ë
	`msg_out°r
((
ch¨_u
 *)(s))

	)

464 
	tlöír_t
;

465 
	tcﬁƒ_t
;

467 
	#MAXLNUM
 (0x7fffffffË

	)

469 #i‡
SIZEOF_INT
 >= 4

470 
	#MAXCOL
 (0x7fffffffË

	)

472 
	#MAXCOL
 (0x7fffË

	)

475 
	#SHOWCMD_COLS
 10

	)

480 #ifde‡
VIM_MEMMOVE


481 
vim_memmove
 
	`__ARGS
((*, *, 
size_t
));

483 #i‚de‡
vim_memmove


484 
	#vim_memmove
(
to
, 
‰om
, 
Àn
Ë
	`memmove
—o, from,Üí)

	)

492 #i‡!
	`deföed
(
AMIGA
Ë&& !deföed(
WIN32
Ë&& !deföed(
MSDOS
Ë&& !deföed(
VMS
)

493 
	#vim_gëív
(
x
Ë(
ch¨_u
 *)
	`gëív
((*)x)

	)

502 #ifde‡
CASE_INSENSITIVE_FILENAME


503 
	#‚amecmp
(
x
, 
y
Ë
	`°ricmp
((*)(x), (*)(y))

	)

504 
	#‚amícmp
(
x
, 
y
, 
n
Ë
	`°∫icmp
((*)(x), (*)(y), (
size_t
)“))

	)

506 
	#‚amecmp
(
x
, 
y
Ë
	`°rcmp
((*)(x), (*)(y))

	)

507 
	#‚amícmp
(
x
, 
y
, 
n
Ë
	`°∫cmp
((*)(x), (*)(y), (
size_t
)“))

	)

510 #ifde‡
HAVE_MEMSET


511 
	#vim_mem£t
(
±r
, 
c
, 
size
Ë
	`mem£t
(’å), (c), (size))

	)

513 *
vim_mem£t
 
	`__ARGS
((*, , 
size_t
));

517 #ifde‡
USE_VIM_CHDIR


518 
vim_chdú
 
	`__ARGS
((*));

520 
	#vim_chdú
 
chdú


	)

527 
	#vim_iswhôe
(
x
Ë((xË=' ' || (xË='\t')

	)

531 
	~"°ru˘s.h
"

	@src/window.c

9 
	~"vim.h
"

10 
	~"globÆs.h
"

11 
	~"¥Ÿo.h
"

12 
	~"›ti⁄.h
"

14 
ª£t_VIsuÆ
 
__ARGS
(());

15 
wö_comp_pos
 
__ARGS
(());

16 
wö_exch™ge
 
__ARGS
(());

17 
wö_rŸ©e
 
__ARGS
((, ));

18 
wö_≠≥nd
 
__ARGS
((
WIN
 *, WIN *));

19 
wö_ªmove
 
__ARGS
((
WIN
 *));

20 
wö_√w_height
 
__ARGS
((
WIN
 *, ));

22 
WIN
 *
	g¥evwö
 = 
NULL
;

28 
	$do_wödow
(
nch¨
, 
Pªnum
)

29 
nch¨
;

30 
Pªnum
;

32 
Pªnum1
;

33 
WIN
 *
wp
;

34 
ch¨_u
 *
±r
;

35 
Àn
;

36 
ty≥
 = -1;

37 
WIN
 *
wp2
;

39 i‡(
Pªnum
 == 0)

40 
Pªnum1
 = 1;

42 
Pªnum1
 = 
Pªnum
;

44 
nch¨
)

48 
	`Cål
('S'):

49 's': 
	`ª£t_VIsuÆ
();

50 
	`wö_•lô
(()
Pªnum
, 
TRUE
);

54 
K_CCIRCM
:

56 
	`ª£t_VIsuÆ
();

57 
	`°uffRódbuff
((
ch¨_u
 *)":split #");

58 i‡(
Pªnum
)

59 
	`°uf‚umRódbuff
(
Pªnum
);

60 
	`°uffch¨Ródbuff
('\n');

64 
	`Cål
('N'):

65 'n': 
	`ª£t_VIsuÆ
();

66 
	`°uffch¨Ródbuff
(':');

67 i‡(
Pªnum
)

68 
	`°uf‚umRódbuff
(
Pªnum
);

69 
	`°uffRódbuff
((
ch¨_u
 *)"new\n");

73 
	`Cål
('Q'):

74 'q': 
	`ª£t_VIsuÆ
();

75 
	`°uffRódbuff
((
ch¨_u
 *)":quit\n");

79 
	`Cål
('C'):

80 'c': 
	`ª£t_VIsuÆ
();

81 
	`°uffRódbuff
((
ch¨_u
 *)":close\n");

85 
	`Cål
('O'):

86 'o': 
	`ª£t_VIsuÆ
();

87 
	`°uffRódbuff
((
ch¨_u
 *)":only\n");

92 
K_DOWN
:

93 
	`Cål
('J'):

94 
wp
 = 
curwö
; wp->
w_√xt
 !
NULL
 && 
Pªnum1
-- > 0;

95 
wp
 = wp->
w_√xt
)

97 
√w_wö
:

103 i‡(
wp
->
w_buf„r
 !
curbuf
 && 
VIsuÆ_a˘ive
)

105 
	`íd_visuÆ_mode
();

106 
wp2
 = 
fú°wö
; wp2 !
NULL
; wp2 = wp2->
w_√xt
)

107 i‡(
wp2
->
w_buf„r
 =
curbuf
 &&

108 
wp2
->
w_ªdr_ty≥
 < 
NOT_VALID
)

110 
wp2
->
w_ªdr_ty≥
 = 
NOT_VALID
;

111 
	`ªdøw_œãr
(
NOT_VALID
);

114 
	`wö_íãr
(
wp
, 
TRUE
);

115 
	`cursupd©e
();

119 
	`Cål
('W'):

123 i‡(
œ°wö
 =
fú°wö
)

124 
	`bìp_Êush
();

127 i‡(
Pªnum
)

129 
wp
 = 
fú°wö
; --
Pªnum
 > 0; )

131 i‡(
wp
->
w_√xt
 =
NULL
)

134 
wp
 = wp->
w_√xt
;

139 i‡(
nch¨
 == 'W')

141 
wp
 = 
curwö
->
w_¥ev
;

142 i‡(
wp
 =
NULL
)

143 
wp
 = 
œ°wö
;

147 
wp
 = 
curwö
->
w_√xt
;

148 i‡(
wp
 =
NULL
)

149 
wp
 = 
fú°wö
;

152 
√w_wö
;

158 
K_UP
:

159 
	`Cål
('K'):

160 
wp
 = 
curwö
; wp->
w_¥ev
 !
NULL
 && 
Pªnum1
-- > 0;

161 
wp
 = wp->
w_¥ev
)

163 
√w_wö
;

167 
	`Cål
('T'):

168 
wp
 = 
fú°wö
;

169 
√w_wö
;

173 
	`Cål
('B'):

174 
wp
 = 
œ°wö
;

175 
√w_wö
;

179 
	`Cål
('P'):

180 i‡(
¥evwö
 =
NULL
)

181 
	`bìp_Êush
();

184 
wp
 = 
¥evwö
;

185 
√w_wö
;

191 
	`Cål
('X'):

192 
	`wö_exch™ge
(
Pªnum
);

196 
	`Cål
('R'):

197 'r': 
	`ª£t_VIsuÆ
();

198 
	`wö_rŸ©e
(
FALSE
, ()
Pªnum1
);

202 'R': 
	`ª£t_VIsuÆ
();

203 
	`wö_rŸ©e
(
TRUE
, ()
Pªnum1
);

207 '=': 
	`wö_equÆ
(
NULL
, 
TRUE
);

211 '+': 
	`wö_£theight
(
curwö
->
w_height
 + ()
Pªnum1
);

215 '-': 
	`wö_£theight
(
curwö
->
w_height
 - ()
Pªnum1
);

219 
	`Cål
('_'):

220 '_': 
	`wö_£theight
(
Pªnum
 ? ()Prenum : 9999);

225 
	`Cål
(']'):

226 
	`ª£t_VIsuÆ
();

227 
po°p⁄ed_•lô
 = 
TRUE
;

228 
	`°uffch¨Ródbuff
(
	`Cål
(']'));

233 
	`Cål
('F'):

234 
	`ª£t_VIsuÆ
();

235 
±r
 = 
	`fûe_«me_©_curs‹
(
FNAME_MESS
|
FNAME_HYP
|
FNAME_EXP
);

236 i‡(
±r
 !
NULL
)

238 
	`£çcm¨k
();

239 i‡(
	`wö_•lô
(0, 
FALSE
Ë=
OK
)

240 ()
	`do_ecmd
(0, 
±r
, 
NULL
, NULL, 
p_hid
, (
löír_t
)0, 
FALSE
);

241 
	`vim_‰ì
(
±r
);

249 
	`Cål
('I'):

250 
ty≥
 = 
FIND_ANY
;

253 
	`Cål
('D'):

254 i‡(
ty≥
 == -1)

255 
ty≥
 = 
FIND_DEFINE
;

257 i‡((
Àn
 = 
	`föd_idít_undî_curs‹
(&
±r
, 
FIND_IDENT
)) == 0)

259 
	`föd_∑âîn_ö_∑th
(
±r
, 
Àn
, 
TRUE
, TRUE, 
ty≥
,

260 
Pªnum1
, 
ACTION_SPLIT
, (
löír_t
)1, (löír_t)
MAXLNUM
);

261 
curwö
->
w_£t_cursw™t
 = 
TRUE
;

264 : 
	`bìp_Êush
();

267 
	}
}

270 
	$ª£t_VIsuÆ
()

272 i‡(
VIsuÆ_a˘ive
)

274 
	`íd_visuÆ_mode
();

275 
	`upd©e_curbuf
(
NOT_VALID
);

277 
	}
}

288 
	$wö_•lô
(
√w_height
, 
ªdøw
)

289 
√w_height
;

290 
ªdøw
;

292 
WIN
 *
wp
;

293 
löír_t
 
 um
;

294 
h
;

295 
i
;

296 
√ed_°©us
;

297 
do_equÆ
 = (
p_ó
 && 
√w_height
 == 0);

298 
√eded
;

299 
avaûabÀ
;

300 
curwö_height
;

303 i‡(
œ°wö
 =
fú°wö
 && 
p_ls
 =1 && 
curwö
->
w_°©us_height
 == 0)

304 
√ed_°©us
 = 
STATUS_HEIGHT
;

306 
√ed_°©us
 = 0;

311 
avaûabÀ
 = 
curwö
->
w_height
;

312 
√eded
 = 2 * 
MIN_ROWS
 + 
STATUS_HEIGHT
 + 
√ed_°©us
;

313 i‡(
p_ó
)

315 
wp
 = 
fú°wö
; w∞!
NULL
; w∞wp->
w_√xt
)

316 i‡(
wp
 !
curwö
)

318 
avaûabÀ
 +
wp
->
w_height
;

319 
√eded
 +
MIN_ROWS
;

322 i‡(
avaûabÀ
 < 
√eded
)

324 
	`EMSG
(
e_n‹oom
);

325  
FAIL
;

327 
curwö_height
 = 
curwö
->
w_height
;

328 i‡(
√ed_°©us
)

330 
curwö
->
w_°©us_height
 = 
STATUS_HEIGHT
;

331 
curwö_height
 -
STATUS_HEIGHT
;

333 i‡(
√w_height
 == 0)

334 
√w_height
 = 
curwö_height
 / 2;

336 i‡(
√w_height
 > 
curwö_height
 - 
MIN_ROWS
 - 
STATUS_HEIGHT
)

337 
√w_height
 = 
curwö_height
 - 
MIN_ROWS
 - 
STATUS_HEIGHT
;

339 i‡(
√w_height
 < 
MIN_ROWS
)

340 
√w_height
 = 
MIN_ROWS
;

343 i‡(
curwö_height
 - 
√w_height
 - 
STATUS_HEIGHT
 < 
MIN_ROWS
)

344 
do_equÆ
 = 
TRUE
;

348 i‡(
p_sb
)

349 
wp
 = 
	`wö_Æloc
(
curwö
);

351 
wp
 = 
	`wö_Æloc
(
curwö
->
w_¥ev
);

352 i‡(
wp
 =
NULL
)

353  
FAIL
;

357 
	`wö_√w_height
(
wp
, 
√w_height
);

358 
	`wö_√w_height
(
curwö
, 
curwö_height
 - (
√w_height
 + 
STATUS_HEIGHT
));

359 i‡(
p_sb
)

361 
wp
->
w_wöpos
 = 
curwö
->w_wöpo†+ curwö->
w_height
 + 
STATUS_HEIGHT
;

362 
wp
->
w_°©us_height
 = 
curwö
->w_status_height;

363 
curwö
->
w_°©us_height
 = 
STATUS_HEIGHT
;

367 
wp
->
w_wöpos
 = 
curwö
->w_winpos;

368 
wp
->
w_°©us_height
 = 
STATUS_HEIGHT
;

369 
curwö
->
w_wöpos
 = 
wp
->w_wöpo†+ wp->
w_height
 + 
STATUS_HEIGHT
;

374 
wp
->
w_buf„r
 = 
curbuf
;

375 
curbuf
->
b_nwödows
++;

376 
wp
->
w_curs‹
 = 
curwö
->w_cursor;

377 
wp
->
w_row
 = 
curwö
->w_row;

378 
wp
->
w_cﬁ
 = 
curwö
->w_col;

379 
wp
->
w_vútcﬁ
 = 
curwö
->w_virtcol;

380 
wp
->
w_cursw™t
 = 
curwö
->w_curswant;

381 
wp
->
w_£t_cursw™t
 = 
curwö
->w_set_curswant;

382 
wp
->
w_em±y_rows
 = 
curwö
->w_empty_rows;

383 
wp
->
w_À·cﬁ
 = 
curwö
->w_leftcol;

384 
wp
->
w_pcm¨k
 = 
curwö
->w_pcmark;

385 
wp
->
w_¥ev_pcm¨k
 = 
curwö
->w_prev_pcmark;

386 
wp
->
w_Æt_‚um
 = 
curwö
->w_alt_fnum;

388 
wp
->
w_¨g_idx
 = 
curwö
->w_arg_idx;

392 
i
 = 0; i < 
curwö
->
w_èg°ackÀn
; i++)

394 
wp
->
w_èg°ack
[
i
].
fm¨k
 = 
curwö
->w_tagstack[i].fmark;

395 
wp
->
w_èg°ack
[
i
].
èg«me
 = 
	`°rßve
(
curwö
->w_tagstack[i].tagname);

397 
wp
->
w_èg°ackidx
 = 
curwö
->w_tagstackidx;

398 
wp
->
w_èg°ackÀn
 = 
curwö
->w_tagstacklen;

399 
	`wö_c›y_›ti⁄s
(
curwö
, 
wp
);

403 
wp
->
w_ªdr_ty≥
 = 
NOT_VALID
;

404 
wp
->
w_ªdr_°©us
 = 
TRUE
;

405 
curwö
->
w_ªdr_ty≥
 = 
NOT_VALID
;

406 
curwö
->
w_ªdr_°©us
 = 
TRUE
;

410 i‡(
wp
->
w_height
 < 
curwö
->w_height)

411 
h
 = 
wp
->
w_height
;

413 
h
 = 
curwö
->
w_height
;

414 
h
 >>= 1;

415 
 um
 = 
wp
->
w_curs‹
.lnum;Ünum > 1; --lnum)

417 
h
 -
	`∂öes
(
 um
);

418 i‡(
h
 <= 0)

421 
wp
->
w_t›löe
 = 
 um
;

422 
curwö
->
w_t›löe
 = 
 um
;

423 i‡(
√ed_°©us
)

425 
	`msg_pos
(()
Rows
 - 1, 
sc_cﬁ
);

426 
	`msg_˛r_eos
();

427 
	`comp_cﬁ
();

428 
	`msg_pos
(()
Rows
 - 1, 0);

433 i‡(
do_equÆ
)

434 
	`wö_equÆ
(
wp
, 
FALSE
);

435 
	`wö_íãr
(
wp
, 
FALSE
);

437 i‡(
ªdøw
)

438 
	`upd©eS¸ìn
(
NOT_VALID
);

440  
OK
;

441 
	}
}

447 
	$wö_cou¡
()

449 
WIN
 *
wp
;

450 
cou¡
 = 0;

452 
wp
 = 
fú°wö
; w∞!
NULL
; w∞wp->
w_√xt
)

453 ++
cou¡
;

454  
cou¡
;

455 
	}
}

464 
	$make_wödows
(
cou¡
)

465 
cou¡
;

467 
maxcou¡
;

468 
todo
;

469 
p_sb_ßve
;

476 
maxcou¡
 = (
curwö
->
w_height
 + curwö->
w_°©us_height
 -

477 (
p_wh
 ? (p_wh - 1Ë: 4)Ë/ (
MIN_ROWS
 + 
STATUS_HEIGHT
);

478 i‡(
maxcou¡
 < 2)

479 
maxcou¡
 = 2;

480 i‡(
cou¡
 > 
maxcou¡
)

481 
cou¡
 = 
maxcou¡
;

486 i‡((
p_ls
 =2 || (
cou¡
 > 1 &&Ö_l†=1)Ë&& 
curwö
->
w_°©us_height
 == 0)

488 
curwö
->
w_°©us_height
 = 
STATUS_HEIGHT
;

489 
	`wö_√w_height
(
curwö
, curwö->
w_height
 - 
STATUS_HEIGHT
);

495 
p_sb_ßve
 = 
p_sb
;

496 
p_sb
 = 
FALSE
;

498 
todo
 = 
cou¡
 - 1;Åodo > 0; --todo)

499 i‡(
	`wö_•lô
(
curwö
->
w_height
 - (curwö->w_heighà- 
todo


500 * 
STATUS_HEIGHT
Ë/ (
todo
 + 1Ë- STATUS_HEIGHT, 
FALSE
Ë=
FAIL
)

502 
p_sb
 = 
p_sb_ßve
;

505  (
cou¡
 - 
todo
);

506 
	}
}

512 
	$wö_exch™ge
(
Pªnum
)

513 
Pªnum
;

515 
WIN
 *
wp
;

516 
WIN
 *
wp2
;

517 
ãmp
;

519 i‡(
œ°wö
 =
fú°wö
)

521 
	`bìp_Êush
();

528 i‡(
Pªnum
)

530 
wp
 = 
fú°wö
;

531 
wp
 !
NULL
 && --
Pªnum
 > 0)

532 
wp
 = wp->
w_√xt
;

534 i‡(
curwö
->
w_√xt
 !
NULL
)

535 
wp
 = 
curwö
->
w_√xt
;

537 
wp
 = 
curwö
->
w_¥ev
;

539 i‡(
wp
 =
curwö
 || w∞=
NULL
)

550 
wp2
 = 
curwö
->
w_¥ev
;

551 
	`wö_ªmove
(
curwö
);

552 
	`wö_≠≥nd
(
wp
->
w_¥ev
, 
curwö
);

553 i‡(
wp
 !
wp2
)

555 
	`wö_ªmove
(
wp
);

556 
	`wö_≠≥nd
(
wp2
, 
wp
);

558 
ãmp
 = 
curwö
->
w_°©us_height
;

559 
curwö
->
w_°©us_height
 = 
wp
->w_status_height;

560 
wp
->
w_°©us_height
 = 
ãmp
;

562 
	`wö_comp_pos
();

564 
	`wö_íãr
(
wp
, 
TRUE
);

565 
	`cursupd©e
();

566 
	`upd©eS¸ìn
(
CLEAR
);

568 #ifde‡
USE_GUI


569 i‡(
gui
.
ö_u£
)

571 i‡(
gui
.
which_s¸ﬁlb¨s
[
SB_LEFT
])

572 
	`gui_mch_ª‹dî_s¸ﬁlb¨s
(
SB_LEFT
);

573 i‡(
gui
.
which_s¸ﬁlb¨s
[
SB_RIGHT
])

574 
	`gui_mch_ª‹dî_s¸ﬁlb¨s
(
SB_RIGHT
);

577 
	}
}

584 
	$wö_rŸ©e
(
upw¨ds
, 
cou¡
)

585 
upw¨ds
;

586 
cou¡
;

588 
WIN
 *
wp
;

589 
height
;

591 i‡(
fú°wö
 =
œ°wö
)

593 
	`bìp_Êush
();

596 
cou¡
--)

598 i‡(
upw¨ds
)

600 
wp
 = 
fú°wö
;

601 
	`wö_ªmove
(
wp
);

602 
	`wö_≠≥nd
(
œ°wö
, 
wp
);

603 
wp
 = 
œ°wö
->
w_¥ev
;

607 
wp
 = 
œ°wö
;

608 
	`wö_ªmove
(
œ°wö
);

609 
	`wö_≠≥nd
(
NULL
, 
wp
);

610 
wp
 = 
fú°wö
;

613 
height
 = 
œ°wö
->
w_°©us_height
;

614 
œ°wö
->
w_°©us_height
 = 
wp
->w_status_height;

615 
wp
->
w_°©us_height
 = 
height
;

618 (Ë
	`wö_comp_pos
();

621 
	`cursupd©e
();

622 
	`upd©eS¸ìn
(
CLEAR
);

624 #ifde‡
USE_GUI


625 i‡(
gui
.
ö_u£
)

627 i‡(
gui
.
which_s¸ﬁlb¨s
[
SB_LEFT
])

628 
	`gui_mch_ª‹dî_s¸ﬁlb¨s
(
SB_LEFT
);

629 i‡(
gui
.
which_s¸ﬁlb¨s
[
SB_RIGHT
])

630 
	`gui_mch_ª‹dî_s¸ﬁlb¨s
(
SB_RIGHT
);

633 
	}
}

641 
	$wö_equÆ
(
√xt_curwö
, 
ªdøw
)

642 
WIN
 *
√xt_curwö
;

643 
ªdøw
;

645 
tŸÆ
;

646 
Àss
;

647 
wöcou¡
;

648 
wöpos
;

649 
ãmp
;

650 
WIN
 *
wp
;

651 
√w_height
;

656 
tŸÆ
 = 0;

657 
wöcou¡
 = 0;

658 
wp
 = 
fú°wö
; wp; w∞wp->
w_√xt
)

660 
tŸÆ
 +
wp
->
w_height
 - 
MIN_ROWS
;

661 
wöcou¡
++;

667 
Àss
 = 0;

668 i‡(
√xt_curwö
 !
NULL
)

670 i‡(
p_wh
)

672 i‡(
p_wh
 - 
MIN_ROWS
 > 
tŸÆ
)

673 
Àss
 = 
tŸÆ
;

676 
Àss
 = 
p_wh
 - 
MIN_ROWS
 - 
tŸÆ
 / 
wöcou¡
;

677 i‡(
Àss
 < 0)

678 
Àss
 = 0;

686 
wöpos
 = 0;

687 
wp
 = 
fú°wö
; w∞!
NULL
; w∞wp->
w_√xt
)

689 i‡(
wp
 =
√xt_curwö
 && 
Àss
)

691 
Àss
 = 0;

692 
ãmp
 = 
p_wh
 - 
MIN_ROWS
;

693 i‡(
ãmp
 > 
tŸÆ
)

694 
ãmp
 = 
tŸÆ
;

697 
ãmp
 = (
tŸÆ
 - 
Àss
 + (
wöcou¡
 >> 1)) / wincount;

698 
√w_height
 = 
MIN_ROWS
 + 
ãmp
;

699 i‡(
wp
->
w_wöpos
 !
wöpos
 || wp->
w_height
 !
√w_height
)

701 
wp
->
w_ªdr_ty≥
 = 
NOT_VALID
;

702 
wp
->
w_ªdr_°©us
 = 
TRUE
;

704 
wp
->
w_wöpos
 = 
wöpos
;

705 
	`wö_√w_height
(
wp
, 
√w_height
);

706 
tŸÆ
 -
ãmp
;

707 --
wöcou¡
;

708 
wöpos
 +
wp
->
w_height
 + wp->
w_°©us_height
;

710 i‡(
ªdøw
)

712 
	`cursupd©e
();

713 
	`upd©eS¸ìn
(
CLEAR
);

715 
	}
}

721 
	$˛o£_wödows
(
buf
)

722 
BUF
 *
buf
;

724 
WIN
 *
wö
;

726 ++
RedøwögDißbÀd
;

727 
wö
 = 
fú°wö
; wö !
NULL
 && 
œ°wö
 != firstwin; )

729 i‡(
wö
->
w_buf„r
 =
buf
)

731 
	`˛o£_wödow
(
wö
, 
FALSE
);

732 
wö
 = 
fú°wö
;

735 
wö
 = wö->
w_√xt
;

737 --
RedøwögDißbÀd
;

738 
	}
}

747 
	$˛o£_wödow
(
wö
, 
‰ì_buf
)

748 
WIN
 *
wö
;

749 
‰ì_buf
;

751 
WIN
 *
wp
;

753 i‡(
œ°wö
 =
fú°wö
)

755 
	`EMSG
("Cannot closeÜast window");

767 i‡((!
p_sb
 && 
wö
->
w_√xt
 !
NULL
Ë|| wö->
w_¥ev
 == NULL)

769 
wp
 = 
wö
->
w_√xt
;

770 
wp
->
w_wöpos
 = 
wö
->w_winpos;

773 
wp
 = 
wö
->
w_¥ev
;

774 
	`wö_√w_height
(
wp
, wp->
w_height
 + 
wö
->w_heighà+ wö->
w_°©us_height
);

776 #ifde‡
AUTOCMD


777 i‡(
wö
 =
curwö
)

779 i‡(
wp
->
w_buf„r
 !
curbuf
)

780 
	`≠∂y_autocmds
(
EVENT_BUFLEAVE
, 
NULL
, NULL);

781 
	`≠∂y_autocmds
(
EVENT_WINLEAVE
, 
NULL
, NULL);

788 
	`˛o£_buf„r
(
wö
, wö->
w_buf„r
, 
‰ì_buf
, 
FALSE
);

790 
	`wö_‰ì
(
wö
);

791 i‡(
wö
 =
curwö
)

792 
curwö
 = 
NULL
;

793 i‡(
p_ó
)

794 
	`wö_equÆ
(
wp
, 
FALSE
);

795 i‡(
curwö
 =
NULL
)

796 
	`wö_íãr
(
wp
, 
FALSE
);

801 i‡(
œ°wö
->
w_°©us_height
 &&

802 (
p_ls
 =0 || (p_l†=1 && 
fú°wö
 =
œ°wö
)))

804 
	`wö_√w_height
(
œ°wö
,Üa°wö->
w_height
 +Üa°wö->
w_°©us_height
);

805 
œ°wö
->
w_°©us_height
 = 0;

806 
	`comp_cﬁ
();

809 
	`upd©eS¸ìn
(
NOT_VALID
);

810 i‡(
RedøwögDißbÀd
)

811 
	`comp_BŸlöe
(
wp
);

812 
	}
}

821 
	$˛o£_Ÿhîs
(
mesßge
)

822 
mesßge
;

824 
WIN
 *
wp
;

825 
WIN
 *
√xtwp
;

827 i‡(
œ°wö
 =
fú°wö
)

829 i‡(
mesßge


830 #ifde‡
AUTOCMD


831 && !
autocmd_busy


834 
	`MSG
("Already only one window");

838 
wp
 = 
fú°wö
; w∞!
NULL
; w∞
√xtwp
)

840 
√xtwp
 = 
wp
->
w_√xt
;

841 i‡(
wp
 =
curwö
)

846 
	`˛o£_buf„r
(
wp
, wp->
w_buf„r
, 
FALSE
, FALSE);

851 
	`wö_√w_height
(
curwö
,

852 
curwö
->
w_height
 + 
wp
->w_heighà+ wp->
w_°©us_height
);

853 
	`wö_‰ì
(
wp
);

860 i‡(
curwö
->
w_°©us_height
 && 
p_ls
 != 2)

862 
	`wö_√w_height
(
curwö
, curwö->
w_height
 + curwö->
w_°©us_height
);

863 
curwö
->
w_°©us_height
 = 0;

865 
curwö
->
w_wöpos
 = 0;

866 i‡(
mesßge
)

867 
	`upd©eS¸ìn
(
NOT_VALID
);

868 
	}
}

876 
	$wö_öô
(
wp
)

877 
WIN
 *
wp
;

879 
wp
->
w_ªdr_ty≥
 = 
NOT_VALID
;

880 
wp
->
w_curs‹
.
 um
 = 1;

881 
wp
->
w_cursw™t
 = wp->
w_curs‹
.
cﬁ
 = 0;

882 
wp
->
w_pcm¨k
.
 um
 = 1;

883 
wp
->
w_pcm¨k
.
cﬁ
 = 0;

884 
wp
->
w_¥ev_pcm¨k
.
 um
 = 0;

885 
wp
->
w_¥ev_pcm¨k
.
cﬁ
 = 0;

886 
wp
->
w_t›löe
 = 1;

887 
wp
->
w_bŸlöe
 = 2;

888 
	}
}

894 
	$wö_íãr
(
wp
, 
undo_sync
)

895 
WIN
 *
wp
;

896 
undo_sync
;

898 #ifde‡
AUTOCMD


899 
Ÿhî_buf„r
 = 
FALSE
;

902 i‡(
wp
 =
curwö
)

905 #ifde‡
AUTOCMD


906 i‡(
curwö
 !
NULL
)

908 i‡(
wp
->
w_buf„r
 !
curbuf
)

910 
	`≠∂y_autocmds
(
EVENT_BUFLEAVE
, 
NULL
, NULL);

911 
Ÿhî_buf„r
 = 
TRUE
;

913 
	`≠∂y_autocmds
(
EVENT_WINLEAVE
, 
NULL
, NULL);

918 i‡(
undo_sync
 && 
curbuf
 !
wp
->
w_buf„r
)

919 
	`u_sync
();

921 i‡(
wp
->
w_buf„r
 !
curbuf
)

922 
	`buf_c›y_›ti⁄s
(
curbuf
, 
wp
->
w_buf„r
, 
TRUE
);

923 i‡(
curwö
 !
NULL
)

924 
¥evwö
 = 
curwö
;

925 
curwö
 = 
wp
;

926 
curbuf
 = 
wp
->
w_buf„r
;

928 #ifde‡
AUTOCMD


929 
	`≠∂y_autocmds
(
EVENT_WINENTER
, 
NULL
, NULL);

930 i‡(
Ÿhî_buf„r
)

931 
	`≠∂y_autocmds
(
EVENT_BUFENTER
, 
NULL
, NULL);

934 
	`makëôÀ
();

936 i‡(
p_wh
 && 
curwö
->
w_height
 <Ö_wh)

937 
	`wö_£theight
(()
p_wh
);

938 #ifde‡
USE_MOUSE


939 
	`£tmou£
();

941 
	}
}

946 
WIN
 *

947 
	$wö_Æloc
(
a·î
)

948 
WIN
 *
a·î
;

950 
WIN
 *
√wwö
;

955 
√wwö
 = (
WIN
 *)
	`Æloc
(()(WIN));

956 i‡(
√wwö
)

961 ()
	`vim_mem£t
(
√wwö
, 0, (
WIN
));

965 
	`wö_≠≥nd
(
a·î
, 
√wwö
);

967 
	`wö_Æloc_lsize
(
√wwö
);

970 
√wwö
->
w_t›löe
 = 1;

971 
√wwö
->
w_bŸlöe
 = 2;

972 
√wwö
->
w_curs‹
.
 um
 = 1;

974 #ifde‡
USE_GUI


976 
√wwö
->
w_s¸ﬁlb¨
.
height
 = 0;

979  
√wwö
;

980 
	}
}

986 
	$wö_‰ì
(
wp
)

987 
WIN
 *
wp
;

989 
i
;

991 i‡(
¥evwö
 =
wp
)

992 
¥evwö
 = 
NULL
;

993 
	`wö_‰ì_lsize
(
wp
);

995 
i
 = 0; i < 
wp
->
w_èg°ackÀn
; ++i)

996 
	`‰ì
(
wp
->
w_èg°ack
[
i
].
èg«me
);

998 #ifde‡
USE_GUI


999 i‡(
gui
.
ö_u£
)

1000 
	`gui_mch_de°roy_s¸ﬁlb¨
(
wp
);

1003 
	`wö_ªmove
(
wp
);

1004 
	`vim_‰ì
(
wp
);

1005 
	}
}

1008 
	$wö_≠≥nd
(
a·î
, 
wp
)

1009 
WIN
 *
a·î
, *
wp
;

1011 
WIN
 *
bef‹e
;

1013 i‡(
a·î
 =
NULL
)

1014 
bef‹e
 = 
fú°wö
;

1016 
bef‹e
 = 
a·î
->
w_√xt
;

1018 
wp
->
w_√xt
 = 
bef‹e
;

1019 
wp
->
w_¥ev
 = 
a·î
;

1020 i‡(
a·î
 =
NULL
)

1021 
fú°wö
 = 
wp
;

1023 
a·î
->
w_√xt
 = 
wp
;

1024 i‡(
bef‹e
 =
NULL
)

1025 
œ°wö
 = 
wp
;

1027 
bef‹e
->
w_¥ev
 = 
wp
;

1028 
	}
}

1034 
	$wö_ªmove
(
wp
)

1035 
WIN
 *
wp
;

1037 i‡(
wp
->
w_¥ev
)

1038 
wp
->
w_¥ev
->
w_√xt
 = wp->w_next;

1040 
fú°wö
 = 
wp
->
w_√xt
;

1041 i‡(
wp
->
w_√xt
)

1042 
wp
->
w_√xt
->
w_¥ev
 = wp->w_prev;

1044 
œ°wö
 = 
wp
->
w_¥ev
;

1045 
	}
}

1052 
	$wö_Æloc_lsize
(
wp
)

1053 
WIN
 *
wp
;

1055 
wp
->
w_lsize_vÆid
 = 0;

1056 
wp
->
w_lsize_ um
 = (
löír_t
 *Ë
	`mÆloc
((
size_t
Ë(
Rows
 * (linenr_t)));

1057 
wp
->
w_lsize
 = (
ch¨_u
 *)
	`mÆloc
((
size_t
Ë
Rows
);

1058 i‡(
wp
->
w_lsize_ um
 =
NULL
 || wp->
w_lsize
 == NULL)

1060 
	`wö_‰ì_lsize
(
wp
);

1061 
wp
->
w_lsize_ um
 = 
NULL
;

1062 
wp
->
w_lsize
 = 
NULL
;

1063  
FAIL
;

1065  
OK
;

1066 
	}
}

1072 
	$wö_‰ì_lsize
(
wp
)

1073 
WIN
 *
wp
;

1075 
	`vim_‰ì
(
wp
->
w_lsize_ um
);

1076 
	`vim_‰ì
(
wp
->
w_lsize
);

1077 
	}
}

1083 
	$s¸ìn_√w_rows
()

1085 
WIN
 *
wp
;

1086 
exåa_löes
;

1088 i‡(
fú°wö
 =
NULL
)

1094 
	`compuã_cmdrow
();

1095 
exåa_löes
 = 
Rows
 - 
p_ch
 - 
cmdlöe_row
;

1096 i‡(
exåa_löes
 < 0)

1098 
wp
 = 
œ°wö
; wp; w∞wp->
w_¥ev
)

1100 i‡(
wp
->
w_height
 - 
MIN_ROWS
 < -
exåa_löes
)

1102 
exåa_löes
 +
wp
->
w_height
 - 
MIN_ROWS
;

1103 
	`wö_√w_height
(
wp
, 
MIN_ROWS
);

1107 
	`wö_√w_height
(
wp
, wp->
w_height
 + 
exåa_löes
);

1111 ()
	`wö_comp_pos
();

1113 i‡(
exåa_löes
 > 0)

1114 
	`wö_√w_height
(
œ°wö
,Üa°wö->
w_height
 + 
exåa_löes
);

1116 
	`compuã_cmdrow
();

1118 i‡(
p_ó
)

1119 
	`wö_equÆ
(
curwö
, 
FALSE
);

1120 
	}
}

1127 
	$wö_comp_pos
()

1129 
WIN
 *
wp
;

1130 
row
;

1132 
row
 = 0;

1133 
wp
 = 
fú°wö
; w∞!
NULL
; w∞wp->
w_√xt
)

1135 i‡(
wp
->
w_wöpos
 !
row
)

1137 
wp
->
w_wöpos
 = 
row
;

1138 
wp
->
w_ªdr_ty≥
 = 
NOT_VALID
;

1139 
wp
->
w_ªdr_°©us
 = 
TRUE
;

1141 
row
 +
wp
->
w_height
 + wp->
w_°©us_height
;

1143  
row
;

1144 
	}
}

1150 
	$wö_£theight
(
height
)

1151 
height
;

1153 
WIN
 *
wp
;

1154 
room
;

1155 
èke
;

1156 
room_cmdlöe
;

1157 
row
;

1158 
run
;

1160 i‡(
height
 < 
MIN_ROWS
)

1161 
height
 = 
MIN_ROWS
;

1165 
room
 = 
MIN_ROWS
;

1166 
wp
 = 
fú°wö
; w∞!
NULL
; w∞wp->
w_√xt
)

1167 
room
 +
wp
->
w_height
 - 
MIN_ROWS
;

1171 
room_cmdlöe
 = 
Rows
 - 
p_ch
 - 
cmdlöe_row
;

1175 i‡(
height
 > 
room
 + 
room_cmdlöe
)

1176 
height
 = 
room
 + 
room_cmdlöe
;

1180 
èke
 = 
height
 - 
curwö
->
w_height
;

1181 i‡(
èke
 == 0)

1184 i‡(
èke
 > 0)

1186 
èke
 -
room_cmdlöe
;

1187 i‡(
èke
 < 0)

1188 
èke
 = 0;

1193 
	`wö_√w_height
(
curwö
, 
height
);

1199 
run
 = 0;Ñun < 2; ++run)

1201 i‡(
run
 == 0)

1202 
wp
 = 
curwö
->
w_√xt
;

1204 
wp
 = 
curwö
->
w_¥ev
;

1205 
wp
 !
NULL
 && 
èke
 != 0)

1207 i‡(
wp
->
w_height
 - 
èke
 < 
MIN_ROWS
)

1209 
èke
 -
wp
->
w_height
 - 
MIN_ROWS
;

1210 
	`wö_√w_height
(
wp
, 
MIN_ROWS
);

1214 
	`wö_√w_height
(
wp
, wp->
w_height
 - 
èke
);

1215 
èke
 = 0;

1217 i‡(
run
 == 0)

1218 
wp
 = wp->
w_√xt
;

1220 
wp
 = wp->
w_¥ev
;

1225 
row
 = 
	`wö_comp_pos
();

1231 
	`s¸ìn_fûl
(
row
, 
cmdlöe_row
, 0, ()
Cﬁumns
, ' ', ' ');

1232 
cmdlöe_row
 = 
row
;

1234 
	`upd©eS¸ìn
(
NOT_VALID
);

1235 
	}
}

1237 #ifde‡
USE_MOUSE


1239 
	$wö_døg_°©us_löe
(
off£t
)

1240 
off£t
;

1242 
WIN
 *
wp
;

1243 
room
;

1244 
row
;

1245 
up
;

1247 i‡(
off£t
 < 0)

1249 
up
 = 
TRUE
;

1250 
off£t
 = -offset;

1253 
up
 = 
FALSE
;

1255 i‡(
up
)

1257 
room
 = 0;

1258 
wp
 = 
curwö
; w∞!
NULL
 && 
room
 < 
off£t
; w∞wp->
w_¥ev
)

1259 
room
 +
wp
->
w_height
 - 
MIN_ROWS
;

1260 
wp
 = 
curwö
->
w_√xt
;

1267 
room
 = 
Rows
 - 
cmdlöe_row
;

1268 i‡(
curwö
->
w_√xt
 =
NULL
)

1269 
room
 -= 1;

1271 
room
 -
p_ch
;

1272 
wp
 = 
curwö
->
w_√xt
; w∞!
NULL
 && 
room
 < 
off£t
; wp = wp->w_next)

1273 
room
 +
wp
->
w_height
 - 
MIN_ROWS
;

1274 
wp
 = 
curwö
;

1277 i‡(
room
 < 
off£t
)

1278 
off£t
 = 
room
;

1279 i‡(
off£t
 <= 0)

1282 i‡(
wp
 !
NULL
)

1283 
	`wö_√w_height
(
wp
, wp->
w_height
 + 
off£t
);

1285 i‡(
up
)

1286 
wp
 = 
curwö
;

1288 
wp
 = 
curwö
->
w_√xt
;

1290 
wp
 !
NULL
 && 
off£t
 > 0)

1292 i‡(
wp
->
w_height
 - 
off£t
 < 
MIN_ROWS
)

1294 
off£t
 -
wp
->
w_height
 - 
MIN_ROWS
;

1295 
	`wö_√w_height
(
wp
, 
MIN_ROWS
);

1299 
	`wö_√w_height
(
wp
, wp->
w_height
 - 
off£t
);

1300 
off£t
 = 0;

1302 i‡(
up
)

1303 
wp
 = wp->
w_¥ev
;

1305 
wp
 = wp->
w_√xt
;

1307 
row
 = 
	`wö_comp_pos
();

1308 
	`s¸ìn_fûl
(
row
, 
cmdlöe_row
, 0, ()
Cﬁumns
, ' ', ' ');

1309 
cmdlöe_row
 = 
row
;

1310 
p_ch
 = 
Rows
 - 
cmdlöe_row
;

1311 
	`upd©eS¸ìn
(
NOT_VALID
);

1312 
	`showmode
();

1313 
	}
}

1320 
	$wö_√w_height
(
wp
, 
height
)

1321 
WIN
 *
wp
;

1322 
height
;

1326 
wp
->
w_height
 = 
height
;

1327 
	`wö_comp_s¸ﬁl
(
wp
);

1328 
wp
->
w_ªdr_ty≥
 = 
NOT_VALID
;

1329 
wp
->
w_ªdr_°©us
 = 
TRUE
;

1330 
	}
}

1333 
	$wö_comp_s¸ﬁl
(
wp
)

1334 
WIN
 *
wp
;

1336 
wp
->
w_p_s¸ﬁl
 = (wp->
w_height
 >> 1);

1337 i‡(
wp
->
w_p_s¸ﬁl
 == 0)

1338 
wp
->
w_p_s¸ﬁl
 = 1;

1339 
	}
}

1345 
	$comm™d_height
()

1347 
cuºít
;

1349 
cuºít
 = 
Rows
 - 
cmdlöe_row
;

1350 i‡(
p_ch
 > 
cuºít
)

1352 i‡(
œ°wö
->
w_height
 - (
p_ch
 - 
cuºít
Ë< 
MIN_ROWS
)

1354 
	`emsg
(
e_n‹oom
);

1355 
p_ch
 = 
œ°wö
->
w_height
 - 
MIN_ROWS
 + 
cuºít
;

1358 
	`s¸ìn_fûl
(()(
Rows
 - 
p_ch
), ()Rows, 0, ()
Cﬁumns
, ' ', ' ');

1360 
	`wö_√w_height
(
œ°wö
,Üa°wö->
w_height
 + 
cuºít
 - ()
p_ch
);

1361 
cmdlöe_row
 = 
Rows
 - 
p_ch
;

1362 
ªdøw_cmdlöe
 = 
TRUE
;

1363 
	}
}

1366 
	$œ°_°©us
()

1368 i‡(
œ°wö
->
w_°©us_height
)

1371 i‡(
p_ls
 =0 || (p_l†=1 && 
fú°wö
 =
œ°wö
))

1373 
	`wö_√w_height
(
œ°wö
,Üa°wö->
w_height
 + 1);

1374 
œ°wö
->
w_°©us_height
 = 0;

1380 i‡(
p_ls
 =2 || (p_l†=1 && 
fú°wö
 !
œ°wö
))

1382 i‡(
œ°wö
->
w_height
 <
MIN_ROWS
)

1383 
	`emsg
(
e_n‹oom
);

1386 
	`wö_√w_height
(
œ°wö
,Üa°wö->
w_height
 - 1);

1387 
œ°wö
->
w_°©us_height
 = 1;

1391 
	}
}

1401 
ch¨_u
 *

1402 
	$fûe_«me_©_curs‹
(
›ti⁄s
)

1403 
›ti⁄s
;

1405  
	`gë_fûe_«me_ö_∑th
(
	`ml_gë_cuæöe
(),

1406 
curwö
->
w_curs‹
.
cﬁ
, 
›ti⁄s
);

1407 
	}
}

1413 
ch¨_u
 *

1414 
	$gë_fûe_«me_ö_∑th
(
±r
, 
cﬁ
, 
›ti⁄s
)

1415 
ch¨_u
 *
±r
;

1416 
cﬁ
;

1417 
›ti⁄s
;

1419 
ch¨_u
 *
dú
;

1420 
ch¨_u
 *
fûe_«me
;

1421 
ch¨_u
 
ßve_ch¨
;

1422 
ch¨_u
 *
cuº_∑th
 = 
NULL
;

1423 
cuº_∑th_Àn
;

1424 
Àn
;

1427 
±r
[
cﬁ
] !
NUL
 && !
	`isfûech¨
(ptr[col]))

1428 ++
cﬁ
;

1429 i‡(
±r
[
cﬁ
] =
NUL
)

1431 i‡(
›ti⁄s
 & 
FNAME_MESS
)

1432 
	`EMSG
("No fileÇame under cursor");

1433  
NULL
;

1437 
cﬁ
 >0 && 
	`isfûech¨
(
±r
[col]))

1438 --
cﬁ
;

1439 
±r
 +
cﬁ
 + 1;

1440 
cﬁ
 = 0;

1443 
	`isfûech¨
(
±r
[
cﬁ
]))

1444 ++
cﬁ
;

1446 i‡(
›ti⁄s
 & 
FNAME_HYP
)

1452 i‡((
fûe_«me
 = 
	`vim_°rchr
(
±r
, ':')Ë!
NULL
 &&

1453 
	`STRNCMP
(
fûe_«me
, "://", (
size_t
)3) == 0 &&

1454 (
fûe_«me
 = 
	`vim_°rchr
(fûe_«mê+ 3, '/')Ë!
NULL
 &&

1455 
fûe_«me
 < 
±r
 + 
cﬁ
)

1457 
cﬁ
 -
fûe_«me
 - 
±r
;

1458 
±r
 = 
fûe_«me
;

1459 i‡(
±r
[1] == '~')

1461 ++
±r
;

1462 --
cﬁ
;

1467 i‡(!(
›ti⁄s
 & 
FNAME_EXP
))

1468  
	`°∫ßve
(
±r
, 
cﬁ
);

1471 
ßve_ch¨
 = 
±r
[
cﬁ
];

1472 
±r
[
cﬁ
] = 
NUL
;

1473 
	`ex∑nd_ív
(
±r
, 
NameBuff
, 
MAXPATHL
);

1474 
±r
[
cﬁ
] = 
ßve_ch¨
;

1476 i‡(
	`isFuŒName
(
NameBuff
))

1478 i‡((
fûe_«me
 = 
	`°rßve
(
NameBuff
)Ë=
NULL
)

1479  
NULL
;

1480 i‡(
	`gë≥rm
(
fûe_«me
) >= 0)

1481  
fûe_«me
;

1482 i‡(
›ti⁄s
 & 
FNAME_MESS
)

1484 
	`•rötf
((*)
IObuff
, "C™'àföd fûê`%s'", 
NameBuff
);

1485 
	`emsg
(
IObuff
);

1490 i‡(
curbuf
->
b_xfûíame
 !
NULL
)

1492 
cuº_∑th
 = 
curbuf
->
b_xfûíame
;

1493 
±r
 = 
	`gëèû
(
cuº_∑th
);

1494 
cuº_∑th_Àn
 = 
±r
 - 
cuº_∑th
;

1497 
cuº_∑th_Àn
 = 0;

1498 i‡((
fûe_«me
 = 
	`Æloc
(()(
cuº_∑th_Àn
 + 
	`STRLEN
(
p_∑th
) +

1499 
	`STRLEN
(
NameBuff
Ë+ 3))Ë=
NULL
)

1500  
NULL
;

1502 
dú
 = 
p_∑th
; *dir;)

1504 
Àn
 = 
	`c›y_›ti⁄_∑π
(&
dú
, 
fûe_«me
, 31000, " ,");

1506 i‡(
Àn
 != 0)

1509 i‡(
fûe_«me
[0] ='.' && 
cuº_∑th_Àn
 > 0)

1511 i‡(
Àn
 == 1)

1512 
Àn
 = 0;

1515 
Àn
 -= 2;

1516 
	`vim_memmove
(
fûe_«me
 + 
cuº_∑th_Àn
, file_name + 2,

1517 (
size_t
)
Àn
);

1519 
	`STRNCPY
(
fûe_«me
, 
cuº_∑th
, 
cuº_∑th_Àn
);

1520 
Àn
 +
cuº_∑th_Àn
;

1522 i‡(!
	`i•©h£p
(
fûe_«me
[
Àn
 - 1]))

1523 
fûe_«me
[
Àn
++] = 
PATHSEP
;

1525 
	`STRCPY
(
fûe_«me
 + 
Àn
, 
NameBuff
);

1526 i‡(
	`gë≥rm
(
fûe_«me
) >= 0)

1527  
fûe_«me
;

1529 i‡(
›ti⁄s
 & 
FNAME_MESS
)

1530 
	`EMSG2
("C™'àföd fûê\"%s\" i¿∑th", 
NameBuff
);

1532 
	`vim_‰ì
(
fûe_«me
);

1533  
NULL
;

1534 
	}
}

1541 
	$mö_rows
()

1543 
WIN
 *
wp
;

1544 
tŸÆ
;

1546 i‡(
fú°wö
 =
NULL
)

1547  
MIN_ROWS
 + 1;

1549 
tŸÆ
 = 
p_ch
;

1550 
wp
 = 
fú°wö
; w∞!
NULL
; w∞wp->
w_√xt
)

1551 
tŸÆ
 +
MIN_ROWS
 + 
wp
->
w_°©us_height
;

1552  
tŸÆ
;

1553 
	}
}

1560 
	$⁄ly_⁄e_wödow
()

1562 
cou¡
 = 0;

1563 
WIN
 *
wp
;

1565 
wp
 = 
fú°wö
; w∞!
NULL
; w∞wp->
w_√xt
)

1566 i‡(!
wp
->
w_buf„r
->
b_hñp
 || w∞=
curwö
)

1567 ++
cou¡
;

1568  (
cou¡
 <= 1);

1569 
	}
}

	@tools/ctags/ctags.c

54 
	~<°dio.h
>

55 
	~<°rög.h
>

56 
	~<˘y≥.h
>

57 #ifde‡
__EMX__


58 
	~<sys/ty≥s.h
>

60 
	~<sys/°©.h
>

62 #i‡
deföed
(
__STDC__
)

63 
	~<°dlib.h
>

64 #i‡
deföed
(
__BORLANDC__
)

65 
	#MSDOS


	)

66 
	~<io.h
>

67 
	~<dú.h
>

68 #ñi‡!
deföed
(
AMIGA
)

69 
	~<uni°d.h
>

71 #ñi‡
deföed
(
WIN32
)

72 
	~<°dlib.h
>

73 
	~<io.h
>

75 c⁄°

	)

78 #ifde‡
DEBUG


79 
	~<as£π.h
>

86 
	#VERSION
 "Cègs, Vî. 0.43 Bëa, by D¨ª¿Hõbît"

	)

88 #i‡
deföed
(
__MSDOS__
Ë&& ! deföed(
MSDOS
)

89 
	#MSDOS


	)

92 #i‡! 
deföed
 (
__ARGS
Ë&& (deföed(
__STDC__
Ë|| deföed(
WIN32
))

93 
	#__ARGS
(
x
Ë
	)
x

94 
	#USING_PROTOTYPES


	)

96 
	#__ARGS
(
x
Ë()

	)

97 #unde‡
USING_PROTOTYPES


100 #i‡
deföed
(
MSDOS
Ë|| deföed(
OS2
Ë|| deföed(
WIN32
Ë|| deföed(
AMIGA
)

101 
	#INTERNAL_SORT


	)

102 
	#XREF_TMP
 "ègsXXXXXX"

	)

104 
	#XREF_TMP
 "/tmp/˘agsXXXXXX"

	)

107 
	#ENV_VARIABLE_NAME
 "CTAGS"

	)

108 
	#MAX_HEADER_EXTENSIONS
 100

	)

109 
	#MAX_ENV_ARGS
 20

	)

110 
	#CPP_NESTING_LEVEL
 20

	)

112 #i‚de‡
MAXPATH


113 
	#MAXPATH
 256

	)

116 #i‚de‡
MAXNAME


117 
	#MAXNAME
 256

	)

120 #i‚de‡
MAXLINE


121 
	#MAXLINE
 1024

	)

126 
	#HEADER_SEPARATORS
 ".,;"

	)

130 
	#NEWLINE
 '\n'

	)

131 
	#CR
 '\r'

	)

132 
	#DOUBLE_QUOTE
 '"'

	)

133 
	#SINGLE_QUOTE
 '\''

	)

134 
	#BACKSLASH
 '\\'

	)

142 
	#isidít
(
c
Ë(
	`iß um
(cË|| (cË='_')

	)

146 
	#isidít1
(
c
Ë(
	`ißÕha
(cË|| (cË='_')

	)

148 
	#is•a˚èb
(
c
Ë((cË=' ' || (cË='\t')

	)

150 
	#ègTy≥Name
(
ty≥
Ë((—y≥Ë< 
TAG_NUMTYPES
Ë? 
TagTy≥Names
[ty≥] : "?")

	)

152 
	#˝pIgn‹e
(Ë(
Cµ
.
dúe˘ive
.
ifdef
[Cµ.dúe˘ive.
Àvñ
].
ign‹e
)

	)

156 #i‚de‡
S_ISREG


157 #ifde‡
AMIGA


158 
	#S_ISREG
(
mode
Ë
TRUE


	)

160 
	#S_ISREG
(
mode
Ë((modeË& 
S_IFREG
)

	)

164 #i‚de‡
S_ISLNK


165 
	#S_ISLNK
(
mode
Ë
FALSE


	)

172 #unde‡
FALSE


173 #unde‡
TRUE


174 íum { 
	mFALSE
, 
	mTRUE
 } 
	tboﬁón
;

176 íum { 
	mCOMMENT_NONE
, 
	mCOMMENT_C
, 
	mCOMMENT_CPLUS
 } 
	tCommít
;

182 
	mTAG_BLOCKTAG
,

183 
	mTAG_DEFINE
,

184 
	mTAG_ENUM
,

185 
	mTAG_FUNCDECL
,

186 
	mTAG_FUNCTION
,

187 
	mTAG_TYPEDEF
,

188 
	mTAG_VARIABLE
,

189 
	mTAG_NUMTYPES


190 } 
	tèg_t
;

199 
	mTOK_ARGS
,

200 
	mTOK_BODY
,

201 
	mTOK_COMMA
,

202 
	mTOK_IGNORE
,

203 
	mTOK_ENUM_BODY_END
,

204 
	mTOK_EOF
,

205 
	mTOK_NAME
,

206 
	mTOK_SEMICOLON
,

207 
	mTOK_SPEC


208 } 
	ttokí_t
;

213 
	mSCOPE_GLOBAL
,

214 
	mSCOPE_STATIC
,

215 
	mSCOPE_EXTERN
,

216 
	mSCOPE_TYPEDEF


217 } 
	tsc›e_t
;

223 
	mDECL_UNSPEC
,

224 
	mDECL_CLASS
,

225 
	mDECL_ENUM
,

226 
	mDECL_STRUCT
,

227 
	mDECL_UNION


228 } 
	tde˛_t
;

231 
	mloˇti⁄
;

232 
	mlöeNumbî
;

233 *
	m«me
;

234 } 
	tèg_öfo
;

237 
	mDRCTV_NONE
,

238 
	mDRCTV_HASH
,

239 
	mDRCTV_DEFINE
,

240 
	mDRCTV_IF


241 } 
	tdr˘v_°©e
;

246 
sc›e_t
 
	msc›e
;

247 
de˛_t
 
	mde˛¨©i⁄
;

248 
tokí_t
 
	mtokí
;

249 
tokí_t
 
	m¥ev
;

250 
boﬁón
 
	mfuncPå
;

251 
boﬁón
 
	mgŸName
;

252 
boﬁón
 
	möEnumBody
;

253 
èg_öfo
 
	mèg
;

254 
èg_öfo
 
	m±ag
;

255 } 
	t°©emít_t
;

263 
	gEnvArgLi°
[
MAXLINE
];

268 c⁄° *
	gTagTy≥Names
[] = {

272 c⁄° *c⁄° 
	gHñp
[] = {

273 
VERSION
,

321 
NULL
,

331 
	mdeföe
[
MAXNAME
];

332 
	m«me
[
MAXNAME
];

333 
	m¥ev
[
MAXNAME
];

334 
	m≤ame
[
MAXNAME
];

335 } 
	gBuf„r
;

341 
boﬁón
 
	mdeföes
;

342 
boﬁón
 
	míumVÆues
;

343 
boﬁón
 
	mfun˘i⁄s
;

344 
boﬁón
 
	mblockTags
;

345 
boﬁón
 
	m¥ŸŸy≥s
;

346 
boﬁón
 
	mty≥defs
;

347 
boﬁón
 
	mv¨übÀs
;

348 
boﬁón
 
	m¥efix
;

349 
boﬁón
 
	m°©ics
;

350 } 
	mö˛ude
;

351 
boﬁón
 
	m≠≥nd
;

352 
boﬁón
 
	mbackw¨d
;

353 
boﬁón
 
	mw¨nögs
;

354 
boﬁón
 
	mxªf
;

355 c⁄° *
	mfûeLi°
;

356 c⁄° *
	mègFûe
;

357 c⁄° *
	mhódîExt
[
MAX_HEADER_EXTENSIONS
];

358 #ifde‡
DEBUG


359 
	mdebugLevñ
;

360 
	mbªakLöe
;

362 
boﬁón
 
	mbø˚F‹m©
;

363 } 
	gO±i⁄
 = {

365 
TRUE
,

366 
TRUE
,

367 
TRUE
,

368 
TRUE
,

369 
FALSE
,

370 
TRUE
,

371 
TRUE
,

372 
FALSE
,

373 
TRUE


375 
FALSE
,

376 
FALSE
,

377 
FALSE
,

378 
FALSE
,

379 
NULL
,

381 { "h", "H", "hµ", "hxx", "h++", 
NULL
 },

382 #ifde‡
DEBUG


385 
FALSE


389 c⁄° *
	m«me
;

390 
FILE
 *
	mÂ
;

391 
size_t
 
	mnumTags
;

392 °ru˘ { 
size_t
 
	mlöe
, 
	mèg
, 
	mfûe
; } 
	mmax
;

393 } 
	gTagFûe
 = { 
NULL
, NULL, 0, { 0, 0, 0 } };

398 c⁄° *
	m«me
;

399 
FILE
 *
	mÂ
;

400 
	mlöeNumbî
;

401 
	m£ek
;

402 
boﬁón
 
	ma·îNL
;

403 
	mungëch
;

404 
	mhódî
;

405 
boﬁón
 
	mw¨√d
;

406 } 
	gFûe
 = { 
NULL
, NULL, 0, -1, 
FALSE
, 0, FALSE, FALSE };

412 
	mungëch
;

414 
dr˘v_°©e
 
	m°©e
;

415 
boﬁón
 
	mac˚±
;

416 
èg_öfo
 
	mèg
;

417 
boﬁón
 
	mªsﬁve
;

418 
	mÀvñ
;

420 
boﬁón
 
	mign‹e
;

421 
boﬁón
 
	m∑thCho£n
;

422 } 
	mifdef
[
CPP_NESTING_LEVEL
];

423 } 
	mdúe˘ive
;

424 } 
	gCµ
 = {

427 
DRCTV_NONE
,

428 
FALSE
,

429 { 0, 0, 
Buf„r
.
deföe
 },

430 
FALSE
,

432 {{
FALSE
,FALSE}}

439 #i‡!
deföed
(
__STDC__
Ë&& !deföed(
WIN32
)

440 *
gëív
();

441 
‰ì
();

442 *
mÆloc
();

443 *
mkãmp
();

444 
°©
();

445 
sy°em
();

446 
u∆ök
();

449 #ifde‡
AMIGA


450 
	~<f˙é.h
>

453 #ifde‡
DEBUG


454 
löeBªak
 
__ARGS
(());

455 
debugO≥n
 
__ARGS
((c⁄° 
«me
[]));

456 
debugPutc
 
__ARGS
((c⁄° 
c
, c⁄° 
Àvñ
));

457 
debugLabñ
 
__ARGS
((c⁄° 
èg_t
 
ègTy≥
, c⁄° 
ègName
[]));

460 
boﬁón
 
isFûeHódî
 
__ARGS
((c⁄° 
«me
[]));

461 
boﬁón
 
fûeO≥n
 
__ARGS
((c⁄° 
«me
[]));

462 
fûeClo£
 
__ARGS
(());

463 
fûeUngëc
 
__ARGS
((
c
));

464 
fûeGëc
 
__ARGS
(());

465 
fûeC›yLöe
 
__ARGS
((
FILE
 *c⁄° 
Â
, c⁄° 
£ek
 ));

466 
fûeC›yLöeSh‹t
 
__ARGS
((
FILE
 *c⁄° 
Â
, c⁄° 
£ek
,

467 c⁄° 
limô
));

469 
wrôeXªfE¡ry
 
__ARGS
((c⁄° 
èg_öfo
 *c⁄° 
èg
,

470 c⁄° 
èg_t
 
èg_ty≥
));

471 
makeTag
 
__ARGS
((c⁄° 
èg_öfo
 *c⁄° 
èg
, c⁄° 
sc›e_t
 
sc›e
,

472 c⁄° 
èg_t
 
èg_ty≥
));

473 
makeDeföeTag
 
__ARGS
((c⁄° 
èg_öfo
 *c⁄° 
èg
,

474 c⁄° 
sc›e_t
 
sc›e
));

478 
boﬁón
 
˝pO≥n
 
__ARGS
((c⁄° 
«me
[]));

479 
˝pClo£
 
__ARGS
(());

480 
˝pUngëc
 
__ARGS
((c⁄° 
c
));

481 
boﬁón
 
˝pRódDúe˘ive
 
__ARGS
((
c
, *
«me
));

482 
boﬁón
 
˝pRódIdítifõr
 
__ARGS
((
c
, 
èg_öfo
 *c⁄° 
èg
));

483 
boﬁón
 
pushCµIgn‹e
 
__ARGS
((c⁄° boﬁó¿
ign‹e
,

484 c⁄° 
boﬁón
 
∑thCho£n
));

485 
boﬁón
 
p›CµIgn‹e
 
__ARGS
(());

486 
boﬁón
 
¥evCµIgn‹e
 
__ARGS
(());

487 
boﬁón
 
£tCµIgn‹e
 
__ARGS
((c⁄° boﬁó¿
ign‹e
));

488 
boﬁón
 
wasP©hCho£n
 
__ARGS
(());

489 
boﬁón
 
h™dÀDúe˘ive
 
__ARGS
((c⁄° 
c
));

490 
Commít
 
isCommít
 
__ARGS
(());

491 
skùOvîCCommít
 
__ARGS
(());

492 
skùOvîC∂usCommít
 
__ARGS
(());

493 
skùToEndOfSåög
 
__ARGS
(());

494 
skùToEndOfCh¨
 
__ARGS
(());

495 
˝pGëc
 
__ARGS
(());

499 
skùToN⁄Whôe
 
__ARGS
(());

500 
skùToCh¨a˘î
 
__ARGS
((c⁄° 
födch¨
));

501 
skùToF‹m©ãdBø˚M©ch
 
__ARGS
(());

502 
boﬁón
 
skùToM©ch
 
__ARGS
((c⁄° 
∑ú
[]));

503 
skùInôülizî
 
__ARGS
((c⁄° 
boﬁón
 
öEnumBody
));

504 
ªadIdídifõr
 
__ARGS
((c⁄° 
fú°Ch¨
, 
«me
[]));

505 
skùP¨amëîDe˛¨©i⁄s
 
__ARGS
((
c
));

506 
boﬁón
 
™ÆyzeP¨ís
 
__ARGS
((
°©emít_t
 *c⁄° 
°
));

507 
™ÆyzeIdítifõr
 
__ARGS
((
°©emít_t
 *c⁄° 
°
));

508 
boﬁón
 
√xtTokí
 
__ARGS
((
°©emít_t
 *c⁄° 
°
));

512 
öôSèãmít
 
__ARGS
((
°©emít_t
 *c⁄° 
°
));

513 
boﬁón
 
¸óãTags
 
__ARGS
((c⁄° 
«me
[]));

514 
boﬁón
 
isSour˚Fûe
 
__ARGS
((c⁄° 
fûíame
[]));

515 c⁄° *
gëNextLi°Fûe
 
__ARGS
((
FILE
 *c⁄° 
Â
));

516 
¸óãTagsF‹Li°
 
__ARGS
((c⁄° 
li°Fûe
[]));

517 
¸óãTagsF‹Args
 
__ARGS
((*c⁄° 
¨gLi°
[]));

521 #ifde‡
INTERNAL_SORT


522 
Áèl
 
__ARGS
(–c⁄° 
msg
[]));

523 
com∑ªTags
 
__ARGS
((c⁄° *c⁄° 
⁄e
, c⁄° *c⁄° 
two
));

524 
s‹tTags
 
__ARGS
(());

529 
¥ötUßge
 
__ARGS
((c⁄° 
îr‹
[]));

530 
ªadExãnsi⁄Li°
 
__ARGS
((
li°
[]));

531 
˛órTagLi°
 
__ARGS
(());

532 
≠∂yTagIn˛usi⁄Li°
 
__ARGS
((c⁄° 
li°
[]));

533 *
ªadO±i⁄Arg
 
__ARGS
((c⁄° 
›ti⁄
, **c⁄° 
¨g
,

534 *c⁄° 
¨gLi°
[], *c⁄° 
¨gNum
));

535 
∑r£O±i⁄s
 
__ARGS
((*c⁄° 
¨gLi°
[]));

536 
∑r£Envú⁄mítO±i⁄s
 
__ARGS
(());

542 #ifde‡
DEBUG


544 
	$löeBªak
(Ë{
	}
}

546 
	$debugO≥n
–
«me
 )

547 c⁄° 
«me
[];

549 i‡((
O±i⁄
.
debugLevñ
 & 4) != 0)

551 
	`¥ötf
("O≥nög: %s\n", 
«me
);

552 
	`fÊush
(
°dout
);

554 
	}
}

556 
	$debugPutc
–
c
, 
Àvñ
 )

557 c⁄° 
c
;

558 c⁄° 
Àvñ
;

560 i‡((
O±i⁄
.
debugLevñ
 & 
Àvñ
Ë!0 && 
c
 !
EOF
)

562 
	`putch¨
(
c
);

563 
	`fÊush
(
°dout
);

565 
	}
}

567 
	$debugLabñ
–
ègTy≥
, 
ègName
 )

568 c⁄° 
èg_t
 
ègTy≥
;

569 c⁄° 
ègName
[];

571 i‡((
O±i⁄
.
debugLevñ
 & 3) != 0)

573 
	`¥ötf
("<#%s:%s#>", 
	`ègTy≥Name
(
ègTy≥
), 
ègName
);

574 
	`fÊush
(
°dout
);

576 
	}
}

584 
boﬁón
 
	$isFûeHódî
–
«me
 )

585 c⁄° 
«me
[];

587 
boﬁón
 
hódî
 = 
FALSE
;

588 c⁄° *
exãnsi⁄
;

590 
exãnsi⁄
 = 
	`°ºchr
(
«me
, '.');

591 i‡(
exãnsi⁄
 !
NULL
)

593 
i
;

595 ++
exãnsi⁄
;

596 
i
 = 0 ; 
O±i⁄
.
hódîExt
[i] !
NULL
 ; ++i)

598 i‡(
	`°rcmp
(
O±i⁄
.
hódîExt
[
i
], 
exãnsi⁄
) == 0)

600 
hódî
 = 
TRUE
;

605  
hódî
;

606 
	}
}

611 
boﬁón
 
	$fûeO≥n
–
«me
 )

612 c⁄° 
«me
[];

614 
boﬁón
 
›íed
 = 
FALSE
;

615 
°©
 
°©us
;

619 i‡(
Fûe
.
Â
 !
NULL
)

621 
	`f˛o£
(
Fûe
.
Â
);

622 
Fûe
.
Â
 = 
NULL
;

625 i‡(
	`°©
(
«me
, &
°©us
) != 0)

626 
	`≥º‹
(
«me
);

627 i‡(
	`S_ISLNK
(
°©us
.
°_mode
Ë|| 
	`S_ISREG
(status.st_mode))

632 #i‡
	`deföed
(
MSDOS
Ë|| deföed(
OS2
Ë|| deföed(
WIN32
)

633 
Fûe
.
Â
 = 
	`f›í
(
«me
, "rb");

635 
Fûe
.
Â
 = 
	`f›í
(
«me
, "r");

637 i‡(
Fûe
.
Â
 =
NULL
)

638 
	`≥º‹
(
«me
);

641 
›íed
 = 
TRUE
;

642 
Fûe
.
«me
 =Çame;

643 
Fûe
.
löeNumbî
 = 0L;

644 
Fûe
.
£ek
 = 0L;

645 
Fûe
.
a·îNL
 = 
TRUE
;

646 
Fûe
.
w¨√d
 = 
FALSE
;

648 i‡(
	`°æí
(
«me
Ë> 
TagFûe
.
max
.
fûe
)

649 
TagFûe
.
max
.
fûe
 = 
	`°æí
(
«me
);

653 
Fûe
.
hódî
 = 
	`isFûeHódî
(
«me
);

654 #ifde‡
DEBUG


655 
	`debugO≥n
(
«me
);

659  
›íed
;

660 
	}
}

662 
	$fûeClo£
()

664 i‡(
Fûe
.
Â
 !
NULL
)

666 
	`f˛o£
(
Fûe
.
Â
);

667 
Fûe
.
Â
 = 
NULL
;

669 
	}
}

671 
	$fûeUngëc
–
c
 )

672 
c
;

674 
Fûe
.
ungëch
 = 
c
;

675 
	}
}

681 
	$fûeGëc
()

683 
c
;

689 i‡(
Fûe
.
ungëch
 != 0)

691 
c
 = 
Fûe
.
ungëch
;

692 
Fûe
.
ungëch
 = 0;

693  
c
;

698 i‡(
Fûe
.
a·îNL
)

700 
Fûe
.
a·îNL
 = 
FALSE
;

701 
Fûe
.
£ek
 = 
	`·ñl
(Fûe.
Â
);

702 
Fûe
.
löeNumbî
++;

703 #ifde‡
DEBUG


704 i‡(
O±i⁄
.
bªakLöe
 =
Fûe
.
löeNumbî
Ë
	`löeBªak
();

708 
c
 = 
	`gëc
(
Fûe
.
Â
);

710 i‡(
c
 =
NEWLINE
)

711 
Fûe
.
a·îNL
 = 
TRUE
;

713 #ifde‡
DEBUG


714 
	`debugPutc
(
c
, 1);

716  
c
;

717 
	}
}

727 
	$fûeC›yLöe
–
Â
, 
£ek
 )

728 
FILE
 *c⁄° 
Â
;

729 c⁄° 
£ek
;

731 
ﬁd£ek
;

732 
c
;

733 
√xt
;

734 
Àngth
 = 0;

736 
ﬁd£ek
 = 
	`·ñl
(
Fûe
.
Â
);

737 
	`f£ek
(
Fûe
.
Â
, 
£ek
, 0);

738 
c
 = 
	`gëc
(
Fûe
.
Â
);

742 
c
 !
NEWLINE
)

744 
√xt
 = 
	`gëc
(
Fûe
.
Â
);

748 i‡(
c
 =
BACKSLASH
 || c =(
O±i⁄
.
backw¨d
 ? '?' : '/') ||

749 (
c
 ='$' && 
√xt
 =
NEWLINE
))

751 
	`putc
(
BACKSLASH
, 
Â
);

752 ++
Àngth
;

757 i‡(
c
 !
CR
 || 
√xt
 !
NEWLINE
)

759 
	`putc
(
c
, 
Â
);

760 ++
Àngth
;

763 
c
 = 
√xt
;

765 
	`f£ek
(
Fûe
.
Â
, 
ﬁd£ek
, 0);

766  
Àngth
;

767 
	}
}

769 
	$fûeC›yLöeSh‹t
–
Â
, 
£ek
, 
limô
 )

770 
FILE
 *c⁄° 
Â
;

771 c⁄° 
£ek
;

772 c⁄° 
limô
;

774 c⁄° 
ﬁd£ek
 = 
	`·ñl
(
Fûe
.
Â
);

775 
c
;

776 
Àngth
;

777 
boﬁón
 
löeSèπed
 = 
FALSE
;

779 
	`f£ek
(
Fûe
.
Â
, 
£ek
, 0);

780 
c
 = 
	`gëc
(
Fûe
.
Â
);

784 
Àngth
 = 0 ; 
c
 !
NEWLINE
 &&Üígth < 
limô
 ; )

786 
√xt
 = 
	`gëc
(
Fûe
.
Â
);

788 i‡(
löeSèπed
 || ! 
	`is•a˚
(
c
))

790 
löeSèπed
 = 
TRUE
;

791 i‡(
	`is•a˚
(
c
))

793 
c
 = ' ';

794 
	`is•a˚
(
√xt
Ë&&Çexà!
NEWLINE
)

795 
√xt
 = 
	`gëc
(
Fûe
.
Â
);

797 i‡(
c
 !
CR
 || 
√xt
 !
NEWLINE
)

799 
	`putc
(
c
, 
Â
);

800 ++
Àngth
;

803 
c
 = 
√xt
;

805 
	`f£ek
(
Fûe
.
Â
, 
ﬁd£ek
, 0);

806  
Àngth
;

807 
	}
}

814 
	$wrôeXªfE¡ry
–
èg
, 
ègTy≥
 )

815 c⁄° 
èg_öfo
 *c⁄° 
èg
;

816 c⁄° 
èg_t
 
ègTy≥
;

818 
size_t
 
Àngth
;

820 
Àngth
 = 
	`Ârötf
(
TagFûe
.
Â
, "%-20s %-6s %4ld %-14s ",

821 
èg
->
«me
, 
	`ègTy≥Name
(
ègTy≥
),

822 
èg
->
löeNumbî
, 
Fûe
.
«me
);

823 
Àngth
 +
	`fûeC›yLöeSh‹t
(
TagFûe
.
Â
, 
èg
->
loˇti⁄
, 30);

824 
	`putc
(
NEWLINE
, 
TagFûe
.
Â
);

825 ++
Àngth
;

827 ++
TagFûe
.
numTags
;

828 i‡(
	`°æí
(
èg
->
«me
Ë> 
TagFûe
.
max
.tag)

829 
TagFûe
.
max
.
èg
 = 
	`°æí
—ag->
«me
);

830 i‡(
Àngth
 > 
TagFûe
.
max
.
löe
)

831 
TagFûe
.
max
.
löe
 = 
Àngth
;

832 
	}
}

837 
	$makeTag
–
èg
, 
sc›e
, 
ègTy≥
 )

838 c⁄° 
èg_öfo
 *c⁄° 
èg
;

839 c⁄° 
sc›e_t
 
sc›e
;

840 c⁄° 
èg_t
 
ègTy≥
;

842 
boﬁón
 
ö˛ude
 = 
FALSE
;

843 
size_t
 
Àngth
 = 0;

845 i‡(
sc›e
 !
SCOPE_EXTERN
)

846 
ègTy≥
)

848 
TAG_BLOCKTAG
: 
ö˛ude
 = 
O±i⁄
.ö˛ude.
blockTags
; ;

849 
TAG_DEFINE
: 
ö˛ude
 = 
O±i⁄
.ö˛ude.
deföes
; ;

850 
TAG_ENUM
: 
ö˛ude
 = 
O±i⁄
.ö˛ude.
íumVÆues
; ;

851 
TAG_FUNCTION
: 
ö˛ude
 = 
O±i⁄
.ö˛ude.
fun˘i⁄s
; ;

852 
TAG_FUNCDECL
: 
ö˛ude
 = 
O±i⁄
.ö˛ude.
¥ŸŸy≥s
; ;

853 
TAG_TYPEDEF
: 
ö˛ude
 = 
O±i⁄
.ö˛ude.
ty≥defs
; ;

854 
TAG_VARIABLE
: 
ö˛ude
 = 
O±i⁄
.ö˛ude.
v¨übÀs
; ;

859 i‡(
ö˛ude
)

861 i‡(
O±i⁄
.
xªf
)

862 
	`wrôeXªfE¡ry
(
èg
, 
ègTy≥
);

865 i‡(
O±i⁄
.
ö˛ude
.
¥efix
 && 
sc›e
 =
SCOPE_STATIC
)

867 
	`Âuts
(
Fûe
.
«me
, 
TagFûe
.
Â
);

868 
	`putc
(':', 
TagFûe
.
Â
);

869 
Àngth
 = 
	`°æí
(
Fûe
.
«me
) + 1;

871 
Àngth
 +
	`Ârötf
(
TagFûe
.
Â
, "%s\t%s\t", 
èg
->
«me
, 
Fûe
.name);

872 
Àngth
 +
	`Ârötf
(
TagFûe
.
Â
, "%c^", 
O±i⁄
.
backw¨d
 ? '?' : '/');

873 
Àngth
 +
	`fûeC›yLöe
(
TagFûe
.
Â
, 
èg
->
loˇti⁄
);

874 
Àngth
 +
	`Ârötf
(
TagFûe
.
Â
, "$%c\n", 
O±i⁄
.
backw¨d
 ? '?' : '/');

876 ++
TagFûe
.
numTags
;

877 i‡(
	`°æí
(
èg
->
«me
Ë> 
TagFûe
.
max
.tag)

878 
TagFûe
.
max
.
èg
 = 
	`°æí
—ag->
«me
);

879 i‡(
Àngth
 > 
TagFûe
.
max
.
löe
)

880 
TagFûe
.
max
.
löe
 = 
Àngth
;

883 #ifde‡
DEBUG


884 
	`debugLabñ
(
ègTy≥
, 
èg
->
«me
);

887 
	}
}

889 
	$makeDeföeTag
–
èg
, 
sc›e
 )

890 c⁄° 
èg_öfo
 *c⁄° 
èg
;

891 c⁄° 
sc›e_t
 
sc›e
;

893 i‡(
O±i⁄
.
ö˛ude
.
deföes
)

895 i‡(
O±i⁄
.
xªf
)

896 
	`wrôeXªfE¡ry
(
èg
, 
TAG_DEFINE
);

899 
size_t
 
Àngth
 = 0;

901 i‡(
O±i⁄
.
ö˛ude
.
¥efix
 && 
sc›e
 =
SCOPE_STATIC
)

903 
	`Âuts
(
Fûe
.
«me
, 
TagFûe
.
Â
);

904 
	`putc
(':', 
TagFûe
.
Â
);

905 
Àngth
 = 
	`°æí
(
Fûe
.
«me
) + 1;

907 
Àngth
 +
	`Ârötf
(
TagFûe
.
Â
, "%s\t%s\t%ld\n",

908 
èg
->
«me
, 
Fûe
.«me,Åag->
löeNumbî
);

910 ++
TagFûe
.
numTags
;

911 i‡(
	`°æí
(
èg
->
«me
Ë> 
TagFûe
.
max
.tag)

912 
TagFûe
.
max
.
èg
 = 
	`°æí
—ag->
«me
);

913 i‡(
Àngth
 > 
TagFûe
.
max
.
löe
)

914 
TagFûe
.
max
.
löe
 = 
Àngth
;

916 #ifde‡
DEBUG


917 
	`debugLabñ
(
TAG_DEFINE
, 
èg
->
«me
);

920 
	}
}

922 
boﬁón
 
	$˝pO≥n
–
«me
 )

923 c⁄° 
«me
[];

925 
boﬁón
 
›íed
;

927 
›íed
 = 
	`fûeO≥n
(
«me
);

928 i‡(
›íed
)

930 
Cµ
.
ungëch
 = 0;

931 
Cµ
.
dúe˘ive
.
°©e
 = 
DRCTV_NONE
;

932 
Cµ
.
dúe˘ive
.
ac˚±
 = 
TRUE
;

933 
Cµ
.
dúe˘ive
.
ªsﬁve
 = 
FALSE
;

934 
Cµ
.
dúe˘ive
.
Àvñ
 = 0;

936  
›íed
;

937 
	}
}

939 
	$˝pClo£
()

941 
	`fûeClo£
();

942 
	}
}

946 
	$˝pUngëc
–
c
 )

947 c⁄° 
c
;

949 
Cµ
.
ungëch
 = 
c
;

950 
	}
}

952 
boﬁón
 
	$˝pRódDúe˘ive
–
c
, 
«me
 )

953 
c
;

954 *
«me
;

958 *
«me
++ = 
c
;

959 } 
c
 = 
	`fûeGëc
(), (¯!
EOF
 && 
	`ißÕha
(c)));

960 
	`fûeUngëc
(
c
);

961 *
«me
 = '\0';

963  
	`is•a˚èb
(
c
);

964 
	}
}

966 
boﬁón
 
	$˝pRódIdítifõr
–
c
, 
èg
 )

967 
c
;

968 
èg_öfo
 *c⁄° 
èg
;

970 *
«me
 = 
èg
->name;

974 *
«me
++ = 
c
;

975 } 
c
 = 
	`fûeGëc
(), (¯!
EOF
 && 
	`isidít
(c)));

976 
	`fûeUngëc
(
c
);

977 *
«me
 = '\0';

978 
èg
->
loˇti⁄
 = 
Fûe
.
£ek
;

979 
èg
->
löeNumbî
 = 
Fûe
.lineNumber;

981  (
	`is•a˚
(
c
) || c == '(');

982 
	}
}

984 
boﬁón
 
	$pushCµIgn‹e
–
ign‹e
, 
∑thCho£n
 )

985 c⁄° 
boﬁón
 
ign‹e
;

986 c⁄° 
boﬁón
 
∑thCho£n
;

988 i‡(
Cµ
.
dúe˘ive
.
Àvñ
 < 
CPP_NESTING_LEVEL
 - 1)

990 ++
Cµ
.
dúe˘ive
.
Àvñ
;

991 
Cµ
.
dúe˘ive
.
ifdef
[Cµ.dúe˘ive.
Àvñ
].
ign‹e
 = ignore;

992 
Cµ
.
dúe˘ive
.
ifdef
[Cµ.dúe˘ive.
Àvñ
].
∑thCho£n
 =ÖathChosen;

994  
	`˝pIgn‹e
();

995 
	}
}

997 
boﬁón
 
	$p›CµIgn‹e
()

999 i‡(
Cµ
.
dúe˘ive
.
Àvñ
 > 0)

1000 --
Cµ
.
dúe˘ive
.
Àvñ
;

1002  
	`˝pIgn‹e
();

1003 
	}
}

1005 
boﬁón
 
	$¥evCµIgn‹e
()

1007 
boﬁón
 
ign‹e
;

1009 i‡(
Cµ
.
dúe˘ive
.
Àvñ
 <= 0)

1010 
ign‹e
 = 
FALSE
;

1012 
ign‹e
 = 
Cµ
.
dúe˘ive
.
ifdef
[Cµ.dúe˘ive.
Àvñ
 - 1].ignore;

1013  
ign‹e
;

1014 
	}
}

1016 
boﬁón
 
	$£tCµIgn‹e
–
ign‹e
 )

1017 c⁄° 
boﬁón
 
ign‹e
;

1019  
Cµ
.
dúe˘ive
.
ifdef
[Cµ.dúe˘ive.
Àvñ
].
ign‹e
 = ignore;

1020 
	}
}

1022 
boﬁón
 
	$wasP©hCho£n
()

1024  
Cµ
.
dúe˘ive
.
ifdef
[Cµ.dúe˘ive.
Àvñ
].
∑thCho£n
;

1025 
	}
}

1027 
boﬁón
 
	$h™dÀDúe˘ive
–
c
 )

1028 c⁄° 
c
;

1030 *c⁄° 
«me
 = 
Cµ
.
dúe˘ive
.
èg
.name;

1031 
sc›e_t
 
sc›e
 = 
Fûe
.
hódî
 ? 
SCOPE_GLOBAL
 : 
SCOPE_STATIC
;

1032 
boﬁón
 
ign‹e
 = 
FALSE
;

1034 
Cµ
.
dúe˘ive
.
°©e
)

1036 
DRCTV_NONE
:

1037 
ign‹e
 = 
	`˝pIgn‹e
();

1040 
DRCTV_HASH
:

1041 
	`˝pRódDúe˘ive
(
c
, 
«me
);

1042 i‡(
	`°rcmp
(
«me
, "define") == 0)

1043 
Cµ
.
dúe˘ive
.
°©e
 = 
DRCTV_DEFINE
;

1044 i‡(
	`°∫cmp
(
«me
, "if", (
size_t
)2) == 0)

1045 
Cµ
.
dúe˘ive
.
°©e
 = 
DRCTV_IF
;

1048 i‡(
	`°rcmp
(
«me
, "endif") == 0)

1049 
ign‹e
 = 
	`p›CµIgn‹e
();

1050 i‡(
Cµ
.
dúe˘ive
.
ªsﬁve
 && ! 
O±i⁄
.
bø˚F‹m©
)

1052 i‡(
	`°rcmp
(
«me
, "elif") == 0)

1053 
ign‹e
 = 
	`£tCµIgn‹e
(
TRUE
);

1054 i‡(
	`°rcmp
(
«me
, "else") == 0)

1055 
ign‹e
 = 
	`£tCµIgn‹e
(
	`¥evCµIgn‹e
(Ë|| 
	`wasP©hCho£n
());

1059 i‡(
	`°rcmp
(
«me
, "elif") == 0 ||

1060 
	`°rcmp
(
«me
, "else") == 0)

1061 
ign‹e
 = 
	`£tCµIgn‹e
(
FALSE
);

1063 
Cµ
.
dúe˘ive
.
°©e
 = 
DRCTV_NONE
;

1067 
DRCTV_DEFINE
:

1068 
	`˝pRódIdítifõr
(
c
, &
Cµ
.
dúe˘ive
.
èg
);

1069 i‡(
Fûe
.
hódî
 || 
O±i⁄
.
ö˛ude
.
°©ics
)

1070 
	`makeDeföeTag
(&
Cµ
.
dúe˘ive
.
èg
, 
sc›e
);

1071 
Cµ
.
dúe˘ive
.
°©e
 = 
DRCTV_NONE
;

1074 
DRCTV_IF
:

1075 i‡(
O±i⁄
.
bø˚F‹m©
)

1076 
ign‹e
 = 
	`pushCµIgn‹e
(
FALSE
, 
TRUE
);

1077 i‡(
c
 == '0')

1078 
ign‹e
 = 
	`pushCµIgn‹e
(
TRUE
, 
FALSE
);

1080 
ign‹e
 = 
	`pushCµIgn‹e
(
	`˝pIgn‹e
(), 
TRUE
);

1081 
Cµ
.
dúe˘ive
.
°©e
 = 
DRCTV_NONE
;

1084  
ign‹e
;

1085 
	}
}

1087 
Commít
 
	$isCommít
()

1089 
Commít
 
commít
;

1090 c⁄° 
√xt
 = 
	`fûeGëc
();

1092 i‡(
√xt
 == '*')

1093 
commít
 = 
COMMENT_C
;

1094 i‡(
√xt
 == '/')

1095 
commít
 = 
COMMENT_CPLUS
;

1098 
	`fûeUngëc
(
√xt
);

1099 
commít
 = 
COMMENT_NONE
;

1101  
commít
;

1102 
	}
}

1104 
	$skùOvîCCommít
()

1106 
c
 = 
	`fûeGëc
();

1108 
c
 !
EOF
)

1110 i‡(
c
 != '*')

1111 
c
 = 
	`fûeGëc
();

1114 c⁄° 
√xt
 = 
	`fûeGëc
();

1116 i‡(
√xt
 != '/')

1117 
c
 = 
√xt
;

1120 
c
 = ' ';

1125  
c
;

1126 
	}
}

1128 
	$skùOvîC∂usCommít
()

1130 
c
;

1132 (
c
 = 
	`fûeGëc
()Ë!
EOF
)

1134 i‡(
c
 =
BACKSLASH
)

1135 
c
 = 
	`fûeGëc
();

1136 i‡(
c
 =
NEWLINE
)

1139  
c
;

1140 
	}
}

1144 
	$skùToEndOfSåög
()

1146 
c
;

1148 (
c
 = 
	`fûeGëc
()Ë!
EOF
)

1150 i‡(
c
 =
BACKSLASH
)

1151 
c
 = 
	`fûeGëc
();

1152 i‡(
c
 =
DOUBLE_QUOTE
)

1154 i‡(
c
 =
NEWLINE
)

1156 
	`fûeUngëc
(
c
);

1161 
	}
}

1163 
	$skùToEndOfCh¨
()

1165 
c
;

1167 (
c
 = 
	`fûeGëc
()Ë!
EOF
)

1169 i‡(
c
 =
BACKSLASH
)

1170 
c
 = 
	`fûeGëc
();

1171 i‡(
c
 =
SINGLE_QUOTE
)

1173 i‡(
c
 =
NEWLINE
)

1175 
	`fûeUngëc
(
c
);

1180 
	}
}

1187 
	$˝pGëc
()

1189 
c
, 
√xt
;

1190 
boﬁón
 
ign‹e1ch¨
;

1191 
boﬁón
 
ign‹e
 = 
FALSE
;

1192 
Commít
 
commít
 = 
COMMENT_NONE
;

1193 íum { 
RETURN
, 
DIRECTIVE
 } 
mode
 = RETURN;

1195 i‡(
Cµ
.
ungëch
 != 0)

1197 
c
 = 
Cµ
.
ungëch
;

1198 
Cµ
.
ungëch
 = 0;

1199  
c
;

1203 
ign‹e1ch¨
 = 
FALSE
;

1205 
c
 = 
	`fûeGëc
();

1206 
c
)

1208 
EOF
:

1209 
mode
 = 
RETURN
;

1210 
ign‹e1ch¨
 = 
FALSE
;

1211 
ign‹e
 = 
FALSE
;

1214 
NEWLINE
:

1215 i‡(
mode
 =
DIRECTIVE
 && ! 
ign‹e
)

1216 
mode
 = 
RETURN
;

1217 
Cµ
.
dúe˘ive
.
ac˚±
 = 
TRUE
;

1219 
DOUBLE_QUOTE
:

1220 
Cµ
.
dúe˘ive
.
ac˚±
 = 
FALSE
;

1221 
c
 = 
	`skùToEndOfSåög
();

1224 i‡(
Cµ
.
dúe˘ive
.
ac˚±
)

1226 
mode
 = 
DIRECTIVE
;

1227 
Cµ
.
dúe˘ive
.
°©e
 = 
DRCTV_HASH
;

1228 
Cµ
.
dúe˘ive
.
ac˚±
 = 
FALSE
;

1231 
SINGLE_QUOTE
:

1232 
Cµ
.
dúe˘ive
.
ac˚±
 = 
FALSE
;

1233 
c
 = 
	`skùToEndOfCh¨
();

1236 
commít
 = 
	`isCommít
();

1237 i‡(
commít
 =
COMMENT_C
)

1238 
c
 = 
	`skùOvîCCommít
();

1239 i‡(
commít
 =
COMMENT_CPLUS
)

1241 
c
 = 
	`skùOvîC∂usCommít
();

1242 i‡(
c
 =
NEWLINE
)

1243 
	`fûeUngëc
(
c
);

1246 
Cµ
.
dúe˘ive
.
ac˚±
 = 
FALSE
;

1248 
BACKSLASH
:

1249 
√xt
 = 
	`fûeGëc
();

1250 i‡(
√xt
 =
NEWLINE
)

1251 
ign‹e1ch¨
 = 
TRUE
;

1254 
Cµ
.
dúe˘ive
.
ac˚±
 = 
FALSE
;

1255 
	`fûeUngëc
(
√xt
);

1259 i‡(! 
	`is•a˚
(
c
))

1261 
Cµ
.
dúe˘ive
.
ac˚±
 = 
FALSE
;

1262 i‡(
mode
 =
DIRECTIVE
)

1263 
ign‹e
 = 
	`h™dÀDúe˘ive
(
c
);

1267 } 
mode
 !
RETURN
 || 
ign‹e1ch¨
 || 
ign‹e
);

1269 #ifde‡
DEBUG


1270 
	`debugPutc
(
c
, 2);

1272  
c
;

1273 
	}
}

1281 
	$skùToN⁄Whôe
()

1283 
c
;

1287 
c
 = 
	`˝pGëc
();

1288 } 
c
 !
EOF
 && 
	`is•a˚
(c));

1290  
c
;

1291 
	}
}

1295 
	$skùToCh¨a˘î
–
födch¨
 )

1296 c⁄° 
födch¨
;

1298 
c
;

1301 
c
 = 
	`˝pGëc
();

1302 
c
 !
EOF
 && c !
födch¨
);

1304  
c
;

1305 
	}
}

1310 
	$skùToF‹m©ãdBø˚M©ch
()

1312 
c
, 
√xt
;

1314 
c
 = 
	`˝pGëc
();

1315 
√xt
 = 
	`˝pGëc
();

1316 
c
 !
EOF
 && (¯!'\n' || 
√xt
 != '}'))

1318 
c
 = 
√xt
;

1319 
√xt
 = 
	`˝pGëc
();

1321 
	}
}

1328 
boﬁón
 
	$skùToM©ch
–
∑ú
 )

1329 c⁄° 
∑ú
[];

1331 c⁄° 
öôülLevñ
 = 
Cµ
.
dúe˘ive
.
Àvñ
;

1332 
boﬁón
 
bø˚F‹m©tög
 = (
O±i⁄
.
bø˚F‹m©
 && 
	`°rcmp
("{}", 
∑ú
) == 0);

1333 
m©chLevñ
 = 1;

1334 
boﬁón
 
ok
 = 
TRUE
;

1335 
c
 = 0;

1337 
m©chLevñ
 > 0 && (
c
 = 
	`˝pGëc
()Ë!
EOF
)

1339 i‡(
c
 =
∑ú
[0])

1341 ++
m©chLevñ
;

1342 i‡(
bø˚F‹m©tög
 && 
Cµ
.
dúe˘ive
.
Àvñ
 !
öôülLevñ
)

1344 
	`skùToF‹m©ãdBø˚M©ch
();

1348 i‡(
c
 =
∑ú
[1])

1350 --
m©chLevñ
;

1351 i‡(
bø˚F‹m©tög
 && 
Cµ
.
dúe˘ive
.
Àvñ
 !
öôülLevñ
)

1353 
	`skùToF‹m©ãdBø˚M©ch
();

1358 i‡(
c
 =
EOF
)

1359 
ok
 = 
FALSE
;

1361  
ok
;

1362 
	}
}

1367 
	$skùInôülizî
–
öEnumBody
 )

1368 c⁄° 
boﬁón
 
öEnumBody
;

1370 
c
;

1372 
c
 = 
	`skùToN⁄Whôe
();

1373 i‡(
c
 ='{' && ! 
	`skùToM©ch
("{}"))

1374 
c
 = 
EOF
;

1375 
c
 !
EOF
)

1377 
c
 = 
	`˝pGëc
();

1378 i‡(
c
 =';' || c =',' || (¯='}' && 
öEnumBody
))

1380 i‡((
c
 ='{' || c ='}'Ë&& ! 
O±i⁄
.
bø˚F‹m©
)

1381 
c
 = 
EOF
;

1383  
c
;

1384 
	}
}

1389 
	$ªadIdídifõr
–
fú°Ch¨
, 
«me
 )

1390 c⁄° 
fú°Ch¨
;

1391 
«me
[];

1393 
c
, 
i
;

1395 
«me
[0] = 
fú°Ch¨
;

1396 
i
 = 1, 
c
 = 
	`˝pGëc
(); i < 
MAXNAME
 - 1 && 
	`isidít
(c);

1397 
i
++, 
c
 = 
	`˝pGëc
())

1399 
«me
[
i
] = 
c
;

1401 
«me
[
i
] = '\0';

1403 
	`˝pUngëc
(
c
);

1404 
	}
}

1406 
	$skùP¨amëîDe˛¨©i⁄s
–
c
 )

1407 
c
;

1409 
c
 !
EOF
 && c != ';' && c != ',' && c != '{')

1414 i‡(
	`isidít1
(
c
))

1418 i‡(
c
 ='{' && ! 
	`skùToM©ch
("{}"))

1419 
c
 = 
EOF
;

1421 
c
 = 
	`˝pGëc
();

1422 } 
c
 !
EOF
 && c != ';');

1424 i‡(
c
 !
EOF
)

1425 
c
 = 
	`skùToN⁄Whôe
();

1427  
c
;

1428 
	}
}

1430 
boﬁón
 
	$™ÆyzeP¨ís
–
°
 )

1431 
°©emít_t
 *c⁄° 
°
;

1433 
boﬁón
 
ok
 = 
TRUE
;

1434 
c
;

1436 
c
 = 
	`skùToN⁄Whôe
();

1437 i‡(
c
 == '*')

1439 
°
->
gŸName
 = 
FALSE
;

1440 
°
->
funcPå
 = 
TRUE
;

1441 
°
->
tokí
 = 
TOK_IGNORE
;

1445 
boﬁón
 
gŸName
 = 
FALSE
;

1446 
loˇti⁄
 = 0, 
löeNumbî
 = 0;

1447 *c⁄° 
«me
 = 
Buf„r
.
≤ame
;

1449 i‡(
	`isidít1
(
c
))

1451 
	`ªadIdídifõr
(
c
, 
«me
);

1452 
loˇti⁄
 = 
Fûe
.
£ek
;

1453 
löeNumbî
 = 
Fûe
.lineNumber;

1454 
gŸName
 = 
TRUE
;

1461 i‡(
c
 ='(' && 
°
->
gŸName
 && 
O±i⁄
.
ö˛ude
.
¥ŸŸy≥s
)

1463 
	`°r˝y
(
°
->
èg
.
«me
, st->
±ag
.name);

1464 
°
->
èg
.
loˇti⁄
 = st->
±ag
.location;

1465 
°
->
èg
.
löeNumbî
 = st->
±ag
.lineNumber;

1467 
	`˝pUngëc
(
c
);

1469 
ok
 = 
	`skùToM©ch
("()");

1470 i‡(
ok
)

1475 
c
 = 
	`skùToN⁄Whôe
();

1476 i‡(
°
->
gŸName
 && (
c
 == '{' || c == ';'))

1477 
°
->
tokí
 = 
TOK_ARGS
;

1478 i‡(
	`isidít1
(
c
))

1480 
°
->
tokí
 = 
TOK_ARGS
;

1481 
c
 = 
	`skùP¨amëîDe˛¨©i⁄s
(c);

1486 i‡(
gŸName
)

1488 
°
->
gŸName
 = 
TRUE
;

1489 
°
->
tokí
 = 
TOK_NAME
;

1490 
°
->
èg
.
loˇti⁄
 =Üocation;

1491 
°
->
èg
.
löeNumbî
 =ÜineNumber;

1492 
	`°r˝y
(
°
->
èg
.
«me
,Çame);

1494 
	`˝pUngëc
(
c
);

1497  
ok
;

1498 
	}
}

1504 
	$™ÆyzeIdítifõr
–
°
 )

1505 
°©emít_t
 *c⁄° 
°
;

1507 
boﬁón
 
m©ched
 = 
FALSE
;

1509 
	#m©ch
(
w‹d
Ë((
	`°rcmp
(
°
->
èg
.
«me
,(w‹d)Ë=0Ë&& (
m©ched
 = 
TRUE
))

	)

1511 
°
->
tokí
 = 
TOK_SPEC
;

1515 
°
->
èg
.
«me
[0])

1518 i‡(
	`m©ch
("˛ass" )Ë
°
->
de˛¨©i⁄
 = 
DECL_CLASS
;

1519 i‡(
	`m©ch
("c⁄°" )Ë
°
->
tokí
 = 
TOK_IGNORE
;

1520 i‡(
	`m©ch
("ch¨" )Ë
°
->
de˛¨©i⁄
 = 
DECL_UNSPEC
;

1522 'd':i‡(
	`m©ch
("doubÀ" )Ë
°
->
de˛¨©i⁄
 = 
DECL_UNSPEC
; ;

1524 i‡(
	`m©ch
("íum" )Ë
°
->
de˛¨©i⁄
 = 
DECL_ENUM
;

1525 i‡(
	`m©ch
("exã∫" )Ë
°
->
sc›e
 = 
SCOPE_EXTERN
;

1527 'f':i‡(
	`m©ch
("Êﬂt" )Ë
°
->
de˛¨©i⁄
 = 
DECL_UNSPEC
; ;

1528 'i':i‡(
	`m©ch
("öt" )Ë
°
->
de˛¨©i⁄
 = 
DECL_UNSPEC
; ;

1529 'l':i‡(
	`m©ch
("l⁄g" )Ë
°
->
de˛¨©i⁄
 = 
DECL_UNSPEC
; ;

1530 'p':i‡(
	`m©ch
("¥iv©e")Ë
°
->
sc›e
 = 
SCOPE_STATIC
; ;

1532 i‡(
	`m©ch
("°©ic" )Ë
°
->
sc›e
 = 
SCOPE_STATIC
;

1533 i‡(
	`m©ch
("°ru˘" )Ë
°
->
de˛¨©i⁄
 = 
DECL_STRUCT
;

1534 i‡(
	`m©ch
("sh‹t" )Ë
°
->
de˛¨©i⁄
 = 
DECL_UNSPEC
;

1535 i‡(
	`m©ch
("sig√d" )Ë
°
->
de˛¨©i⁄
 = 
DECL_UNSPEC
;

1537 't':i‡(
	`m©ch
("ty≥def")Ë
°
->
sc›e
 = 
SCOPE_TYPEDEF
; ;

1539 i‡(
	`m©ch
("uni⁄" )Ë
°
->
de˛¨©i⁄
 = 
DECL_UNION
;

1540 i‡(
	`m©ch
("unsig√d")Ë
°
->
de˛¨©i⁄
 = 
DECL_UNSPEC
;

1543 i‡(
	`m©ch
("void" )Ë
°
->
de˛¨©i⁄
 = 
DECL_UNSPEC
;

1544 i‡(
	`m©ch
("vﬁ©ûe")Ë
°
->
tokí
 = 
TOK_IGNORE
;

1548 i‡(! 
m©ched
)

1550 
°
->
gŸName
 = 
TRUE
;

1551 
°
->
tokí
 = 
TOK_NAME
;

1552 
°
->
èg
.
loˇti⁄
 = 
Fûe
.
£ek
;

1553 
°
->
èg
.
löeNumbî
 = 
Fûe
.lineNumber;

1555 
	}
}

1560 
boﬁón
 
	$√xtTokí
–
°
 )

1561 
°©emít_t
 *c⁄° 
°
;

1563 
c
;

1564 
boﬁón
 
ok
 = 
TRUE
;

1568 
c
 = 
	`˝pGëc
();

1570 
c
)

1572 ',': 
°
->
tokí
 = 
TOK_COMMA
; ;

1573 ';': 
°
->
tokí
 = 
TOK_SEMICOLON
; ;

1575 i‡(
°
->
de˛¨©i⁄
 !
DECL_CLASS
)

1576 
°
->
tokí
 = 
TOK_IGNORE
;

1579 
c
 = 
	`skùToCh¨a˘î
('{');

1580 
	`˝pUngëc
(
c
);

1584 
°
->
gŸName
 = 
FALSE
;

1587 
ok
 = 
	`™ÆyzeP¨ís
(
°
);

1591 i‡(
°
->
de˛¨©i⁄
 =
DECL_ENUM
 && st->
¥ev
 !
TOK_ARGS
)

1593 
°
->
öEnumBody
 = 
TRUE
;

1594 
°
->
tokí
 = 
TOK_BODY
;

1598 
°
->
tokí
 = 
TOK_BODY
;

1599 
ok
 = 
	`skùToM©ch
("{}");

1604 i‡(
°
->
öEnumBody
)

1605 
°
->
tokí
 = 
TOK_ENUM_BODY_END
;

1608 
°
->
tokí
 = 
TOK_IGNORE
;

1609 
ok
 = 
FALSE
;

1614 
ok
 = 
	`skùToM©ch
("[]");

1615 
°
->
tokí
 = 
TOK_IGNORE
;

1619 
c
 = 
	`skùInôülizî
(
°
->
öEnumBody
);

1620 i‡(
c
 =
EOF
)

1621 
ok
 = 
FALSE
;

1622 i‡(
c
 == ';')

1623 
°
->
tokí
 = 
TOK_SEMICOLON
;

1624 i‡(
c
 == ',')

1625 
°
->
tokí
 = 
TOK_COMMA
;

1626 i‡(
c
 ='}' && 
°
->
öEnumBody
)

1627 
°
->
tokí
 = 
TOK_ENUM_BODY_END
;

1630 
EOF
:

1631 
°
->
tokí
 = 
TOK_EOF
;

1635 i‡(! 
	`isidít1
(
c
))

1636 
°
->
tokí
 = 
TOK_IGNORE
;

1637 i‡(
°
->
funcPå
 && st->
gŸName
)

1638 
°
->
tokí
 = 
TOK_IGNORE
;

1641 i‡(
O±i⁄
.
ö˛ude
.
¥ŸŸy≥s
)

1645 
	`°r˝y
(
°
->
±ag
.
«me
, st->
èg
.name);

1646 
°
->
±ag
.
loˇti⁄
 = st->
èg
.location;

1647 
°
->
±ag
.
löeNumbî
 = st->
èg
.lineNumber;

1649 
	`ªadIdídifõr
(
c
, 
°
->
èg
.
«me
);

1650 
	`™ÆyzeIdítifõr
(
°
);

1653 } 
ok
 && 
°
->
tokí
 =
TOK_IGNORE
);

1655  
ok
;

1656 
	}
}

1662 
	$öôSèãmít
–
°
 )

1663 
°©emít_t
 *c⁄° 
°
;

1665 
°
->
sc›e
 = 
SCOPE_GLOBAL
;

1666 
°
->
de˛¨©i⁄
 = 
DECL_UNSPEC
;

1667 
°
->
tokí
 = 
TOK_SEMICOLON
;

1668 
°
->
¥ev
 = 
TOK_SEMICOLON
;

1669 
°
->
gŸName
 = 
FALSE
;

1670 
°
->
funcPå
 = 
FALSE
;

1671 
°
->
öEnumBody
 = 
FALSE
;

1672 
°
->
èg
.
loˇti⁄
 = 0;

1673 
°
->
èg
.
löeNumbî
 = 0;

1674 
°
->
èg
.
«me
 = 
Buf„r
.name;

1675 
°
->
èg
.
«me
[0] = '\0';

1677 i‡(
O±i⁄
.
ö˛ude
.
¥ŸŸy≥s
)

1679 
°
->
±ag
.
loˇti⁄
 = 0;

1680 
°
->
±ag
.
löeNumbî
 = 0;

1681 
°
->
±ag
.
«me
 = 
Buf„r
.
¥ev
;

1682 
°
->
±ag
.
«me
[0] = '\0';

1684 
	}
}

1689 
boﬁón
 
	$¸óãTags
–
«me
 )

1690 c⁄° 
«me
[];

1692 
°©emít_t
 
°
;

1693 
boﬁón
 
ok
 = 
TRUE
;

1695 i‡(
	`˝pO≥n
(
«me
))

1697 
	`öôSèãmít
(&
°
);

1699  ; (
ok
 = 
	`√xtTokí
(&
°
)Ë!0; st.
¥ev
 = st.
tokí
)

1701 i‡(
°
.
tokí
 =
TOK_EOF
)

1707 i‡(
°
.
tokí
 =
TOK_BODY
 && st.
¥ev
 =
TOK_NAME
)

1709 i‡(
°
.
de˛¨©i⁄
 =
DECL_CLASS
 ||

1710 
°
.
de˛¨©i⁄
 =
DECL_ENUM
 ||

1711 
°
.
de˛¨©i⁄
 =
DECL_STRUCT
 ||

1712 
°
.
de˛¨©i⁄
 =
DECL_UNION
)

1714 i‡(
Fûe
.
hódî
)

1715 
	`makeTag
(&
°
.
èg
, 
SCOPE_GLOBAL
, 
TAG_BLOCKTAG
);

1716 i‡(
O±i⁄
.
ö˛ude
.
°©ics
)

1717 
	`makeTag
(&
°
.
èg
, 
SCOPE_STATIC
, 
TAG_BLOCKTAG
);

1724 i‡(
°
.
tokí
 =
TOK_ENUM_BODY_END
 ||

1725 (
°
.
öEnumBody
 && st.
tokí
 =
TOK_COMMA
))

1727 i‡(
°
.
¥ev
 =
TOK_NAME
)

1729 i‡(
Fûe
.
hódî
)

1730 
	`makeTag
(&
°
.
èg
, 
SCOPE_GLOBAL
, 
TAG_ENUM
);

1731 i‡(
O±i⁄
.
ö˛ude
.
°©ics
)

1732 
	`makeTag
(&
°
.
èg
, 
SCOPE_STATIC
, 
TAG_ENUM
);

1738 i‡(
°
.
tokí
 =
TOK_BODY
 && st.
¥ev
 =
TOK_ARGS
 && st.
gŸName
)

1740 i‡(
°
.
sc›e
 !
SCOPE_STATIC
 || 
O±i⁄
.
ö˛ude
.
°©ics
)

1742 i‡(
°
.
sc›e
 =
SCOPE_EXTERN
)

1743 
°
.
sc›e
 = 
SCOPE_GLOBAL
;

1744 
	`makeTag
(&
°
.
èg
, st.
sc›e
, 
TAG_FUNCTION
);

1751 i‡(
°
.
tokí
 =
TOK_SEMICOLON
 || st.tokí =
TOK_COMMA
)

1753 i‡(
°
.
¥ev
 =
TOK_NAME
 || (°.
funcPå
 && st.
gŸName
))

1755 i‡(
°
.
sc›e
 =
SCOPE_TYPEDEF
)

1757 i‡(
Fûe
.
hódî
)

1758 
	`makeTag
(&
°
.
èg
, 
SCOPE_GLOBAL
, 
TAG_TYPEDEF
);

1759 i‡(
O±i⁄
.
ö˛ude
.
°©ics
)

1760 
	`makeTag
(&
°
.
èg
, 
SCOPE_STATIC
, 
TAG_TYPEDEF
);

1764 i‡(
°
.
sc›e
 =
SCOPE_GLOBAL
 || 
O±i⁄
.
ö˛ude
.
°©ics
)

1765 
	`makeTag
(&
°
.
èg
, st.
sc›e
, 
TAG_VARIABLE
);

1768 i‡(
°
.
¥ev
 =
TOK_ARGS
)

1770 i‡(
Fûe
.
hódî
 &&

1771 (
°
.
sc›e
 =
SCOPE_GLOBAL
 || st.sc›ê=
SCOPE_EXTERN
))

1773 
	`makeTag
(&
°
.
èg
, 
SCOPE_GLOBAL
, 
TAG_FUNCDECL
);

1780 i‡(
°
.
tokí
 =
TOK_SEMICOLON
 ||

1781 (
°
.
tokí
 =
TOK_BODY
 && st.
¥ev
 =
TOK_ARGS
))

1783 
	`öôSèãmít
(&
°
);

1784 
Cµ
.
dúe˘ive
.
ªsﬁve
 = 
FALSE
;

1787 
Cµ
.
dúe˘ive
.
ªsﬁve
 = 
TRUE
;

1789 
	`˝pClo£
();

1791  
ok
;

1792 
	}
}

1803 
boﬁón
 
	$isSour˚Fûe
–
fûíame
 )

1804 c⁄° 
fûíame
[];

1806 
löe
[
BUFSIZ
];

1807 
boﬁón
 
isSour˚
 = 
FALSE
;

1808 
FILE
 *
Â
;

1809 *
∑âîn
;

1810 *
èg
;

1811 *
ègPªfix
;

1812 *
ègF«me
;

1814 
Â
 = 
	`f›í
(
fûíame
, "r");

1815 i‡(
Â
 !
NULL
 && 
	`fgës
(
löe
, 
BUFSIZ
, fp) != NULL)

1817 i‡(
löe
[
	`°æí
(line) - 1] == '\n')

1818 
löe
[
	`°æí
(line) - 1] = 0;

1819 
ègF«me
 = 
	`°rchr
(
löe
, '\t');

1820 i‡(
ègF«me
 =
NULL
)

1821 
isSour˚
 = 
TRUE
;

1824 *
p
;

1826 *
ègF«me
 = 0;

1827 ++
ègF«me
;

1828 
èg
 = 
	`°rchr
(
löe
, ':');

1829 i‡(
èg
 =
NULL
)

1831 
ègPªfix
 = 
NULL
;

1832 
èg
 = 
löe
;

1836 
ègPªfix
 = 
löe
;

1837 *
èg
 = 0;

1838 ++
èg
;

1840 
∑âîn
 = 
	`°rchr
(
ègF«me
, '\t');

1841 i‡(
∑âîn
 =
NULL
)

1842 
isSour˚
 = 
TRUE
;

1845 *
∑âîn
 = 0;

1846 ++
∑âîn
;

1851 i‡(
ègPªfix
 !
NULL
 && 
	`°rcmp
—agPªfix, 
ègF«me
) != 0)

1852 
isSour˚
 = 
TRUE
;

1856 i‡(! 
	`isidít1
(
èg
[0]))

1857 
isSour˚
 = 
TRUE
;

1858 
p
 = 
èg
 + 1 ; *p != 0 ; ++p)

1860 i‡(! 
	`isidít
(*
p
))

1862 
isSour˚
 = 
TRUE
;

1871 i‡((
∑âîn
[0] != '/' &&Öattern[0] != '?') ||

1872 
∑âîn
[0] !∑âîn[
	`°æí
(pattern) - 1])

1874 
p
 = 
∑âîn
 ; *p != 0 ; ++p)

1876 i‡(! 
	`isdigô
(*
p
))

1878 
isSour˚
 = 
TRUE
;

1886 i‡(
Â
 !
NULL
)

1887 
	`f˛o£
(
Â
);

1888  
isSour˚
;

1889 
	}
}

1891 c⁄° *
	$gëNextLi°Fûe
–
Â
 )

1892 
FILE
 *c⁄° 
Â
;

1894 
fûeName
[
MAXPATH
];

1895 c⁄° *
buf
 = 
	`fgës
(
fûeName
, 
MAXPATH
, 
Â
);

1897 i‡(
buf
 !
NULL
)

1899 *c⁄° 
√wlöe
 = 
	`°rchr
(
fûeName
, '\n');

1901 i‡(
√wlöe
 =
NULL
)

1902 
fûeName
[
MAXPATH
 - 1] = 0;

1904 *
√wlöe
 = 0;

1906  
buf
;

1907 
	}
}

1909 
	$¸óãTagsF‹Li°
–
li°Fûe
 )

1910 c⁄° 
li°Fûe
[];

1912 c⁄° *
fûeName
;

1913 
FILE
 *
Â
;

1917 
Â
 = 
	`f›í
(
li°Fûe
, "r");

1918 i‡(
Â
 =
NULL
)

1920 
	`≥º‹
(
li°Fûe
);

1921 
	`exô
(1);

1923 
fûeName
 = 
	`gëNextLi°Fûe
(
TagFûe
.
Â
);

1924 
fûeName
 !
NULL
)

1926 c⁄° 
°¨tPos
 = 
	`·ñl
(
TagFûe
.
Â
);

1927 c⁄° 
size_t
 
numTags
 = 
TagFûe
.numTags;

1929 i‡(! 
	`¸óãTags
(
fûeName
Ë&& ! 
O±i⁄
.
bø˚F‹m©
)

1931 
	`f£ek
(
TagFûe
.
Â
, 
°¨tPos
, 0);

1932 
TagFûe
.
numTags
 =ÇumTags;

1933 
O±i⁄
.
bø˚F‹m©
 = 
TRUE
;

1934 #ifde‡
DEBUG


1935 i‡(
O±i⁄
.
debugLevñ
 & 4)

1936 
	`¥ötf
("%s: F‹m©tögÉº‹;Ñëryög\n", 
fûeName
);

1941 
O±i⁄
.
bø˚F‹m©
 = 
FALSE
;

1942 
fûeName
 = 
	`gëNextLi°Fûe
(
TagFûe
.
Â
);

1945 
	`f˛o£
(
Â
);

1946 
	}
}

1948 
	$¸óãTagsF‹Args
–
¨gLi°
 )

1949 *c⁄° 
¨gLi°
[];

1951 
¨gNum
 = 0;

1955 
¨gLi°
[
¨gNum
] !
NULL
)

1957 c⁄° 
°¨tPos
 = 
	`·ñl
(
TagFûe
.
Â
);

1958 c⁄° 
size_t
 
numTags
 = 
TagFûe
.numTags;

1960 i‡(! 
	`¸óãTags
(
¨gLi°
[
¨gNum
]Ë&& ! 
O±i⁄
.
bø˚F‹m©
)

1962 
	`f£ek
(
TagFûe
.
Â
, 
°¨tPos
, 0);

1963 
TagFûe
.
numTags
 =ÇumTags;

1964 
O±i⁄
.
bø˚F‹m©
 = 
TRUE
;

1965 #ifde‡
DEBUG


1966 i‡(
O±i⁄
.
debugLevñ
 & 4)

1967 
	`¥ötf
("%s: F‹m©tögÉº‹;Ñëryög\n", 
¨gLi°
[
¨gNum
]);

1972 ++
¨gNum
;

1973 
O±i⁄
.
bø˚F‹m©
 = 
FALSE
;

1976 
	}
}

1983 #ifde‡
INTERNAL_SORT


1985 
	$Áèl
–
msg
 )

1986 c⁄° 
msg
[];

1988 i‡(
TagFûe
.
Â
 !
NULL
)

1989 
	`f˛o£
(
TagFûe
.
Â
);

1990 
	`≥º‹
(
msg
);

1991 
	`Ârötf
(
°dîr
, "UnableÅo sortÅag file.\n");

1992 
	`exô
(1);

1993 
	}
}

1997 
	$com∑ªTags
–
⁄e
, 
two
 )

1998 c⁄° *c⁄° 
⁄e
;

1999 c⁄° *c⁄° 
two
;

2001 c⁄° *c⁄° 
löe1
 = *(c⁄° *c⁄° *c⁄°)
⁄e
;

2002 c⁄° *c⁄° 
löe2
 = *(c⁄° *c⁄° *c⁄°)
two
;

2004  
	`°rcmp
(
löe1
, 
löe2
);

2005 
	}
}

2007 
	$s‹tTags
()

2009 *
buf„r
, **
èbÀ
;

2010 c⁄° 
size_t
 
maxLígth
 = 
TagFûe
.
max
.
löe
 + 1;

2011 
size_t
 
èbÀSize
, 
mÆlocSize
;

2012 
size_t
 
i
;

2017 
èbÀSize
 = 
TagFûe
.
numTags
 * (*
èbÀ
);

2018 
buf„r
 = 
	`mÆloc
(
maxLígth
);

2019 
èbÀ
 = 
	`mÆloc
(
èbÀSize
);

2020 i‡(
buf„r
 =
NULL
 || 
èbÀ
 == NULL)

2021 
	`Áèl
("ctags");

2023 
mÆlocSize
 = 
maxLígth
 + 
èbÀSize
;

2027 
TagFûe
.
Â
 = 
	`f›í
(TagFûe.
«me
, "r");

2028 i‡(
TagFûe
.
Â
 =
NULL
)

2029 
	`Áèl
(
TagFûe
.
«me
);

2030 
i
 = 0 ; i < 
TagFûe
.
numTags
 && !
	`„of
(TagFûe.
Â
) ; ++i)

2032 
size_t
 
°rögSize
;

2034 i‡(
	`fgës
(
buf„r
, ()
maxLígth
, 
TagFûe
.
Â
Ë=
NULL
 &&

2035 ! 
	`„of
(
TagFûe
.
Â
))

2036 
	`Áèl
(
TagFûe
.
«me
);

2037 
°rögSize
 = 
	`°æí
(
buf„r
) + 1;

2038 
èbÀ
[
i
] = (*)
	`mÆloc
(
°rögSize
);

2039 i‡(
èbÀ
[
i
] =
NULL
)

2040 
	`Áèl
(
TagFûe
.
«me
);

2041 
mÆlocSize
 +
°rögSize
;

2042 
	`°r˝y
(
èbÀ
[
i
], 
buf„r
);

2044 #ifde‡
DEBUG


2045 
	`as£π
(
i
 =
TagFûe
.
numTags
);

2047 
	`f˛o£
(
TagFûe
.
Â
);

2051 
	`qs‹t
(
èbÀ
, 
TagFûe
.
numTags
, (*table),

2052 #i‚de‡
USING_PROTOTYPES


2055 
com∑ªTags
);

2057 i‡(
O±i⁄
.
xªf
)

2061 
i
 = 0 ; i < 
TagFûe
.
numTags
 ; ++i)

2062 
	`Âuts
(
èbÀ
[
i
], 
°dout
);

2068 
TagFûe
.
Â
 = 
	`f›í
(TagFûe.
«me
, "w");

2069 i‡(
TagFûe
.
Â
 =
NULL
)

2070 
	`Áèl
(
TagFûe
.
«me
);

2071 
i
 = 0 ; i < 
TagFûe
.
numTags
 ; ++i)

2073 i‡(
i
 =0 || 
	`°rcmp
(
èbÀ
[i],Åable[i-1]) != 0)

2074 i‡(
	`Âuts
(
èbÀ
[
i
], 
TagFûe
.
Â
Ë=
EOF
)

2075 
	`Áèl
(
TagFûe
.
«me
);

2077 
	`f˛o£
(
TagFûe
.
Â
);

2080 #ifde‡
DEBUG


2081 i‡(
O±i⁄
.
debugLevñ
 & 4)

2082 
	`¥ötf
("mÆloc: %ld byãs\n", ()
mÆlocSize
);

2084 
i
 = 0 ; i < 
TagFûe
.
numTags
 ; ++i)

2085 
	`‰ì
(
èbÀ
[
i
]);

2086 
	`‰ì
(
èbÀ
);

2087 
	`‰ì
(
buf„r
);

2088 
	}
}

2096 
	$¥ötUßge
–
îr‹
 )

2097 c⁄° 
îr‹
[];

2099 
i
;

2101 
i
 = 0 ; 
Hñp
[i] !
NULL
 ; ++i)

2103 
	`Âuts
(
Hñp
[
i
], 
°dîr
);

2104 
	`Âutc
('\n', 
°dîr
);

2107 i‡(
îr‹
 !
NULL
)

2108 
	`Ârötf
(
°dîr
, "\nEº‹: %s\n\n", 
îr‹
);

2110 
	`exô
(1);

2111 
	}
}

2115 
	$ªadExãnsi⁄Li°
–
li°
 )

2116 
li°
[];

2118 
extIndex
;

2119 *
exãnsi⁄
 = 
li°
;

2120 *
p
;

2124 
exãnsi⁄
 = 
li°
;

2125 
extIndex
 = 0, 
p
 = 0 ;

2126 *
p
 !'\0' && 
extIndex
 < 
MAX_HEADER_EXTENSIONS
 ; ++p)

2128 i‡(
	`°rchr
(
HEADER_SEPARATORS
, *
p
Ë!
NULL
)

2130 *
p
 = 0;

2131 i‡(
	`°æí
(
exãnsi⁄
) > 0)

2133 
O±i⁄
.
hódîExt
[
extIndex
++] = 
exãnsi⁄
;

2134 #ifde‡
DEBUG


2135 i‡(
O±i⁄
.
debugLevñ
 & 4)

2136 
	`¥ötf
("hódîÉxãnsi⁄: %s\n", 
exãnsi⁄
);

2139 
exãnsi⁄
 = 
p
 + 1;

2142 
O±i⁄
.
hódîExt
[
extIndex
] = 
NULL
;

2143 
	}
}

2145 
	$˛órTagLi°
()

2147 
O±i⁄
.
ö˛ude
.
deföes
 = 
FALSE
;

2148 
O±i⁄
.
ö˛ude
.
íumVÆues
 = 
FALSE
;

2149 
O±i⁄
.
ö˛ude
.
fun˘i⁄s
 = 
FALSE
;

2150 
O±i⁄
.
ö˛ude
.
blockTags
 = 
FALSE
;

2151 
O±i⁄
.
ö˛ude
.
¥ŸŸy≥s
 = 
FALSE
;

2152 
O±i⁄
.
ö˛ude
.
ty≥defs
 = 
FALSE
;

2153 
O±i⁄
.
ö˛ude
.
v¨übÀs
 = 
FALSE
;

2154 
O±i⁄
.
ö˛ude
.
¥efix
 = 
FALSE
;

2155 
O±i⁄
.
ö˛ude
.
°©ics
 = 
FALSE
;

2156 
	}
}

2158 
	$≠∂yTagIn˛usi⁄Li°
–
li°
 )

2159 c⁄° 
li°
[];

2161 
boﬁón
 
mode
 = 
TRUE
;

2162 c⁄° *
p
;

2164 
p
 = 
li°
 ; *p != 0 ; ++p)

2166 *
p
)

2169 
	`˛órTagLi°
();

2170 
mode
 = 
TRUE
;

2172 '+': 
mode
 = 
TRUE
; ;

2173 '-': 
mode
 = 
FALSE
; ;

2175 'd': 
O±i⁄
.
ö˛ude
.
deföes
 = 
mode
; ;

2176 'e': 
O±i⁄
.
ö˛ude
.
íumVÆues
 = 
mode
; ;

2177 'f': 
O±i⁄
.
ö˛ude
.
fun˘i⁄s
 = 
mode
; ;

2178 'g': 
O±i⁄
.
ö˛ude
.
blockTags
 = 
mode
; ;

2179 'p': 
O±i⁄
.
ö˛ude
.
¥ŸŸy≥s
 = 
mode
; ;

2180 't': 
O±i⁄
.
ö˛ude
.
ty≥defs
 = 
mode
; ;

2181 'v': 
O±i⁄
.
ö˛ude
.
v¨übÀs
 = 
mode
; ;

2182 'P': 
O±i⁄
.
ö˛ude
.
¥efix
 = 
mode
; ;

2183 'S': 
O±i⁄
.
ö˛ude
.
°©ics
 = 
mode
; ;

2187 
msg
[80];

2189 
	`•rötf
(
msg
, "-i: InvÆidÅag o±i⁄ '%c'", *
p
);

2190 
	`¥ötUßge
(
msg
);

2195 
	}
}

2197 *
	$ªadO±i⁄Arg
(
›ti⁄
, 
¨g
, 
¨gLi°
, 
¨gNum
)

2198 c⁄° 
›ti⁄
;

2199 **c⁄° 
¨g
;

2200 *c⁄° 
¨gLi°
[];

2201 *c⁄° 
¨gNum
;

2203 *
li°
 = 
NULL
;

2205 i‡((*
¨g
)[0] != 0)

2207 
li°
 = *
¨g
;

2208 *
¨g
 +
	`°æí
(*arg);

2210 i‡((
li°
 = 
¨gLi°
[++(*
¨gNum
)]Ë=
NULL
)

2212 
msg
[80];

2214 
	`•rötf
(
msg
, "-%c: P¨amëî missög", 
›ti⁄
);

2215 
	`¥ötUßge
(
msg
);

2217  
li°
;

2218 
	}
}

2220 
	$∑r£O±i⁄s
–
¨gLi°
 )

2221 *c⁄° 
¨gLi°
[];

2223 
¨gNum
;

2227 
¨gNum
 = 0 ; 
¨gLi°
[¨gNum] !
NULL
 ; ++argNum)

2229 
c
;

2230 *
¨g
 = 
¨gLi°
[
¨gNum
];

2231 *
li°
 = 
NULL
;

2233 i‡(*
¨g
++ != '-')

2235 *
¨g
 !0Ë
c
 = *arg++)

2239 'a': 
O±i⁄
.
≠≥nd
 = 
TRUE
; ;

2240 'B': 
O±i⁄
.
backw¨d
 = 
TRUE
; ;

2241 'd': 
O±i⁄
.
ö˛ude
.
deföes
 = 
TRUE
; ;

2242 'F': 
O±i⁄
.
backw¨d
 = 
FALSE
; ;

2243 's': 
O±i⁄
.
ö˛ude
.
°©ics
 = 
TRUE
;

2244 
O±i⁄
.
ö˛ude
.
¥efix
 = 
TRUE
; ;

2245 'S': 
O±i⁄
.
ö˛ude
.
°©ics
 = 
TRUE
;

2246 
O±i⁄
.
ö˛ude
.
¥efix
 = 
FALSE
; ;

2247 't': 
O±i⁄
.
ö˛ude
.
ty≥defs
 = 
TRUE
; ;

2248 'T': 
O±i⁄
.
ö˛ude
.
blockTags
 = 
TRUE
;

2249 
O±i⁄
.
ö˛ude
.
ty≥defs
 = 
TRUE
; ;

2250 'w': 
O±i⁄
.
w¨nögs
 = 
FALSE
; ;

2251 'W': 
O±i⁄
.
w¨nögs
 = 
TRUE
; ;

2252 'x': 
O±i⁄
.
xªf
 = 
TRUE
; ;

2258 
O±i⁄
.
ègFûe
 = 
	`ªadO±i⁄Arg
(
c
, &
¨g
, 
¨gLi°
, &
¨gNum
);

2263 
°©
 
°©us
;

2265 
li°
 = 
	`ªadO±i⁄Arg
(
c
, &
¨g
, 
¨gLi°
, &
¨gNum
);

2271 i‡(
	`°©
(
li°
, &
°©us
) == 0)

2272 
	`¥ötUßge
("-h: InvalidÜist");

2274 
	`ªadExãnsi⁄Li°
(
li°
);

2279 
li°
 = 
	`ªadO±i⁄Arg
(
c
, &
¨g
, 
¨gLi°
, &
¨gNum
);

2280 
	`≠∂yTagIn˛usi⁄Li°
(
li°
);

2284 
O±i⁄
.
fûeLi°
 = 
	`ªadO±i⁄Arg
(
c
, &
¨g
, 
¨gLi°
, &
¨gNum
);

2287 #ifde‡
DEBUG


2289 
li°
 = 
	`ªadO±i⁄Arg
(
c
, &
¨g
, 
¨gLi°
, &
¨gNum
);

2290 
O±i⁄
.
debugLevñ
 = 
	`©oi
(
li°
);

2293 
li°
 = 
	`ªadO±i⁄Arg
(
c
, &
¨g
, 
¨gLi°
, &
¨gNum
);

2294 
O±i⁄
.
debugLevñ
 = 
	`©ﬁ
(
li°
);

2299 
msg
[80];

2301 
	`•rötf
(
msg
, "InvÆid o±i⁄ ch¨a˘î: '%c'", 
¨g
[-1]);

2302 
	`¥ötUßge
(
msg
);

2307  
¨gNum
;

2308 
	}
}

2310 
	$∑r£Envú⁄mítO±i⁄s
()

2312 c⁄° *c⁄° 
ívO±i⁄s
 = 
	`gëív
(
ENV_VARIABLE_NAME
);

2314 i‡(
ívO±i⁄s
 !
NULL
)

2316 *
ívArgs
[
MAX_ENV_ARGS
 + 1];

2317 
i
, 
j
 = 0, 
¨gCou¡
 = 0;

2318 
boﬁón
 
√wArg
 = 
TRUE
;

2320 
i
 = 0 ; 
ívO±i⁄s
[i] != 0 ; ++i)

2322 i‡(
ívO±i⁄s
[
i
] == '\\')

2323 
EnvArgLi°
[
j
++] = 
ívO±i⁄s
[++
i
];

2324 i‡(
ívO±i⁄s
[
i
] == ' ')

2326 i‡(
j
 > 0 && 
EnvArgLi°
[j - 1] != 0)

2328 
EnvArgLi°
[
j
++] = 0;

2329 i‡(++
¨gCou¡
 > 
MAX_ENV_ARGS
)

2331 
√wArg
 = 
TRUE
;

2336 i‡(
√wArg
)

2338 
ívArgs
[
¨gCou¡
] = &
EnvArgLi°
[
j
];

2339 
√wArg
 = 
FALSE
;

2341 
EnvArgLi°
[
j
++] = 
ívO±i⁄s
[
i
];

2343 i‡(
j
 >
MAXLINE
)

2346 
EnvArgLi°
[
j
] = 0;

2347 
ívArgs
[++
¨gCou¡
] = 
NULL
;

2348 
	`∑r£O±i⁄s
(
ívArgs
);

2350 
	}
}

2352 
	$maö
–
¨gc
, 
¨gv
 )

2353 #ifde‡
__EMX__


2354 
¨gc
;

2355 *
¨gv
[];

2357 c⁄° 
¨gc
;

2358 *c⁄° 
¨gv
[];

2361 
ªt
 = 0;

2362 
¨gNum
;

2364 #ifde‡
__EMX__


2365 
	`_wûdˇrd
(&
¨gc
, &
¨gv
);

2368 
	`∑r£Envú⁄mítO±i⁄s
();

2369 
¨gNum
 = 1 + 
	`∑r£O±i⁄s
(&
¨gv
[1]);

2373 i‡(
¨gNum
 =
¨gc
 && 
O±i⁄
.
fûeLi°
 =
NULL
)

2374 
	`¥ötUßge
(
NULL
);

2377 
ãmpName
[20];

2381 i‡(
O±i⁄
.
xªf
)

2383 
	`°r˝y
(
ãmpName
, 
XREF_TMP
);

2384 
TagFûe
.
«me
 = 
	`mkãmp
(
ãmpName
);

2385 
TagFûe
.
Â
 = 
	`f›í
(TagFûe.
«me
, "w");

2389 
TagFûe
.
«me
 = 
O±i⁄
.
ègFûe
;

2390 i‡(
	`isSour˚Fûe
(
TagFûe
.
«me
))

2391 
	`¥ötUßge
("-o: AttemptÅo overwriteáÇon-tag file");

2392 
TagFûe
.
Â
 = 
	`f›í
(TagFûe.
«me
, 
O±i⁄
.
≠≥nd
 ? "a" : "w");

2394 i‡(
TagFûe
.
Â
 =
NULL
)

2396 
	`≥º‹
(
TagFûe
.
«me
);

2397 
	`exô
(1);

2400 i‡(
O±i⁄
.
fûeLi°
 !
NULL
)

2401 
	`¸óãTagsF‹Li°
(
O±i⁄
.
fûeLi°
);

2402 
	`¸óãTagsF‹Args
(&
¨gv
[
¨gNum
]);

2404 
	`f˛o£
(
TagFûe
.
Â
);

2406 #ifde‡
INTERNAL_SORT


2407 
	`s‹tTags
();

2410 
cmd
[
BUFSIZ
];

2412 
	`•rötf
(
cmd
, "s‹à-u %†-ÿ%s", 
TagFûe
.
«me
, TagFile.name);

2413 
ªt
 = 
	`sy°em
(
cmd
);

2414 i‡(
ªt
 =0 && 
O±i⁄
.
w¨nögs
)

2416 
	`•rötf
(
cmd
, "awk 'BEGIN{FS=\"\\t\"}{i‡($1=ıªv){¥ötf(\"Du∂iˇãÉ¡ry i¿fûe†%%†™d %%s: %%s\\n\",$2,¥evfûe,$1Ë| \"ˇà1>&2\"}Él£ {¥ev=$1;¥evfûe=$2}}' %s", 
TagFûe
.
«me
);

2417 
ªt
 = 
	`sy°em
(
cmd
);

2419 i‡(
O±i⁄
.
xªf
)

2421 
	`•rötf
(
cmd
, "ˇà%s", 
TagFûe
.
«me
);

2422 
ªt
 = 
	`sy°em
(
cmd
);

2426 i‡(
O±i⁄
.
xªf
)

2427 #ifde‡
AMIGA


2428 
	`ªmove
(
TagFûe
.
«me
);

2430 
	`u∆ök
(
TagFûe
.
«me
);

2434 
	`exô
(
ªt
);

2436 
	}
}

	@tools/mvi/mvi.c

30 
	~<˘y≥.h
>

31 
	~<î∫o.h
>

32 
	~<£tjmp.h
>

33 
	~<sig«l.h
>

34 
	~<°dio.h
>

36 *
gëív
();

37 
	grmtmp
= 0;

38 
jmp_buf
 
	gdóth
;

39 *
	gSñf
;

40 
	gVîbo£
= 0;

41 *
	gEdô‹

NULL
;

42 **
	gE¨gs

NULL
;

44 
	#F¥ötf
 (Ë
Ârötf


	)

45 
	#S¥ötf
 (Ë
•rötf


	)

46 
	#Sig«l
 (Ë
sig«l


	)

47 
	#Waô
 (Ë
waô


	)

50 
	$dõ
–
ãxt
 )

51 *
ãxt
;

53 if–
	`i•un˘
–
ãxt
[
	`°æí
(text)-1] ) ) {

54 
	`F¥ötf
–
°dîr
, "%s: %s\n", 
Sñf
, 
ãxt
 );

56 
	`F¥ötf
–
°dîr
, "%s: %s%c\n", 
Sñf
, 
ãxt
, 
î∫o
 ? ':' : '.' );

57 if–0 !
î∫o
 )

58 
	`≥º‹
–
Sñf
 );

60 if–
rmtmp
 )

61 
	`l⁄gjmp
–
dóth
, 1 );

62 
	`exô
( 1 );

63 
	}
}

65 
	$U∆ök
–
«me
 )

66 *
«me
;

68 
î∫o
= 0;

69 if–0 !
	`u∆ök
(
«me
) ) {

70 
msg
[255];

71 
	`S¥ötf
–
msg
, "Eº‹ dñëög `%s'", 
«me
 );

72 
	`dõ
–
msg
 );

74 
	}
}

75 
FILE
 *

76 
	$F›í
–
«me
, 
acc
 )

77 *
«me
;

78 *
acc
;

80 
FILE
 *
Â
;

81 
î∫o
= 0;

82 if–
NULL
 =–
Â

	`f›í
(
«me
,
acc
) ) ) {

83 
msg
[255];

84 
	`S¥ötf
–
msg
, "Eº‹ o≥nög `%s' f‹ `%s'ác˚ss", 
«me
, 
acc
 );

85 
	`dõ
–
msg
 );

87 –
Â
 );

88 
	}
}

90 
	$F˛o£
–
Â
 )

91 
FILE
 *
Â
;

93 
î∫o
= 0;

94 if–0 !
	`f˛o£
(
Â
) )

95 
	`dõ
( "Error closing file" );

96 
	}
}

99 
	$ußge
()

101 
	`F¥ötf
–
°dîr
,

102 "ußge: %†[-v] [-êedô‹ [›ti⁄†-e]] wûdˇrd(s)\n", 
Sñf
 );

103 
	`F¥ötf
–
°dîr
, "%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n",

113 
	`F¥ötf
–
°dîr
, " %†-êmyed --ê-ê*\n", 
Sñf
 );

114 
	`F¥ötf
–
°dîr
, "%s\n%s\n",

117 
	`F¥ötf
–
°dîr
, " %†-êex --fûe1- --fûe2-\n", 
Sñf
 );

118 
	`F¥ötf
–
°dîr
, " %†-êex -ê--fûe1- -fûe2-\n", 
Sñf
 );

119 
	`F¥ötf
–
°dîr
,

121 
	`exô
( 1 );

122 
	}
}

125 
	$Êags
–
¨gc
, 
¨gv
 )

126 *
¨gc
;

127 **
¨gv
;

129 
Sñf
*
¨gv
;

130  --*
¨gc
 && '-' =**++
¨gv
 ) {

131  *++*
¨gv
 ) {

133 --*
¨gc
;

134 if–
NULL
 =*–
E¨gs
++
¨gv
 ) )

135 
	`dõ
( "Name ofÉditor must follow -e." );

136 
Edô‹
*
E¨gs
;

137  --*
¨gc
, *++
¨gv
 ) {

138 if–'-' =**
¨gv
 )

139  
¨gv
[0][1] ) {

141 if–'\0' =*++*
¨gv
 ) 
	`dõ
(

145 *
¨gv

NULL
;

148 if–
NULL
 =*
¨gv
 )

153 
Vîbo£
= !Verbose;

156 ++*
¨gv
;

157 –
¨gv
 );

159 { 
msg
[255];

160 
	`S¥ötf
–
msg
, "Unknow¿swôch `-%s'.", *
¨gv
 );

161 
	`dõ
–
msg
 );

165 if–
NULL
 =
Edô‹
 ) {

166 
Edô‹

	`gëív
("VISUAL");

167 if–
NULL
 =
Edô‹
 )

168 
Edô‹

	`gëív
("EDITOR");

169 if–
NULL
 =
Edô‹
 )

170 
Edô‹
= "vi";

172 –
¨gv
 );

173 
	}
}

176 
	$wrôemp
–
tmp
, 
hód
, 
¨gv
 )

177 *
tmp
;

178 *
hód
;

179 **
¨gv
;

181 
FILE
 *
Â

	`F›í
–
tmp
, "w" );

182 
rmtmp
= 1;

183 
	`F¥ötf
–
Â
, 
hód
 );

184  *
¨gv
 )

185 
	`F¥ötf
–
Â
, "%s\n", *(
¨gv
++) );

186 
	`F˛o£
–
Â
 );

187 
	}
}

190 
	$edôemp
–
tmp
 )

191 *
tmp
;

193 **
œrg
;

194  
	`f‹k
() ) {

196 if–
NULL
 !
E¨gs
 ) {

197 
œrg

E¨gs
;

198  *
œrg
 )

199 ++
œrg
;

200 *
œrg

tmp
;

201 *++
œrg

NULL
;

202 
	`execvp
–
Edô‹
, 
E¨gs
 );

204 
	`exe˛p
–
Edô‹
, Edô‹, 
tmp
, (*)0 );

207 
	`F¥ötf
–
°dîr
, "%s: c™'àexe¯%s\n", 
Sñf
, 
Edô‹
 );

208 
	`U∆ök
–
tmp
 );

209 
	`exô
( 1 );

211 
	`Sig«l
–
SIGINT
, 
SIG_IGN
 );

212 
	`Sig«l
–
SIGQUIT
, 
SIG_IGN
 );

213 
	`Waô
( (*)0 );

214 
	`Sig«l
–
SIGINT
, 
SIG_DFL
 );

215 
	`Sig«l
–
SIGQUIT
, 
SIG_DFL
 );

216 
	}
}

219 
	$chkãmp
–
tmp
, 
hód
, 
¨gv
 )

220 *
tmp
;

221 *
hód
;

222 **
¨gv
;

224 
√w
[255], *
˝
;

225 
FILE
 *
Â

	`F›í
–
tmp
, "r" );

226  
˝

hód
; *cp; cp++ )

227 if–
	`fgëc
(
Â
Ë!*
˝
 )

228 
	`dõ
( "FirstÜine modified. Abort." );

229  ; 
	`fgës
(
√w
,“ew),
Â
); 
¨gv
++ ) {

230 
˝

√w
 + 
	`°æí
(new) - 1;

231 if–'\n' !*
˝
 ) {

232 
msg
[128];

233 
	`S¥ötf
–
msg
, "NewÇame isÜongerÅhan %u characters.",

234 (
√w
) );

235 
	`dõ
–
msg
 );

237 *
˝
= '\0';

238 if–
NULL
 =
¨gv
 )

239 
	`dõ
( "ExtraÜine(s)áddedÅo file. Abort." );

241 if–
NULL
 !*
¨gv
 )

242 
	`dõ
( "Line(s) deleted from file. Abort." );

243 
	`F˛o£
–
Â
 );

244 
	}
}

246 
	g˙t
0, 
	gd˙t
0, 
	gl˙t
= 0;

249 
	$domv
–
tmp
, 
hód
, 
¨gv
 )

250 *
tmp
;

251 *
hód
;

252 **
¨gv
;

254 
√w
[255], *
˝
;

255 
FILE
 *
Â

	`F›í
–
tmp
, "r" );

256  
˝

hód
; *cp; cp++ )

257 if–
	`fgëc
(
Â
Ë!*
˝
 )

258 
	`dõ
( "FirstÜine modified. Abort." );

259  ; 
	`fgës
(
√w
,“ew),
Â
); 
¨gv
++ ) {

260 
˝

√w
 + 
	`°æí
(new) - 1;

261 if–'\n' !*
˝
 ) {

262 
msg
[128];

263 
	`S¥ötf
–
msg
, "NewÇame isÜongerÅhan %u characters.",

264 (
√w
) );

265 
	`dõ
–
msg
 );

267 *
˝
= '\0';

268 if–
NULL
 =
¨gv
 )

269 
	`dõ
( "ExtraÜinesáddedÅo file. Abort." );

270 if–0 =
	`°∫cmp
–
√w
, "D ", 2 ) ) {

271 if–0 !
	`°rcmp
–
√w
+2, *
¨gv
 ) ) {

272 
msg
[512];

273 
	`S¥ötf
–
msg
, "`%s' became `%s'. Abort.",

274 *
¨gv
, 
√w
 );

275 
	`dõ
–
msg
 );

277 
î∫o
= 0;

278 if–0 !
	`u∆ök
–*
¨gv
 ) ) {

279 
msg
[255];

280 
	`F¥ötf
–
°dîr
, "Error deleting `%s':\n",

281 *
¨gv
 );

282 
	`≥º‹
–
Sñf
 );

284 
d˙t
++;

285 if–
Vîbo£
 )

286 
	`F¥ötf
–
°dout
, "rm %s\n", *
¨gv
 );

288 } if–0 =
	`°∫cmp
–
√w
, "L ", 2 ) ) {

289 if–0 =
	`°rcmp
–
√w
+2, *
¨gv
 ) ) {

290 
	`F¥ötf
–
°dîr
,

292 
Sñf
, *
¨gv
 );

294 
î∫o
= 0;

295 if–0 <
	`lök
–*
¨gv
, 
√w
+2 ) ) {

296 
l˙t
++;

297 if–
Vîbo£
 )

298 
	`F¥ötf
–
°dout
, "ln %s %s\n",

299 *
¨gv
, 
√w
+2 );

301 
	`F¥ötf
–
°dîr
,

303 
Sñf
, *
¨gv
, 
√w
+2 );

304 
	`≥º‹
–
Sñf
 );

307 } if–0 !
	`°rcmp
–*
¨gv
, 
√w
 ) ) {

308 
î∫o
= 0;

309 if–0 <
	`lök
–*
¨gv
, 
√w
 ) ) {

310 
˙t
++;

311 if–
Vîbo£
 )

312 
	`F¥ötf
–
°dout
, "mv %s %s\n",

313 *
¨gv
, 
√w
 );

314 
	`U∆ök
–*
¨gv
 );

316 
	`F¥ötf
–
°dîr
,

318 
Sñf
, *
¨gv
, 
√w
 );

319 
	`≥º‹
–
Sñf
 );

323 if–
NULL
 !*
¨gv
 )

324 
	`F¥ötf
–
°dîr
, "%s: W¨nög,Üöe(sËwîêdñëed.\n", 
Sñf
 );

325 
	`F˛o£
–
Â
 );

326 
	}
}

329 
	$summ¨ize
()

331 
	`F¥ötf
–
°dîr
, "%s: %d file%sÑenamed, %d deleted, %dÜinked.\n",

332 
Sñf
, 
˙t
, 1==˙à? "" : "s", 
d˙t
, 
l˙t
 );

333 
	}
}

336 
	$maö
–
¨gc
, 
¨gv
 )

337 
¨gc
;

338 **
¨gv
;

340 
tmp
[40];

341 
hód
[]=

343 
¨gv

	`Êags
–&
¨gc
,árgv );

344 if–
¨gc
 <= 0 )

345 
	`ußge
();

346 
	`S¥ötf
–
tmp
, "/tmp/mvi%d", 
	`gëpid
() );

347 if–0 !
	`£tjmp
–
dóth
 ) ) {

348 (Ë
	`u∆ök
–
tmp
 );

349 
	`summ¨ize
();

350 
	`exô
( 1 );

352 
	`wrôemp
–
tmp
, 
hód
, 
¨gv
 );

353 
	`edôemp
–
tmp
 );

354 
	`chkãmp
–
tmp
, 
hód
, 
¨gv
 );

355 
	`domv
–
tmp
, 
hód
, 
¨gv
 );

356 
	`U∆ök
–
tmp
 );

357 
	`summ¨ize
();

358 
	}
}

	@tools/xxd/xxd.c

36 
	~<°dio.h
>

37 
	~<f˙é.h
>

38 #ifde‡
__TSC__


39 
	#MSDOS


	)

41 #i‡
deföed
(
MSDOS
Ë|| deföed(
WIN32
Ë|| deföed(
OS2
)

42 
	~<io.h
>

44 
	~<uni°d.h
>

46 
	~<°dlib.h
>

47 
	~<°rög.h
>

48 
	~<˘y≥.h
>

50 
°πﬁ
();

51 
·ñl
();

53 
	gvîsi⁄
[] = "xxd V1.1m 21may96 by Juergen Weigert";

55 #i‡
deföed
(
MSDOS
Ë|| deföed(
WIN32
Ë|| deföed(
OS2
)

56 
	#BIN_READ
(
yes
Ë((yesË? "rb" : "π")

	)

57 
	#BIN_WRITE
(
yes
Ë((yesË? "wb" : "wt")

	)

58 
	#BIN_ASSIGN
(
Â
, 
yes
Ë
	`£tmode
(
	`fûío
(Â), (yesË? 
O_BINARY
 : 
O_TEXT
)

	)

60 
	#BIN_READ
(
dummy
Ë"r"

	)

61 
	#BIN_WRITE
(
dummy
Ë"w"

	)

62 
	#BIN_ASSIGN
(
Â
, 
dummy
Ë
	)
Â

65 
	#TRY_SEEK


	)

66 
	#COLS
 64

	)

67 
	#LLEN
 (9 + (5*
COLS
-1)/2 + 2 + COLS)

	)

69 
	ghexxa
[] = "0123456789abcdef0123456789ABCDEF", *
	ghexx
 = 
hexxa
;

72 
	#HEX_NORMAL
 0

	)

73 
	#HEX_POSTSCRIPT
 1

	)

74 
	#HEX_CINCLUDE
 2

	)

77 
	$exô_wôh_ußge
(
≤ame
)

78 *
≤ame
;

80 
	`Ârötf
(
°dîr
, "Ußge:\¿ %†[›ti⁄s] [öfûê[outfûe]]\n", 
≤ame
);

81 
	`Ârötf
(
°dîr
, " or\¿ %†-∏[-†[-]off£t] [-¯cﬁs] [-ps] [öfûê[outfûe]]\n", 
≤ame
);

82 
	`Ârötf
(
°dîr
, "Options:\n");

83 
	`Ârötf
(
°dîr
, " -aÅoggleáutoskip: A single '*'ÑeplacesÇul-lines. Default off.\n");

84 
	`Ârötf
(
°dîr
, " -c cols format <cols> octetsÖerÜine. Default 16 (-i: 12, -ps: 30).\n");

85 
	`Ârötf
(
°dîr
, " -hÖrintÅhis summary.\n");

86 
	`Ârötf
(
°dîr
, " -i output in C include file style.\n");

87 
	`Ârötf
(
°dîr
, " -lÜen stopáfter <len> octets.\n");

88 
	`Ârötf
(
°dîr
, " -ps output inÖostscript continuous hexdump style.\n");

89 
	`Ârötf
(
°dîr
, " -rÑeverse operation: convert (orÖatch) hexdump into binary.\n");

90 
	`Ârötf
(
°dîr
, " -r -s offÑevert with <off>áddedÅo fileÖositions found in hexdump.\n");

91 
	`Ârötf
(
°dîr
, " -s %sseek startát <seek> bytesábs. %sinfile offset.\n",

92 #ifde‡
TRY_SEEK


97 
	`Ârötf
(
°dîr
, " -u use upper case hexÜetters.\n");

98 
	`Ârötf
(
°dîr
, " -v show vîsi⁄: \"%s\".\n", 
vîsi⁄
);

99 
	`exô
(1);

100 
	}
}

110 
	$hu¡y≥
(
Âi
, 
Âo
, 
Âîr
, 
≤ame
, 
cﬁs
, 
hexty≥
, 
ba£_off
)

111 
FILE
 *
Âi
, *
Âo
, *
Âîr
;

112 *
≤ame
;

113 
cﬁs
, 
hexty≥
;

114 
ba£_off
;

116 
c
, 
ign_g¨b
 = 1, 
n1
 = -1, 
n2
 = 0, 
n3
, 
p
 = 
cﬁs
;

117 
have_off
 = 0, 
w™t_off
 = 0;

119 
	`ªwöd
(
Âi
);

121 (
c
 = 
	`gëc
(
Âi
)Ë!
EOF
)

123 i‡(
c
 == '\r')

126 
n3
 = 
n2
;

127 
n2
 = 
n1
;

129 i‡(
c
 >= '0' && c <= '9')

130 
n1
 = 
c
 - '0';

131 i‡(
c
 >= 'a' && c <= 'f')

132 
n1
 = 
c
 - 'a' + 10;

133 i‡(
c
 >= 'A' && c <= 'F')

134 
n1
 = 
c
 - 'A' + 10;

137 
n1
 = -1;

138 i‡(
ign_g¨b
)

142 
ign_g¨b
 = 0;

144 i‡(
p
 >
cﬁs
)

146 i‡(!
hexty≥
)

148 i‡(
n1
 < 0)

150 
p
 = 0;

153 
w™t_off
 = (w™t_of‡<< 4Ë| 
n1
;

157 
p
 = 0;

160 i‡(
ba£_off
 + 
w™t_off
 !
have_off
)

162 
	`fÊush
(
Âo
);

163 #ifde‡
TRY_SEEK


164 
c
 = 
	`f£ek
(
Âo
, 
ba£_off
 + 
w™t_off
 - 
have_off
, 1);

165 i‡(
c
 >= 0)

166 
have_off
 = 
ba£_off
 + 
w™t_off
;

168 i‡(
ba£_off
 + 
w™t_off
 < 
have_off
)

170 
	`Ârötf
(
Âîr
, "%s: s‹ry, c™nŸ sìk backw¨ds.\n", 
≤ame
);

173 ; 
have_off
 < 
ba£_off
 + 
w™t_off
; have_off++)

174 
	`putc
(0, 
Âo
);

177 i‡(
n2
 >0 && 
n1
 >= 0)

179 
	`putc
((
n2
 << 4Ë| 
n1
, 
Âo
);

180 
have_off
++;

181 
w™t_off
++;

182 
n1
 = -1;

183 i‡(++
p
 >
cﬁs
)

185 i‡(!
hexty≥
)

186 
w™t_off
 = 0;

187 (
c
 = 
	`gëc
(
Âi
)Ë!'\n' && c !
EOF
)

189 
ign_g¨b
 = 1;

192 i‡(
n1
 < 0 && 
n2
 < 0 && 
n3
 < 0)

194 i‡(!
hexty≥
)

195 
w™t_off
 = 0;

196 (
c
 = 
	`gëc
(
Âi
)Ë!'\n' && c !
EOF
)

198 
ign_g¨b
 = 1;

201 
	`fÊush
(
Âo
);

202 #ifde‡
TRY_SEEK


203 
	`f£ek
(
Âo
, 0, 2);

205 
	`f˛o£
(
Âo
);

206 
	`f˛o£
(
Âi
);

208 
	}
}

223 
	$ouéöe
(
Â
, 
l
, 
nz
)

224 
FILE
 *
Â
;

225 *
l
;

226 
nz
;

228 
z
[
LLEN
+1];

229 
zîo_£í
 = 0;

231 i‡(!
nz
 && 
zîo_£í
 == 1)

232 
	`°r˝y
(
z
, 
l
);

234 i‡(
nz
 || !
zîo_£í
++)

236 i‡(
nz
)

238 i‡(
nz
 < 0)

239 
zîo_£í
--;

240 i‡(
zîo_£í
 == 2)

241 
	`Âuts
(
z
, 
Â
);

242 i‡(
zîo_£í
 > 2)

243 
	`Âuts
("*\n", 
Â
);

245 i‡(
nz
 >0 || 
zîo_£í
 > 0)

246 
	`Âuts
(
l
, 
Â
);

247 i‡(
nz
)

248 
zîo_£í
 = 0;

250 
	}
}

253 
	$maö
(
¨gc
, 
¨gv
)

254 
¨gc
;

255 *
¨gv
[];

257 
FILE
 *
Â
, *
Âo
;

258 
c
, 
e
, 
p
 = 0, 
ªl£ek
 = 1, 
√g£ek
 = 0, 
hexty≥
, 
ªvît
 = 0;

259 
autoskù
 = 0;

260 
Àngth
 = -1, 
n
 = 0, 
£ekoff
 = 0;

261 
l
[
LLEN
+1];

262 
cﬁs
 = 0, 
n⁄zîo
 = 0;

263 *
≤ame
, *
µ
;

264 
hexty≥
 = 
HEX_NORMAL
;

266 
≤ame
 = 
¨gv
[0];

267 
µ
 = 
≤ame
; *pp; )

268 i‡(*
µ
++ == '/')

269 
≤ame
 = 
µ
;

271 
¨gc
 >= 2)

273 i‡(!
	`°∫cmp
(
¨gv
[1], "-a", 2)Ë
autoskù
 = 1 -áutoskip;

274 i‡(!
	`°∫cmp
(
¨gv
[1], "-u", 2)Ë
hexx
 = 
hexxa
 + 16;

275 i‡(!
	`°∫cmp
(
¨gv
[1], "-p", 2)Ë
hexty≥
 = 
HEX_POSTSCRIPT
;

276 i‡(!
	`°∫cmp
(
¨gv
[1], "-i", 2)Ë
hexty≥
 = 
HEX_CINCLUDE
;

277 i‡(!
	`°∫cmp
(
¨gv
[1], "-r", 2)Ë
ªvît
++;

278 i‡(!
	`°∫cmp
(
¨gv
[1], "-c", 2))

280 i‡(
¨gv
[1][2] && 
	`°∫cmp
("ols",árgv[1] + 2, 3))

281 
cﬁs
 = ()
	`°πﬁ
(
¨gv
[1] + 2, 
NULL
, 0);

284 i‡(!
¨gv
[2])

285 
	`exô_wôh_ußge
(
≤ame
);

286 
cﬁs
 = ()
	`°πﬁ
(
¨gv
[2], 
NULL
, 0);

287 
¨gv
++;

288 
¨gc
--;

291 i‡(!
	`°∫cmp
(
¨gv
[1], "-s", 2))

293 
ªl£ek
 = 0;

294 
√g£ek
 = 0;

295 i‡(
¨gv
[1][2] &&

296 
	`°∫cmp
("kù", 
¨gv
[1] +2, 3) && strncmp("eek",árgv[1] +2, 3))

298 #ifde‡
TRY_SEEK


299 i‡(
¨gv
[1][2] == '+')

300 
ªl£ek
++;

301 i‡(
¨gv
[1][2+
ªl£ek
] == '-')

302 
√g£ek
++;

304 
£ekoff
 = 
	`°πﬁ
(
¨gv
[1] + 2+
ªl£ek
+
√g£ek
, (**)
NULL
, 0);

308 i‡(!
¨gv
[2])

309 
	`exô_wôh_ußge
(
≤ame
);

310 #ifde‡
TRY_SEEK


311 i‡(
¨gv
[2][0] == '+')

312 
ªl£ek
++;

313 i‡(
¨gv
[2][
ªl£ek
] == '-')

314 
√g£ek
++;

316 
£ekoff
 = 
	`°πﬁ
(
¨gv
[2] + 
ªl£ek
+
√g£ek
, (**)
NULL
, 0);

317 
¨gv
++;

318 
¨gc
--;

321 i‡(!
	`°∫cmp
(
¨gv
[1], "-l", 2))

323 i‡(
¨gv
[1][2] && 
	`°∫cmp
("en",árgv[1] + 2, 2))

324 
Àngth
 = 
	`°πﬁ
(
¨gv
[1] + 2, (**)
NULL
, 0);

327 i‡(!
¨gv
[2])

328 
	`exô_wôh_ußge
(
≤ame
);

329 
Àngth
 = 
	`°πﬁ
(
¨gv
[2], (**)
NULL
, 0);

330 
¨gv
++;

331 
¨gc
--;

334 i‡(!
	`°rcmp
(
¨gv
[1], "-v"))

336 
	`Ârötf
(
°dîr
, "%s\n", 
vîsi⁄
);

337 
	`exô
(0);

339 i‡(!
	`°rcmp
(
¨gv
[1], "--"))

341 
¨gv
++;

342 
¨gc
--;

345 i‡(
¨gv
[1][0] == '-' &&árgv[1][1])

346 
	`exô_wôh_ußge
(
≤ame
);

350 
¨gv
++;

351 
¨gc
--;

354 i‡(!
cﬁs
)

355 
hexty≥
)

357 
HEX_POSTSCRIPT
: 
cﬁs
 = 30; ;

358 
HEX_CINCLUDE
: 
cﬁs
 = 12; ;

359 
HEX_NORMAL
:

360 : 
cﬁs
 = 16; ;

363 i‡(
cﬁs
 < 1 || (!
hexty≥
 && (cﬁ†> 
COLS
)))

365 
	`Ârötf
(
°dîr
, "%s: invÆidÇumbî o‡cﬁumn†(max. %d).\n", 
≤ame
, 
COLS
);

366 
	`exô
(1);

369 i‡(
¨gc
 > 3)

370 
	`exô_wôh_ußge
(
≤ame
);

372 i‡(
¨gc
 =1 || (
¨gv
[1][0] == '-' && !argv[1][1]))

373 
	`BIN_ASSIGN
(
Â
 = 
°dö
, !
ªvît
);

376 i‡((
Â
 = 
	`f›í
(
¨gv
[1], 
	`BIN_READ
(!
ªvît
))Ë=
NULL
)

378 
	`Ârötf
(
°dîr
,"%s: ", 
≤ame
);

379 
	`≥º‹
(
¨gv
[1]);

384 i‡(
¨gc
 < 3 || (
¨gv
[2][0] == '-' && !argv[2][1]))

385 
	`BIN_ASSIGN
(
Âo
 = 
°dout
, 
ªvît
);

388 
fd
;

390 i‡(((
fd
 = 
	`›í
(
¨gv
[2], 
O_WRONLY
 | 
O_CREAT
, 0666)) < 0) ||

391 (
Âo
 = 
	`fd›í
(
fd
, 
	`BIN_WRITE
(
ªvît
))Ë=
NULL
)

393 
	`Ârötf
(
°dîr
, "%s: ", 
≤ame
);

394 
	`≥º‹
(
¨gv
[2]);

397 
	`ªwöd
(
Âo
);

400 i‡(
ªvît
)

402 i‡(
hexty≥
 && (hexty≥ !
HEX_POSTSCRIPT
))

404 
	`Ârötf
(
°dîr
, "%s: s‹ry, c™nŸÑevîàthi†ty≥ o‡hexdump\n", 
≤ame
);

407  
	`hu¡y≥
(
Â
, 
Âo
, 
°dîr
, 
≤ame
, 
cﬁs
, 
hexty≥
,

408 
√g£ek
 ? -
£ekoff
 : seekoff);

411 i‡(
£ekoff
 || 
√g£ek
 || !
ªl£ek
)

413 #ifde‡
TRY_SEEK


414 i‡(
ªl£ek
)

415 
e
 = 
	`f£ek
(
Â
, 
√g£ek
 ? -
£ekoff
 : seekoff, 1);

417 
e
 = 
	`f£ek
(
Â
, 
√g£ek
 ? -
£ekoff
 : seekoff,Çegseek ? 2 : 0);

418 i‡(
e
 < 0 && 
√g£ek
)

420 
	`Ârötf
(
°dîr
, "%s: s‹ry c™nŸ sìk.\n", 
≤ame
);

423 i‡(
e
 >= 0)

424 
£ekoff
 = 
	`·ñl
(
Â
);

428 
s
 = 
£ekoff
;

430 
s
--)

431 
	`gëc
(
Â
);

435 i‡(
hexty≥
 =
HEX_CINCLUDE
)

437 i‡(
Â
 !
°dö
)

439 
	`Ârötf
(
Âo
, "unsigned char ");

440 
e
 = 0; (
c
 = 
¨gv
[1][e]);É++)

441 
	`putc
(
	`iß um
(
c
Ë? c : '_', 
Âo
);

442 
	`Âuts
("[] = {\n", 
Âo
);

445 
p
 = 0;

446 (
Àngth
 < 0 || 
p
 <ÜígthË&& (
c
 = 
	`gëc
(
Â
)Ë!
EOF
)

448 
	`Ârötf
(
Âo
, "%s0x%02x", (
p
 % 
cﬁs
Ë? ", " : ",\¿ "+2*!p, 
c
);

449 
p
++;

452 i‡(
p
)

453 
	`Âuts
("\n};\n"+3*(
Â
 =
°dö
), 
Âo
);

455 i‡(
Â
 !
°dö
)

457 
	`Ârötf
(
Âo
, "unsigned int ");

458 
e
 = 0; (
c
 = 
¨gv
[1][e]);É++)

459 
	`putc
(
	`iß um
(
c
Ë? c : '_', 
Âo
);

460 
	`Ârötf
(
Âo
, "_À¿%d;\n", 
p
);

463 
	`f˛o£
(
Â
);

464 
	`f˛o£
(
Âo
);

468 i‡(
hexty≥
 =
HEX_POSTSCRIPT
)

470 
p
 = 
cﬁs
;

471 (
Àngth
 < 0 || 
n
 <ÜígthË&& (
e
 = 
	`gëc
(
Â
)Ë!
EOF
)

473 
	`putch¨
(
hexx
[(
e
 >> 4) & 0xf]);

474 
	`putch¨
(
hexx
[(
e
 ) & 0xf]);

475 
n
++;

476 i‡(!--
p
)

478 
	`putch¨
('\n');

479 
p
 = 
cﬁs
;

482 i‡(
p
 < 
cﬁs
)

483 
	`putch¨
('\n');

484 
	`f˛o£
(
Â
);

485 
	`f˛o£
(
Âo
);

491 (
Àngth
 < 0 || 
n
 <ÜígthË&& (
e
 = 
	`gëc
(
Â
)Ë!
EOF
)

493 i‡(
p
 == 0)

495 
	`•rötf
(
l
, "%07lx: ", 
n
 + 
£ekoff
);

496 
c
 = 9; c < 
LLEN
; 
l
[c++] = ' ');

498 
l
[ 9 + (5 * 
p
Ë/ 2] = 
hexx
[(
e
 >> 4) & 0xf];

499 
l
[10 + (5 * 
p
Ë/ 2] = 
hexx
[ 
e
 & 0xf];

500 
l
[11 + (5 * 
cﬁs
 - 1Ë/ 2 + 
p
] = (
e
 > 31 &&É < 127) ?É : '.';

501 i‡(
e
)

502 
n⁄zîo
++;

503 
n
++;

504 i‡(++
p
 =
cﬁs
)

506 
l
[
c
 = (11 + (5 * 
cﬁs
 - 1Ë/ 2 + 
p
)] = '\n';Ü[++c] = '\0';

507 
	`ouéöe
(
Âo
, 
l
, 
autoskù
 ? 
n⁄zîo
 : 1);

508 
n⁄zîo
 = 0;

509 
p
 = 0;

512 i‡(
p
)

514 
l
[
c
 = (11 + (5 * 
cﬁs
 - 1Ë/ 2 + 
p
)] = '\n';Ü[++c] = '\0';

515 
	`ouéöe
(
Âo
, 
l
, 1);

517 i‡(
autoskù
)

518 
	`ouéöe
(
Âo
, 
l
, -1);

520 
	`f˛o£
(
Â
);

521 
	`f˛o£
(
Âo
);

523 
	}
}

	@
1
.
0
70
933
atari/src/mint.h
doc/doctags.c
macros/maze/maze.c
macros/maze/mazeansi.c
src/addcr.c
src/alloc.c
src/archie.c
src/archie.h
src/ascii.h
src/buffer.c
src/charset.c
src/cmdcmds.c
src/cmdline.c
src/cmdtab.h
src/conf_os2.h
src/config.h
src/csearch.c
src/digraph.c
src/edit.c
src/feature.h
src/fileio.c
src/getchar.c
src/globals.h
src/gui.h
src/gui_at_sb.h
src/help.c
src/keymap.h
src/linefunc.c
src/macros.h
src/main.c
src/mark.c
src/memfile.c
src/memline.c
src/message.c
src/misccmds.c
src/mk_os2pd.c
src/mkcmdtab.c
src/msdos.c
src/msdos.h
src/normal.c
src/ops.c
src/ops.h
src/option.c
src/option.h
src/osdef.h
src/pathdef.c
src/proto.h
src/pty.c
src/quickfix.c
src/regexp.c
src/regexp.h
src/regsub.c
src/screen.c
src/search.c
src/structs.h
src/tables.c
src/tag.c
src/term.c
src/term.h
src/undo.c
src/unix.c
src/unix.h
src/unixunix.h
src/version.c
src/version.h
src/vim.h
src/window.c
tools/ctags/ctags.c
tools/mvi/mvi.c
tools/xxd/xxd.c
